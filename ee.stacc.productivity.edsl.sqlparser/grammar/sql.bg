%{
import java.io.IOException;
%}

%code {
	public static void main(String[] args) throws IOException {
		SQLParser parser = new SQLParser(new Lexer() {

			int tokens[] = {258,260,259,260,0,0,};
			int current;
			
			@Override
			public Object getLVal() {
				return "";
			}

			@Override
			public void yyerror(String s) {
				
			}

			@Override
			public int yylex() throws IOException {
				return tokens[current++];
			}
			
		});
		parser.yyDebugStream = System.out;
		parser.yydebug = 1;
		
		System.out.println(parser.parse());
	}
}
%define parser_class_name "SQLParser"

%token VALUES
%token SELECT
%token INSERT
%token WHERE
%token ORDER
%token GROUP
%token RIGHT
%token INNER
%token FROM
%token JOIN
%token LEFT
%token INTO
%token AND
%token XOR
%token NOT
%token OR
%token ON
%token BY
%token AS
%token IN
%token DIGAL_ERR
%token STRING_DQ
%token STRING_DQ_ERR 
%token STRING_SQ
%token STRING_SQ_ERR 
%token NUMBER  
%token ID
%token UNKNOWN_CHARACTER_ERR

%%
select 
	: SELECT whatToSelect FROM idList 
	;
whatToSelect
	: expressionList
	;
expression
	: ident
	| ID '(' ')'
	| ID '(' expressionList ')'
	| '*'
	;
expressionList
	: expression
	| expression ',' expressionList
	;
idList 
	: ident 
	| ident ',' idList 
	;
ident 
	: ID 
	| ID '.' ID
//	| ID ID 
	;