Terminals unused in grammar

   DIGAL_ERR
   STRING_SQ_ERR
   MULTILINE_COMMENT_ERR
   UNKNOWN_CHARACTER_ERR


State 23 conflicts: 1 reduce/reduce
State 89 conflicts: 2 reduce/reduce
State 99 conflicts: 76 reduce/reduce
State 131 conflicts: 1 reduce/reduce
State 207 conflicts: 2 reduce/reduce
State 296 conflicts: 32 shift/reduce
State 420 conflicts: 1 shift/reduce
State 450 conflicts: 32 shift/reduce
State 493 conflicts: 9 reduce/reduce
State 504 conflicts: 1 shift/reduce
State 606 conflicts: 46 shift/reduce, 46 reduce/reduce
State 657 conflicts: 1 shift/reduce
State 665 conflicts: 46 shift/reduce, 46 reduce/reduce
State 669 conflicts: 67 reduce/reduce
State 671 conflicts: 1 shift/reduce
State 676 conflicts: 1 reduce/reduce
State 691 conflicts: 51 shift/reduce, 47 reduce/reduce
State 692 conflicts: 46 reduce/reduce
State 703 conflicts: 1 shift/reduce
State 704 conflicts: 1 shift/reduce
State 706 conflicts: 32 shift/reduce, 32 reduce/reduce
State 707 conflicts: 64 reduce/reduce
State 712 conflicts: 1 reduce/reduce
State 717 conflicts: 1 reduce/reduce
State 726 conflicts: 27 reduce/reduce
State 733 conflicts: 1 shift/reduce, 1 reduce/reduce
State 737 conflicts: 64 reduce/reduce
State 746 conflicts: 1 shift/reduce
State 750 conflicts: 1 shift/reduce
State 754 conflicts: 1 shift/reduce, 1 reduce/reduce
State 755 conflicts: 1 reduce/reduce
State 757 conflicts: 32 shift/reduce, 32 reduce/reduce
State 811 conflicts: 1 shift/reduce
State 818 conflicts: 46 shift/reduce, 46 reduce/reduce
State 825 conflicts: 46 shift/reduce, 46 reduce/reduce
State 829 conflicts: 46 shift/reduce, 46 reduce/reduce
State 830 conflicts: 32 shift/reduce, 32 reduce/reduce
State 831 conflicts: 32 shift/reduce, 32 reduce/reduce
State 832 conflicts: 32 shift/reduce, 32 reduce/reduce
State 833 conflicts: 32 shift/reduce, 32 reduce/reduce
State 834 conflicts: 46 shift/reduce, 46 reduce/reduce
State 835 conflicts: 46 reduce/reduce
State 836 conflicts: 46 shift/reduce, 46 reduce/reduce
State 840 conflicts: 46 shift/reduce, 46 reduce/reduce
State 843 conflicts: 1 shift/reduce
State 854 conflicts: 1 reduce/reduce
State 865 conflicts: 55 reduce/reduce
State 867 conflicts: 46 shift/reduce, 46 reduce/reduce
State 876 conflicts: 47 reduce/reduce
State 877 conflicts: 1 shift/reduce
State 878 conflicts: 1 shift/reduce
State 879 conflicts: 47 reduce/reduce
State 880 conflicts: 1 shift/reduce, 46 reduce/reduce
State 881 conflicts: 1 shift/reduce
State 882 conflicts: 75 reduce/reduce
State 885 conflicts: 1 reduce/reduce
State 889 conflicts: 46 shift/reduce, 46 reduce/reduce
State 903 conflicts: 76 reduce/reduce
State 921 conflicts: 32 shift/reduce, 32 reduce/reduce
State 924 conflicts: 32 shift/reduce, 32 reduce/reduce
State 925 conflicts: 1 shift/reduce, 46 reduce/reduce
State 926 conflicts: 1 shift/reduce, 46 reduce/reduce
State 931 conflicts: 32 shift/reduce, 32 reduce/reduce
State 934 conflicts: 1 shift/reduce
State 935 conflicts: 1 shift/reduce
State 936 conflicts: 1 shift/reduce, 46 reduce/reduce
State 937 conflicts: 1 shift/reduce, 46 reduce/reduce
State 940 conflicts: 46 shift/reduce, 46 reduce/reduce
State 961 conflicts: 46 shift/reduce, 46 reduce/reduce
State 964 conflicts: 46 shift/reduce, 46 reduce/reduce
State 975 conflicts: 3 reduce/reduce
State 988 conflicts: 32 shift/reduce, 32 reduce/reduce
State 989 conflicts: 32 shift/reduce, 32 reduce/reduce
State 991 conflicts: 46 shift/reduce, 46 reduce/reduce
State 997 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1003 conflicts: 1 shift/reduce
State 1004 conflicts: 1 shift/reduce, 1 reduce/reduce
State 1016 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1029 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1032 conflicts: 1 shift/reduce
State 1033 conflicts: 1 shift/reduce
State 1037 conflicts: 32 shift/reduce, 32 reduce/reduce
State 1039 conflicts: 32 shift/reduce, 32 reduce/reduce
State 1040 conflicts: 32 shift/reduce, 32 reduce/reduce
State 1041 conflicts: 32 shift/reduce, 32 reduce/reduce
State 1047 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1054 conflicts: 1 reduce/reduce
State 1055 conflicts: 1 reduce/reduce
State 1065 conflicts: 1 reduce/reduce
State 1068 conflicts: 32 shift/reduce, 32 reduce/reduce
State 1087 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1100 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1101 conflicts: 1 shift/reduce
State 1102 conflicts: 1 shift/reduce
State 1106 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1115 conflicts: 38 reduce/reduce
State 1125 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1151 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1154 conflicts: 1 shift/reduce
State 1167 conflicts: 2 shift/reduce, 46 reduce/reduce
State 1180 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1188 conflicts: 1 shift/reduce
State 1197 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1199 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1218 conflicts: 2 shift/reduce, 6 reduce/reduce
State 1227 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1231 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1234 conflicts: 32 shift/reduce, 32 reduce/reduce
State 1236 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1237 conflicts: 1 reduce/reduce
State 1238 conflicts: 32 shift/reduce, 32 reduce/reduce
State 1248 conflicts: 1 shift/reduce
State 1250 conflicts: 1 shift/reduce
State 1258 conflicts: 1 reduce/reduce
State 1262 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1268 conflicts: 1 reduce/reduce
State 1271 conflicts: 4 shift/reduce, 6 reduce/reduce
State 1273 conflicts: 1 reduce/reduce
State 1277 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1282 conflicts: 1 shift/reduce
State 1285 conflicts: 1 shift/reduce
State 1311 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1315 conflicts: 32 shift/reduce, 32 reduce/reduce
State 1324 conflicts: 1 reduce/reduce
State 1336 conflicts: 32 shift/reduce, 32 reduce/reduce


Grammar

    0 $accept: query $end

    1 query: bracketedSelect
    2      | delete
    3      | insert
    4      | update
    5      | COMMIT
    6      | tableDefinition
    7      | beginEndBlock
    8      | declareBeginEndBlock
    9      | callStatement

   10 id: ID
   11   | ACTION
   12   | ASC
   13   | PRESERVE
   14   | KEY
   15   | NUMBER
   16   | TRANSLATE
   17   | TRIM
   18   | LOWER
   19   | SUM
   20   | CHAR_LENGTH
   21   | POSITION
   22   | ZONE
   23   | AVG
   24   | DEFERRABLE
   25   | CHARACTER_LENGTH
   26   | MIN
   27   | COUNT
   28   | CASCADE
   29   | COALESCE
   30   | TEMPORARY
   31   | UPPER
   32   | NULLIF
   33   | MAX
   34   | DEFERRED
   35   | OCTET_LENGTH
   36   | EXTRACT
   37   | PARTIAL
   38   | INITIALLY
   39   | CONVERT
   40   | SUBSTRING
   41   | DESC

   42 update: UPDATE alias SET assignList where

   43 assignList: assign
   44           | assignList ',' assign

   45 assign: ident '=' simpleExpr
   46       | '(' idList ')' '=' simpleExpr

   47 delete: DELETE optFrom alias where

   48 callStatement: '{' CALL ident identRest '}'

   49 declareBeginEndBlock: DECLARE declarationList beginEndBlock

   50 declaration: ID ident identRestEx declInitializer ';'
   51            | ID identEx declInitializer ';'

   52 declarationList: declaration
   53                | declaration declarationList
   54                | /* empty */

   55 declInitializer: COLONEQUALS simpleExpr
   56                | /* empty */

   57 beginEndBlock: BEGIN plSqlStatementList END ';'

   58 plSqlStatementList: plSqlStatement
   59                   | plSqlStatement plSqlStatementList

   60 plSqlStatement: assignTarget COLONEQUALS simpleExpr ';'
   61               | ident identRestEx ';'
   62               | selectInto ';'
   63               | delete ';'
   64               | update ';'
   65               | insert ';'
   66               | EXECUTE STRING_SQ ';'
   67               | EXECUTE IMMEDIATE STRING_SQ ';'

   68 assignTarget: '?'
   69             | ident

   70 optFrom: FROM
   71        | /* empty */

   72 insert: INSERT INTO alias optIdList insertRest

   73 insertRest: VALUES identRest
   74           | select

   75 optIdList: /* empty */
   76          | '(' idList ')'

   77 idList: id
   78       | idList ',' id

   79 bracketedSelect: select
   80                | '(' select ')'

   81 select: basicSelect where byClauses forUpdate
   82       | select UNION select

   83 basicSelect: SELECT optDist whatToSelect FROM tableList

   84 selectInto: basicSelectInto where byClauses

   85 basicSelectInto: SELECT optDist whatToSelect INTO intoList FROM tableList

   86 intoList: intoId
   87         | intoId ',' intoList

   88 intoId: ID
   89       | ':' ID

   90 where: WHERE whereCond
   91      | /* empty */

   92 forUpdate: FOR UPDATE
   93          | /* empty */

   94 groupBy: GROUP BY simExList having

   95 optGroupBy: groupBy
   96           | /* empty */

   97 having: HAVING condition
   98       | /* empty */

   99 orderBy: ORDER BY directionList

  100 optOrderBy: orderBy
  101           | /* empty */

  102 byClauses: orderBy optGroupBy
  103          | groupBy optOrderBy
  104          | /* empty */

  105 directionList: direction
  106              | directionList ',' direction

  107 direction: simpleExpr orderDirection

  108 orderDirection: ASC
  109               | DESC
  110               | /* empty */

  111 optDist: DISTINCT
  112        | /* empty */

  113 whatToSelect: selectExpressionList

  114 selectExpression: expression
  115                 | selectExpression AS id
  116                 | selectExpression id

  117 expression: condition
  118           | simpleExpr

  119 selectExpressionList: selectExpression
  120                     | selectExpressionList ',' selectExpression

  121 tableList: table
  122          | tableList ',' table

  123 table: alias
  124      | table join alias ON condition

  125 join: JOIN
  126     | LEFT JOIN
  127     | outerType OUTER JOIN
  128     | INNER JOIN

  129 outerType: LEFT
  130          | RIGHT
  131          | FULL

  132 alias: tableExpr
  133      | tableExpr id

  134 tableExpr: ident
  135          | TABLE '(' simpleExpr ')'
  136          | '(' select ')'

  137 ident: id
  138      | id '.' id
  139      | id '.' id '.' id

  140 identEx: ident
  141        | ident '%' id

  142 whereCond: condition

  143 condition: condition AND condition
  144          | condition OR condition
  145          | condition XOR condition
  146          | NOT condition
  147          | '(' condition ')'
  148          | comparison
  149          | simpleExpr inExpr '(' simExList ')'
  150          | simpleExpr inExpr '(' select ')'
  151          | '(' idList2 ')' inExpr '(' simExList ')'
  152          | '(' idList2 ')' inExpr '(' select ')'
  153          | simpleExpr IS optNot NULL
  154          | simpleExpr optNot LIKE simpleExpr escape
  155          | EXISTS '(' select ')'
  156          | simpleExpr optNot BETWEEN simpleExpr AND simpleExpr

  157 idList2: id ',' id
  158        | idList2 ',' id

  159 comparison: simpleExpr '=' simpleExpr
  160           | simpleExpr '>' simpleExpr
  161           | simpleExpr '<' simpleExpr
  162           | simpleExpr LE simpleExpr
  163           | simpleExpr NE simpleExpr
  164           | simpleExpr GE simpleExpr

  165 escape: ESCAPE STRING_SQ
  166       | /* empty */

  167 inExpr: optNot IN

  168 optNot: NOT
  169       | /* empty */

  170 simpleExpr: NUMBER
  171           | simpleExpr OUTERJ
  172           | '-' simpleExpr
  173           | CASE whenList else END
  174           | STRING_SQ
  175           | ident identRestEx
  176           | '(' simpleExpr ')'
  177           | simpleExpr '-' simpleExpr
  178           | simpleExpr '+' simpleExpr
  179           | simpleExpr '*' simpleExpr
  180           | simpleExpr '/' simpleExpr
  181           | simpleExpr CONCAT simpleExpr
  182           | simpleExpr OVER partition
  183           | CAST '(' simpleExpr AS id optSize ')'
  184           | '(' select ')'
  185           | id '.' '*'
  186           | '*'
  187           | '?'
  188           | NULL

  189 optSize: /* empty */
  190        | '(' NUMBER ')'

  191 identRest: '(' simExList ')'
  192          | /* empty */

  193 identRestEx: identRest
  194            | '(' namedArgList ')'

  195 namedArgList: namedArg
  196             | namedArg ',' namedArgList
  197             | /* empty */

  198 namedArg: simpleExpr
  199         | ID EQUALSGT simpleExpr

  200 whenList: when
  201         | when whenList

  202 when: WHEN condition THEN simpleExpr

  203 else: ELSE simpleExpr
  204     | /* empty */

  205 simExList: /* empty */
  206          | simpleExpr
  207          | simExList ',' simpleExpr

  208 partition: '(' PARTITION BY ident orderBy ')'

  209 tableDefinition: CREATE tableDefinition1 TABLE tableName tableElementList tableDefinition2

  210 tableDefinition1: /* empty */
  211                 | GLOBAL
  212                 | LOCAL TEMPORARY

  213 tableDefinition2: /* empty */
  214                 | ON COMMIT DELETE
  215                 | PRESERVE ROWS

  216 tableName: qualifiedName
  217          | qualifiedLocalTableName

  218 qualifiedName: qualifiedName1 qualifiedIdentifier

  219 qualifiedName1: /* empty */
  220               | schemaName period

  221 schemaName: UNKNOWN_LEX

  222 period: UNKNOWN_LEX

  223 qualifiedIdentifier: identifier

  224 identifier: id

  225 qualifiedLocalTableName: MODULE period localTableName

  226 localTableName: qualifiedIdentifier

  227 tableElementList: leftParen tableElement tableElementList1 rightParen

  228 tableElementList1: /* empty */
  229                  | tableElementList1 comma tableElement

  230 leftParen: '('

  231 tableElement: columnDefinition
  232             | tableConstraintDefinition

  233 columnDefinition: columnName dataType
  234                 | domainName columnDefinition1 columnDefinition2 columnDefinition3

  235 columnDefinition1: /* empty */
  236                  | defaultClause

  237 columnDefinition2: /* empty */
  238                  | columnDefinition2 columnConstraintDefinition

  239 columnDefinition3: /* empty */
  240                  | collateClause

  241 columnName: identifier

  242 dataType: characterStringType dataType1
  243         | nationalCharacterStringType
  244         | bitStringType
  245         | numericType
  246         | datetimeType
  247         | intervalType

  248 dataType1: /* empty */
  249          | CHARACTER SET characterSetSpecification

  250 characterStringType: CHARACTER characterStringType1
  251                    | CHAR characterStringType2
  252                    | CHARACTER VARYING characterStringType3
  253                    | CHAR VARYING characterStringType4
  254                    | VARCHAR characterStringType5

  255 characterStringType1: /* empty */
  256                     | leftParen length rightParen

  257 characterStringType2: /* empty */
  258                     | leftParen length rightParen

  259 characterStringType3: /* empty */
  260                     | leftParen length rightParen

  261 characterStringType4: /* empty */
  262                     | leftParen length rightParen

  263 characterStringType5: /* empty */
  264                     | leftParen length rightParen

  265 length: unsignedInteger

  266 unsignedInteger: NUMBER

  267 rightParen: ')'

  268 characterSetSpecification: UNKNOWN_LEX

  269 nationalCharacterStringType: NATIONAL CHARACTER nationalCharacterStringType1
  270                            | NATIONAL CHAR nationalCharacterStringType2
  271                            | NCHAR nationalCharacterStringType3
  272                            | NATIONAL CHARACTER VARYING nationalCharacterStringType4
  273                            | NATIONAL CHAR VARYING nationalCharacterStringType5
  274                            | NCHAR VARYING nationalCharacterStringType6

  275 nationalCharacterStringType1: /* empty */
  276                             | leftParen length rightParen

  277 nationalCharacterStringType2: /* empty */
  278                             | leftParen length rightParen

  279 nationalCharacterStringType3: /* empty */
  280                             | leftParen length rightParen

  281 nationalCharacterStringType4: /* empty */
  282                             | leftParen length rightParen

  283 nationalCharacterStringType5: /* empty */
  284                             | leftParen length rightParen

  285 nationalCharacterStringType6: /* empty */
  286                             | leftParen length rightParen

  287 bitStringType: BIT bitStringType1
  288              | BIT VARYING bitStringType2

  289 bitStringType1: /* empty */
  290               | leftParen length rightParen

  291 bitStringType2: /* empty */
  292               | leftParen length rightParen

  293 numericType: exactNumericType
  294            | approximateNumericType

  295 exactNumericType: NUMERIC exactNumericType2
  296                 | DECIMAL exactNumericType4
  297                 | DEC exactNumericType6
  298                 | INTEGER
  299                 | INT
  300                 | SMALLINT

  301 exactNumericType2: /* empty */
  302                  | leftParen precision exactNumericType1 rightParen

  303 exactNumericType1: /* empty */
  304                  | comma scale

  305 exactNumericType4: /* empty */
  306                  | leftParen precision exactNumericType3 rightParen

  307 exactNumericType3: /* empty */
  308                  | comma scale

  309 exactNumericType6: /* empty */
  310                  | leftParen precision exactNumericType5 rightParen

  311 exactNumericType5: /* empty */
  312                  | comma scale

  313 precision: unsignedInteger

  314 comma: ','

  315 scale: unsignedInteger

  316 approximateNumericType: FLOAT approximateNumericType1
  317                       | REAL
  318                       | DOUBLE PRECISION

  319 approximateNumericType1: /* empty */
  320                        | leftParen precision rightParen

  321 datetimeType: DATE
  322             | TIME datetimeType1 datetimeType2
  323             | TIMESTAMP datetimeType3 datetimeType4

  324 datetimeType1: /* empty */
  325              | leftParen timePrecision rightParen

  326 datetimeType2: /* empty */
  327              | WITH TIME ZONE

  328 datetimeType3: /* empty */
  329              | leftParen timestampPrecision rightParen

  330 datetimeType4: /* empty */
  331              | WITH TIME ZONE

  332 timePrecision: timeFractionalSecondsPrecision

  333 timeFractionalSecondsPrecision: unsignedInteger

  334 timestampPrecision: timeFractionalSecondsPrecision

  335 intervalType: INTERVAL intervalQualifier

  336 intervalQualifier: startField TO endField
  337                  | singleDatetimeField

  338 startField: nonsecondDatetimeField startField1

  339 startField1: /* empty */
  340            | leftParen intervalLeadingFieldPrecision rightParen

  341 nonsecondDatetimeField: YEAR
  342                       | MONTH
  343                       | DAY
  344                       | HOUR
  345                       | MINUTE

  346 intervalLeadingFieldPrecision: unsignedInteger

  347 endField: nonsecondDatetimeField
  348         | SECOND endField1

  349 endField1: /* empty */
  350          | leftParen intervalFractionalSecondsPrecision rightParen

  351 intervalFractionalSecondsPrecision: unsignedInteger

  352 singleDatetimeField: nonsecondDatetimeField singleDatetimeField1
  353                    | SECOND singleDatetimeField3

  354 singleDatetimeField1: /* empty */
  355                     | leftParen intervalLeadingFieldPrecision rightParen

  356 singleDatetimeField3: /* empty */
  357                     | leftParen intervalLeadingFieldPrecision singleDatetimeField2 rightParen

  358 singleDatetimeField2: /* empty */
  359                     | comma leftParen intervalFractionalSecondsPrecision

  360 domainName: qualifiedName

  361 defaultClause: DEFAULT defaultOption

  362 defaultOption: literal
  363              | datetimeValueFunction
  364              | USER
  365              | CURRENT_USER
  366              | SESSION_USER
  367              | SYSTEM_USER
  368              | NULL

  369 literal: signedNumericLiteral
  370        | generalLiteral

  371 signedNumericLiteral: signedNumericLiteral1 unsignedNumericLiteral

  372 signedNumericLiteral1: /* empty */
  373                      | sign

  374 sign: UNKNOWN_LEX

  375 unsignedNumericLiteral: UNKNOWN_LEX

  376 generalLiteral: characterStringLiteral
  377               | nationalCharacterStringLiteral
  378               | bitStringLiteral
  379               | hexStringLiteral
  380               | datetimeLiteral
  381               | intervalLiteral

  382 characterStringLiteral: UNKNOWN_LEX

  383 nationalCharacterStringLiteral: UNKNOWN_LEX

  384 bitStringLiteral: UNKNOWN_LEX

  385 hexStringLiteral: UNKNOWN_LEX

  386 datetimeLiteral: dateLiteral
  387                | timeLiteral
  388                | timestampLiteral

  389 dateLiteral: DATE dateString

  390 dateString: UNKNOWN_LEX

  391 timeLiteral: TIME timeString

  392 timeString: UNKNOWN_LEX

  393 timestampLiteral: TIMESTAMP timestampString

  394 timestampString: UNKNOWN_LEX

  395 intervalLiteral: INTERVAL intervalLiteral1 intervalString intervalQualifier

  396 intervalLiteral1: /* empty */
  397                 | sign

  398 intervalString: UNKNOWN_LEX

  399 datetimeValueFunction: currentDateValueFunction
  400                      | currentTimeValueFunction
  401                      | currentTimestampValueFunction

  402 currentDateValueFunction: CURRENT_DATE

  403 currentTimeValueFunction: CURRENT_TIME currentTimeValueFunction1

  404 currentTimeValueFunction1: /* empty */
  405                          | leftParen timePrecision rightParen

  406 currentTimestampValueFunction: CURRENT_TIMESTAMP currentTimestampValueFunction1

  407 currentTimestampValueFunction1: /* empty */
  408                               | leftParen timestampPrecision rightParen

  409 columnConstraintDefinition: columnConstraintDefinition1 columnConstraint columnConstraintDefinition2

  410 columnConstraintDefinition1: /* empty */
  411                            | constraintNameDefinition

  412 columnConstraintDefinition2: /* empty */
  413                            | constraintAttributes

  414 constraintNameDefinition: CONSTRAINT constraintName

  415 constraintName: qualifiedName

  416 columnConstraint: NOT NULL
  417                 | uniqueSpecification
  418                 | referencesSpecification
  419                 | checkConstraintDefinition

  420 uniqueSpecification: UNIQUE
  421                    | PRIMARY KEY

  422 referencesSpecification: REFERENCES referencedTableAndColumns referencesSpecification1 referencesSpecification2

  423 referencesSpecification1: /* empty */
  424                         | MATCH matchType

  425 referencesSpecification2: /* empty */
  426                         | referentialTriggeredAction

  427 referencedTableAndColumns: tableName referencedTableAndColumns1

  428 referencedTableAndColumns1: /* empty */
  429                           | leftParen referenceColumnList rightParen

  430 referenceColumnList: columnNameList

  431 columnNameList: columnName columnNameList1

  432 columnNameList1: /* empty */
  433                | columnNameList1 comma columnName

  434 matchType: FULL
  435          | PARTIAL

  436 referentialTriggeredAction: updateRule referentialTriggeredAction1
  437                           | deleteRule referentialTriggeredAction2

  438 referentialTriggeredAction1: /* empty */
  439                            | deleteRule

  440 referentialTriggeredAction2: /* empty */
  441                            | updateRule

  442 updateRule: ON UPDATE referentialAction

  443 referentialAction: CASCADE
  444                  | SET NULL
  445                  | SET DEFAULT
  446                  | NO ACTION

  447 deleteRule: ON DELETE referentialAction

  448 checkConstraintDefinition: CHECK leftParen searchCondition rightParen

  449 searchCondition: booleanTerm
  450                | searchCondition OR booleanTerm

  451 booleanTerm: booleanFactor
  452            | booleanTerm AND booleanFactor

  453 booleanFactor: booleanFactor1 booleanTest

  454 booleanFactor1: /* empty */
  455               | NOT

  456 booleanTest: booleanPrimary booleanTest2

  457 booleanTest2: /* empty */
  458             | IS booleanTest1 truthValue

  459 booleanTest1: /* empty */
  460             | NOT

  461 booleanPrimary: predicate
  462               | leftParen searchCondition rightParen

  463 predicate: comparisonPredicate
  464          | betweenPredicate
  465          | inPredicate
  466          | likePredicate
  467          | nullPredicate
  468          | quantifiedComparisonPredicate
  469          | existsPredicate
  470          | matchPredicate
  471          | overlapsPredicate

  472 comparisonPredicate: rowValueConstructor compOp rowValueConstructor

  473 rowValueConstructor: rowValueConstructorElement
  474                    | leftParen rowValueConstructorList rightParen
  475                    | rowSubquery

  476 rowValueConstructorElement: valueExpression
  477                           | nullSpecification
  478                           | defaultSpecification

  479 valueExpression: numericValueExpression
  480                | stringValueExpression
  481                | datetimeValueExpression
  482                | intervalValueExpression

  483 numericValueExpression: term
  484                       | numericValueExpression plusSign term
  485                       | numericValueExpression minusSign term

  486 term: factor
  487     | term asterisk factor
  488     | term solidus factor

  489 factor: factor1 numericPrimary

  490 factor1: /* empty */
  491        | sign

  492 numericPrimary: valueExpressionPrimary
  493               | numericValueFunction

  494 valueExpressionPrimary: unsignedValueSpecification
  495                       | columnReference
  496                       | setFunctionSpecification
  497                       | scalarSubquery
  498                       | caseExpression
  499                       | leftParen valueExpression rightParen
  500                       | castSpecification

  501 unsignedValueSpecification: unsignedLiteral
  502                           | generalValueSpecification

  503 unsignedLiteral: unsignedNumericLiteral
  504                | generalLiteral

  505 generalValueSpecification: parameterSpecification
  506                          | dynamicParameterSpecification
  507                          | variableSpecification
  508                          | USER
  509                          | CURRENT_USER
  510                          | SESSION_USER
  511                          | SYSTEM_USER
  512                          | VALUE

  513 parameterSpecification: parameterName parameterSpecification1

  514 parameterSpecification1: /* empty */
  515                        | indicatorParameter

  516 parameterName: colon identifier

  517 colon: UNKNOWN_LEX

  518 indicatorParameter: indicatorParameter1 parameterName

  519 indicatorParameter1: /* empty */
  520                    | INDICATOR

  521 dynamicParameterSpecification: questionMark

  522 questionMark: UNKNOWN_LEX

  523 variableSpecification: embeddedVariableName variableSpecification1

  524 variableSpecification1: /* empty */
  525                       | indicatorVariable

  526 embeddedVariableName: colon hostIdentifier

  527 hostIdentifier: AdaHostIdentifier
  528               | CHostIdentifier
  529               | CobolHostIdentifier
  530               | FortranHostIdentifier
  531               | MUMPSHostIdentifier
  532               | PascalHostIdentifier
  533               | PLIHostIdentifier

  534 AdaHostIdentifier: UNKNOWN_BODY

  535 CHostIdentifier: UNKNOWN_BODY

  536 CobolHostIdentifier: UNKNOWN_BODY

  537 FortranHostIdentifier: UNKNOWN_BODY

  538 MUMPSHostIdentifier: UNKNOWN_BODY

  539 PascalHostIdentifier: UNKNOWN_BODY

  540 PLIHostIdentifier: UNKNOWN_BODY

  541 indicatorVariable: indicatorVariable1 embeddedVariableName

  542 indicatorVariable1: /* empty */
  543                   | INDICATOR

  544 columnReference: columnReference1 columnName

  545 columnReference1: /* empty */
  546                 | qualifier period

  547 qualifier: tableName
  548          | correlationName

  549 correlationName: identifier

  550 setFunctionSpecification: COUNT leftParen asterisk rightParen
  551                         | generalSetFunction

  552 asterisk: UNKNOWN_LEX

  553 generalSetFunction: setFunctionType leftParen generalSetFunction1 valueExpression rightParen

  554 generalSetFunction1: /* empty */
  555                    | setQuantifier

  556 setFunctionType: AVG
  557                | MAX
  558                | MIN
  559                | SUM
  560                | COUNT

  561 setQuantifier: DISTINCT
  562              | ALL

  563 scalarSubquery: subquery

  564 subquery: leftParen queryExpression rightParen

  565 queryExpression: nonjoinQueryExpression
  566                | joinedTable

  567 nonjoinQueryExpression: nonjoinQueryTerm
  568                       | queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  569                       | queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm

  570 nonjoinQueryExpression1: /* empty */
  571                        | ALL

  572 nonjoinQueryExpression2: /* empty */
  573                        | correspondingSpec

  574 nonjoinQueryExpression3: /* empty */
  575                        | ALL

  576 nonjoinQueryExpression4: /* empty */
  577                        | correspondingSpec

  578 nonjoinQueryTerm: nonjoinQueryPrimary
  579                 | queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary

  580 nonjoinQueryTerm1: /* empty */
  581                  | ALL

  582 nonjoinQueryTerm2: /* empty */
  583                  | correspondingSpec

  584 nonjoinQueryPrimary: simpleTable
  585                    | leftParen nonjoinQueryExpression rightParen

  586 simpleTable: querySpecification
  587            | tableValueConstructor
  588            | explicitTable

  589 querySpecification: SELECT querySpecification1 selectList tableExpression

  590 querySpecification1: /* empty */
  591                    | setQuantifier

  592 selectList: asterisk
  593           | selectSublist selectList1

  594 selectList1: /* empty */
  595            | selectList1 comma selectSublist

  596 selectSublist: derivedColumn
  597              | qualifier period asterisk

  598 derivedColumn: valueExpression derivedColumn1

  599 derivedColumn1: /* empty */
  600               | asClause

  601 asClause: asClause1 columnName

  602 asClause1: /* empty */
  603          | AS

  604 tableExpression: fromClause tableExpression1 tableExpression2 tableExpression3

  605 tableExpression1: /* empty */
  606                 | whereClause

  607 tableExpression2: /* empty */
  608                 | groupByClause

  609 tableExpression3: /* empty */
  610                 | havingClause

  611 fromClause: FROM tableReference fromClause1

  612 fromClause1: /* empty */
  613            | fromClause1 comma tableReference

  614 tableReference: tableName tableReference1
  615               | derivedTable correlationSpecification
  616               | joinedTable

  617 tableReference1: /* empty */
  618                | correlationSpecification

  619 correlationSpecification: correlationSpecification1 correlationName correlationSpecification2

  620 correlationSpecification1: /* empty */
  621                          | AS

  622 correlationSpecification2: /* empty */
  623                          | leftParen derivedColumnList rightParen

  624 derivedColumnList: columnNameList

  625 derivedTable: tableSubquery

  626 tableSubquery: subquery

  627 joinedTable: crossJoin
  628            | qualifiedJoin
  629            | leftParen joinedTable rightParen

  630 crossJoin: tableReference CROSS JOIN tableReference

  631 qualifiedJoin: tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3

  632 qualifiedJoin1: /* empty */
  633               | NATURAL

  634 qualifiedJoin2: /* empty */
  635               | joinType

  636 qualifiedJoin3: /* empty */
  637               | joinSpecification

  638 joinType: INNER
  639         | outerJoinType joinType1
  640         | UNION

  641 joinType1: /* empty */
  642          | OUTER

  643 outerJoinType: LEFT
  644              | RIGHT
  645              | FULL

  646 joinSpecification: joinCondition
  647                  | namedColumnsJoin

  648 joinCondition: ON searchCondition

  649 namedColumnsJoin: USING leftParen joinColumnList rightParen

  650 joinColumnList: columnNameList

  651 whereClause: WHERE searchCondition

  652 groupByClause: GROUP BY groupingColumnReferenceList

  653 groupingColumnReferenceList: groupingColumnReference groupingColumnReferenceList1

  654 groupingColumnReferenceList1: /* empty */
  655                             | groupingColumnReferenceList1 comma groupingColumnReference

  656 groupingColumnReference: columnReference groupingColumnReference1

  657 groupingColumnReference1: /* empty */
  658                         | collateClause

  659 collateClause: COLLATE collationName

  660 collationName: qualifiedName

  661 havingClause: HAVING searchCondition

  662 tableValueConstructor: VALUES tableValueConstructorList

  663 tableValueConstructorList: rowValueConstructor tableValueConstructorList1

  664 tableValueConstructorList1: /* empty */
  665                           | tableValueConstructorList1 comma rowValueConstructor

  666 explicitTable: TABLE tableName

  667 queryTerm: nonjoinQueryTerm
  668          | joinedTable

  669 correspondingSpec: CORRESPONDING correspondingSpec1

  670 correspondingSpec1: /* empty */
  671                   | BY leftParen correspondingColumnList rightParen

  672 correspondingColumnList: columnNameList

  673 queryPrimary: nonjoinQueryPrimary
  674             | joinedTable

  675 caseExpression: caseAbbreviation
  676               | caseSpecification

  677 caseAbbreviation: NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | COALESCE leftParen valueExpression caseAbbreviation1 rightParen

  679 caseAbbreviation1: comma valueExpression
  680                  | caseAbbreviation1 comma valueExpression

  681 caseSpecification: simpleCase
  682                  | searchedCase

  683 simpleCase: CASE caseOperand simpleCase1 simpleCase2 END

  684 simpleCase1: simpleWhenClause
  685            | simpleCase1 simpleWhenClause

  686 simpleCase2: /* empty */
  687            | elseClause

  688 caseOperand: valueExpression

  689 simpleWhenClause: WHEN whenOperand THEN result

  690 whenOperand: valueExpression

  691 result: resultExpression
  692       | NULL

  693 resultExpression: valueExpression

  694 elseClause: ELSE result

  695 searchedCase: CASE searchedCase1 searchedCase2 END

  696 searchedCase1: searchedWhenClause
  697              | searchedCase1 searchedWhenClause

  698 searchedCase2: /* empty */
  699              | elseClause

  700 searchedWhenClause: WHEN searchCondition THEN result

  701 castSpecification: CAST leftParen castOperand AS castTarget rightParen

  702 castOperand: valueExpression
  703            | NULL

  704 castTarget: domainName
  705           | typeName

  706 typeName: UNKNOWN_BODY

  707 numericValueFunction: positionExpression
  708                     | extractExpression
  709                     | lengthExpression

  710 positionExpression: POSITION leftParen characterValueExpression IN characterValueExpression rightParen

  711 characterValueExpression: concatenation
  712                         | characterFactor

  713 concatenation: characterValueExpression concatenationOperator characterFactor

  714 concatenationOperator: UNKNOWN_LEX

  715 characterFactor: characterPrimary characterFactor1

  716 characterFactor1: /* empty */
  717                 | collateClause

  718 characterPrimary: valueExpressionPrimary
  719                 | stringValueFunction

  720 stringValueFunction: characterValueFunction
  721                    | bitValueFunction

  722 characterValueFunction: characterSubstringFunction
  723                       | fold
  724                       | formofuseConversion
  725                       | characterTranslation
  726                       | trimFunction

  727 characterSubstringFunction: SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen

  728 characterSubstringFunction1: /* empty */
  729                            | FOR stringLength

  730 startPosition: numericValueExpression

  731 stringLength: numericValueExpression

  732 fold: UPPER
  733     | LOWER leftParen characterValueExpression rightParen

  734 formofuseConversion: CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen

  735 formofuseConversionName: qualifiedName

  736 characterTranslation: TRANSLATE leftParen characterValueExpression USING translationName rightParen

  737 translationName: qualifiedName

  738 trimFunction: TRIM leftParen trimOperands rightParen

  739 trimOperands: trimOperands3 trimSource

  740 trimOperands3: /* empty */
  741              | trimOperands1 trimOperands2 FROM

  742 trimOperands1: /* empty */
  743              | trimSpecification

  744 trimOperands2: /* empty */
  745              | trimCharacter

  746 trimSpecification: LEADING
  747                  | TRAILING
  748                  | BOTH

  749 trimCharacter: characterValueExpression

  750 trimSource: characterValueExpression

  751 bitValueFunction: bitSubstringFunction

  752 bitSubstringFunction: SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

  753 bitSubstringFunction1: /* empty */
  754                      | FOR stringLength

  755 bitValueExpression: bitConcatenation
  756                   | bitFactor

  757 bitConcatenation: bitValueExpression concatenationOperator bitFactor

  758 bitFactor: bitPrimary

  759 bitPrimary: valueExpressionPrimary
  760           | stringValueFunction

  761 extractExpression: EXTRACT leftParen extractField FROM extractSource rightParen

  762 extractField: datetimeField
  763             | timeZoneField

  764 datetimeField: nonsecondDatetimeField
  765              | SECOND

  766 timeZoneField: TIMEZONE_HOUR
  767              | TIMEZONE_MINUTE

  768 extractSource: datetimeValueExpression
  769              | intervalValueExpression

  770 datetimeValueExpression: datetimeTerm
  771                        | intervalValueExpression plusSign datetimeTerm
  772                        | datetimeValueExpression plusSign intervalTerm
  773                        | datetimeValueExpression minusSign intervalTerm

  774 datetimeTerm: datetimeFactor

  775 datetimeFactor: datetimePrimary datetimeFactor1

  776 datetimeFactor1: /* empty */
  777                | timeZone

  778 datetimePrimary: valueExpressionPrimary
  779                | datetimeValueFunction

  780 timeZone: AT timeZoneSpecifier

  781 timeZoneSpecifier: LOCAL
  782                  | TIME ZONE intervalValueExpression

  783 intervalValueExpression: intervalTerm
  784                        | intervalValueExpression1 plusSign intervalTerm1
  785                        | intervalValueExpression1 minusSign intervalTerm1
  786                        | leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier

  787 intervalTerm: intervalFactor
  788             | intervalTerm2 asterisk factor
  789             | intervalTerm2 solidus factor
  790             | term asterisk intervalFactor

  791 intervalFactor: intervalFactor1 intervalPrimary

  792 intervalFactor1: /* empty */
  793                | sign

  794 intervalPrimary: valueExpressionPrimary intervalPrimary1

  795 intervalPrimary1: /* empty */
  796                 | intervalQualifier

  797 intervalTerm2: intervalTerm

  798 solidus: UNKNOWN_LEX

  799 intervalValueExpression1: intervalValueExpression

  800 plusSign: UNKNOWN_LEX

  801 intervalTerm1: intervalTerm

  802 minusSign: UNKNOWN_LEX

  803 lengthExpression: charLengthExpression
  804                 | octetLengthExpression
  805                 | bitLengthExpression

  806 charLengthExpression: CHAR_LENGTH
  807                     | CHARACTER_LENGTH leftParen stringValueExpression rightParen

  808 stringValueExpression: characterValueExpression
  809                      | bitValueExpression

  810 octetLengthExpression: OCTET_LENGTH leftParen stringValueExpression rightParen

  811 bitLengthExpression: BIT_LENGTH leftParen stringValueExpression rightParen

  812 nullSpecification: NULL

  813 defaultSpecification: DEFAULT

  814 rowValueConstructorList: rowValueConstructorElement rowValueConstructorList1

  815 rowValueConstructorList1: /* empty */
  816                         | rowValueConstructorList1 comma rowValueConstructorElement

  817 rowSubquery: subquery

  818 compOp: equalsOperator
  819       | notEqualsOperator
  820       | lessThanOperator
  821       | greaterThanOperator
  822       | lessThanOrEqualsOperator
  823       | greaterThanOrEqualsOperator

  824 equalsOperator: UNKNOWN_LEX

  825 notEqualsOperator: UNKNOWN_LEX

  826 lessThanOperator: UNKNOWN_LEX

  827 greaterThanOperator: UNKNOWN_LEX

  828 lessThanOrEqualsOperator: UNKNOWN_LEX

  829 greaterThanOrEqualsOperator: UNKNOWN_LEX

  830 betweenPredicate: rowValueConstructor betweenPredicate1 BETWEEN rowValueConstructor AND rowValueConstructor

  831 betweenPredicate1: /* empty */
  832                  | NOT

  833 inPredicate: rowValueConstructor inPredicate1 IN inPredicateValue

  834 inPredicate1: /* empty */
  835             | NOT

  836 inPredicateValue: tableSubquery
  837                 | leftParen inValueList rightParen

  838 inValueList: valueExpression inValueList1

  839 inValueList1: comma valueExpression
  840             | inValueList1 comma valueExpression

  841 likePredicate: matchValue likePredicate1 LIKE pattern likePredicate2

  842 likePredicate1: /* empty */
  843               | NOT

  844 likePredicate2: /* empty */
  845               | ESCAPE escapeCharacter

  846 matchValue: characterValueExpression

  847 pattern: characterValueExpression

  848 escapeCharacter: characterValueExpression

  849 nullPredicate: IS nullPredicate1 NULL

  850 nullPredicate1: /* empty */
  851               | NOT

  852 quantifiedComparisonPredicate: rowValueConstructor compOp quantifier tableSubquery

  853 quantifier: all
  854           | some

  855 all: ALL

  856 some: SOME
  857     | ANY

  858 existsPredicate: EXISTS tableSubquery

  859 matchPredicate: rowValueConstructor MATCH matchPredicate1 matchPredicate2 tableSubquery

  860 matchPredicate1: /* empty */
  861                | UNIQUE

  862 matchPredicate2: /* empty */
  863                | PARTIAL
  864                | FULL

  865 overlapsPredicate: rowValueConstructor1 OVERLAPS rowValueConstructor2

  866 rowValueConstructor1: rowValueConstructor

  867 rowValueConstructor2: rowValueConstructor

  868 truthValue: TRUE
  869           | FALSE
  870           | UNKNOWN

  871 constraintAttributes: constraintCheckTime constraintAttributes2
  872                     | constraintAttributes3 DEFERRABLE constraintAttributes4

  873 constraintAttributes2: /* empty */
  874                      | constraintAttributes1 DEFERRABLE

  875 constraintAttributes1: /* empty */
  876                      | NOT

  877 constraintAttributes3: /* empty */
  878                      | NOT

  879 constraintAttributes4: /* empty */
  880                      | constraintCheckTime

  881 constraintCheckTime: INITIALLY DEFERRED
  882                    | INITIALLY IMMEDIATE

  883 tableConstraintDefinition: tableConstraintDefinition1 tableConstraint tableConstraintDefinition2

  884 tableConstraintDefinition1: /* empty */
  885                           | constraintNameDefinition

  886 tableConstraintDefinition2: /* empty */
  887                           | constraintCheckTime

  888 tableConstraint: uniqueConstraintDefinition
  889                | referentialConstraintDefinition
  890                | checkConstraintDefinition

  891 uniqueConstraintDefinition: uniqueSpecification leftParen uniqueColumnList rightParen

  892 uniqueColumnList: columnNameList

  893 referentialConstraintDefinition: FOREIGN KEY leftParen referencingColumns rightParen referencesSpecification

  894 referencingColumns: referenceColumnList


Terminals, with rules where they appear

$end (0) 0
'%' (37) 141
'(' (40) 46 76 80 135 136 147 149 150 151 152 155 176 183 184 190 191
    194 208 230
')' (41) 46 76 80 135 136 147 149 150 151 152 155 176 183 184 190 191
    194 208 267
'*' (42) 179 185 186
'+' (43) 178
',' (44) 44 78 87 106 120 122 157 158 196 207 314
'-' (45) 172 177
'.' (46) 138 139 185
'/' (47) 180
':' (58) 89
';' (59) 50 51 57 60 61 62 63 64 65 66 67
'<' (60) 161
'=' (61) 45 46 159
'>' (62) 160
'?' (63) 68 187
'{' (123) 48
'}' (125) 48
error (256)
PARTITION (258) 208
IMMEDIATE (259) 67 882
DISTINCT (260) 111 561
EXECUTE (261) 66 67
BETWEEN (262) 156 830
DECLARE (263) 49
VALUES (264) 73 662
SELECT (265) 83 85 589
DELETE (266) 47 214 447
INSERT (267) 72
ESCAPE (268) 165 845
OVER (269) 182
UPDATE (270) 42 92 442
EXISTS (271) 155 858
HAVING (272) 97 661
COMMIT (273) 5 214
WHERE (274) 90 651
BEGIN (275) 57
TABLE (276) 135 209 666
ORDER (277) 99
OR (278) 144 450
GROUP (279) 94 652
RIGHT (280) 130 644
INNER (281) 128 638
OUTER (282) 127 642
UNION (283) 82 568 640
FROM (284) 70 83 85 611 727 741 752 761
WHEN (285) 202 689 700
THEN (286) 202 689 700
CASE (287) 173 683 695
CAST (288) 183 701
CALL (289) 48
ELSE (290) 203 694
DESC (291) 41 109
LIKE (292) 154 841
JOIN (293) 125 126 127 128 630 631
LEFT (294) 126 129 643
NULL (295) 153 188 368 416 444 692 703 812 849
FULL (296) 131 434 645 864
INTO (297) 72 85
AND (298) 143 156 452 830
SET (299) 42 249 444 445
END (300) 57 173 683 695
ASC (301) 12 108
XOR (302) 145
FOR (303) 92 729 754
NOT (304) 146 168 416 455 460 832 835 843 851 876 878
ON (305) 124 214 442 447 648
BY (306) 94 99 208 652 671
AS (307) 115 183 603 621 701
IN (308) 167 710 833
IS (309) 153 458 849
UNKNOWN (310) 870
UNKNOWN_BODY (311) 534 535 536 537 538 539 540 706
UNKNOWN_LEX (312) 221 222 268 374 375 382 383 384 385 390 392 394 398
    517 522 552 714 798 800 802 824 825 826 827 828 829
REAL (313) 317
ACTION (314) 11 446
MIN (315) 26 558
LOCAL (316) 212 781
SECOND (317) 348 353 765
BIT (318) 287 288
OCTET_LENGTH (319) 35 810
PRECISION (320) 318
BOTH (321) 748
SOME (322) 856
MINUTE (323) 345
CROSS (324) 630
DEFERRED (325) 34 881
DEFERRABLE (326) 24 872 874
MONTH (327) 342
SMALLINT (328) 300
WITH (329) 327 331
NCHAR (330) 271 274
ZONE (331) 22 327 331 782
NO (332) 446
INTERSECT (333) 579
COUNT (334) 27 550 560
SESSION_USER (335) 366 510
NATURAL (336) 633
DATE (337) 321 389
ALL (338) 562 571 575 581 855
DOUBLE (339) 318
NULLIF (340) 32 677
CURRENT_DATE (341) 402
SUM (342) 19 559
CORRESPONDING (343) 669
UNIQUE (344) 420 861
ANY (345) 857
COLLATE (346) 659
KEY (347) 14 421 893
AVG (348) 23 556
INITIALLY (349) 38 881 882
UPPER (350) 31 732
TIMESTAMP (351) 323 393
CONSTRAINT (352) 414
LEADING (353) 746
NUMERIC (354) 295
DAY (355) 343
DECIMAL (356) 296
DEC (357) 297
EXCEPT (358) 569
TRUE (359) 868
MODULE (360) 225
EXTRACT (361) 36 761
CHAR_LENGTH (362) 20 806
TIME (363) 322 327 331 391 782
SYSTEM_USER (364) 367 511
SUBSTRING (365) 40 727 752
INTEGER (366) 298
CURRENT_TIME (367) 403
CREATE (368) 209
PARTIAL (369) 37 435 863
PRIMARY (370) 421
CHECK (371) 448
CHARACTER (372) 249 250 252 269 272
USER (373) 364 508
CHAR (374) 251 253 270 273
TIMEZONE_HOUR (375) 766
REFERENCES (376) 422
MAX (377) 33 557
CURRENT_TIMESTAMP (378) 406
GLOBAL (379) 211
LOWER (380) 18 733
USING (381) 649 734 736
ROWS (382) 215
TO (383) 336
CASCADE (384) 28 443
TRAILING (385) 747
TEMPORARY (386) 30 212
HOUR (387) 344
BIT_LENGTH (388) 811
INDICATOR (389) 520 543
FALSE (390) 869
VALUE (391) 512
FOREIGN (392) 893
YEAR (393) 341
OVERLAPS (394) 865
CHARACTER_LENGTH (395) 25 807
MATCH (396) 424 859
INT (397) 299
CONVERT (398) 39 734
NATIONAL (399) 269 270 272 273
FLOAT (400) 316
CURRENT_USER (401) 365 509
TRANSLATE (402) 16 736
INTERVAL (403) 335 395
VARCHAR (404) 254
DEFAULT (405) 361 445 813
VARYING (406) 252 253 272 273 274 288
PRESERVE (407) 13 215
POSITION (408) 21 710
COALESCE (409) 29 678
TRIM (410) 17 738
TIMEZONE_MINUTE (411) 767
AT (412) 780
OUTERJ (413) 171
NE (414) 163
LE (415) 162
GE (416) 164
CONCAT (417) 181
COLONEQUALS (418) 55 60
EQUALSGT (419) 199
DIGAL_ERR (420)
STRING_SQ (421) 66 67 165 174
STRING_SQ_ERR (422)
MULTILINE_COMMENT_ERR (423)
NUMBER (424) 15 170 190 266
ID (425) 10 50 51 88 89 199
UNKNOWN_CHARACTER_ERR (426)


Nonterminals, with rules where they appear

$accept (189)
    on left: 0
query (190)
    on left: 1 2 3 4 5 6 7 8 9, on right: 0
id (191)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    28 29 30 31 32 33 34 35 36 37 38 39 40 41, on right: 77 78 115
    116 133 137 138 139 141 157 158 183 185 224
update (192)
    on left: 42, on right: 4 64
assignList (193)
    on left: 43 44, on right: 42 44
assign (194)
    on left: 45 46, on right: 43 44
delete (195)
    on left: 47, on right: 2 63
callStatement (196)
    on left: 48, on right: 9
declareBeginEndBlock (197)
    on left: 49, on right: 8
declaration (198)
    on left: 50 51, on right: 52 53
declarationList (199)
    on left: 52 53 54, on right: 49 53
declInitializer (200)
    on left: 55 56, on right: 50 51
beginEndBlock (201)
    on left: 57, on right: 7 49
plSqlStatementList (202)
    on left: 58 59, on right: 57 59
plSqlStatement (203)
    on left: 60 61 62 63 64 65 66 67, on right: 58 59
assignTarget (204)
    on left: 68 69, on right: 60
optFrom (205)
    on left: 70 71, on right: 47
insert (206)
    on left: 72, on right: 3 65
insertRest (207)
    on left: 73 74, on right: 72
optIdList (208)
    on left: 75 76, on right: 72
idList (209)
    on left: 77 78, on right: 46 76 78
bracketedSelect (210)
    on left: 79 80, on right: 1
select (211)
    on left: 81 82, on right: 74 79 80 82 136 150 152 155 184
basicSelect (212)
    on left: 83, on right: 81
selectInto (213)
    on left: 84, on right: 62
basicSelectInto (214)
    on left: 85, on right: 84
intoList (215)
    on left: 86 87, on right: 85 87
intoId (216)
    on left: 88 89, on right: 86 87
where (217)
    on left: 90 91, on right: 42 47 81 84
forUpdate (218)
    on left: 92 93, on right: 81
groupBy (219)
    on left: 94, on right: 95 103
optGroupBy (220)
    on left: 95 96, on right: 102
having (221)
    on left: 97 98, on right: 94
orderBy (222)
    on left: 99, on right: 100 102 208
optOrderBy (223)
    on left: 100 101, on right: 103
byClauses (224)
    on left: 102 103 104, on right: 81 84
directionList (225)
    on left: 105 106, on right: 99 106
direction (226)
    on left: 107, on right: 105 106
orderDirection (227)
    on left: 108 109 110, on right: 107
optDist (228)
    on left: 111 112, on right: 83 85
whatToSelect (229)
    on left: 113, on right: 83 85
selectExpression (230)
    on left: 114 115 116, on right: 115 116 119 120
expression (231)
    on left: 117 118, on right: 114
selectExpressionList (232)
    on left: 119 120, on right: 113 120
tableList (233)
    on left: 121 122, on right: 83 85 122
table (234)
    on left: 123 124, on right: 121 122 124
join (235)
    on left: 125 126 127 128, on right: 124
outerType (236)
    on left: 129 130 131, on right: 127
alias (237)
    on left: 132 133, on right: 42 47 72 123 124
tableExpr (238)
    on left: 134 135 136, on right: 132 133
ident (239)
    on left: 137 138 139, on right: 45 48 50 61 69 134 140 141 175
    208
identEx (240)
    on left: 140 141, on right: 51
whereCond (241)
    on left: 142, on right: 90
condition (242)
    on left: 143 144 145 146 147 148 149 150 151 152 153 154 155 156,
    on right: 97 117 124 142 143 144 145 146 147 202
idList2 (243)
    on left: 157 158, on right: 151 152 158
comparison (244)
    on left: 159 160 161 162 163 164, on right: 148
escape (245)
    on left: 165 166, on right: 154
inExpr (246)
    on left: 167, on right: 149 150 151 152
optNot (247)
    on left: 168 169, on right: 153 154 156 167
simpleExpr (248)
    on left: 170 171 172 173 174 175 176 177 178 179 180 181 182 183
    184 185 186 187 188, on right: 45 46 55 60 107 118 135 149 150
    153 154 156 159 160 161 162 163 164 171 172 176 177 178 179 180
    181 182 183 198 199 202 203 206 207
optSize (249)
    on left: 189 190, on right: 183
identRest (250)
    on left: 191 192, on right: 48 73 193
identRestEx (251)
    on left: 193 194, on right: 50 61 175
namedArgList (252)
    on left: 195 196 197, on right: 194 196
namedArg (253)
    on left: 198 199, on right: 195 196
whenList (254)
    on left: 200 201, on right: 173 201
when (255)
    on left: 202, on right: 200 201
else (256)
    on left: 203 204, on right: 173
simExList (257)
    on left: 205 206 207, on right: 94 149 151 191 207
partition (258)
    on left: 208, on right: 182
tableDefinition (259)
    on left: 209, on right: 6
tableDefinition1 (260)
    on left: 210 211 212, on right: 209
tableDefinition2 (261)
    on left: 213 214 215, on right: 209
tableName (262)
    on left: 216 217, on right: 209 427 547 614 666
qualifiedName (263)
    on left: 218, on right: 216 360 415 660 735 737
qualifiedName1 (264)
    on left: 219 220, on right: 218
schemaName (265)
    on left: 221, on right: 220
period (266)
    on left: 222, on right: 220 225 546 597
qualifiedIdentifier (267)
    on left: 223, on right: 218 226
identifier (268)
    on left: 224, on right: 223 241 516 549
qualifiedLocalTableName (269)
    on left: 225, on right: 217
localTableName (270)
    on left: 226, on right: 225
tableElementList (271)
    on left: 227, on right: 209
tableElementList1 (272)
    on left: 228 229, on right: 227 229
leftParen (273)
    on left: 230, on right: 227 256 258 260 262 264 276 278 280 282
    284 286 290 292 302 306 310 320 325 329 340 350 355 357 359 405
    408 429 448 462 474 499 550 553 564 585 623 629 649 671 677 678
    701 710 727 733 734 736 738 752 761 786 807 810 811 837 891 893
tableElement (274)
    on left: 231 232, on right: 227 229
columnDefinition (275)
    on left: 233 234, on right: 231
columnDefinition1 (276)
    on left: 235 236, on right: 234
columnDefinition2 (277)
    on left: 237 238, on right: 234 238
columnDefinition3 (278)
    on left: 239 240, on right: 234
columnName (279)
    on left: 241, on right: 233 431 433 544 601
dataType (280)
    on left: 242 243 244 245 246 247, on right: 233
dataType1 (281)
    on left: 248 249, on right: 242
characterStringType (282)
    on left: 250 251 252 253 254, on right: 242
characterStringType1 (283)
    on left: 255 256, on right: 250
characterStringType2 (284)
    on left: 257 258, on right: 251
characterStringType3 (285)
    on left: 259 260, on right: 252
characterStringType4 (286)
    on left: 261 262, on right: 253
characterStringType5 (287)
    on left: 263 264, on right: 254
length (288)
    on left: 265, on right: 256 258 260 262 264 276 278 280 282 284
    286 290 292
unsignedInteger (289)
    on left: 266, on right: 265 313 315 333 346 351
rightParen (290)
    on left: 267, on right: 227 256 258 260 262 264 276 278 280 282
    284 286 290 292 302 306 310 320 325 329 340 350 355 357 405 408
    429 448 462 474 499 550 553 564 585 623 629 649 671 677 678 701
    710 727 733 734 736 738 752 761 786 807 810 811 837 891 893
characterSetSpecification (291)
    on left: 268, on right: 249
nationalCharacterStringType (292)
    on left: 269 270 271 272 273 274, on right: 243
nationalCharacterStringType1 (293)
    on left: 275 276, on right: 269
nationalCharacterStringType2 (294)
    on left: 277 278, on right: 270
nationalCharacterStringType3 (295)
    on left: 279 280, on right: 271
nationalCharacterStringType4 (296)
    on left: 281 282, on right: 272
nationalCharacterStringType5 (297)
    on left: 283 284, on right: 273
nationalCharacterStringType6 (298)
    on left: 285 286, on right: 274
bitStringType (299)
    on left: 287 288, on right: 244
bitStringType1 (300)
    on left: 289 290, on right: 287
bitStringType2 (301)
    on left: 291 292, on right: 288
numericType (302)
    on left: 293 294, on right: 245
exactNumericType (303)
    on left: 295 296 297 298 299 300, on right: 293
exactNumericType2 (304)
    on left: 301 302, on right: 295
exactNumericType1 (305)
    on left: 303 304, on right: 302
exactNumericType4 (306)
    on left: 305 306, on right: 296
exactNumericType3 (307)
    on left: 307 308, on right: 306
exactNumericType6 (308)
    on left: 309 310, on right: 297
exactNumericType5 (309)
    on left: 311 312, on right: 310
precision (310)
    on left: 313, on right: 302 306 310 320
comma (311)
    on left: 314, on right: 229 304 308 312 359 433 595 613 655 665
    677 679 680 816 839 840
scale (312)
    on left: 315, on right: 304 308 312
approximateNumericType (313)
    on left: 316 317 318, on right: 294
approximateNumericType1 (314)
    on left: 319 320, on right: 316
datetimeType (315)
    on left: 321 322 323, on right: 246
datetimeType1 (316)
    on left: 324 325, on right: 322
datetimeType2 (317)
    on left: 326 327, on right: 322
datetimeType3 (318)
    on left: 328 329, on right: 323
datetimeType4 (319)
    on left: 330 331, on right: 323
timePrecision (320)
    on left: 332, on right: 325 405
timeFractionalSecondsPrecision (321)
    on left: 333, on right: 332 334
timestampPrecision (322)
    on left: 334, on right: 329 408
intervalType (323)
    on left: 335, on right: 247
intervalQualifier (324)
    on left: 336 337, on right: 335 395 786 796
startField (325)
    on left: 338, on right: 336
startField1 (326)
    on left: 339 340, on right: 338
nonsecondDatetimeField (327)
    on left: 341 342 343 344 345, on right: 338 347 352 764
intervalLeadingFieldPrecision (328)
    on left: 346, on right: 340 355 357
endField (329)
    on left: 347 348, on right: 336
endField1 (330)
    on left: 349 350, on right: 348
intervalFractionalSecondsPrecision (331)
    on left: 351, on right: 350 359
singleDatetimeField (332)
    on left: 352 353, on right: 337
singleDatetimeField1 (333)
    on left: 354 355, on right: 352
singleDatetimeField3 (334)
    on left: 356 357, on right: 353
singleDatetimeField2 (335)
    on left: 358 359, on right: 357
domainName (336)
    on left: 360, on right: 234 704
defaultClause (337)
    on left: 361, on right: 236
defaultOption (338)
    on left: 362 363 364 365 366 367 368, on right: 361
literal (339)
    on left: 369 370, on right: 362
signedNumericLiteral (340)
    on left: 371, on right: 369
signedNumericLiteral1 (341)
    on left: 372 373, on right: 371
sign (342)
    on left: 374, on right: 373 397 491 793
unsignedNumericLiteral (343)
    on left: 375, on right: 371 503
generalLiteral (344)
    on left: 376 377 378 379 380 381, on right: 370 504
characterStringLiteral (345)
    on left: 382, on right: 376
nationalCharacterStringLiteral (346)
    on left: 383, on right: 377
bitStringLiteral (347)
    on left: 384, on right: 378
hexStringLiteral (348)
    on left: 385, on right: 379
datetimeLiteral (349)
    on left: 386 387 388, on right: 380
dateLiteral (350)
    on left: 389, on right: 386
dateString (351)
    on left: 390, on right: 389
timeLiteral (352)
    on left: 391, on right: 387
timeString (353)
    on left: 392, on right: 391
timestampLiteral (354)
    on left: 393, on right: 388
timestampString (355)
    on left: 394, on right: 393
intervalLiteral (356)
    on left: 395, on right: 381
intervalLiteral1 (357)
    on left: 396 397, on right: 395
intervalString (358)
    on left: 398, on right: 395
datetimeValueFunction (359)
    on left: 399 400 401, on right: 363 779
currentDateValueFunction (360)
    on left: 402, on right: 399
currentTimeValueFunction (361)
    on left: 403, on right: 400
currentTimeValueFunction1 (362)
    on left: 404 405, on right: 403
currentTimestampValueFunction (363)
    on left: 406, on right: 401
currentTimestampValueFunction1 (364)
    on left: 407 408, on right: 406
columnConstraintDefinition (365)
    on left: 409, on right: 238
columnConstraintDefinition1 (366)
    on left: 410 411, on right: 409
columnConstraintDefinition2 (367)
    on left: 412 413, on right: 409
constraintNameDefinition (368)
    on left: 414, on right: 411 885
constraintName (369)
    on left: 415, on right: 414
columnConstraint (370)
    on left: 416 417 418 419, on right: 409
uniqueSpecification (371)
    on left: 420 421, on right: 417 891
referencesSpecification (372)
    on left: 422, on right: 418 893
referencesSpecification1 (373)
    on left: 423 424, on right: 422
referencesSpecification2 (374)
    on left: 425 426, on right: 422
referencedTableAndColumns (375)
    on left: 427, on right: 422
referencedTableAndColumns1 (376)
    on left: 428 429, on right: 427
referenceColumnList (377)
    on left: 430, on right: 429 894
columnNameList (378)
    on left: 431, on right: 430 624 650 672 892
columnNameList1 (379)
    on left: 432 433, on right: 431 433
matchType (380)
    on left: 434 435, on right: 424
referentialTriggeredAction (381)
    on left: 436 437, on right: 426
referentialTriggeredAction1 (382)
    on left: 438 439, on right: 436
referentialTriggeredAction2 (383)
    on left: 440 441, on right: 437
updateRule (384)
    on left: 442, on right: 436 441
referentialAction (385)
    on left: 443 444 445 446, on right: 442 447
deleteRule (386)
    on left: 447, on right: 437 439
checkConstraintDefinition (387)
    on left: 448, on right: 419 890
searchCondition (388)
    on left: 449 450, on right: 448 450 462 648 651 661 700
booleanTerm (389)
    on left: 451 452, on right: 449 450 452
booleanFactor (390)
    on left: 453, on right: 451 452
booleanFactor1 (391)
    on left: 454 455, on right: 453
booleanTest (392)
    on left: 456, on right: 453
booleanTest2 (393)
    on left: 457 458, on right: 456
booleanTest1 (394)
    on left: 459 460, on right: 458
booleanPrimary (395)
    on left: 461 462, on right: 456
predicate (396)
    on left: 463 464 465 466 467 468 469 470 471, on right: 461
comparisonPredicate (397)
    on left: 472, on right: 463
rowValueConstructor (398)
    on left: 473 474 475, on right: 472 663 665 830 833 852 859 866
    867
rowValueConstructorElement (399)
    on left: 476 477 478, on right: 473 814 816
valueExpression (400)
    on left: 479 480 481 482, on right: 476 499 553 598 677 678 679
    680 688 690 693 702 838 839 840
numericValueExpression (401)
    on left: 483 484 485, on right: 479 484 485 730 731
term (402)
    on left: 486 487 488, on right: 483 484 485 487 488 790
factor (403)
    on left: 489, on right: 486 487 488 788 789
factor1 (404)
    on left: 490 491, on right: 489
numericPrimary (405)
    on left: 492 493, on right: 489
valueExpressionPrimary (406)
    on left: 494 495 496 497 498 499 500, on right: 492 718 759 778
    794
unsignedValueSpecification (407)
    on left: 501 502, on right: 494
unsignedLiteral (408)
    on left: 503 504, on right: 501
generalValueSpecification (409)
    on left: 505 506 507 508 509 510 511 512, on right: 502
parameterSpecification (410)
    on left: 513, on right: 505
parameterSpecification1 (411)
    on left: 514 515, on right: 513
parameterName (412)
    on left: 516, on right: 513 518
colon (413)
    on left: 517, on right: 516 526
indicatorParameter (414)
    on left: 518, on right: 515
indicatorParameter1 (415)
    on left: 519 520, on right: 518
dynamicParameterSpecification (416)
    on left: 521, on right: 506
questionMark (417)
    on left: 522, on right: 521
variableSpecification (418)
    on left: 523, on right: 507
variableSpecification1 (419)
    on left: 524 525, on right: 523
embeddedVariableName (420)
    on left: 526, on right: 523 541
hostIdentifier (421)
    on left: 527 528 529 530 531 532 533, on right: 526
AdaHostIdentifier (422)
    on left: 534, on right: 527
CHostIdentifier (423)
    on left: 535, on right: 528
CobolHostIdentifier (424)
    on left: 536, on right: 529
FortranHostIdentifier (425)
    on left: 537, on right: 530
MUMPSHostIdentifier (426)
    on left: 538, on right: 531
PascalHostIdentifier (427)
    on left: 539, on right: 532
PLIHostIdentifier (428)
    on left: 540, on right: 533
indicatorVariable (429)
    on left: 541, on right: 525
indicatorVariable1 (430)
    on left: 542 543, on right: 541
columnReference (431)
    on left: 544, on right: 495 656
columnReference1 (432)
    on left: 545 546, on right: 544
qualifier (433)
    on left: 547 548, on right: 546 597
correlationName (434)
    on left: 549, on right: 548 619
setFunctionSpecification (435)
    on left: 550 551, on right: 496
asterisk (436)
    on left: 552, on right: 487 550 592 597 788 790
generalSetFunction (437)
    on left: 553, on right: 551
generalSetFunction1 (438)
    on left: 554 555, on right: 553
setFunctionType (439)
    on left: 556 557 558 559 560, on right: 553
setQuantifier (440)
    on left: 561 562, on right: 555 591
scalarSubquery (441)
    on left: 563, on right: 497
subquery (442)
    on left: 564, on right: 563 626 817
queryExpression (443)
    on left: 565 566, on right: 564 568 569
nonjoinQueryExpression (444)
    on left: 567 568 569, on right: 565 585
nonjoinQueryExpression1 (445)
    on left: 570 571, on right: 568
nonjoinQueryExpression2 (446)
    on left: 572 573, on right: 568
nonjoinQueryExpression3 (447)
    on left: 574 575, on right: 569
nonjoinQueryExpression4 (448)
    on left: 576 577, on right: 569
nonjoinQueryTerm (449)
    on left: 578 579, on right: 567 667
nonjoinQueryTerm1 (450)
    on left: 580 581, on right: 579
nonjoinQueryTerm2 (451)
    on left: 582 583, on right: 579
nonjoinQueryPrimary (452)
    on left: 584 585, on right: 578 673
simpleTable (453)
    on left: 586 587 588, on right: 584
querySpecification (454)
    on left: 589, on right: 586
querySpecification1 (455)
    on left: 590 591, on right: 589
selectList (456)
    on left: 592 593, on right: 589
selectList1 (457)
    on left: 594 595, on right: 593 595
selectSublist (458)
    on left: 596 597, on right: 593 595
derivedColumn (459)
    on left: 598, on right: 596
derivedColumn1 (460)
    on left: 599 600, on right: 598
asClause (461)
    on left: 601, on right: 600
asClause1 (462)
    on left: 602 603, on right: 601
tableExpression (463)
    on left: 604, on right: 589
tableExpression1 (464)
    on left: 605 606, on right: 604
tableExpression2 (465)
    on left: 607 608, on right: 604
tableExpression3 (466)
    on left: 609 610, on right: 604
fromClause (467)
    on left: 611, on right: 604
fromClause1 (468)
    on left: 612 613, on right: 611 613
tableReference (469)
    on left: 614 615 616, on right: 611 613 630 631
tableReference1 (470)
    on left: 617 618, on right: 614
correlationSpecification (471)
    on left: 619, on right: 615 618
correlationSpecification1 (472)
    on left: 620 621, on right: 619
correlationSpecification2 (473)
    on left: 622 623, on right: 619
derivedColumnList (474)
    on left: 624, on right: 623
derivedTable (475)
    on left: 625, on right: 615
tableSubquery (476)
    on left: 626, on right: 625 836 852 858 859
joinedTable (477)
    on left: 627 628 629, on right: 566 616 629 668 674
crossJoin (478)
    on left: 630, on right: 627
qualifiedJoin (479)
    on left: 631, on right: 628
qualifiedJoin1 (480)
    on left: 632 633, on right: 631
qualifiedJoin2 (481)
    on left: 634 635, on right: 631
qualifiedJoin3 (482)
    on left: 636 637, on right: 631
joinType (483)
    on left: 638 639 640, on right: 635
joinType1 (484)
    on left: 641 642, on right: 639
outerJoinType (485)
    on left: 643 644 645, on right: 639
joinSpecification (486)
    on left: 646 647, on right: 637
joinCondition (487)
    on left: 648, on right: 646
namedColumnsJoin (488)
    on left: 649, on right: 647
joinColumnList (489)
    on left: 650, on right: 649
whereClause (490)
    on left: 651, on right: 606
groupByClause (491)
    on left: 652, on right: 608
groupingColumnReferenceList (492)
    on left: 653, on right: 652
groupingColumnReferenceList1 (493)
    on left: 654 655, on right: 653 655
groupingColumnReference (494)
    on left: 656, on right: 653 655
groupingColumnReference1 (495)
    on left: 657 658, on right: 656
collateClause (496)
    on left: 659, on right: 240 658 717
collationName (497)
    on left: 660, on right: 659
havingClause (498)
    on left: 661, on right: 610
tableValueConstructor (499)
    on left: 662, on right: 587
tableValueConstructorList (500)
    on left: 663, on right: 662
tableValueConstructorList1 (501)
    on left: 664 665, on right: 663 665
explicitTable (502)
    on left: 666, on right: 588
queryTerm (503)
    on left: 667 668, on right: 568 569 579
correspondingSpec (504)
    on left: 669, on right: 573 577 583
correspondingSpec1 (505)
    on left: 670 671, on right: 669
correspondingColumnList (506)
    on left: 672, on right: 671
queryPrimary (507)
    on left: 673 674, on right: 579
caseExpression (508)
    on left: 675 676, on right: 498
caseAbbreviation (509)
    on left: 677 678, on right: 675
caseAbbreviation1 (510)
    on left: 679 680, on right: 678 680
caseSpecification (511)
    on left: 681 682, on right: 676
simpleCase (512)
    on left: 683, on right: 681
simpleCase1 (513)
    on left: 684 685, on right: 683 685
simpleCase2 (514)
    on left: 686 687, on right: 683
caseOperand (515)
    on left: 688, on right: 683
simpleWhenClause (516)
    on left: 689, on right: 684 685
whenOperand (517)
    on left: 690, on right: 689
result (518)
    on left: 691 692, on right: 689 694 700
resultExpression (519)
    on left: 693, on right: 691
elseClause (520)
    on left: 694, on right: 687 699
searchedCase (521)
    on left: 695, on right: 682
searchedCase1 (522)
    on left: 696 697, on right: 695 697
searchedCase2 (523)
    on left: 698 699, on right: 695
searchedWhenClause (524)
    on left: 700, on right: 696 697
castSpecification (525)
    on left: 701, on right: 500
castOperand (526)
    on left: 702 703, on right: 701
castTarget (527)
    on left: 704 705, on right: 701
typeName (528)
    on left: 706, on right: 705
numericValueFunction (529)
    on left: 707 708 709, on right: 493
positionExpression (530)
    on left: 710, on right: 707
characterValueExpression (531)
    on left: 711 712, on right: 710 713 727 733 734 736 749 750 808
    846 847 848
concatenation (532)
    on left: 713, on right: 711
concatenationOperator (533)
    on left: 714, on right: 713 757
characterFactor (534)
    on left: 715, on right: 712 713
characterFactor1 (535)
    on left: 716 717, on right: 715
characterPrimary (536)
    on left: 718 719, on right: 715
stringValueFunction (537)
    on left: 720 721, on right: 719 760
characterValueFunction (538)
    on left: 722 723 724 725 726, on right: 720
characterSubstringFunction (539)
    on left: 727, on right: 722
characterSubstringFunction1 (540)
    on left: 728 729, on right: 727
startPosition (541)
    on left: 730, on right: 727 752
stringLength (542)
    on left: 731, on right: 729 754
fold (543)
    on left: 732 733, on right: 723
formofuseConversion (544)
    on left: 734, on right: 724
formofuseConversionName (545)
    on left: 735, on right: 734
characterTranslation (546)
    on left: 736, on right: 725
translationName (547)
    on left: 737, on right: 736
trimFunction (548)
    on left: 738, on right: 726
trimOperands (549)
    on left: 739, on right: 738
trimOperands3 (550)
    on left: 740 741, on right: 739
trimOperands1 (551)
    on left: 742 743, on right: 741
trimOperands2 (552)
    on left: 744 745, on right: 741
trimSpecification (553)
    on left: 746 747 748, on right: 743
trimCharacter (554)
    on left: 749, on right: 745
trimSource (555)
    on left: 750, on right: 739
bitValueFunction (556)
    on left: 751, on right: 721
bitSubstringFunction (557)
    on left: 752, on right: 751
bitSubstringFunction1 (558)
    on left: 753 754, on right: 752
bitValueExpression (559)
    on left: 755 756, on right: 752 757 809
bitConcatenation (560)
    on left: 757, on right: 755
bitFactor (561)
    on left: 758, on right: 756 757
bitPrimary (562)
    on left: 759 760, on right: 758
extractExpression (563)
    on left: 761, on right: 708
extractField (564)
    on left: 762 763, on right: 761
datetimeField (565)
    on left: 764 765, on right: 762
timeZoneField (566)
    on left: 766 767, on right: 763
extractSource (567)
    on left: 768 769, on right: 761
datetimeValueExpression (568)
    on left: 770 771 772 773, on right: 481 768 772 773 786
datetimeTerm (569)
    on left: 774, on right: 770 771 786
datetimeFactor (570)
    on left: 775, on right: 774
datetimeFactor1 (571)
    on left: 776 777, on right: 775
datetimePrimary (572)
    on left: 778 779, on right: 775
timeZone (573)
    on left: 780, on right: 777
timeZoneSpecifier (574)
    on left: 781 782, on right: 780
intervalValueExpression (575)
    on left: 783 784 785 786, on right: 482 769 771 782 799
intervalTerm (576)
    on left: 787 788 789 790, on right: 772 773 783 797 801
intervalFactor (577)
    on left: 791, on right: 787 790
intervalFactor1 (578)
    on left: 792 793, on right: 791
intervalPrimary (579)
    on left: 794, on right: 791
intervalPrimary1 (580)
    on left: 795 796, on right: 794
intervalTerm2 (581)
    on left: 797, on right: 788 789
solidus (582)
    on left: 798, on right: 488 789
intervalValueExpression1 (583)
    on left: 799, on right: 784 785
plusSign (584)
    on left: 800, on right: 484 771 772 784
intervalTerm1 (585)
    on left: 801, on right: 784 785
minusSign (586)
    on left: 802, on right: 485 773 785 786
lengthExpression (587)
    on left: 803 804 805, on right: 709
charLengthExpression (588)
    on left: 806 807, on right: 803
stringValueExpression (589)
    on left: 808 809, on right: 480 807 810 811
octetLengthExpression (590)
    on left: 810, on right: 804
bitLengthExpression (591)
    on left: 811, on right: 805
nullSpecification (592)
    on left: 812, on right: 477
defaultSpecification (593)
    on left: 813, on right: 478
rowValueConstructorList (594)
    on left: 814, on right: 474
rowValueConstructorList1 (595)
    on left: 815 816, on right: 814 816
rowSubquery (596)
    on left: 817, on right: 475
compOp (597)
    on left: 818 819 820 821 822 823, on right: 472 852
equalsOperator (598)
    on left: 824, on right: 818
notEqualsOperator (599)
    on left: 825, on right: 819
lessThanOperator (600)
    on left: 826, on right: 820
greaterThanOperator (601)
    on left: 827, on right: 821
lessThanOrEqualsOperator (602)
    on left: 828, on right: 822
greaterThanOrEqualsOperator (603)
    on left: 829, on right: 823
betweenPredicate (604)
    on left: 830, on right: 464
betweenPredicate1 (605)
    on left: 831 832, on right: 830
inPredicate (606)
    on left: 833, on right: 465
inPredicate1 (607)
    on left: 834 835, on right: 833
inPredicateValue (608)
    on left: 836 837, on right: 833
inValueList (609)
    on left: 838, on right: 837
inValueList1 (610)
    on left: 839 840, on right: 838 840
likePredicate (611)
    on left: 841, on right: 466
likePredicate1 (612)
    on left: 842 843, on right: 841
likePredicate2 (613)
    on left: 844 845, on right: 841
matchValue (614)
    on left: 846, on right: 841
pattern (615)
    on left: 847, on right: 841
escapeCharacter (616)
    on left: 848, on right: 845
nullPredicate (617)
    on left: 849, on right: 467
nullPredicate1 (618)
    on left: 850 851, on right: 849
quantifiedComparisonPredicate (619)
    on left: 852, on right: 468
quantifier (620)
    on left: 853 854, on right: 852
all (621)
    on left: 855, on right: 853
some (622)
    on left: 856 857, on right: 854
existsPredicate (623)
    on left: 858, on right: 469
matchPredicate (624)
    on left: 859, on right: 470
matchPredicate1 (625)
    on left: 860 861, on right: 859
matchPredicate2 (626)
    on left: 862 863 864, on right: 859
overlapsPredicate (627)
    on left: 865, on right: 471
rowValueConstructor1 (628)
    on left: 866, on right: 865
rowValueConstructor2 (629)
    on left: 867, on right: 865
truthValue (630)
    on left: 868 869 870, on right: 458
constraintAttributes (631)
    on left: 871 872, on right: 413
constraintAttributes2 (632)
    on left: 873 874, on right: 871
constraintAttributes1 (633)
    on left: 875 876, on right: 874
constraintAttributes3 (634)
    on left: 877 878, on right: 872
constraintAttributes4 (635)
    on left: 879 880, on right: 872
constraintCheckTime (636)
    on left: 881 882, on right: 871 880 887
tableConstraintDefinition (637)
    on left: 883, on right: 232
tableConstraintDefinition1 (638)
    on left: 884 885, on right: 883
tableConstraintDefinition2 (639)
    on left: 886 887, on right: 883
tableConstraint (640)
    on left: 888 889 890, on right: 883
uniqueConstraintDefinition (641)
    on left: 891, on right: 888
uniqueColumnList (642)
    on left: 892, on right: 891
referentialConstraintDefinition (643)
    on left: 893, on right: 889
referencingColumns (644)
    on left: 894, on right: 893


state 0

    0 $accept: . query $end
    1 query: . bracketedSelect
    2      | . delete
    3      | . insert
    4      | . update
    5      | . COMMIT
    6      | . tableDefinition
    7      | . beginEndBlock
    8      | . declareBeginEndBlock
    9      | . callStatement
   42 update: . UPDATE alias SET assignList where
   47 delete: . DELETE optFrom alias where
   48 callStatement: . '{' CALL ident identRest '}'
   49 declareBeginEndBlock: . DECLARE declarationList beginEndBlock
   57 beginEndBlock: . BEGIN plSqlStatementList END ';'
   72 insert: . INSERT INTO alias optIdList insertRest
   79 bracketedSelect: . select
   80                | . '(' select ')'
   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList
  209 tableDefinition: . CREATE tableDefinition1 TABLE tableName tableElementList tableDefinition2

    DECLARE  shift, and go to state 1
    SELECT   shift, and go to state 2
    DELETE   shift, and go to state 3
    INSERT   shift, and go to state 4
    UPDATE   shift, and go to state 5
    COMMIT   shift, and go to state 6
    BEGIN    shift, and go to state 7
    CREATE   shift, and go to state 8
    '('      shift, and go to state 9
    '{'      shift, and go to state 10

    query                 go to state 11
    update                go to state 12
    delete                go to state 13
    callStatement         go to state 14
    declareBeginEndBlock  go to state 15
    beginEndBlock         go to state 16
    insert                go to state 17
    bracketedSelect       go to state 18
    select                go to state 19
    basicSelect           go to state 20
    tableDefinition       go to state 21


state 1

   49 declareBeginEndBlock: DECLARE . declarationList beginEndBlock
   50 declaration: . ID ident identRestEx declInitializer ';'
   51            | . ID identEx declInitializer ';'
   52 declarationList: . declaration
   53                | . declaration declarationList
   54                | .  [BEGIN]

    ID  shift, and go to state 22

    $default  reduce using rule 54 (declarationList)

    declaration      go to state 23
    declarationList  go to state 24


state 2

   83 basicSelect: SELECT . optDist whatToSelect FROM tableList
  111 optDist: . DISTINCT
  112        | .  [EXISTS, CASE, CAST, DESC, NULL, ASC, NOT, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, STRING_SQ, NUMBER, ID, '-', '*', '(', '?']

    DISTINCT  shift, and go to state 25

    $default  reduce using rule 112 (optDist)

    optDist  go to state 26


state 3

   47 delete: DELETE . optFrom alias where
   70 optFrom: . FROM
   71        | .  [TABLE, DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']

    FROM  shift, and go to state 27

    $default  reduce using rule 71 (optFrom)

    optFrom  go to state 28


state 4

   72 insert: INSERT . INTO alias optIdList insertRest

    INTO  shift, and go to state 29


state 5

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   42 update: UPDATE . alias SET assignList where
  132 alias: . tableExpr
  133      | . tableExpr id
  134 tableExpr: . ident
  135          | . TABLE '(' simpleExpr ')'
  136          | . '(' select ')'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    TABLE             shift, and go to state 30
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 63

    id         go to state 64
    alias      go to state 65
    tableExpr  go to state 66
    ident      go to state 67


state 6

    5 query: COMMIT .

    $default  reduce using rule 5 (query)


state 7

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   42 update: . UPDATE alias SET assignList where
   47 delete: . DELETE optFrom alias where
   57 beginEndBlock: BEGIN . plSqlStatementList END ';'
   58 plSqlStatementList: . plSqlStatement
   59                   | . plSqlStatement plSqlStatementList
   60 plSqlStatement: . assignTarget COLONEQUALS simpleExpr ';'
   61               | . ident identRestEx ';'
   62               | . selectInto ';'
   63               | . delete ';'
   64               | . update ';'
   65               | . insert ';'
   66               | . EXECUTE STRING_SQ ';'
   67               | . EXECUTE IMMEDIATE STRING_SQ ';'
   68 assignTarget: . '?'
   69             | . ident
   72 insert: . INSERT INTO alias optIdList insertRest
   84 selectInto: . basicSelectInto where byClauses
   85 basicSelectInto: . SELECT optDist whatToSelect INTO intoList FROM tableList
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    EXECUTE           shift, and go to state 68
    SELECT            shift, and go to state 69
    DELETE            shift, and go to state 3
    INSERT            shift, and go to state 4
    UPDATE            shift, and go to state 5
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '?'               shift, and go to state 70

    id                  go to state 64
    update              go to state 71
    delete              go to state 72
    plSqlStatementList  go to state 73
    plSqlStatement      go to state 74
    assignTarget        go to state 75
    insert              go to state 76
    selectInto          go to state 77
    basicSelectInto     go to state 78
    ident               go to state 79


state 8

  209 tableDefinition: CREATE . tableDefinition1 TABLE tableName tableElementList tableDefinition2
  210 tableDefinition1: .  [TABLE]
  211                 | . GLOBAL
  212                 | . LOCAL TEMPORARY

    LOCAL   shift, and go to state 80
    GLOBAL  shift, and go to state 81

    $default  reduce using rule 210 (tableDefinition1)

    tableDefinition1  go to state 82


state 9

   80 bracketedSelect: '(' . select ')'
   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList

    SELECT  shift, and go to state 2

    select       go to state 83
    basicSelect  go to state 20


state 10

   48 callStatement: '{' . CALL ident identRest '}'

    CALL  shift, and go to state 84


state 11

    0 $accept: query . $end

    $end  shift, and go to state 85


state 12

    4 query: update .

    $default  reduce using rule 4 (query)


state 13

    2 query: delete .

    $default  reduce using rule 2 (query)


state 14

    9 query: callStatement .

    $default  reduce using rule 9 (query)


state 15

    8 query: declareBeginEndBlock .

    $default  reduce using rule 8 (query)


state 16

    7 query: beginEndBlock .

    $default  reduce using rule 7 (query)


state 17

    3 query: insert .

    $default  reduce using rule 3 (query)


state 18

    1 query: bracketedSelect .

    $default  reduce using rule 1 (query)


state 19

   79 bracketedSelect: select .  [$end]
   82 select: select . UNION select

    UNION  shift, and go to state 86

    $default  reduce using rule 79 (bracketedSelect)


state 20

   81 select: basicSelect . where byClauses forUpdate
   90 where: . WHERE whereCond
   91      | .  [$end, ORDER, GROUP, UNION, FOR, ')', ';']

    WHERE  shift, and go to state 87

    $default  reduce using rule 91 (where)

    where  go to state 88


state 21

    6 query: tableDefinition .

    $default  reduce using rule 6 (query)


state 22

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   50 declaration: ID . ident identRestEx declInitializer ';'
   51            | ID . identEx declInitializer ';'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  140 identEx: . ident
  141        | . ident '%' id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id       go to state 64
    ident    go to state 89
    identEx  go to state 90


state 23

   50 declaration: . ID ident identRestEx declInitializer ';'
   51            | . ID identEx declInitializer ';'
   52 declarationList: . declaration
   52                | declaration .  [BEGIN]
   53                | . declaration declarationList
   53                | declaration . declarationList
   54                | .  [BEGIN]

    ID  shift, and go to state 22

    BEGIN     reduce using rule 52 (declarationList)
    BEGIN     [reduce using rule 54 (declarationList)]
    $default  reduce using rule 52 (declarationList)

    declaration      go to state 23
    declarationList  go to state 91


state 24

   49 declareBeginEndBlock: DECLARE declarationList . beginEndBlock
   57 beginEndBlock: . BEGIN plSqlStatementList END ';'

    BEGIN  shift, and go to state 7

    beginEndBlock  go to state 92


state 25

  111 optDist: DISTINCT .

    $default  reduce using rule 111 (optDist)


state 26

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   83 basicSelect: SELECT optDist . whatToSelect FROM tableList
  113 whatToSelect: . selectExpressionList
  114 selectExpression: . expression
  115                 | . selectExpression AS id
  116                 | . selectExpression id
  117 expression: . condition
  118           | . simpleExpr
  119 selectExpressionList: . selectExpression
  120                     | . selectExpressionList ',' selectExpression
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id                    go to state 104
    whatToSelect          go to state 105
    selectExpression      go to state 106
    expression            go to state 107
    selectExpressionList  go to state 108
    ident                 go to state 109
    condition             go to state 110
    comparison            go to state 111
    simpleExpr            go to state 112


state 27

   70 optFrom: FROM .

    $default  reduce using rule 70 (optFrom)


state 28

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   47 delete: DELETE optFrom . alias where
  132 alias: . tableExpr
  133      | . tableExpr id
  134 tableExpr: . ident
  135          | . TABLE '(' simpleExpr ')'
  136          | . '(' select ')'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    TABLE             shift, and go to state 30
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 63

    id         go to state 64
    alias      go to state 113
    tableExpr  go to state 66
    ident      go to state 67


state 29

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   72 insert: INSERT INTO . alias optIdList insertRest
  132 alias: . tableExpr
  133      | . tableExpr id
  134 tableExpr: . ident
  135          | . TABLE '(' simpleExpr ')'
  136          | . '(' select ')'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    TABLE             shift, and go to state 30
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 63

    id         go to state 64
    alias      go to state 114
    tableExpr  go to state 66
    ident      go to state 67


state 30

  135 tableExpr: TABLE . '(' simpleExpr ')'

    '('  shift, and go to state 115


state 31

   41 id: DESC .

    $default  reduce using rule 41 (id)


state 32

   12 id: ASC .

    $default  reduce using rule 12 (id)


state 33

   11 id: ACTION .

    $default  reduce using rule 11 (id)


state 34

   26 id: MIN .

    $default  reduce using rule 26 (id)


state 35

   35 id: OCTET_LENGTH .

    $default  reduce using rule 35 (id)


state 36

   34 id: DEFERRED .

    $default  reduce using rule 34 (id)


state 37

   24 id: DEFERRABLE .

    $default  reduce using rule 24 (id)


state 38

   22 id: ZONE .

    $default  reduce using rule 22 (id)


state 39

   27 id: COUNT .

    $default  reduce using rule 27 (id)


state 40

   32 id: NULLIF .

    $default  reduce using rule 32 (id)


state 41

   19 id: SUM .

    $default  reduce using rule 19 (id)


state 42

   14 id: KEY .

    $default  reduce using rule 14 (id)


state 43

   23 id: AVG .

    $default  reduce using rule 23 (id)


state 44

   38 id: INITIALLY .

    $default  reduce using rule 38 (id)


state 45

   31 id: UPPER .

    $default  reduce using rule 31 (id)


state 46

   36 id: EXTRACT .

    $default  reduce using rule 36 (id)


state 47

   20 id: CHAR_LENGTH .

    $default  reduce using rule 20 (id)


state 48

   40 id: SUBSTRING .

    $default  reduce using rule 40 (id)


state 49

   37 id: PARTIAL .

    $default  reduce using rule 37 (id)


state 50

   33 id: MAX .

    $default  reduce using rule 33 (id)


state 51

   18 id: LOWER .

    $default  reduce using rule 18 (id)


state 52

   28 id: CASCADE .

    $default  reduce using rule 28 (id)


state 53

   30 id: TEMPORARY .

    $default  reduce using rule 30 (id)


state 54

   25 id: CHARACTER_LENGTH .

    $default  reduce using rule 25 (id)


state 55

   39 id: CONVERT .

    $default  reduce using rule 39 (id)


state 56

   16 id: TRANSLATE .

    $default  reduce using rule 16 (id)


state 57

   13 id: PRESERVE .

    $default  reduce using rule 13 (id)


state 58

   21 id: POSITION .

    $default  reduce using rule 21 (id)


state 59

   29 id: COALESCE .

    $default  reduce using rule 29 (id)


state 60

   17 id: TRIM .

    $default  reduce using rule 17 (id)


state 61

   15 id: NUMBER .

    $default  reduce using rule 15 (id)


state 62

   10 id: ID .

    $default  reduce using rule 10 (id)


state 63

   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList
  136 tableExpr: '(' . select ')'

    SELECT  shift, and go to state 2

    select       go to state 116
    basicSelect  go to state 20


state 64

  137 ident: id .  [$end, VALUES, SELECT, WHERE, ORDER, GROUP, RIGHT, INNER, UNION, DESC, JOIN, LEFT, FULL, SET, ASC, FOR, ON, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, COLONEQUALS, NUMBER, ID, '=', ',', '(', ')', '}', ';', '%']
  138      | id . '.' id
  139      | id . '.' id '.' id

    '.'  shift, and go to state 117

    $default  reduce using rule 137 (ident)


state 65

   42 update: UPDATE alias . SET assignList where

    SET  shift, and go to state 118


state 66

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  132 alias: tableExpr .  [$end, VALUES, SELECT, WHERE, ORDER, GROUP, RIGHT, INNER, UNION, JOIN, LEFT, FULL, SET, FOR, ON, ',', '(', ')', ';']
  133      | tableExpr . id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    $default  reduce using rule 132 (alias)

    id  go to state 119


state 67

  134 tableExpr: ident .

    $default  reduce using rule 134 (tableExpr)


state 68

   66 plSqlStatement: EXECUTE . STRING_SQ ';'
   67               | EXECUTE . IMMEDIATE STRING_SQ ';'

    IMMEDIATE  shift, and go to state 120
    STRING_SQ  shift, and go to state 121


state 69

   85 basicSelectInto: SELECT . optDist whatToSelect INTO intoList FROM tableList
  111 optDist: . DISTINCT
  112        | .  [EXISTS, CASE, CAST, DESC, NULL, ASC, NOT, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, STRING_SQ, NUMBER, ID, '-', '*', '(', '?']

    DISTINCT  shift, and go to state 25

    $default  reduce using rule 112 (optDist)

    optDist  go to state 122


state 70

   68 assignTarget: '?' .

    $default  reduce using rule 68 (assignTarget)


state 71

   64 plSqlStatement: update . ';'

    ';'  shift, and go to state 123


state 72

   63 plSqlStatement: delete . ';'

    ';'  shift, and go to state 124


state 73

   57 beginEndBlock: BEGIN plSqlStatementList . END ';'

    END  shift, and go to state 125


state 74

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   42 update: . UPDATE alias SET assignList where
   47 delete: . DELETE optFrom alias where
   58 plSqlStatementList: . plSqlStatement
   58                   | plSqlStatement .  [END]
   59                   | . plSqlStatement plSqlStatementList
   59                   | plSqlStatement . plSqlStatementList
   60 plSqlStatement: . assignTarget COLONEQUALS simpleExpr ';'
   61               | . ident identRestEx ';'
   62               | . selectInto ';'
   63               | . delete ';'
   64               | . update ';'
   65               | . insert ';'
   66               | . EXECUTE STRING_SQ ';'
   67               | . EXECUTE IMMEDIATE STRING_SQ ';'
   68 assignTarget: . '?'
   69             | . ident
   72 insert: . INSERT INTO alias optIdList insertRest
   84 selectInto: . basicSelectInto where byClauses
   85 basicSelectInto: . SELECT optDist whatToSelect INTO intoList FROM tableList
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    EXECUTE           shift, and go to state 68
    SELECT            shift, and go to state 69
    DELETE            shift, and go to state 3
    INSERT            shift, and go to state 4
    UPDATE            shift, and go to state 5
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '?'               shift, and go to state 70

    $default  reduce using rule 58 (plSqlStatementList)

    id                  go to state 64
    update              go to state 71
    delete              go to state 72
    plSqlStatementList  go to state 126
    plSqlStatement      go to state 74
    assignTarget        go to state 75
    insert              go to state 76
    selectInto          go to state 77
    basicSelectInto     go to state 78
    ident               go to state 79


state 75

   60 plSqlStatement: assignTarget . COLONEQUALS simpleExpr ';'

    COLONEQUALS  shift, and go to state 127


state 76

   65 plSqlStatement: insert . ';'

    ';'  shift, and go to state 128


state 77

   62 plSqlStatement: selectInto . ';'

    ';'  shift, and go to state 129


state 78

   84 selectInto: basicSelectInto . where byClauses
   90 where: . WHERE whereCond
   91      | .  [ORDER, GROUP, ';']

    WHERE  shift, and go to state 87

    $default  reduce using rule 91 (where)

    where  go to state 130


state 79

   61 plSqlStatement: ident . identRestEx ';'
   69 assignTarget: ident .  [COLONEQUALS]
  191 identRest: . '(' simExList ')'
  192          | .  [';']
  193 identRestEx: . identRest
  194            | . '(' namedArgList ')'

    '('  shift, and go to state 131

    ';'       reduce using rule 192 (identRest)
    $default  reduce using rule 69 (assignTarget)

    identRest    go to state 132
    identRestEx  go to state 133


state 80

  212 tableDefinition1: LOCAL . TEMPORARY

    TEMPORARY  shift, and go to state 134


state 81

  211 tableDefinition1: GLOBAL .

    $default  reduce using rule 211 (tableDefinition1)


state 82

  209 tableDefinition: CREATE tableDefinition1 . TABLE tableName tableElementList tableDefinition2

    TABLE  shift, and go to state 135


state 83

   80 bracketedSelect: '(' select . ')'
   82 select: select . UNION select

    UNION  shift, and go to state 86
    ')'    shift, and go to state 136


state 84

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   48 callStatement: '{' CALL . ident identRest '}'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id     go to state 64
    ident  go to state 137


state 85

    0 $accept: query $end .

    $default  accept


state 86

   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   82       | select UNION . select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList

    SELECT  shift, and go to state 2

    select       go to state 138
    basicSelect  go to state 20


state 87

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   90 where: WHERE . whereCond
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  142 whereCond: . condition
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    whereCond   go to state 139
    condition   go to state 140
    comparison  go to state 111
    simpleExpr  go to state 141


state 88

   81 select: basicSelect where . byClauses forUpdate
   94 groupBy: . GROUP BY simExList having
   99 orderBy: . ORDER BY directionList
  102 byClauses: . orderBy optGroupBy
  103          | . groupBy optOrderBy
  104          | .  [$end, UNION, FOR, ')', ';']

    ORDER  shift, and go to state 142
    GROUP  shift, and go to state 143

    $default  reduce using rule 104 (byClauses)

    groupBy    go to state 144
    orderBy    go to state 145
    byClauses  go to state 146


state 89

   50 declaration: ID ident . identRestEx declInitializer ';'
  140 identEx: ident .  [COLONEQUALS, ';']
  141        | ident . '%' id
  191 identRest: . '(' simExList ')'
  192          | .  [COLONEQUALS, ';']
  193 identRestEx: . identRest
  194            | . '(' namedArgList ')'

    '('  shift, and go to state 131
    '%'  shift, and go to state 147

    COLONEQUALS  reduce using rule 140 (identEx)
    COLONEQUALS  [reduce using rule 192 (identRest)]
    ';'          reduce using rule 140 (identEx)
    ';'          [reduce using rule 192 (identRest)]
    $default     reduce using rule 140 (identEx)

    identRest    go to state 132
    identRestEx  go to state 148


state 90

   51 declaration: ID identEx . declInitializer ';'
   55 declInitializer: . COLONEQUALS simpleExpr
   56                | .  [';']

    COLONEQUALS  shift, and go to state 149

    $default  reduce using rule 56 (declInitializer)

    declInitializer  go to state 150


state 91

   53 declarationList: declaration declarationList .

    $default  reduce using rule 53 (declarationList)


state 92

   49 declareBeginEndBlock: DECLARE declarationList beginEndBlock .

    $default  reduce using rule 49 (declareBeginEndBlock)


state 93

  155 condition: EXISTS . '(' select ')'

    '('  shift, and go to state 151


state 94

  173 simpleExpr: CASE . whenList else END
  200 whenList: . when
  201         | . when whenList
  202 when: . WHEN condition THEN simpleExpr

    WHEN  shift, and go to state 152

    whenList  go to state 153
    when      go to state 154


state 95

  183 simpleExpr: CAST . '(' simpleExpr AS id optSize ')'

    '('  shift, and go to state 155


state 96

  188 simpleExpr: NULL .

    $default  reduce using rule 188 (simpleExpr)


state 97

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  146          | NOT . condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    condition   go to state 156
    comparison  go to state 111
    simpleExpr  go to state 141


state 98

  174 simpleExpr: STRING_SQ .

    $default  reduce using rule 174 (simpleExpr)


state 99

   15 id: NUMBER .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, OUTERJ, NE, LE, GE, CONCAT, NUMBER, ID, '=', '>', '<', '-', '+', '/', '*', ',', '(', ')', ';', '.']
  170 simpleExpr: NUMBER .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, OUTERJ, NE, LE, GE, CONCAT, NUMBER, ID, '=', '>', '<', '-', '+', '/', '*', ',', ')', ';']

    $end              reduce using rule 15 (id)
    $end              [reduce using rule 170 (simpleExpr)]
    BETWEEN           reduce using rule 15 (id)
    BETWEEN           [reduce using rule 170 (simpleExpr)]
    ESCAPE            reduce using rule 15 (id)
    ESCAPE            [reduce using rule 170 (simpleExpr)]
    OVER              reduce using rule 15 (id)
    OVER              [reduce using rule 170 (simpleExpr)]
    HAVING            reduce using rule 15 (id)
    HAVING            [reduce using rule 170 (simpleExpr)]
    WHERE             reduce using rule 15 (id)
    WHERE             [reduce using rule 170 (simpleExpr)]
    ORDER             reduce using rule 15 (id)
    ORDER             [reduce using rule 170 (simpleExpr)]
    OR                reduce using rule 15 (id)
    OR                [reduce using rule 170 (simpleExpr)]
    GROUP             reduce using rule 15 (id)
    GROUP             [reduce using rule 170 (simpleExpr)]
    RIGHT             reduce using rule 15 (id)
    RIGHT             [reduce using rule 170 (simpleExpr)]
    INNER             reduce using rule 15 (id)
    INNER             [reduce using rule 170 (simpleExpr)]
    UNION             reduce using rule 15 (id)
    UNION             [reduce using rule 170 (simpleExpr)]
    FROM              reduce using rule 15 (id)
    FROM              [reduce using rule 170 (simpleExpr)]
    WHEN              reduce using rule 15 (id)
    WHEN              [reduce using rule 170 (simpleExpr)]
    THEN              reduce using rule 15 (id)
    THEN              [reduce using rule 170 (simpleExpr)]
    ELSE              reduce using rule 15 (id)
    ELSE              [reduce using rule 170 (simpleExpr)]
    DESC              reduce using rule 15 (id)
    DESC              [reduce using rule 170 (simpleExpr)]
    LIKE              reduce using rule 15 (id)
    LIKE              [reduce using rule 170 (simpleExpr)]
    JOIN              reduce using rule 15 (id)
    JOIN              [reduce using rule 170 (simpleExpr)]
    LEFT              reduce using rule 15 (id)
    LEFT              [reduce using rule 170 (simpleExpr)]
    FULL              reduce using rule 15 (id)
    FULL              [reduce using rule 170 (simpleExpr)]
    INTO              reduce using rule 15 (id)
    INTO              [reduce using rule 170 (simpleExpr)]
    AND               reduce using rule 15 (id)
    AND               [reduce using rule 170 (simpleExpr)]
    END               reduce using rule 15 (id)
    END               [reduce using rule 170 (simpleExpr)]
    ASC               reduce using rule 15 (id)
    ASC               [reduce using rule 170 (simpleExpr)]
    XOR               reduce using rule 15 (id)
    XOR               [reduce using rule 170 (simpleExpr)]
    FOR               reduce using rule 15 (id)
    FOR               [reduce using rule 170 (simpleExpr)]
    NOT               reduce using rule 15 (id)
    NOT               [reduce using rule 170 (simpleExpr)]
    AS                reduce using rule 15 (id)
    AS                [reduce using rule 170 (simpleExpr)]
    IN                reduce using rule 15 (id)
    IN                [reduce using rule 170 (simpleExpr)]
    IS                reduce using rule 15 (id)
    IS                [reduce using rule 170 (simpleExpr)]
    ACTION            reduce using rule 15 (id)
    ACTION            [reduce using rule 170 (simpleExpr)]
    MIN               reduce using rule 15 (id)
    MIN               [reduce using rule 170 (simpleExpr)]
    OCTET_LENGTH      reduce using rule 15 (id)
    OCTET_LENGTH      [reduce using rule 170 (simpleExpr)]
    DEFERRED          reduce using rule 15 (id)
    DEFERRED          [reduce using rule 170 (simpleExpr)]
    DEFERRABLE        reduce using rule 15 (id)
    DEFERRABLE        [reduce using rule 170 (simpleExpr)]
    ZONE              reduce using rule 15 (id)
    ZONE              [reduce using rule 170 (simpleExpr)]
    COUNT             reduce using rule 15 (id)
    COUNT             [reduce using rule 170 (simpleExpr)]
    NULLIF            reduce using rule 15 (id)
    NULLIF            [reduce using rule 170 (simpleExpr)]
    SUM               reduce using rule 15 (id)
    SUM               [reduce using rule 170 (simpleExpr)]
    KEY               reduce using rule 15 (id)
    KEY               [reduce using rule 170 (simpleExpr)]
    AVG               reduce using rule 15 (id)
    AVG               [reduce using rule 170 (simpleExpr)]
    INITIALLY         reduce using rule 15 (id)
    INITIALLY         [reduce using rule 170 (simpleExpr)]
    UPPER             reduce using rule 15 (id)
    UPPER             [reduce using rule 170 (simpleExpr)]
    EXTRACT           reduce using rule 15 (id)
    EXTRACT           [reduce using rule 170 (simpleExpr)]
    CHAR_LENGTH       reduce using rule 15 (id)
    CHAR_LENGTH       [reduce using rule 170 (simpleExpr)]
    SUBSTRING         reduce using rule 15 (id)
    SUBSTRING         [reduce using rule 170 (simpleExpr)]
    PARTIAL           reduce using rule 15 (id)
    PARTIAL           [reduce using rule 170 (simpleExpr)]
    MAX               reduce using rule 15 (id)
    MAX               [reduce using rule 170 (simpleExpr)]
    LOWER             reduce using rule 15 (id)
    LOWER             [reduce using rule 170 (simpleExpr)]
    CASCADE           reduce using rule 15 (id)
    CASCADE           [reduce using rule 170 (simpleExpr)]
    TEMPORARY         reduce using rule 15 (id)
    TEMPORARY         [reduce using rule 170 (simpleExpr)]
    CHARACTER_LENGTH  reduce using rule 15 (id)
    CHARACTER_LENGTH  [reduce using rule 170 (simpleExpr)]
    CONVERT           reduce using rule 15 (id)
    CONVERT           [reduce using rule 170 (simpleExpr)]
    TRANSLATE         reduce using rule 15 (id)
    TRANSLATE         [reduce using rule 170 (simpleExpr)]
    PRESERVE          reduce using rule 15 (id)
    PRESERVE          [reduce using rule 170 (simpleExpr)]
    POSITION          reduce using rule 15 (id)
    POSITION          [reduce using rule 170 (simpleExpr)]
    COALESCE          reduce using rule 15 (id)
    COALESCE          [reduce using rule 170 (simpleExpr)]
    TRIM              reduce using rule 15 (id)
    TRIM              [reduce using rule 170 (simpleExpr)]
    OUTERJ            reduce using rule 15 (id)
    OUTERJ            [reduce using rule 170 (simpleExpr)]
    NE                reduce using rule 15 (id)
    NE                [reduce using rule 170 (simpleExpr)]
    LE                reduce using rule 15 (id)
    LE                [reduce using rule 170 (simpleExpr)]
    GE                reduce using rule 15 (id)
    GE                [reduce using rule 170 (simpleExpr)]
    CONCAT            reduce using rule 15 (id)
    CONCAT            [reduce using rule 170 (simpleExpr)]
    NUMBER            reduce using rule 15 (id)
    NUMBER            [reduce using rule 170 (simpleExpr)]
    ID                reduce using rule 15 (id)
    ID                [reduce using rule 170 (simpleExpr)]
    '='               reduce using rule 15 (id)
    '='               [reduce using rule 170 (simpleExpr)]
    '>'               reduce using rule 15 (id)
    '>'               [reduce using rule 170 (simpleExpr)]
    '<'               reduce using rule 15 (id)
    '<'               [reduce using rule 170 (simpleExpr)]
    '-'               reduce using rule 15 (id)
    '-'               [reduce using rule 170 (simpleExpr)]
    '+'               reduce using rule 15 (id)
    '+'               [reduce using rule 170 (simpleExpr)]
    '/'               reduce using rule 15 (id)
    '/'               [reduce using rule 170 (simpleExpr)]
    '*'               reduce using rule 15 (id)
    '*'               [reduce using rule 170 (simpleExpr)]
    ','               reduce using rule 15 (id)
    ','               [reduce using rule 170 (simpleExpr)]
    ')'               reduce using rule 15 (id)
    ')'               [reduce using rule 170 (simpleExpr)]
    ';'               reduce using rule 15 (id)
    ';'               [reduce using rule 170 (simpleExpr)]
    $default          reduce using rule 15 (id)


state 100

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  172           | '-' . simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 158


state 101

  186 simpleExpr: '*' .

    $default  reduce using rule 186 (simpleExpr)


state 102

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  147          | '(' . condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  151          | '(' . idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  152          | '(' . idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  157 idList2: . id ',' id
  158        | . idList2 ',' id
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  176           | '(' . simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  184           | '(' . select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    SELECT            shift, and go to state 2
    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id           go to state 159
    select       go to state 160
    basicSelect  go to state 20
    ident        go to state 109
    condition    go to state 161
    idList2      go to state 162
    comparison   go to state 111
    simpleExpr   go to state 163


state 103

  187 simpleExpr: '?' .

    $default  reduce using rule 187 (simpleExpr)


state 104

  137 ident: id .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, OUTERJ, NE, LE, GE, CONCAT, NUMBER, ID, '=', '>', '<', '-', '+', '/', '*', ',', '(', ')', ';']
  138      | id . '.' id
  139      | id . '.' id '.' id
  185 simpleExpr: id . '.' '*'

    '.'  shift, and go to state 164

    $default  reduce using rule 137 (ident)


state 105

   83 basicSelect: SELECT optDist whatToSelect . FROM tableList

    FROM  shift, and go to state 165


state 106

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  115 selectExpression: selectExpression . AS id
  116                 | selectExpression . id
  119 selectExpressionList: selectExpression .  [FROM, INTO, ',']

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    AS                shift, and go to state 166
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    $default  reduce using rule 119 (selectExpressionList)

    id  go to state 167


state 107

  114 selectExpression: expression .

    $default  reduce using rule 114 (selectExpression)


state 108

  113 whatToSelect: selectExpressionList .  [FROM, INTO]
  120 selectExpressionList: selectExpressionList . ',' selectExpression

    ','  shift, and go to state 168

    $default  reduce using rule 113 (whatToSelect)


state 109

  175 simpleExpr: ident . identRestEx
  191 identRest: . '(' simExList ')'
  192          | .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, OUTERJ, NE, LE, GE, CONCAT, NUMBER, ID, '=', '>', '<', '-', '+', '/', '*', ',', ')', ';']
  193 identRestEx: . identRest
  194            | . '(' namedArgList ')'

    '('  shift, and go to state 131

    $default  reduce using rule 192 (identRest)

    identRest    go to state 132
    identRestEx  go to state 169


state 110

  117 expression: condition .  [FROM, DESC, INTO, ASC, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',']
  143 condition: condition . AND condition
  144          | condition . OR condition
  145          | condition . XOR condition

    OR   shift, and go to state 170
    AND  shift, and go to state 171
    XOR  shift, and go to state 172

    $default  reduce using rule 117 (expression)


state 111

  148 condition: comparison .

    $default  reduce using rule 148 (condition)


state 112

  118 expression: simpleExpr .  [FROM, DESC, INTO, ASC, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',']
  149 condition: simpleExpr . inExpr '(' simExList ')'
  150          | simpleExpr . inExpr '(' select ')'
  153          | simpleExpr . IS optNot NULL
  154          | simpleExpr . optNot LIKE simpleExpr escape
  156          | simpleExpr . optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: simpleExpr . '=' simpleExpr
  160           | simpleExpr . '>' simpleExpr
  161           | simpleExpr . '<' simpleExpr
  162           | simpleExpr . LE simpleExpr
  163           | simpleExpr . NE simpleExpr
  164           | simpleExpr . GE simpleExpr
  167 inExpr: . optNot IN
  168 optNot: . NOT
  169       | .  [BETWEEN, LIKE, IN]
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    NOT     shift, and go to state 174
    IS      shift, and go to state 175
    OUTERJ  shift, and go to state 176
    NE      shift, and go to state 177
    LE      shift, and go to state 178
    GE      shift, and go to state 179
    CONCAT  shift, and go to state 180
    '='     shift, and go to state 181
    '>'     shift, and go to state 182
    '<'     shift, and go to state 183
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    BETWEEN   reduce using rule 169 (optNot)
    LIKE      reduce using rule 169 (optNot)
    IN        reduce using rule 169 (optNot)
    $default  reduce using rule 118 (expression)

    inExpr  go to state 188
    optNot  go to state 189


state 113

   47 delete: DELETE optFrom alias . where
   90 where: . WHERE whereCond
   91      | .  [$end, ';']

    WHERE  shift, and go to state 87

    $default  reduce using rule 91 (where)

    where  go to state 190


state 114

   72 insert: INSERT INTO alias . optIdList insertRest
   75 optIdList: .  [VALUES, SELECT]
   76          | . '(' idList ')'

    '('  shift, and go to state 191

    $default  reduce using rule 75 (optIdList)

    optIdList  go to state 192


state 115

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  135 tableExpr: TABLE '(' . simpleExpr ')'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 193


state 116

   82 select: select . UNION select
  136 tableExpr: '(' select . ')'

    UNION  shift, and go to state 86
    ')'    shift, and go to state 194


state 117

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  138 ident: id '.' . id
  139      | id '.' . id '.' id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id  go to state 195


state 118

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   42 update: UPDATE alias SET . assignList where
   43 assignList: . assign
   44           | . assignList ',' assign
   45 assign: . ident '=' simpleExpr
   46       | . '(' idList ')' '=' simpleExpr
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 196

    id          go to state 64
    assignList  go to state 197
    assign      go to state 198
    ident       go to state 199


state 119

  133 alias: tableExpr id .

    $default  reduce using rule 133 (alias)


state 120

   67 plSqlStatement: EXECUTE IMMEDIATE . STRING_SQ ';'

    STRING_SQ  shift, and go to state 200


state 121

   66 plSqlStatement: EXECUTE STRING_SQ . ';'

    ';'  shift, and go to state 201


state 122

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   85 basicSelectInto: SELECT optDist . whatToSelect INTO intoList FROM tableList
  113 whatToSelect: . selectExpressionList
  114 selectExpression: . expression
  115                 | . selectExpression AS id
  116                 | . selectExpression id
  117 expression: . condition
  118           | . simpleExpr
  119 selectExpressionList: . selectExpression
  120                     | . selectExpressionList ',' selectExpression
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id                    go to state 104
    whatToSelect          go to state 202
    selectExpression      go to state 106
    expression            go to state 107
    selectExpressionList  go to state 108
    ident                 go to state 109
    condition             go to state 110
    comparison            go to state 111
    simpleExpr            go to state 112


state 123

   64 plSqlStatement: update ';' .

    $default  reduce using rule 64 (plSqlStatement)


state 124

   63 plSqlStatement: delete ';' .

    $default  reduce using rule 63 (plSqlStatement)


state 125

   57 beginEndBlock: BEGIN plSqlStatementList END . ';'

    ';'  shift, and go to state 203


state 126

   59 plSqlStatementList: plSqlStatement plSqlStatementList .

    $default  reduce using rule 59 (plSqlStatementList)


state 127

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   60 plSqlStatement: assignTarget COLONEQUALS . simpleExpr ';'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 204


state 128

   65 plSqlStatement: insert ';' .

    $default  reduce using rule 65 (plSqlStatement)


state 129

   62 plSqlStatement: selectInto ';' .

    $default  reduce using rule 62 (plSqlStatement)


state 130

   84 selectInto: basicSelectInto where . byClauses
   94 groupBy: . GROUP BY simExList having
   99 orderBy: . ORDER BY directionList
  102 byClauses: . orderBy optGroupBy
  103          | . groupBy optOrderBy
  104          | .  [';']

    ORDER  shift, and go to state 142
    GROUP  shift, and go to state 143

    $default  reduce using rule 104 (byClauses)

    groupBy    go to state 144
    orderBy    go to state 145
    byClauses  go to state 205


state 131

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  191 identRest: '(' . simExList ')'
  194 identRestEx: '(' . namedArgList ')'
  195 namedArgList: . namedArg
  196             | . namedArg ',' namedArgList
  197             | .  [')']
  198 namedArg: . simpleExpr
  199         | . ID EQUALSGT simpleExpr
  205 simExList: .  [',', ')']
  206          | . simpleExpr
  207          | . simExList ',' simpleExpr

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 206
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    ','       reduce using rule 205 (simExList)
    ')'       reduce using rule 197 (namedArgList)
    ')'       [reduce using rule 205 (simExList)]
    $default  reduce using rule 197 (namedArgList)

    id            go to state 104
    ident         go to state 109
    simpleExpr    go to state 207
    namedArgList  go to state 208
    namedArg      go to state 209
    simExList     go to state 210


state 132

  193 identRestEx: identRest .

    $default  reduce using rule 193 (identRestEx)


state 133

   61 plSqlStatement: ident identRestEx . ';'

    ';'  shift, and go to state 211


state 134

  212 tableDefinition1: LOCAL TEMPORARY .

    $default  reduce using rule 212 (tableDefinition1)


state 135

  209 tableDefinition: CREATE tableDefinition1 TABLE . tableName tableElementList tableDefinition2
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  225 qualifiedLocalTableName: . MODULE period localTableName

    UNKNOWN_LEX  shift, and go to state 212
    MODULE       shift, and go to state 213

    $default  reduce using rule 219 (qualifiedName1)

    tableName                go to state 214
    qualifiedName            go to state 215
    qualifiedName1           go to state 216
    schemaName               go to state 217
    qualifiedLocalTableName  go to state 218


state 136

   80 bracketedSelect: '(' select ')' .

    $default  reduce using rule 80 (bracketedSelect)


state 137

   48 callStatement: '{' CALL ident . identRest '}'
  191 identRest: . '(' simExList ')'
  192          | .  ['}']

    '('  shift, and go to state 219

    $default  reduce using rule 192 (identRest)

    identRest  go to state 220


state 138

   82 select: select . UNION select
   82       | select UNION select .  [$end, UNION, ')', ';']

    $default  reduce using rule 82 (select)


state 139

   90 where: WHERE whereCond .

    $default  reduce using rule 90 (where)


state 140

  142 whereCond: condition .  [$end, ORDER, GROUP, UNION, FOR, ')', ';']
  143 condition: condition . AND condition
  144          | condition . OR condition
  145          | condition . XOR condition

    OR   shift, and go to state 170
    AND  shift, and go to state 171
    XOR  shift, and go to state 172

    $default  reduce using rule 142 (whereCond)


state 141

  149 condition: simpleExpr . inExpr '(' simExList ')'
  150          | simpleExpr . inExpr '(' select ')'
  153          | simpleExpr . IS optNot NULL
  154          | simpleExpr . optNot LIKE simpleExpr escape
  156          | simpleExpr . optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: simpleExpr . '=' simpleExpr
  160           | simpleExpr . '>' simpleExpr
  161           | simpleExpr . '<' simpleExpr
  162           | simpleExpr . LE simpleExpr
  163           | simpleExpr . NE simpleExpr
  164           | simpleExpr . GE simpleExpr
  167 inExpr: . optNot IN
  168 optNot: . NOT
  169       | .  [BETWEEN, LIKE, IN]
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    NOT     shift, and go to state 174
    IS      shift, and go to state 175
    OUTERJ  shift, and go to state 176
    NE      shift, and go to state 177
    LE      shift, and go to state 178
    GE      shift, and go to state 179
    CONCAT  shift, and go to state 180
    '='     shift, and go to state 181
    '>'     shift, and go to state 182
    '<'     shift, and go to state 183
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 169 (optNot)

    inExpr  go to state 188
    optNot  go to state 189


state 142

   99 orderBy: ORDER . BY directionList

    BY  shift, and go to state 221


state 143

   94 groupBy: GROUP . BY simExList having

    BY  shift, and go to state 222


state 144

   99 orderBy: . ORDER BY directionList
  100 optOrderBy: . orderBy
  101           | .  [$end, UNION, FOR, ')', ';']
  103 byClauses: groupBy . optOrderBy

    ORDER  shift, and go to state 142

    $default  reduce using rule 101 (optOrderBy)

    orderBy     go to state 223
    optOrderBy  go to state 224


state 145

   94 groupBy: . GROUP BY simExList having
   95 optGroupBy: . groupBy
   96           | .  [$end, UNION, FOR, ')', ';']
  102 byClauses: orderBy . optGroupBy

    GROUP  shift, and go to state 143

    $default  reduce using rule 96 (optGroupBy)

    groupBy     go to state 225
    optGroupBy  go to state 226


state 146

   81 select: basicSelect where byClauses . forUpdate
   92 forUpdate: . FOR UPDATE
   93          | .  [$end, UNION, ')', ';']

    FOR  shift, and go to state 227

    $default  reduce using rule 93 (forUpdate)

    forUpdate  go to state 228


state 147

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  141 identEx: ident '%' . id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id  go to state 229


state 148

   50 declaration: ID ident identRestEx . declInitializer ';'
   55 declInitializer: . COLONEQUALS simpleExpr
   56                | .  [';']

    COLONEQUALS  shift, and go to state 149

    $default  reduce using rule 56 (declInitializer)

    declInitializer  go to state 230


state 149

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   55 declInitializer: COLONEQUALS . simpleExpr
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 231


state 150

   51 declaration: ID identEx declInitializer . ';'

    ';'  shift, and go to state 232


state 151

   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList
  155 condition: EXISTS '(' . select ')'

    SELECT  shift, and go to state 2

    select       go to state 233
    basicSelect  go to state 20


state 152

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  202 when: WHEN . condition THEN simpleExpr

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    condition   go to state 234
    comparison  go to state 111
    simpleExpr  go to state 141


state 153

  173 simpleExpr: CASE whenList . else END
  203 else: . ELSE simpleExpr
  204     | .  [END]

    ELSE  shift, and go to state 235

    $default  reduce using rule 204 (else)

    else  go to state 236


state 154

  200 whenList: . when
  200         | when .  [ELSE, END]
  201         | . when whenList
  201         | when . whenList
  202 when: . WHEN condition THEN simpleExpr

    WHEN  shift, and go to state 152

    $default  reduce using rule 200 (whenList)

    whenList  go to state 237
    when      go to state 154


state 155

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  183           | CAST '(' . simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 238


state 156

  143 condition: condition . AND condition
  144          | condition . OR condition
  145          | condition . XOR condition
  146          | NOT condition .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']

    $default  reduce using rule 146 (condition)


state 157

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  176           | '(' . simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  184           | '(' . select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    SELECT            shift, and go to state 2
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id           go to state 104
    select       go to state 160
    basicSelect  go to state 20
    ident        go to state 109
    simpleExpr   go to state 239


state 158

  171 simpleExpr: simpleExpr . OUTERJ
  172           | '-' simpleExpr .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NE, LE, GE, NUMBER, ID, '=', '>', '<', '-', '+', ',', ')', ';']
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 172 (simpleExpr)


state 159

  137 ident: id .  [BETWEEN, OVER, LIKE, NOT, IN, IS, OUTERJ, NE, LE, GE, CONCAT, '=', '>', '<', '-', '+', '/', '*', '(', ')']
  138      | id . '.' id
  139      | id . '.' id '.' id
  157 idList2: id . ',' id
  185 simpleExpr: id . '.' '*'

    ','  shift, and go to state 240
    '.'  shift, and go to state 164

    $default  reduce using rule 137 (ident)


state 160

   82 select: select . UNION select
  184 simpleExpr: '(' select . ')'

    UNION  shift, and go to state 86
    ')'    shift, and go to state 241


state 161

  143 condition: condition . AND condition
  144          | condition . OR condition
  145          | condition . XOR condition
  147          | '(' condition . ')'

    OR   shift, and go to state 170
    AND  shift, and go to state 171
    XOR  shift, and go to state 172
    ')'  shift, and go to state 242


state 162

  151 condition: '(' idList2 . ')' inExpr '(' simExList ')'
  152          | '(' idList2 . ')' inExpr '(' select ')'
  158 idList2: idList2 . ',' id

    ','  shift, and go to state 243
    ')'  shift, and go to state 244


state 163

  149 condition: simpleExpr . inExpr '(' simExList ')'
  150          | simpleExpr . inExpr '(' select ')'
  153          | simpleExpr . IS optNot NULL
  154          | simpleExpr . optNot LIKE simpleExpr escape
  156          | simpleExpr . optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: simpleExpr . '=' simpleExpr
  160           | simpleExpr . '>' simpleExpr
  161           | simpleExpr . '<' simpleExpr
  162           | simpleExpr . LE simpleExpr
  163           | simpleExpr . NE simpleExpr
  164           | simpleExpr . GE simpleExpr
  167 inExpr: . optNot IN
  168 optNot: . NOT
  169       | .  [BETWEEN, LIKE, IN]
  171 simpleExpr: simpleExpr . OUTERJ
  176           | '(' simpleExpr . ')'
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    NOT     shift, and go to state 174
    IS      shift, and go to state 175
    OUTERJ  shift, and go to state 176
    NE      shift, and go to state 177
    LE      shift, and go to state 178
    GE      shift, and go to state 179
    CONCAT  shift, and go to state 180
    '='     shift, and go to state 181
    '>'     shift, and go to state 182
    '<'     shift, and go to state 183
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187
    ')'     shift, and go to state 245

    $default  reduce using rule 169 (optNot)

    inExpr  go to state 188
    optNot  go to state 189


state 164

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  138 ident: id '.' . id
  139      | id '.' . id '.' id
  185 simpleExpr: id '.' . '*'

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '*'               shift, and go to state 246

    id  go to state 195


state 165

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   83 basicSelect: SELECT optDist whatToSelect FROM . tableList
  121 tableList: . table
  122          | . tableList ',' table
  123 table: . alias
  124      | . table join alias ON condition
  132 alias: . tableExpr
  133      | . tableExpr id
  134 tableExpr: . ident
  135          | . TABLE '(' simpleExpr ')'
  136          | . '(' select ')'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    TABLE             shift, and go to state 30
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 63

    id         go to state 64
    tableList  go to state 247
    table      go to state 248
    alias      go to state 249
    tableExpr  go to state 66
    ident      go to state 67


state 166

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  115 selectExpression: selectExpression AS . id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id  go to state 250


state 167

  116 selectExpression: selectExpression id .

    $default  reduce using rule 116 (selectExpression)


state 168

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  114 selectExpression: . expression
  115                 | . selectExpression AS id
  116                 | . selectExpression id
  117 expression: . condition
  118           | . simpleExpr
  120 selectExpressionList: selectExpressionList ',' . selectExpression
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id                go to state 104
    selectExpression  go to state 251
    expression        go to state 107
    ident             go to state 109
    condition         go to state 110
    comparison        go to state 111
    simpleExpr        go to state 112


state 169

  175 simpleExpr: ident identRestEx .

    $default  reduce using rule 175 (simpleExpr)


state 170

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  144          | condition OR . condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    condition   go to state 252
    comparison  go to state 111
    simpleExpr  go to state 141


state 171

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  143          | condition AND . condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    condition   go to state 253
    comparison  go to state 111
    simpleExpr  go to state 141


state 172

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  145          | condition XOR . condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    condition   go to state 254
    comparison  go to state 111
    simpleExpr  go to state 141


state 173

  182 simpleExpr: simpleExpr OVER . partition
  208 partition: . '(' PARTITION BY ident orderBy ')'

    '('  shift, and go to state 255

    partition  go to state 256


state 174

  168 optNot: NOT .

    $default  reduce using rule 168 (optNot)


state 175

  153 condition: simpleExpr IS . optNot NULL
  168 optNot: . NOT
  169       | .  [NULL]

    NOT  shift, and go to state 174

    $default  reduce using rule 169 (optNot)

    optNot  go to state 257


state 176

  171 simpleExpr: simpleExpr OUTERJ .

    $default  reduce using rule 171 (simpleExpr)


state 177

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  163 comparison: simpleExpr NE . simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 258


state 178

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  162 comparison: simpleExpr LE . simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 259


state 179

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  164 comparison: simpleExpr GE . simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 260


state 180

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  181           | simpleExpr CONCAT . simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 261


state 181

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  159 comparison: simpleExpr '=' . simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 262


state 182

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  160 comparison: simpleExpr '>' . simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 263


state 183

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  161 comparison: simpleExpr '<' . simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 264


state 184

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  177           | simpleExpr '-' . simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 265


state 185

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  178           | simpleExpr '+' . simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 266


state 186

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  180           | simpleExpr '/' . simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 267


state 187

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  179           | simpleExpr '*' . simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 268


state 188

  149 condition: simpleExpr inExpr . '(' simExList ')'
  150          | simpleExpr inExpr . '(' select ')'

    '('  shift, and go to state 269


state 189

  154 condition: simpleExpr optNot . LIKE simpleExpr escape
  156          | simpleExpr optNot . BETWEEN simpleExpr AND simpleExpr
  167 inExpr: optNot . IN

    BETWEEN  shift, and go to state 270
    LIKE     shift, and go to state 271
    IN       shift, and go to state 272


state 190

   47 delete: DELETE optFrom alias where .

    $default  reduce using rule 47 (delete)


state 191

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   76 optIdList: '(' . idList ')'
   77 idList: . id
   78       | . idList ',' id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id      go to state 273
    idList  go to state 274


state 192

   72 insert: INSERT INTO alias optIdList . insertRest
   73 insertRest: . VALUES identRest
   74           | . select
   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList

    VALUES  shift, and go to state 275
    SELECT  shift, and go to state 2

    insertRest   go to state 276
    select       go to state 277
    basicSelect  go to state 20


state 193

  135 tableExpr: TABLE '(' simpleExpr . ')'
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187
    ')'     shift, and go to state 278


state 194

  136 tableExpr: '(' select ')' .

    $default  reduce using rule 136 (tableExpr)


state 195

  138 ident: id '.' id .  [$end, BETWEEN, VALUES, SELECT, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, SET, END, ASC, XOR, FOR, NOT, ON, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, OUTERJ, NE, LE, GE, CONCAT, COLONEQUALS, NUMBER, ID, '=', '>', '<', '-', '+', '/', '*', ',', '(', ')', '}', ';', '%']
  139      | id '.' id . '.' id

    '.'  shift, and go to state 279

    $default  reduce using rule 138 (ident)


state 196

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   46 assign: '(' . idList ')' '=' simpleExpr
   77 idList: . id
   78       | . idList ',' id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id      go to state 273
    idList  go to state 280


state 197

   42 update: UPDATE alias SET assignList . where
   44 assignList: assignList . ',' assign
   90 where: . WHERE whereCond
   91      | .  [$end, ';']

    WHERE  shift, and go to state 87
    ','    shift, and go to state 281

    $default  reduce using rule 91 (where)

    where  go to state 282


state 198

   43 assignList: assign .

    $default  reduce using rule 43 (assignList)


state 199

   45 assign: ident . '=' simpleExpr

    '='  shift, and go to state 283


state 200

   67 plSqlStatement: EXECUTE IMMEDIATE STRING_SQ . ';'

    ';'  shift, and go to state 284


state 201

   66 plSqlStatement: EXECUTE STRING_SQ ';' .

    $default  reduce using rule 66 (plSqlStatement)


state 202

   85 basicSelectInto: SELECT optDist whatToSelect . INTO intoList FROM tableList

    INTO  shift, and go to state 285


state 203

   57 beginEndBlock: BEGIN plSqlStatementList END ';' .

    $default  reduce using rule 57 (beginEndBlock)


state 204

   60 plSqlStatement: assignTarget COLONEQUALS simpleExpr . ';'
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187
    ';'     shift, and go to state 286


state 205

   84 selectInto: basicSelectInto where byClauses .

    $default  reduce using rule 84 (selectInto)


state 206

   10 id: ID .  [OVER, OUTERJ, CONCAT, '-', '+', '/', '*', ',', '(', ')', '.']
  199 namedArg: ID . EQUALSGT simpleExpr

    EQUALSGT  shift, and go to state 287

    $default  reduce using rule 10 (id)


state 207

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition
  198 namedArg: simpleExpr .  [',', ')']
  206 simExList: simpleExpr .  [',', ')']

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    ','       reduce using rule 198 (namedArg)
    ','       [reduce using rule 206 (simExList)]
    ')'       reduce using rule 198 (namedArg)
    ')'       [reduce using rule 206 (simExList)]
    $default  reduce using rule 198 (namedArg)


state 208

  194 identRestEx: '(' namedArgList . ')'

    ')'  shift, and go to state 288


state 209

  195 namedArgList: namedArg .  [')']
  196             | namedArg . ',' namedArgList

    ','  shift, and go to state 289

    $default  reduce using rule 195 (namedArgList)


state 210

  191 identRest: '(' simExList . ')'
  207 simExList: simExList . ',' simpleExpr

    ','  shift, and go to state 290
    ')'  shift, and go to state 291


state 211

   61 plSqlStatement: ident identRestEx ';' .

    $default  reduce using rule 61 (plSqlStatement)


state 212

  221 schemaName: UNKNOWN_LEX .

    $default  reduce using rule 221 (schemaName)


state 213

  222 period: . UNKNOWN_LEX
  225 qualifiedLocalTableName: MODULE . period localTableName

    UNKNOWN_LEX  shift, and go to state 292

    period  go to state 293


state 214

  209 tableDefinition: CREATE tableDefinition1 TABLE tableName . tableElementList tableDefinition2
  227 tableElementList: . leftParen tableElement tableElementList1 rightParen
  230 leftParen: . '('

    '('  shift, and go to state 294

    tableElementList  go to state 295
    leftParen         go to state 296


state 215

  216 tableName: qualifiedName .

    $default  reduce using rule 216 (tableName)


state 216

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  218 qualifiedName: qualifiedName1 . qualifiedIdentifier
  223 qualifiedIdentifier: . identifier
  224 identifier: . id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id                   go to state 297
    qualifiedIdentifier  go to state 298
    identifier           go to state 299


state 217

  220 qualifiedName1: schemaName . period
  222 period: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 292

    period  go to state 300


state 218

  217 tableName: qualifiedLocalTableName .

    $default  reduce using rule 217 (tableName)


state 219

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  191 identRest: '(' . simExList ')'
  205 simExList: .  [',', ')']
  206          | . simpleExpr
  207          | . simExList ',' simpleExpr

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    $default  reduce using rule 205 (simExList)

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 301
    simExList   go to state 210


state 220

   48 callStatement: '{' CALL ident identRest . '}'

    '}'  shift, and go to state 302


state 221

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   99 orderBy: ORDER BY . directionList
  105 directionList: . direction
  106              | . directionList ',' direction
  107 direction: . simpleExpr orderDirection
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id             go to state 104
    directionList  go to state 303
    direction      go to state 304
    ident          go to state 109
    simpleExpr     go to state 305


state 222

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   94 groupBy: GROUP BY . simExList having
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  205 simExList: .  [$end, HAVING, ORDER, UNION, FOR, ',', ')', ';']
  206          | . simpleExpr
  207          | . simExList ',' simpleExpr

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    $default  reduce using rule 205 (simExList)

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 301
    simExList   go to state 306


state 223

  100 optOrderBy: orderBy .

    $default  reduce using rule 100 (optOrderBy)


state 224

  103 byClauses: groupBy optOrderBy .

    $default  reduce using rule 103 (byClauses)


state 225

   95 optGroupBy: groupBy .

    $default  reduce using rule 95 (optGroupBy)


state 226

  102 byClauses: orderBy optGroupBy .

    $default  reduce using rule 102 (byClauses)


state 227

   92 forUpdate: FOR . UPDATE

    UPDATE  shift, and go to state 307


state 228

   81 select: basicSelect where byClauses forUpdate .

    $default  reduce using rule 81 (select)


state 229

  141 identEx: ident '%' id .

    $default  reduce using rule 141 (identEx)


state 230

   50 declaration: ID ident identRestEx declInitializer . ';'

    ';'  shift, and go to state 308


state 231

   55 declInitializer: COLONEQUALS simpleExpr .  [';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 55 (declInitializer)


state 232

   51 declaration: ID identEx declInitializer ';' .

    $default  reduce using rule 51 (declaration)


state 233

   82 select: select . UNION select
  155 condition: EXISTS '(' select . ')'

    UNION  shift, and go to state 86
    ')'    shift, and go to state 309


state 234

  143 condition: condition . AND condition
  144          | condition . OR condition
  145          | condition . XOR condition
  202 when: WHEN condition . THEN simpleExpr

    OR    shift, and go to state 170
    THEN  shift, and go to state 310
    AND   shift, and go to state 171
    XOR   shift, and go to state 172


state 235

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  203 else: ELSE . simpleExpr

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 311


state 236

  173 simpleExpr: CASE whenList else . END

    END  shift, and go to state 312


state 237

  201 whenList: when whenList .

    $default  reduce using rule 201 (whenList)


state 238

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition
  183           | CAST '(' simpleExpr . AS id optSize ')'

    OVER    shift, and go to state 173
    AS      shift, and go to state 313
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187


state 239

  171 simpleExpr: simpleExpr . OUTERJ
  176           | '(' simpleExpr . ')'
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187
    ')'     shift, and go to state 245


state 240

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  157 idList2: id ',' . id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id  go to state 314


state 241

  184 simpleExpr: '(' select ')' .

    $default  reduce using rule 184 (simpleExpr)


state 242

  147 condition: '(' condition ')' .

    $default  reduce using rule 147 (condition)


state 243

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  158 idList2: idList2 ',' . id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id  go to state 315


state 244

  151 condition: '(' idList2 ')' . inExpr '(' simExList ')'
  152          | '(' idList2 ')' . inExpr '(' select ')'
  167 inExpr: . optNot IN
  168 optNot: . NOT
  169       | .  [IN]

    NOT  shift, and go to state 174

    $default  reduce using rule 169 (optNot)

    inExpr  go to state 316
    optNot  go to state 317


state 245

  176 simpleExpr: '(' simpleExpr ')' .

    $default  reduce using rule 176 (simpleExpr)


state 246

  185 simpleExpr: id '.' '*' .

    $default  reduce using rule 185 (simpleExpr)


state 247

   83 basicSelect: SELECT optDist whatToSelect FROM tableList .  [$end, WHERE, ORDER, GROUP, UNION, FOR, ')', ';']
  122 tableList: tableList . ',' table

    ','  shift, and go to state 318

    $default  reduce using rule 83 (basicSelect)


state 248

  121 tableList: table .  [$end, WHERE, ORDER, GROUP, UNION, FOR, ',', ')', ';']
  124 table: table . join alias ON condition
  125 join: . JOIN
  126     | . LEFT JOIN
  127     | . outerType OUTER JOIN
  128     | . INNER JOIN
  129 outerType: . LEFT
  130          | . RIGHT
  131          | . FULL

    RIGHT  shift, and go to state 319
    INNER  shift, and go to state 320
    JOIN   shift, and go to state 321
    LEFT   shift, and go to state 322
    FULL   shift, and go to state 323

    $default  reduce using rule 121 (tableList)

    join       go to state 324
    outerType  go to state 325


state 249

  123 table: alias .

    $default  reduce using rule 123 (table)


state 250

  115 selectExpression: selectExpression AS id .

    $default  reduce using rule 115 (selectExpression)


state 251

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  115 selectExpression: selectExpression . AS id
  116                 | selectExpression . id
  120 selectExpressionList: selectExpressionList ',' selectExpression .  [FROM, INTO, ',']

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    AS                shift, and go to state 166
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    $default  reduce using rule 120 (selectExpressionList)

    id  go to state 167


state 252

  143 condition: condition . AND condition
  144          | condition . OR condition
  144          | condition OR condition .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  145          | condition . XOR condition

    AND  shift, and go to state 171

    $default  reduce using rule 144 (condition)


state 253

  143 condition: condition . AND condition
  143          | condition AND condition .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  144          | condition . OR condition
  145          | condition . XOR condition

    $default  reduce using rule 143 (condition)


state 254

  143 condition: condition . AND condition
  144          | condition . OR condition
  145          | condition . XOR condition
  145          | condition XOR condition .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']

    AND  shift, and go to state 171

    $default  reduce using rule 145 (condition)


state 255

  208 partition: '(' . PARTITION BY ident orderBy ')'

    PARTITION  shift, and go to state 326


state 256

  182 simpleExpr: simpleExpr OVER partition .

    $default  reduce using rule 182 (simpleExpr)


state 257

  153 condition: simpleExpr IS optNot . NULL

    NULL  shift, and go to state 327


state 258

  163 comparison: simpleExpr NE simpleExpr .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 163 (comparison)


state 259

  162 comparison: simpleExpr LE simpleExpr .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 162 (comparison)


state 260

  164 comparison: simpleExpr GE simpleExpr .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 164 (comparison)


state 261

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  181           | simpleExpr CONCAT simpleExpr .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, OUTERJ, NE, LE, GE, CONCAT, NUMBER, ID, '=', '>', '<', '-', '+', '/', '*', ',', ')', ';']
  182           | simpleExpr . OVER partition

    $default  reduce using rule 181 (simpleExpr)


state 262

  159 comparison: simpleExpr '=' simpleExpr .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 159 (comparison)


state 263

  160 comparison: simpleExpr '>' simpleExpr .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 160 (comparison)


state 264

  161 comparison: simpleExpr '<' simpleExpr .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 161 (comparison)


state 265

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  177           | simpleExpr '-' simpleExpr .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NE, LE, GE, NUMBER, ID, '=', '>', '<', '-', '+', ',', ')', ';']
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 177 (simpleExpr)


state 266

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  178           | simpleExpr '+' simpleExpr .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NE, LE, GE, NUMBER, ID, '=', '>', '<', '-', '+', ',', ')', ';']
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 178 (simpleExpr)


state 267

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  180           | simpleExpr '/' simpleExpr .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, OUTERJ, NE, LE, GE, CONCAT, NUMBER, ID, '=', '>', '<', '-', '+', '/', '*', ',', ')', ';']
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    $default  reduce using rule 180 (simpleExpr)


state 268

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  179           | simpleExpr '*' simpleExpr .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, OUTERJ, NE, LE, GE, CONCAT, NUMBER, ID, '=', '>', '<', '-', '+', '/', '*', ',', ')', ';']
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    $default  reduce using rule 179 (simpleExpr)


state 269

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  149 condition: simpleExpr inExpr '(' . simExList ')'
  150          | simpleExpr inExpr '(' . select ')'
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  205 simExList: .  [',', ')']
  206          | . simpleExpr
  207          | . simExList ',' simpleExpr

    SELECT            shift, and go to state 2
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    $default  reduce using rule 205 (simExList)

    id           go to state 104
    select       go to state 328
    basicSelect  go to state 20
    ident        go to state 109
    simpleExpr   go to state 301
    simExList    go to state 329


state 270

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  156 condition: simpleExpr optNot BETWEEN . simpleExpr AND simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 330


state 271

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  154 condition: simpleExpr optNot LIKE . simpleExpr escape
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 331


state 272

  167 inExpr: optNot IN .

    $default  reduce using rule 167 (inExpr)


state 273

   77 idList: id .

    $default  reduce using rule 77 (idList)


state 274

   76 optIdList: '(' idList . ')'
   78 idList: idList . ',' id

    ','  shift, and go to state 332
    ')'  shift, and go to state 333


state 275

   73 insertRest: VALUES . identRest
  191 identRest: . '(' simExList ')'
  192          | .  [$end, ';']

    '('  shift, and go to state 219

    $default  reduce using rule 192 (identRest)

    identRest  go to state 334


state 276

   72 insert: INSERT INTO alias optIdList insertRest .

    $default  reduce using rule 72 (insert)


state 277

   74 insertRest: select .  [$end, ';']
   82 select: select . UNION select

    UNION  shift, and go to state 86

    $default  reduce using rule 74 (insertRest)


state 278

  135 tableExpr: TABLE '(' simpleExpr ')' .

    $default  reduce using rule 135 (tableExpr)


state 279

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  139 ident: id '.' id '.' . id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id  go to state 335


state 280

   46 assign: '(' idList . ')' '=' simpleExpr
   78 idList: idList . ',' id

    ','  shift, and go to state 332
    ')'  shift, and go to state 336


state 281

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   44 assignList: assignList ',' . assign
   45 assign: . ident '=' simpleExpr
   46       | . '(' idList ')' '=' simpleExpr
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 196

    id      go to state 64
    assign  go to state 337
    ident   go to state 199


state 282

   42 update: UPDATE alias SET assignList where .

    $default  reduce using rule 42 (update)


state 283

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   45 assign: ident '=' . simpleExpr
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 338


state 284

   67 plSqlStatement: EXECUTE IMMEDIATE STRING_SQ ';' .

    $default  reduce using rule 67 (plSqlStatement)


state 285

   85 basicSelectInto: SELECT optDist whatToSelect INTO . intoList FROM tableList
   86 intoList: . intoId
   87         | . intoId ',' intoList
   88 intoId: . ID
   89       | . ':' ID

    ID   shift, and go to state 339
    ':'  shift, and go to state 340

    intoList  go to state 341
    intoId    go to state 342


state 286

   60 plSqlStatement: assignTarget COLONEQUALS simpleExpr ';' .

    $default  reduce using rule 60 (plSqlStatement)


state 287

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  199 namedArg: ID EQUALSGT . simpleExpr

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 343


state 288

  194 identRestEx: '(' namedArgList ')' .

    $default  reduce using rule 194 (identRestEx)


state 289

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  195 namedArgList: . namedArg
  196             | . namedArg ',' namedArgList
  196             | namedArg ',' . namedArgList
  197             | .  [')']
  198 namedArg: . simpleExpr
  199         | . ID EQUALSGT simpleExpr

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 206
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    $default  reduce using rule 197 (namedArgList)

    id            go to state 104
    ident         go to state 109
    simpleExpr    go to state 344
    namedArgList  go to state 345
    namedArg      go to state 209


state 290

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  207 simExList: simExList ',' . simpleExpr

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 346


state 291

  191 identRest: '(' simExList ')' .

    $default  reduce using rule 191 (identRest)


state 292

  222 period: UNKNOWN_LEX .

    $default  reduce using rule 222 (period)


state 293

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  223 qualifiedIdentifier: . identifier
  224 identifier: . id
  225 qualifiedLocalTableName: MODULE period . localTableName
  226 localTableName: . qualifiedIdentifier

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id                   go to state 297
    qualifiedIdentifier  go to state 347
    identifier           go to state 299
    localTableName       go to state 348


state 294

  230 leftParen: '(' .

    $default  reduce using rule 230 (leftParen)


state 295

  209 tableDefinition: CREATE tableDefinition1 TABLE tableName tableElementList . tableDefinition2
  213 tableDefinition2: .  [$end]
  214                 | . ON COMMIT DELETE
  215                 | . PRESERVE ROWS

    ON        shift, and go to state 349
    PRESERVE  shift, and go to state 350

    $default  reduce using rule 213 (tableDefinition2)

    tableDefinition2  go to state 351


state 296

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  227 tableElementList: leftParen . tableElement tableElementList1 rightParen
  231 tableElement: . columnDefinition
  232             | . tableConstraintDefinition
  233 columnDefinition: . columnName dataType
  234                 | . domainName columnDefinition1 columnDefinition2 columnDefinition3
  241 columnName: . identifier
  360 domainName: . qualifiedName
  414 constraintNameDefinition: . CONSTRAINT constraintName
  883 tableConstraintDefinition: . tableConstraintDefinition1 tableConstraint tableConstraintDefinition2
  884 tableConstraintDefinition1: .  [UNIQUE, PRIMARY, CHECK, FOREIGN]
  885                           | . constraintNameDefinition

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 212
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    CONSTRAINT        shift, and go to state 352
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    DESC              [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    $default          reduce using rule 884 (tableConstraintDefinition1)

    id                          go to state 297
    qualifiedName               go to state 353
    qualifiedName1              go to state 216
    schemaName                  go to state 217
    identifier                  go to state 354
    tableElement                go to state 355
    columnDefinition            go to state 356
    columnName                  go to state 357
    domainName                  go to state 358
    constraintNameDefinition    go to state 359
    tableConstraintDefinition   go to state 360
    tableConstraintDefinition1  go to state 361


state 297

  224 identifier: id .

    $default  reduce using rule 224 (identifier)


state 298

  218 qualifiedName: qualifiedName1 qualifiedIdentifier .

    $default  reduce using rule 218 (qualifiedName)


state 299

  223 qualifiedIdentifier: identifier .

    $default  reduce using rule 223 (qualifiedIdentifier)


state 300

  220 qualifiedName1: schemaName period .

    $default  reduce using rule 220 (qualifiedName1)


state 301

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition
  206 simExList: simpleExpr .  [$end, HAVING, ORDER, UNION, FOR, ',', ')', ';']

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 206 (simExList)


state 302

   48 callStatement: '{' CALL ident identRest '}' .

    $default  reduce using rule 48 (callStatement)


state 303

   99 orderBy: ORDER BY directionList .  [$end, GROUP, UNION, FOR, ')', ';']
  106 directionList: directionList . ',' direction

    ','  shift, and go to state 362

    $default  reduce using rule 99 (orderBy)


state 304

  105 directionList: direction .

    $default  reduce using rule 105 (directionList)


state 305

  107 direction: simpleExpr . orderDirection
  108 orderDirection: . ASC
  109               | . DESC
  110               | .  [$end, GROUP, UNION, FOR, ',', ')', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    DESC    shift, and go to state 363
    ASC     shift, and go to state 364
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 110 (orderDirection)

    orderDirection  go to state 365


state 306

   94 groupBy: GROUP BY simExList . having
   97 having: . HAVING condition
   98       | .  [$end, ORDER, UNION, FOR, ')', ';']
  207 simExList: simExList . ',' simpleExpr

    HAVING  shift, and go to state 366
    ','     shift, and go to state 290

    $default  reduce using rule 98 (having)

    having  go to state 367


state 307

   92 forUpdate: FOR UPDATE .

    $default  reduce using rule 92 (forUpdate)


state 308

   50 declaration: ID ident identRestEx declInitializer ';' .

    $default  reduce using rule 50 (declaration)


state 309

  155 condition: EXISTS '(' select ')' .

    $default  reduce using rule 155 (condition)


state 310

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  202 when: WHEN condition THEN . simpleExpr

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 368


state 311

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition
  203 else: ELSE simpleExpr .  [END]

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 203 (else)


state 312

  173 simpleExpr: CASE whenList else END .

    $default  reduce using rule 173 (simpleExpr)


state 313

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  183 simpleExpr: CAST '(' simpleExpr AS . id optSize ')'

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id  go to state 369


state 314

  157 idList2: id ',' id .

    $default  reduce using rule 157 (idList2)


state 315

  158 idList2: idList2 ',' id .

    $default  reduce using rule 158 (idList2)


state 316

  151 condition: '(' idList2 ')' inExpr . '(' simExList ')'
  152          | '(' idList2 ')' inExpr . '(' select ')'

    '('  shift, and go to state 370


state 317

  167 inExpr: optNot . IN

    IN  shift, and go to state 272


state 318

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  122 tableList: tableList ',' . table
  123 table: . alias
  124      | . table join alias ON condition
  132 alias: . tableExpr
  133      | . tableExpr id
  134 tableExpr: . ident
  135          | . TABLE '(' simpleExpr ')'
  136          | . '(' select ')'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    TABLE             shift, and go to state 30
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 63

    id         go to state 64
    table      go to state 371
    alias      go to state 249
    tableExpr  go to state 66
    ident      go to state 67


state 319

  130 outerType: RIGHT .

    $default  reduce using rule 130 (outerType)


state 320

  128 join: INNER . JOIN

    JOIN  shift, and go to state 372


state 321

  125 join: JOIN .

    $default  reduce using rule 125 (join)


state 322

  126 join: LEFT . JOIN
  129 outerType: LEFT .  [OUTER]

    JOIN  shift, and go to state 373

    $default  reduce using rule 129 (outerType)


state 323

  131 outerType: FULL .

    $default  reduce using rule 131 (outerType)


state 324

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  124 table: table join . alias ON condition
  132 alias: . tableExpr
  133      | . tableExpr id
  134 tableExpr: . ident
  135          | . TABLE '(' simpleExpr ')'
  136          | . '(' select ')'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    TABLE             shift, and go to state 30
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 63

    id         go to state 64
    alias      go to state 374
    tableExpr  go to state 66
    ident      go to state 67


state 325

  127 join: outerType . OUTER JOIN

    OUTER  shift, and go to state 375


state 326

  208 partition: '(' PARTITION . BY ident orderBy ')'

    BY  shift, and go to state 376


state 327

  153 condition: simpleExpr IS optNot NULL .

    $default  reduce using rule 153 (condition)


state 328

   82 select: select . UNION select
  150 condition: simpleExpr inExpr '(' select . ')'

    UNION  shift, and go to state 86
    ')'    shift, and go to state 377


state 329

  149 condition: simpleExpr inExpr '(' simExList . ')'
  207 simExList: simExList . ',' simpleExpr

    ','  shift, and go to state 290
    ')'  shift, and go to state 378


state 330

  156 condition: simpleExpr optNot BETWEEN simpleExpr . AND simpleExpr
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    AND     shift, and go to state 379
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187


state 331

  154 condition: simpleExpr optNot LIKE simpleExpr . escape
  165 escape: . ESCAPE STRING_SQ
  166       | .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    ESCAPE  shift, and go to state 380
    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 166 (escape)

    escape  go to state 381


state 332

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   78 idList: idList ',' . id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id  go to state 382


state 333

   76 optIdList: '(' idList ')' .

    $default  reduce using rule 76 (optIdList)


state 334

   73 insertRest: VALUES identRest .

    $default  reduce using rule 73 (insertRest)


state 335

  139 ident: id '.' id '.' id .

    $default  reduce using rule 139 (ident)


state 336

   46 assign: '(' idList ')' . '=' simpleExpr

    '='  shift, and go to state 383


state 337

   44 assignList: assignList ',' assign .

    $default  reduce using rule 44 (assignList)


state 338

   45 assign: ident '=' simpleExpr .  [$end, WHERE, ',', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 45 (assign)


state 339

   88 intoId: ID .

    $default  reduce using rule 88 (intoId)


state 340

   89 intoId: ':' . ID

    ID  shift, and go to state 384


state 341

   85 basicSelectInto: SELECT optDist whatToSelect INTO intoList . FROM tableList

    FROM  shift, and go to state 385


state 342

   86 intoList: intoId .  [FROM]
   87         | intoId . ',' intoList

    ','  shift, and go to state 386

    $default  reduce using rule 86 (intoList)


state 343

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition
  199 namedArg: ID EQUALSGT simpleExpr .  [',', ')']

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 199 (namedArg)


state 344

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition
  198 namedArg: simpleExpr .  [',', ')']

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 198 (namedArg)


state 345

  196 namedArgList: namedArg ',' namedArgList .

    $default  reduce using rule 196 (namedArgList)


state 346

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition
  207 simExList: simExList ',' simpleExpr .  [$end, HAVING, ORDER, UNION, FOR, ',', ')', ';']

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 207 (simExList)


state 347

  226 localTableName: qualifiedIdentifier .

    $default  reduce using rule 226 (localTableName)


state 348

  225 qualifiedLocalTableName: MODULE period localTableName .

    $default  reduce using rule 225 (qualifiedLocalTableName)


state 349

  214 tableDefinition2: ON . COMMIT DELETE

    COMMIT  shift, and go to state 387


state 350

  215 tableDefinition2: PRESERVE . ROWS

    ROWS  shift, and go to state 388


state 351

  209 tableDefinition: CREATE tableDefinition1 TABLE tableName tableElementList tableDefinition2 .

    $default  reduce using rule 209 (tableDefinition)


state 352

  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  414 constraintNameDefinition: CONSTRAINT . constraintName
  415 constraintName: . qualifiedName

    UNKNOWN_LEX  shift, and go to state 212

    $default  reduce using rule 219 (qualifiedName1)

    qualifiedName   go to state 389
    qualifiedName1  go to state 216
    schemaName      go to state 217
    constraintName  go to state 390


state 353

  360 domainName: qualifiedName .

    $default  reduce using rule 360 (domainName)


state 354

  241 columnName: identifier .

    $default  reduce using rule 241 (columnName)


state 355

  227 tableElementList: leftParen tableElement . tableElementList1 rightParen
  228 tableElementList1: .
  229                  | . tableElementList1 comma tableElement

    $default  reduce using rule 228 (tableElementList1)

    tableElementList1  go to state 391


state 356

  231 tableElement: columnDefinition .

    $default  reduce using rule 231 (tableElement)


state 357

  233 columnDefinition: columnName . dataType
  242 dataType: . characterStringType dataType1
  243         | . nationalCharacterStringType
  244         | . bitStringType
  245         | . numericType
  246         | . datetimeType
  247         | . intervalType
  250 characterStringType: . CHARACTER characterStringType1
  251                    | . CHAR characterStringType2
  252                    | . CHARACTER VARYING characterStringType3
  253                    | . CHAR VARYING characterStringType4
  254                    | . VARCHAR characterStringType5
  269 nationalCharacterStringType: . NATIONAL CHARACTER nationalCharacterStringType1
  270                            | . NATIONAL CHAR nationalCharacterStringType2
  271                            | . NCHAR nationalCharacterStringType3
  272                            | . NATIONAL CHARACTER VARYING nationalCharacterStringType4
  273                            | . NATIONAL CHAR VARYING nationalCharacterStringType5
  274                            | . NCHAR VARYING nationalCharacterStringType6
  287 bitStringType: . BIT bitStringType1
  288              | . BIT VARYING bitStringType2
  293 numericType: . exactNumericType
  294            | . approximateNumericType
  295 exactNumericType: . NUMERIC exactNumericType2
  296                 | . DECIMAL exactNumericType4
  297                 | . DEC exactNumericType6
  298                 | . INTEGER
  299                 | . INT
  300                 | . SMALLINT
  316 approximateNumericType: . FLOAT approximateNumericType1
  317                       | . REAL
  318                       | . DOUBLE PRECISION
  321 datetimeType: . DATE
  322             | . TIME datetimeType1 datetimeType2
  323             | . TIMESTAMP datetimeType3 datetimeType4
  335 intervalType: . INTERVAL intervalQualifier

    REAL       shift, and go to state 392
    BIT        shift, and go to state 393
    SMALLINT   shift, and go to state 394
    NCHAR      shift, and go to state 395
    DATE       shift, and go to state 396
    DOUBLE     shift, and go to state 397
    TIMESTAMP  shift, and go to state 398
    NUMERIC    shift, and go to state 399
    DECIMAL    shift, and go to state 400
    DEC        shift, and go to state 401
    TIME       shift, and go to state 402
    INTEGER    shift, and go to state 403
    CHARACTER  shift, and go to state 404
    CHAR       shift, and go to state 405
    INT        shift, and go to state 406
    NATIONAL   shift, and go to state 407
    FLOAT      shift, and go to state 408
    INTERVAL   shift, and go to state 409
    VARCHAR    shift, and go to state 410

    dataType                     go to state 411
    characterStringType          go to state 412
    nationalCharacterStringType  go to state 413
    bitStringType                go to state 414
    numericType                  go to state 415
    exactNumericType             go to state 416
    approximateNumericType       go to state 417
    datetimeType                 go to state 418
    intervalType                 go to state 419


state 358

  234 columnDefinition: domainName . columnDefinition1 columnDefinition2 columnDefinition3
  235 columnDefinition1: .  [NOT, UNIQUE, COLLATE, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  236                  | . defaultClause
  361 defaultClause: . DEFAULT defaultOption

    DEFAULT  shift, and go to state 420

    $default  reduce using rule 235 (columnDefinition1)

    columnDefinition1  go to state 421
    defaultClause      go to state 422


state 359

  885 tableConstraintDefinition1: constraintNameDefinition .

    $default  reduce using rule 885 (tableConstraintDefinition1)


state 360

  232 tableElement: tableConstraintDefinition .

    $default  reduce using rule 232 (tableElement)


state 361

  420 uniqueSpecification: . UNIQUE
  421                    | . PRIMARY KEY
  448 checkConstraintDefinition: . CHECK leftParen searchCondition rightParen
  883 tableConstraintDefinition: tableConstraintDefinition1 . tableConstraint tableConstraintDefinition2
  888 tableConstraint: . uniqueConstraintDefinition
  889                | . referentialConstraintDefinition
  890                | . checkConstraintDefinition
  891 uniqueConstraintDefinition: . uniqueSpecification leftParen uniqueColumnList rightParen
  893 referentialConstraintDefinition: . FOREIGN KEY leftParen referencingColumns rightParen referencesSpecification

    UNIQUE   shift, and go to state 423
    PRIMARY  shift, and go to state 424
    CHECK    shift, and go to state 425
    FOREIGN  shift, and go to state 426

    uniqueSpecification              go to state 427
    checkConstraintDefinition        go to state 428
    tableConstraint                  go to state 429
    uniqueConstraintDefinition       go to state 430
    referentialConstraintDefinition  go to state 431


state 362

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  106 directionList: directionList ',' . direction
  107 direction: . simpleExpr orderDirection
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    direction   go to state 432
    ident       go to state 109
    simpleExpr  go to state 305


state 363

  109 orderDirection: DESC .

    $default  reduce using rule 109 (orderDirection)


state 364

  108 orderDirection: ASC .

    $default  reduce using rule 108 (orderDirection)


state 365

  107 direction: simpleExpr orderDirection .

    $default  reduce using rule 107 (direction)


state 366

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   97 having: HAVING . condition
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    condition   go to state 433
    comparison  go to state 111
    simpleExpr  go to state 141


state 367

   94 groupBy: GROUP BY simExList having .

    $default  reduce using rule 94 (groupBy)


state 368

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition
  202 when: WHEN condition THEN simpleExpr .  [WHEN, ELSE, END]

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 202 (when)


state 369

  183 simpleExpr: CAST '(' simpleExpr AS id . optSize ')'
  189 optSize: .  [')']
  190        | . '(' NUMBER ')'

    '('  shift, and go to state 434

    $default  reduce using rule 189 (optSize)

    optSize  go to state 435


state 370

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  151 condition: '(' idList2 ')' inExpr '(' . simExList ')'
  152          | '(' idList2 ')' inExpr '(' . select ')'
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  205 simExList: .  [',', ')']
  206          | . simpleExpr
  207          | . simExList ',' simpleExpr

    SELECT            shift, and go to state 2
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    $default  reduce using rule 205 (simExList)

    id           go to state 104
    select       go to state 436
    basicSelect  go to state 20
    ident        go to state 109
    simpleExpr   go to state 301
    simExList    go to state 437


state 371

  122 tableList: tableList ',' table .  [$end, WHERE, ORDER, GROUP, UNION, FOR, ',', ')', ';']
  124 table: table . join alias ON condition
  125 join: . JOIN
  126     | . LEFT JOIN
  127     | . outerType OUTER JOIN
  128     | . INNER JOIN
  129 outerType: . LEFT
  130          | . RIGHT
  131          | . FULL

    RIGHT  shift, and go to state 319
    INNER  shift, and go to state 320
    JOIN   shift, and go to state 321
    LEFT   shift, and go to state 322
    FULL   shift, and go to state 323

    $default  reduce using rule 122 (tableList)

    join       go to state 324
    outerType  go to state 325


state 372

  128 join: INNER JOIN .

    $default  reduce using rule 128 (join)


state 373

  126 join: LEFT JOIN .

    $default  reduce using rule 126 (join)


state 374

  124 table: table join alias . ON condition

    ON  shift, and go to state 438


state 375

  127 join: outerType OUTER . JOIN

    JOIN  shift, and go to state 439


state 376

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  208 partition: '(' PARTITION BY . ident orderBy ')'

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id     go to state 64
    ident  go to state 440


state 377

  150 condition: simpleExpr inExpr '(' select ')' .

    $default  reduce using rule 150 (condition)


state 378

  149 condition: simpleExpr inExpr '(' simExList ')' .

    $default  reduce using rule 149 (condition)


state 379

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  156 condition: simpleExpr optNot BETWEEN simpleExpr AND . simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 441


state 380

  165 escape: ESCAPE . STRING_SQ

    STRING_SQ  shift, and go to state 442


state 381

  154 condition: simpleExpr optNot LIKE simpleExpr escape .

    $default  reduce using rule 154 (condition)


state 382

   78 idList: idList ',' id .

    $default  reduce using rule 78 (idList)


state 383

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   46 assign: '(' idList ')' '=' . simpleExpr
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 443


state 384

   89 intoId: ':' ID .

    $default  reduce using rule 89 (intoId)


state 385

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   85 basicSelectInto: SELECT optDist whatToSelect INTO intoList FROM . tableList
  121 tableList: . table
  122          | . tableList ',' table
  123 table: . alias
  124      | . table join alias ON condition
  132 alias: . tableExpr
  133      | . tableExpr id
  134 tableExpr: . ident
  135          | . TABLE '(' simpleExpr ')'
  136          | . '(' select ')'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    TABLE             shift, and go to state 30
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 63

    id         go to state 64
    tableList  go to state 444
    table      go to state 248
    alias      go to state 249
    tableExpr  go to state 66
    ident      go to state 67


state 386

   86 intoList: . intoId
   87         | . intoId ',' intoList
   87         | intoId ',' . intoList
   88 intoId: . ID
   89       | . ':' ID

    ID   shift, and go to state 339
    ':'  shift, and go to state 340

    intoList  go to state 445
    intoId    go to state 342


state 387

  214 tableDefinition2: ON COMMIT . DELETE

    DELETE  shift, and go to state 446


state 388

  215 tableDefinition2: PRESERVE ROWS .

    $default  reduce using rule 215 (tableDefinition2)


state 389

  415 constraintName: qualifiedName .

    $default  reduce using rule 415 (constraintName)


state 390

  414 constraintNameDefinition: CONSTRAINT constraintName .

    $default  reduce using rule 414 (constraintNameDefinition)


state 391

  227 tableElementList: leftParen tableElement tableElementList1 . rightParen
  229 tableElementList1: tableElementList1 . comma tableElement
  267 rightParen: . ')'
  314 comma: . ','

    ','  shift, and go to state 447
    ')'  shift, and go to state 448

    rightParen  go to state 449
    comma       go to state 450


state 392

  317 approximateNumericType: REAL .

    $default  reduce using rule 317 (approximateNumericType)


state 393

  230 leftParen: . '('
  287 bitStringType: BIT . bitStringType1
  288              | BIT . VARYING bitStringType2
  289 bitStringType1: .  [',', ')']
  290               | . leftParen length rightParen

    VARYING  shift, and go to state 451
    '('      shift, and go to state 294

    $default  reduce using rule 289 (bitStringType1)

    leftParen       go to state 452
    bitStringType1  go to state 453


state 394

  300 exactNumericType: SMALLINT .

    $default  reduce using rule 300 (exactNumericType)


state 395

  230 leftParen: . '('
  271 nationalCharacterStringType: NCHAR . nationalCharacterStringType3
  274                            | NCHAR . VARYING nationalCharacterStringType6
  279 nationalCharacterStringType3: .  [',', ')']
  280                             | . leftParen length rightParen

    VARYING  shift, and go to state 454
    '('      shift, and go to state 294

    $default  reduce using rule 279 (nationalCharacterStringType3)

    leftParen                     go to state 455
    nationalCharacterStringType3  go to state 456


state 396

  321 datetimeType: DATE .

    $default  reduce using rule 321 (datetimeType)


state 397

  318 approximateNumericType: DOUBLE . PRECISION

    PRECISION  shift, and go to state 457


state 398

  230 leftParen: . '('
  323 datetimeType: TIMESTAMP . datetimeType3 datetimeType4
  328 datetimeType3: .  [WITH, ',', ')']
  329              | . leftParen timestampPrecision rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 328 (datetimeType3)

    leftParen      go to state 458
    datetimeType3  go to state 459


state 399

  230 leftParen: . '('
  295 exactNumericType: NUMERIC . exactNumericType2
  301 exactNumericType2: .  [',', ')']
  302                  | . leftParen precision exactNumericType1 rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 301 (exactNumericType2)

    leftParen          go to state 460
    exactNumericType2  go to state 461


state 400

  230 leftParen: . '('
  296 exactNumericType: DECIMAL . exactNumericType4
  305 exactNumericType4: .  [',', ')']
  306                  | . leftParen precision exactNumericType3 rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 305 (exactNumericType4)

    leftParen          go to state 462
    exactNumericType4  go to state 463


state 401

  230 leftParen: . '('
  297 exactNumericType: DEC . exactNumericType6
  309 exactNumericType6: .  [',', ')']
  310                  | . leftParen precision exactNumericType5 rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 309 (exactNumericType6)

    leftParen          go to state 464
    exactNumericType6  go to state 465


state 402

  230 leftParen: . '('
  322 datetimeType: TIME . datetimeType1 datetimeType2
  324 datetimeType1: .  [WITH, ',', ')']
  325              | . leftParen timePrecision rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 324 (datetimeType1)

    leftParen      go to state 466
    datetimeType1  go to state 467


state 403

  298 exactNumericType: INTEGER .

    $default  reduce using rule 298 (exactNumericType)


state 404

  230 leftParen: . '('
  250 characterStringType: CHARACTER . characterStringType1
  252                    | CHARACTER . VARYING characterStringType3
  255 characterStringType1: .  [CHARACTER, ',', ')']
  256                     | . leftParen length rightParen

    VARYING  shift, and go to state 468
    '('      shift, and go to state 294

    $default  reduce using rule 255 (characterStringType1)

    leftParen             go to state 469
    characterStringType1  go to state 470


state 405

  230 leftParen: . '('
  251 characterStringType: CHAR . characterStringType2
  253                    | CHAR . VARYING characterStringType4
  257 characterStringType2: .  [CHARACTER, ',', ')']
  258                     | . leftParen length rightParen

    VARYING  shift, and go to state 471
    '('      shift, and go to state 294

    $default  reduce using rule 257 (characterStringType2)

    leftParen             go to state 472
    characterStringType2  go to state 473


state 406

  299 exactNumericType: INT .

    $default  reduce using rule 299 (exactNumericType)


state 407

  269 nationalCharacterStringType: NATIONAL . CHARACTER nationalCharacterStringType1
  270                            | NATIONAL . CHAR nationalCharacterStringType2
  272                            | NATIONAL . CHARACTER VARYING nationalCharacterStringType4
  273                            | NATIONAL . CHAR VARYING nationalCharacterStringType5

    CHARACTER  shift, and go to state 474
    CHAR       shift, and go to state 475


state 408

  230 leftParen: . '('
  316 approximateNumericType: FLOAT . approximateNumericType1
  319 approximateNumericType1: .  [',', ')']
  320                        | . leftParen precision rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 319 (approximateNumericType1)

    leftParen                go to state 476
    approximateNumericType1  go to state 477


state 409

  335 intervalType: INTERVAL . intervalQualifier
  336 intervalQualifier: . startField TO endField
  337                  | . singleDatetimeField
  338 startField: . nonsecondDatetimeField startField1
  341 nonsecondDatetimeField: . YEAR
  342                       | . MONTH
  343                       | . DAY
  344                       | . HOUR
  345                       | . MINUTE
  352 singleDatetimeField: . nonsecondDatetimeField singleDatetimeField1
  353                    | . SECOND singleDatetimeField3

    SECOND  shift, and go to state 478
    MINUTE  shift, and go to state 479
    MONTH   shift, and go to state 480
    DAY     shift, and go to state 481
    HOUR    shift, and go to state 482
    YEAR    shift, and go to state 483

    intervalQualifier       go to state 484
    startField              go to state 485
    nonsecondDatetimeField  go to state 486
    singleDatetimeField     go to state 487


state 410

  230 leftParen: . '('
  254 characterStringType: VARCHAR . characterStringType5
  263 characterStringType5: .  [CHARACTER, ',', ')']
  264                     | . leftParen length rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 263 (characterStringType5)

    leftParen             go to state 488
    characterStringType5  go to state 489


state 411

  233 columnDefinition: columnName dataType .

    $default  reduce using rule 233 (columnDefinition)


state 412

  242 dataType: characterStringType . dataType1
  248 dataType1: .  [',', ')']
  249          | . CHARACTER SET characterSetSpecification

    CHARACTER  shift, and go to state 490

    $default  reduce using rule 248 (dataType1)

    dataType1  go to state 491


state 413

  243 dataType: nationalCharacterStringType .

    $default  reduce using rule 243 (dataType)


state 414

  244 dataType: bitStringType .

    $default  reduce using rule 244 (dataType)


state 415

  245 dataType: numericType .

    $default  reduce using rule 245 (dataType)


state 416

  293 numericType: exactNumericType .

    $default  reduce using rule 293 (numericType)


state 417

  294 numericType: approximateNumericType .

    $default  reduce using rule 294 (numericType)


state 418

  246 dataType: datetimeType .

    $default  reduce using rule 246 (dataType)


state 419

  247 dataType: intervalType .

    $default  reduce using rule 247 (dataType)


state 420

  361 defaultClause: DEFAULT . defaultOption
  362 defaultOption: . literal
  363              | . datetimeValueFunction
  364              | . USER
  365              | . CURRENT_USER
  366              | . SESSION_USER
  367              | . SYSTEM_USER
  368              | . NULL
  369 literal: . signedNumericLiteral
  370        | . generalLiteral
  371 signedNumericLiteral: . signedNumericLiteral1 unsignedNumericLiteral
  372 signedNumericLiteral1: .  [UNKNOWN_LEX]
  373                      | . sign
  374 sign: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1

    NULL               shift, and go to state 492
    UNKNOWN_LEX        shift, and go to state 493
    SESSION_USER       shift, and go to state 494
    DATE               shift, and go to state 495
    CURRENT_DATE       shift, and go to state 496
    TIMESTAMP          shift, and go to state 497
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 499
    CURRENT_TIME       shift, and go to state 500
    USER               shift, and go to state 501
    CURRENT_TIMESTAMP  shift, and go to state 502
    CURRENT_USER       shift, and go to state 503
    INTERVAL           shift, and go to state 504

    UNKNOWN_LEX  [reduce using rule 372 (signedNumericLiteral1)]

    defaultOption                   go to state 505
    literal                         go to state 506
    signedNumericLiteral            go to state 507
    signedNumericLiteral1           go to state 508
    sign                            go to state 509
    generalLiteral                  go to state 510
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 520
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523


state 421

  234 columnDefinition: domainName columnDefinition1 . columnDefinition2 columnDefinition3
  237 columnDefinition2: .
  238                  | . columnDefinition2 columnConstraintDefinition

    $default  reduce using rule 237 (columnDefinition2)

    columnDefinition2  go to state 524


state 422

  236 columnDefinition1: defaultClause .

    $default  reduce using rule 236 (columnDefinition1)


state 423

  420 uniqueSpecification: UNIQUE .

    $default  reduce using rule 420 (uniqueSpecification)


state 424

  421 uniqueSpecification: PRIMARY . KEY

    KEY  shift, and go to state 525


state 425

  230 leftParen: . '('
  448 checkConstraintDefinition: CHECK . leftParen searchCondition rightParen

    '('  shift, and go to state 294

    leftParen  go to state 526


state 426

  893 referentialConstraintDefinition: FOREIGN . KEY leftParen referencingColumns rightParen referencesSpecification

    KEY  shift, and go to state 527


state 427

  230 leftParen: . '('
  891 uniqueConstraintDefinition: uniqueSpecification . leftParen uniqueColumnList rightParen

    '('  shift, and go to state 294

    leftParen  go to state 528


state 428

  890 tableConstraint: checkConstraintDefinition .

    $default  reduce using rule 890 (tableConstraint)


state 429

  881 constraintCheckTime: . INITIALLY DEFERRED
  882                    | . INITIALLY IMMEDIATE
  883 tableConstraintDefinition: tableConstraintDefinition1 tableConstraint . tableConstraintDefinition2
  886 tableConstraintDefinition2: .  [',', ')']
  887                           | . constraintCheckTime

    INITIALLY  shift, and go to state 529

    $default  reduce using rule 886 (tableConstraintDefinition2)

    constraintCheckTime         go to state 530
    tableConstraintDefinition2  go to state 531


state 430

  888 tableConstraint: uniqueConstraintDefinition .

    $default  reduce using rule 888 (tableConstraint)


state 431

  889 tableConstraint: referentialConstraintDefinition .

    $default  reduce using rule 889 (tableConstraint)


state 432

  106 directionList: directionList ',' direction .

    $default  reduce using rule 106 (directionList)


state 433

   97 having: HAVING condition .  [$end, ORDER, UNION, FOR, ')', ';']
  143 condition: condition . AND condition
  144          | condition . OR condition
  145          | condition . XOR condition

    OR   shift, and go to state 170
    AND  shift, and go to state 171
    XOR  shift, and go to state 172

    $default  reduce using rule 97 (having)


state 434

  190 optSize: '(' . NUMBER ')'

    NUMBER  shift, and go to state 532


state 435

  183 simpleExpr: CAST '(' simpleExpr AS id optSize . ')'

    ')'  shift, and go to state 533


state 436

   82 select: select . UNION select
  152 condition: '(' idList2 ')' inExpr '(' select . ')'

    UNION  shift, and go to state 86
    ')'    shift, and go to state 534


state 437

  151 condition: '(' idList2 ')' inExpr '(' simExList . ')'
  207 simExList: simExList . ',' simpleExpr

    ','  shift, and go to state 290
    ')'  shift, and go to state 535


state 438

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  124 table: table join alias ON . condition
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    condition   go to state 536
    comparison  go to state 111
    simpleExpr  go to state 141


state 439

  127 join: outerType OUTER JOIN .

    $default  reduce using rule 127 (join)


state 440

   99 orderBy: . ORDER BY directionList
  208 partition: '(' PARTITION BY ident . orderBy ')'

    ORDER  shift, and go to state 142

    orderBy  go to state 537


state 441

  156 condition: simpleExpr optNot BETWEEN simpleExpr AND simpleExpr .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 156 (condition)


state 442

  165 escape: ESCAPE STRING_SQ .

    $default  reduce using rule 165 (escape)


state 443

   46 assign: '(' idList ')' '=' simpleExpr .  [$end, WHERE, ',', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 46 (assign)


state 444

   85 basicSelectInto: SELECT optDist whatToSelect INTO intoList FROM tableList .  [WHERE, ORDER, GROUP, ';']
  122 tableList: tableList . ',' table

    ','  shift, and go to state 318

    $default  reduce using rule 85 (basicSelectInto)


state 445

   87 intoList: intoId ',' intoList .

    $default  reduce using rule 87 (intoList)


state 446

  214 tableDefinition2: ON COMMIT DELETE .

    $default  reduce using rule 214 (tableDefinition2)


state 447

  314 comma: ',' .

    $default  reduce using rule 314 (comma)


state 448

  267 rightParen: ')' .

    $default  reduce using rule 267 (rightParen)


state 449

  227 tableElementList: leftParen tableElement tableElementList1 rightParen .

    $default  reduce using rule 227 (tableElementList)


state 450

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  229 tableElementList1: tableElementList1 comma . tableElement
  231 tableElement: . columnDefinition
  232             | . tableConstraintDefinition
  233 columnDefinition: . columnName dataType
  234                 | . domainName columnDefinition1 columnDefinition2 columnDefinition3
  241 columnName: . identifier
  360 domainName: . qualifiedName
  414 constraintNameDefinition: . CONSTRAINT constraintName
  883 tableConstraintDefinition: . tableConstraintDefinition1 tableConstraint tableConstraintDefinition2
  884 tableConstraintDefinition1: .  [UNIQUE, PRIMARY, CHECK, FOREIGN]
  885                           | . constraintNameDefinition

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 212
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    CONSTRAINT        shift, and go to state 352
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    DESC              [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    $default          reduce using rule 884 (tableConstraintDefinition1)

    id                          go to state 297
    qualifiedName               go to state 353
    qualifiedName1              go to state 216
    schemaName                  go to state 217
    identifier                  go to state 354
    tableElement                go to state 538
    columnDefinition            go to state 356
    columnName                  go to state 357
    domainName                  go to state 358
    constraintNameDefinition    go to state 359
    tableConstraintDefinition   go to state 360
    tableConstraintDefinition1  go to state 361


state 451

  230 leftParen: . '('
  288 bitStringType: BIT VARYING . bitStringType2
  291 bitStringType2: .  [',', ')']
  292               | . leftParen length rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 291 (bitStringType2)

    leftParen       go to state 539
    bitStringType2  go to state 540


state 452

  265 length: . unsignedInteger
  266 unsignedInteger: . NUMBER
  290 bitStringType1: leftParen . length rightParen

    NUMBER  shift, and go to state 541

    length           go to state 542
    unsignedInteger  go to state 543


state 453

  287 bitStringType: BIT bitStringType1 .

    $default  reduce using rule 287 (bitStringType)


state 454

  230 leftParen: . '('
  274 nationalCharacterStringType: NCHAR VARYING . nationalCharacterStringType6
  285 nationalCharacterStringType6: .  [',', ')']
  286                             | . leftParen length rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 285 (nationalCharacterStringType6)

    leftParen                     go to state 544
    nationalCharacterStringType6  go to state 545


state 455

  265 length: . unsignedInteger
  266 unsignedInteger: . NUMBER
  280 nationalCharacterStringType3: leftParen . length rightParen

    NUMBER  shift, and go to state 541

    length           go to state 546
    unsignedInteger  go to state 543


state 456

  271 nationalCharacterStringType: NCHAR nationalCharacterStringType3 .

    $default  reduce using rule 271 (nationalCharacterStringType)


state 457

  318 approximateNumericType: DOUBLE PRECISION .

    $default  reduce using rule 318 (approximateNumericType)


state 458

  266 unsignedInteger: . NUMBER
  329 datetimeType3: leftParen . timestampPrecision rightParen
  333 timeFractionalSecondsPrecision: . unsignedInteger
  334 timestampPrecision: . timeFractionalSecondsPrecision

    NUMBER  shift, and go to state 541

    unsignedInteger                 go to state 547
    timeFractionalSecondsPrecision  go to state 548
    timestampPrecision              go to state 549


state 459

  323 datetimeType: TIMESTAMP datetimeType3 . datetimeType4
  330 datetimeType4: .  [',', ')']
  331              | . WITH TIME ZONE

    WITH  shift, and go to state 550

    $default  reduce using rule 330 (datetimeType4)

    datetimeType4  go to state 551


state 460

  266 unsignedInteger: . NUMBER
  302 exactNumericType2: leftParen . precision exactNumericType1 rightParen
  313 precision: . unsignedInteger

    NUMBER  shift, and go to state 541

    unsignedInteger  go to state 552
    precision        go to state 553


state 461

  295 exactNumericType: NUMERIC exactNumericType2 .

    $default  reduce using rule 295 (exactNumericType)


state 462

  266 unsignedInteger: . NUMBER
  306 exactNumericType4: leftParen . precision exactNumericType3 rightParen
  313 precision: . unsignedInteger

    NUMBER  shift, and go to state 541

    unsignedInteger  go to state 552
    precision        go to state 554


state 463

  296 exactNumericType: DECIMAL exactNumericType4 .

    $default  reduce using rule 296 (exactNumericType)


state 464

  266 unsignedInteger: . NUMBER
  310 exactNumericType6: leftParen . precision exactNumericType5 rightParen
  313 precision: . unsignedInteger

    NUMBER  shift, and go to state 541

    unsignedInteger  go to state 552
    precision        go to state 555


state 465

  297 exactNumericType: DEC exactNumericType6 .

    $default  reduce using rule 297 (exactNumericType)


state 466

  266 unsignedInteger: . NUMBER
  325 datetimeType1: leftParen . timePrecision rightParen
  332 timePrecision: . timeFractionalSecondsPrecision
  333 timeFractionalSecondsPrecision: . unsignedInteger

    NUMBER  shift, and go to state 541

    unsignedInteger                 go to state 547
    timePrecision                   go to state 556
    timeFractionalSecondsPrecision  go to state 557


state 467

  322 datetimeType: TIME datetimeType1 . datetimeType2
  326 datetimeType2: .  [',', ')']
  327              | . WITH TIME ZONE

    WITH  shift, and go to state 558

    $default  reduce using rule 326 (datetimeType2)

    datetimeType2  go to state 559


state 468

  230 leftParen: . '('
  252 characterStringType: CHARACTER VARYING . characterStringType3
  259 characterStringType3: .  [CHARACTER, ',', ')']
  260                     | . leftParen length rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 259 (characterStringType3)

    leftParen             go to state 560
    characterStringType3  go to state 561


state 469

  256 characterStringType1: leftParen . length rightParen
  265 length: . unsignedInteger
  266 unsignedInteger: . NUMBER

    NUMBER  shift, and go to state 541

    length           go to state 562
    unsignedInteger  go to state 543


state 470

  250 characterStringType: CHARACTER characterStringType1 .

    $default  reduce using rule 250 (characterStringType)


state 471

  230 leftParen: . '('
  253 characterStringType: CHAR VARYING . characterStringType4
  261 characterStringType4: .  [CHARACTER, ',', ')']
  262                     | . leftParen length rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 261 (characterStringType4)

    leftParen             go to state 563
    characterStringType4  go to state 564


state 472

  258 characterStringType2: leftParen . length rightParen
  265 length: . unsignedInteger
  266 unsignedInteger: . NUMBER

    NUMBER  shift, and go to state 541

    length           go to state 565
    unsignedInteger  go to state 543


state 473

  251 characterStringType: CHAR characterStringType2 .

    $default  reduce using rule 251 (characterStringType)


state 474

  230 leftParen: . '('
  269 nationalCharacterStringType: NATIONAL CHARACTER . nationalCharacterStringType1
  272                            | NATIONAL CHARACTER . VARYING nationalCharacterStringType4
  275 nationalCharacterStringType1: .  [',', ')']
  276                             | . leftParen length rightParen

    VARYING  shift, and go to state 566
    '('      shift, and go to state 294

    $default  reduce using rule 275 (nationalCharacterStringType1)

    leftParen                     go to state 567
    nationalCharacterStringType1  go to state 568


state 475

  230 leftParen: . '('
  270 nationalCharacterStringType: NATIONAL CHAR . nationalCharacterStringType2
  273                            | NATIONAL CHAR . VARYING nationalCharacterStringType5
  277 nationalCharacterStringType2: .  [',', ')']
  278                             | . leftParen length rightParen

    VARYING  shift, and go to state 569
    '('      shift, and go to state 294

    $default  reduce using rule 277 (nationalCharacterStringType2)

    leftParen                     go to state 570
    nationalCharacterStringType2  go to state 571


state 476

  266 unsignedInteger: . NUMBER
  313 precision: . unsignedInteger
  320 approximateNumericType1: leftParen . precision rightParen

    NUMBER  shift, and go to state 541

    unsignedInteger  go to state 552
    precision        go to state 572


state 477

  316 approximateNumericType: FLOAT approximateNumericType1 .

    $default  reduce using rule 316 (approximateNumericType)


state 478

  230 leftParen: . '('
  353 singleDatetimeField: SECOND . singleDatetimeField3
  356 singleDatetimeField3: .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, UNIQUE, COLLATE, KEY, AVG, INITIALLY, UPPER, CONSTRAINT, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, PRIMARY, CHECK, REFERENCES, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  357                     | . leftParen intervalLeadingFieldPrecision singleDatetimeField2 rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 356 (singleDatetimeField3)

    leftParen             go to state 573
    singleDatetimeField3  go to state 574


state 479

  345 nonsecondDatetimeField: MINUTE .

    $default  reduce using rule 345 (nonsecondDatetimeField)


state 480

  342 nonsecondDatetimeField: MONTH .

    $default  reduce using rule 342 (nonsecondDatetimeField)


state 481

  343 nonsecondDatetimeField: DAY .

    $default  reduce using rule 343 (nonsecondDatetimeField)


state 482

  344 nonsecondDatetimeField: HOUR .

    $default  reduce using rule 344 (nonsecondDatetimeField)


state 483

  341 nonsecondDatetimeField: YEAR .

    $default  reduce using rule 341 (nonsecondDatetimeField)


state 484

  335 intervalType: INTERVAL intervalQualifier .

    $default  reduce using rule 335 (intervalType)


state 485

  336 intervalQualifier: startField . TO endField

    TO  shift, and go to state 575


state 486

  230 leftParen: . '('
  338 startField: nonsecondDatetimeField . startField1
  339 startField1: .  [TO]
  340            | . leftParen intervalLeadingFieldPrecision rightParen
  352 singleDatetimeField: nonsecondDatetimeField . singleDatetimeField1
  354 singleDatetimeField1: .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, UNIQUE, COLLATE, KEY, AVG, INITIALLY, UPPER, CONSTRAINT, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, PRIMARY, CHECK, REFERENCES, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  355                     | . leftParen intervalLeadingFieldPrecision rightParen

    '('  shift, and go to state 294

    TO        reduce using rule 339 (startField1)
    $default  reduce using rule 354 (singleDatetimeField1)

    leftParen             go to state 576
    startField1           go to state 577
    singleDatetimeField1  go to state 578


state 487

  337 intervalQualifier: singleDatetimeField .

    $default  reduce using rule 337 (intervalQualifier)


state 488

  264 characterStringType5: leftParen . length rightParen
  265 length: . unsignedInteger
  266 unsignedInteger: . NUMBER

    NUMBER  shift, and go to state 541

    length           go to state 579
    unsignedInteger  go to state 543


state 489

  254 characterStringType: VARCHAR characterStringType5 .

    $default  reduce using rule 254 (characterStringType)


state 490

  249 dataType1: CHARACTER . SET characterSetSpecification

    SET  shift, and go to state 580


state 491

  242 dataType: characterStringType dataType1 .

    $default  reduce using rule 242 (dataType)


state 492

  368 defaultOption: NULL .

    $default  reduce using rule 368 (defaultOption)


state 493

  374 sign: UNKNOWN_LEX .  [UNKNOWN_LEX]
  382 characterStringLiteral: UNKNOWN_LEX .  [NOT, UNIQUE, COLLATE, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  383 nationalCharacterStringLiteral: UNKNOWN_LEX .  [NOT, UNIQUE, COLLATE, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  384 bitStringLiteral: UNKNOWN_LEX .  [NOT, UNIQUE, COLLATE, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  385 hexStringLiteral: UNKNOWN_LEX .  [NOT, UNIQUE, COLLATE, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']

    NOT          reduce using rule 382 (characterStringLiteral)
    NOT          [reduce using rule 383 (nationalCharacterStringLiteral)]
    NOT          [reduce using rule 384 (bitStringLiteral)]
    NOT          [reduce using rule 385 (hexStringLiteral)]
    UNKNOWN_LEX  reduce using rule 374 (sign)
    UNIQUE       reduce using rule 382 (characterStringLiteral)
    UNIQUE       [reduce using rule 383 (nationalCharacterStringLiteral)]
    UNIQUE       [reduce using rule 384 (bitStringLiteral)]
    UNIQUE       [reduce using rule 385 (hexStringLiteral)]
    COLLATE      reduce using rule 382 (characterStringLiteral)
    COLLATE      [reduce using rule 383 (nationalCharacterStringLiteral)]
    COLLATE      [reduce using rule 384 (bitStringLiteral)]
    COLLATE      [reduce using rule 385 (hexStringLiteral)]
    CONSTRAINT   reduce using rule 382 (characterStringLiteral)
    CONSTRAINT   [reduce using rule 383 (nationalCharacterStringLiteral)]
    CONSTRAINT   [reduce using rule 384 (bitStringLiteral)]
    CONSTRAINT   [reduce using rule 385 (hexStringLiteral)]
    PRIMARY      reduce using rule 382 (characterStringLiteral)
    PRIMARY      [reduce using rule 383 (nationalCharacterStringLiteral)]
    PRIMARY      [reduce using rule 384 (bitStringLiteral)]
    PRIMARY      [reduce using rule 385 (hexStringLiteral)]
    CHECK        reduce using rule 382 (characterStringLiteral)
    CHECK        [reduce using rule 383 (nationalCharacterStringLiteral)]
    CHECK        [reduce using rule 384 (bitStringLiteral)]
    CHECK        [reduce using rule 385 (hexStringLiteral)]
    REFERENCES   reduce using rule 382 (characterStringLiteral)
    REFERENCES   [reduce using rule 383 (nationalCharacterStringLiteral)]
    REFERENCES   [reduce using rule 384 (bitStringLiteral)]
    REFERENCES   [reduce using rule 385 (hexStringLiteral)]
    ','          reduce using rule 382 (characterStringLiteral)
    ','          [reduce using rule 383 (nationalCharacterStringLiteral)]
    ','          [reduce using rule 384 (bitStringLiteral)]
    ','          [reduce using rule 385 (hexStringLiteral)]
    ')'          reduce using rule 382 (characterStringLiteral)
    ')'          [reduce using rule 383 (nationalCharacterStringLiteral)]
    ')'          [reduce using rule 384 (bitStringLiteral)]
    ')'          [reduce using rule 385 (hexStringLiteral)]
    $default     reduce using rule 382 (characterStringLiteral)


state 494

  366 defaultOption: SESSION_USER .

    $default  reduce using rule 366 (defaultOption)


state 495

  389 dateLiteral: DATE . dateString
  390 dateString: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 581

    dateString  go to state 582


state 496

  402 currentDateValueFunction: CURRENT_DATE .

    $default  reduce using rule 402 (currentDateValueFunction)


state 497

  393 timestampLiteral: TIMESTAMP . timestampString
  394 timestampString: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 583

    timestampString  go to state 584


state 498

  391 timeLiteral: TIME . timeString
  392 timeString: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 585

    timeString  go to state 586


state 499

  367 defaultOption: SYSTEM_USER .

    $default  reduce using rule 367 (defaultOption)


state 500

  230 leftParen: . '('
  403 currentTimeValueFunction: CURRENT_TIME . currentTimeValueFunction1
  404 currentTimeValueFunction1: .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, UNIQUE, COLLATE, KEY, AVG, INITIALLY, UPPER, CONSTRAINT, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, PRIMARY, CHECK, REFERENCES, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  405                          | . leftParen timePrecision rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 404 (currentTimeValueFunction1)

    leftParen                  go to state 587
    currentTimeValueFunction1  go to state 588


state 501

  364 defaultOption: USER .

    $default  reduce using rule 364 (defaultOption)


state 502

  230 leftParen: . '('
  406 currentTimestampValueFunction: CURRENT_TIMESTAMP . currentTimestampValueFunction1
  407 currentTimestampValueFunction1: .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, UNIQUE, COLLATE, KEY, AVG, INITIALLY, UPPER, CONSTRAINT, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, PRIMARY, CHECK, REFERENCES, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  408                               | . leftParen timestampPrecision rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 407 (currentTimestampValueFunction1)

    leftParen                       go to state 589
    currentTimestampValueFunction1  go to state 590


state 503

  365 defaultOption: CURRENT_USER .

    $default  reduce using rule 365 (defaultOption)


state 504

  374 sign: . UNKNOWN_LEX
  395 intervalLiteral: INTERVAL . intervalLiteral1 intervalString intervalQualifier
  396 intervalLiteral1: .  [UNKNOWN_LEX]
  397                 | . sign

    UNKNOWN_LEX  shift, and go to state 591

    UNKNOWN_LEX  [reduce using rule 396 (intervalLiteral1)]

    sign              go to state 592
    intervalLiteral1  go to state 593


state 505

  361 defaultClause: DEFAULT defaultOption .

    $default  reduce using rule 361 (defaultClause)


state 506

  362 defaultOption: literal .

    $default  reduce using rule 362 (defaultOption)


state 507

  369 literal: signedNumericLiteral .

    $default  reduce using rule 369 (literal)


state 508

  371 signedNumericLiteral: signedNumericLiteral1 . unsignedNumericLiteral
  375 unsignedNumericLiteral: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 594

    unsignedNumericLiteral  go to state 595


state 509

  373 signedNumericLiteral1: sign .

    $default  reduce using rule 373 (signedNumericLiteral1)


state 510

  370 literal: generalLiteral .

    $default  reduce using rule 370 (literal)


state 511

  376 generalLiteral: characterStringLiteral .

    $default  reduce using rule 376 (generalLiteral)


state 512

  377 generalLiteral: nationalCharacterStringLiteral .

    $default  reduce using rule 377 (generalLiteral)


state 513

  378 generalLiteral: bitStringLiteral .

    $default  reduce using rule 378 (generalLiteral)


state 514

  379 generalLiteral: hexStringLiteral .

    $default  reduce using rule 379 (generalLiteral)


state 515

  380 generalLiteral: datetimeLiteral .

    $default  reduce using rule 380 (generalLiteral)


state 516

  386 datetimeLiteral: dateLiteral .

    $default  reduce using rule 386 (datetimeLiteral)


state 517

  387 datetimeLiteral: timeLiteral .

    $default  reduce using rule 387 (datetimeLiteral)


state 518

  388 datetimeLiteral: timestampLiteral .

    $default  reduce using rule 388 (datetimeLiteral)


state 519

  381 generalLiteral: intervalLiteral .

    $default  reduce using rule 381 (generalLiteral)


state 520

  363 defaultOption: datetimeValueFunction .

    $default  reduce using rule 363 (defaultOption)


state 521

  399 datetimeValueFunction: currentDateValueFunction .

    $default  reduce using rule 399 (datetimeValueFunction)


state 522

  400 datetimeValueFunction: currentTimeValueFunction .

    $default  reduce using rule 400 (datetimeValueFunction)


state 523

  401 datetimeValueFunction: currentTimestampValueFunction .

    $default  reduce using rule 401 (datetimeValueFunction)


state 524

  234 columnDefinition: domainName columnDefinition1 columnDefinition2 . columnDefinition3
  238 columnDefinition2: columnDefinition2 . columnConstraintDefinition
  239 columnDefinition3: .  [',', ')']
  240                  | . collateClause
  409 columnConstraintDefinition: . columnConstraintDefinition1 columnConstraint columnConstraintDefinition2
  410 columnConstraintDefinition1: .  [NOT, UNIQUE, PRIMARY, CHECK, REFERENCES]
  411                            | . constraintNameDefinition
  414 constraintNameDefinition: . CONSTRAINT constraintName
  659 collateClause: . COLLATE collationName

    COLLATE     shift, and go to state 596
    CONSTRAINT  shift, and go to state 352

    ','       reduce using rule 239 (columnDefinition3)
    ')'       reduce using rule 239 (columnDefinition3)
    $default  reduce using rule 410 (columnConstraintDefinition1)

    columnDefinition3            go to state 597
    columnConstraintDefinition   go to state 598
    columnConstraintDefinition1  go to state 599
    constraintNameDefinition     go to state 600
    collateClause                go to state 601


state 525

  421 uniqueSpecification: PRIMARY KEY .

    $default  reduce using rule 421 (uniqueSpecification)


state 526

  448 checkConstraintDefinition: CHECK leftParen . searchCondition rightParen
  449 searchCondition: . booleanTerm
  450                | . searchCondition OR booleanTerm
  451 booleanTerm: . booleanFactor
  452            | . booleanTerm AND booleanFactor
  453 booleanFactor: . booleanFactor1 booleanTest
  454 booleanFactor1: .  [EXISTS, CASE, CAST, DESC, NULL, ASC, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  455               | . NOT

    NOT  shift, and go to state 602

    $default  reduce using rule 454 (booleanFactor1)

    searchCondition  go to state 603
    booleanTerm      go to state 604
    booleanFactor    go to state 605
    booleanFactor1   go to state 606


state 527

  230 leftParen: . '('
  893 referentialConstraintDefinition: FOREIGN KEY . leftParen referencingColumns rightParen referencesSpecification

    '('  shift, and go to state 294

    leftParen  go to state 607


state 528

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  224 identifier: . id
  241 columnName: . identifier
  431 columnNameList: . columnName columnNameList1
  891 uniqueConstraintDefinition: uniqueSpecification leftParen . uniqueColumnList rightParen
  892 uniqueColumnList: . columnNameList

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id                go to state 297
    identifier        go to state 354
    columnName        go to state 608
    columnNameList    go to state 609
    uniqueColumnList  go to state 610


state 529

  881 constraintCheckTime: INITIALLY . DEFERRED
  882                    | INITIALLY . IMMEDIATE

    IMMEDIATE  shift, and go to state 611
    DEFERRED   shift, and go to state 612


state 530

  887 tableConstraintDefinition2: constraintCheckTime .

    $default  reduce using rule 887 (tableConstraintDefinition2)


state 531

  883 tableConstraintDefinition: tableConstraintDefinition1 tableConstraint tableConstraintDefinition2 .

    $default  reduce using rule 883 (tableConstraintDefinition)


state 532

  190 optSize: '(' NUMBER . ')'

    ')'  shift, and go to state 613


state 533

  183 simpleExpr: CAST '(' simpleExpr AS id optSize ')' .

    $default  reduce using rule 183 (simpleExpr)


state 534

  152 condition: '(' idList2 ')' inExpr '(' select ')' .

    $default  reduce using rule 152 (condition)


state 535

  151 condition: '(' idList2 ')' inExpr '(' simExList ')' .

    $default  reduce using rule 151 (condition)


state 536

  124 table: table join alias ON condition .  [$end, WHERE, ORDER, GROUP, RIGHT, INNER, UNION, JOIN, LEFT, FULL, FOR, ',', ')', ';']
  143 condition: condition . AND condition
  144          | condition . OR condition
  145          | condition . XOR condition

    OR   shift, and go to state 170
    AND  shift, and go to state 171
    XOR  shift, and go to state 172

    $default  reduce using rule 124 (table)


state 537

  208 partition: '(' PARTITION BY ident orderBy . ')'

    ')'  shift, and go to state 614


state 538

  229 tableElementList1: tableElementList1 comma tableElement .

    $default  reduce using rule 229 (tableElementList1)


state 539

  265 length: . unsignedInteger
  266 unsignedInteger: . NUMBER
  292 bitStringType2: leftParen . length rightParen

    NUMBER  shift, and go to state 541

    length           go to state 615
    unsignedInteger  go to state 543


state 540

  288 bitStringType: BIT VARYING bitStringType2 .

    $default  reduce using rule 288 (bitStringType)


state 541

  266 unsignedInteger: NUMBER .

    $default  reduce using rule 266 (unsignedInteger)


state 542

  267 rightParen: . ')'
  290 bitStringType1: leftParen length . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 616


state 543

  265 length: unsignedInteger .

    $default  reduce using rule 265 (length)


state 544

  265 length: . unsignedInteger
  266 unsignedInteger: . NUMBER
  286 nationalCharacterStringType6: leftParen . length rightParen

    NUMBER  shift, and go to state 541

    length           go to state 617
    unsignedInteger  go to state 543


state 545

  274 nationalCharacterStringType: NCHAR VARYING nationalCharacterStringType6 .

    $default  reduce using rule 274 (nationalCharacterStringType)


state 546

  267 rightParen: . ')'
  280 nationalCharacterStringType3: leftParen length . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 618


state 547

  333 timeFractionalSecondsPrecision: unsignedInteger .

    $default  reduce using rule 333 (timeFractionalSecondsPrecision)


state 548

  334 timestampPrecision: timeFractionalSecondsPrecision .

    $default  reduce using rule 334 (timestampPrecision)


state 549

  267 rightParen: . ')'
  329 datetimeType3: leftParen timestampPrecision . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 619


state 550

  331 datetimeType4: WITH . TIME ZONE

    TIME  shift, and go to state 620


state 551

  323 datetimeType: TIMESTAMP datetimeType3 datetimeType4 .

    $default  reduce using rule 323 (datetimeType)


state 552

  313 precision: unsignedInteger .

    $default  reduce using rule 313 (precision)


state 553

  302 exactNumericType2: leftParen precision . exactNumericType1 rightParen
  303 exactNumericType1: .  [')']
  304                  | . comma scale
  314 comma: . ','

    ','  shift, and go to state 447

    $default  reduce using rule 303 (exactNumericType1)

    exactNumericType1  go to state 621
    comma              go to state 622


state 554

  306 exactNumericType4: leftParen precision . exactNumericType3 rightParen
  307 exactNumericType3: .  [')']
  308                  | . comma scale
  314 comma: . ','

    ','  shift, and go to state 447

    $default  reduce using rule 307 (exactNumericType3)

    exactNumericType3  go to state 623
    comma              go to state 624


state 555

  310 exactNumericType6: leftParen precision . exactNumericType5 rightParen
  311 exactNumericType5: .  [')']
  312                  | . comma scale
  314 comma: . ','

    ','  shift, and go to state 447

    $default  reduce using rule 311 (exactNumericType5)

    exactNumericType5  go to state 625
    comma              go to state 626


state 556

  267 rightParen: . ')'
  325 datetimeType1: leftParen timePrecision . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 627


state 557

  332 timePrecision: timeFractionalSecondsPrecision .

    $default  reduce using rule 332 (timePrecision)


state 558

  327 datetimeType2: WITH . TIME ZONE

    TIME  shift, and go to state 628


state 559

  322 datetimeType: TIME datetimeType1 datetimeType2 .

    $default  reduce using rule 322 (datetimeType)


state 560

  260 characterStringType3: leftParen . length rightParen
  265 length: . unsignedInteger
  266 unsignedInteger: . NUMBER

    NUMBER  shift, and go to state 541

    length           go to state 629
    unsignedInteger  go to state 543


state 561

  252 characterStringType: CHARACTER VARYING characterStringType3 .

    $default  reduce using rule 252 (characterStringType)


state 562

  256 characterStringType1: leftParen length . rightParen
  267 rightParen: . ')'

    ')'  shift, and go to state 448

    rightParen  go to state 630


state 563

  262 characterStringType4: leftParen . length rightParen
  265 length: . unsignedInteger
  266 unsignedInteger: . NUMBER

    NUMBER  shift, and go to state 541

    length           go to state 631
    unsignedInteger  go to state 543


state 564

  253 characterStringType: CHAR VARYING characterStringType4 .

    $default  reduce using rule 253 (characterStringType)


state 565

  258 characterStringType2: leftParen length . rightParen
  267 rightParen: . ')'

    ')'  shift, and go to state 448

    rightParen  go to state 632


state 566

  230 leftParen: . '('
  272 nationalCharacterStringType: NATIONAL CHARACTER VARYING . nationalCharacterStringType4
  281 nationalCharacterStringType4: .  [',', ')']
  282                             | . leftParen length rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 281 (nationalCharacterStringType4)

    leftParen                     go to state 633
    nationalCharacterStringType4  go to state 634


state 567

  265 length: . unsignedInteger
  266 unsignedInteger: . NUMBER
  276 nationalCharacterStringType1: leftParen . length rightParen

    NUMBER  shift, and go to state 541

    length           go to state 635
    unsignedInteger  go to state 543


state 568

  269 nationalCharacterStringType: NATIONAL CHARACTER nationalCharacterStringType1 .

    $default  reduce using rule 269 (nationalCharacterStringType)


state 569

  230 leftParen: . '('
  273 nationalCharacterStringType: NATIONAL CHAR VARYING . nationalCharacterStringType5
  283 nationalCharacterStringType5: .  [',', ')']
  284                             | . leftParen length rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 283 (nationalCharacterStringType5)

    leftParen                     go to state 636
    nationalCharacterStringType5  go to state 637


state 570

  265 length: . unsignedInteger
  266 unsignedInteger: . NUMBER
  278 nationalCharacterStringType2: leftParen . length rightParen

    NUMBER  shift, and go to state 541

    length           go to state 638
    unsignedInteger  go to state 543


state 571

  270 nationalCharacterStringType: NATIONAL CHAR nationalCharacterStringType2 .

    $default  reduce using rule 270 (nationalCharacterStringType)


state 572

  267 rightParen: . ')'
  320 approximateNumericType1: leftParen precision . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 639


state 573

  266 unsignedInteger: . NUMBER
  346 intervalLeadingFieldPrecision: . unsignedInteger
  357 singleDatetimeField3: leftParen . intervalLeadingFieldPrecision singleDatetimeField2 rightParen

    NUMBER  shift, and go to state 541

    unsignedInteger                go to state 640
    intervalLeadingFieldPrecision  go to state 641


state 574

  353 singleDatetimeField: SECOND singleDatetimeField3 .

    $default  reduce using rule 353 (singleDatetimeField)


state 575

  336 intervalQualifier: startField TO . endField
  341 nonsecondDatetimeField: . YEAR
  342                       | . MONTH
  343                       | . DAY
  344                       | . HOUR
  345                       | . MINUTE
  347 endField: . nonsecondDatetimeField
  348         | . SECOND endField1

    SECOND  shift, and go to state 642
    MINUTE  shift, and go to state 479
    MONTH   shift, and go to state 480
    DAY     shift, and go to state 481
    HOUR    shift, and go to state 482
    YEAR    shift, and go to state 483

    nonsecondDatetimeField  go to state 643
    endField                go to state 644


state 576

  266 unsignedInteger: . NUMBER
  340 startField1: leftParen . intervalLeadingFieldPrecision rightParen
  346 intervalLeadingFieldPrecision: . unsignedInteger
  355 singleDatetimeField1: leftParen . intervalLeadingFieldPrecision rightParen

    NUMBER  shift, and go to state 541

    unsignedInteger                go to state 640
    intervalLeadingFieldPrecision  go to state 645


state 577

  338 startField: nonsecondDatetimeField startField1 .

    $default  reduce using rule 338 (startField)


state 578

  352 singleDatetimeField: nonsecondDatetimeField singleDatetimeField1 .

    $default  reduce using rule 352 (singleDatetimeField)


state 579

  264 characterStringType5: leftParen length . rightParen
  267 rightParen: . ')'

    ')'  shift, and go to state 448

    rightParen  go to state 646


state 580

  249 dataType1: CHARACTER SET . characterSetSpecification
  268 characterSetSpecification: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 647

    characterSetSpecification  go to state 648


state 581

  390 dateString: UNKNOWN_LEX .

    $default  reduce using rule 390 (dateString)


state 582

  389 dateLiteral: DATE dateString .

    $default  reduce using rule 389 (dateLiteral)


state 583

  394 timestampString: UNKNOWN_LEX .

    $default  reduce using rule 394 (timestampString)


state 584

  393 timestampLiteral: TIMESTAMP timestampString .

    $default  reduce using rule 393 (timestampLiteral)


state 585

  392 timeString: UNKNOWN_LEX .

    $default  reduce using rule 392 (timeString)


state 586

  391 timeLiteral: TIME timeString .

    $default  reduce using rule 391 (timeLiteral)


state 587

  266 unsignedInteger: . NUMBER
  332 timePrecision: . timeFractionalSecondsPrecision
  333 timeFractionalSecondsPrecision: . unsignedInteger
  405 currentTimeValueFunction1: leftParen . timePrecision rightParen

    NUMBER  shift, and go to state 541

    unsignedInteger                 go to state 547
    timePrecision                   go to state 649
    timeFractionalSecondsPrecision  go to state 557


state 588

  403 currentTimeValueFunction: CURRENT_TIME currentTimeValueFunction1 .

    $default  reduce using rule 403 (currentTimeValueFunction)


state 589

  266 unsignedInteger: . NUMBER
  333 timeFractionalSecondsPrecision: . unsignedInteger
  334 timestampPrecision: . timeFractionalSecondsPrecision
  408 currentTimestampValueFunction1: leftParen . timestampPrecision rightParen

    NUMBER  shift, and go to state 541

    unsignedInteger                 go to state 547
    timeFractionalSecondsPrecision  go to state 548
    timestampPrecision              go to state 650


state 590

  406 currentTimestampValueFunction: CURRENT_TIMESTAMP currentTimestampValueFunction1 .

    $default  reduce using rule 406 (currentTimestampValueFunction)


state 591

  374 sign: UNKNOWN_LEX .

    $default  reduce using rule 374 (sign)


state 592

  397 intervalLiteral1: sign .

    $default  reduce using rule 397 (intervalLiteral1)


state 593

  395 intervalLiteral: INTERVAL intervalLiteral1 . intervalString intervalQualifier
  398 intervalString: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 651

    intervalString  go to state 652


state 594

  375 unsignedNumericLiteral: UNKNOWN_LEX .

    $default  reduce using rule 375 (unsignedNumericLiteral)


state 595

  371 signedNumericLiteral: signedNumericLiteral1 unsignedNumericLiteral .

    $default  reduce using rule 371 (signedNumericLiteral)


state 596

  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  659 collateClause: COLLATE . collationName
  660 collationName: . qualifiedName

    UNKNOWN_LEX  shift, and go to state 212

    $default  reduce using rule 219 (qualifiedName1)

    qualifiedName   go to state 653
    qualifiedName1  go to state 216
    schemaName      go to state 217
    collationName   go to state 654


state 597

  234 columnDefinition: domainName columnDefinition1 columnDefinition2 columnDefinition3 .

    $default  reduce using rule 234 (columnDefinition)


state 598

  238 columnDefinition2: columnDefinition2 columnConstraintDefinition .

    $default  reduce using rule 238 (columnDefinition2)


state 599

  409 columnConstraintDefinition: columnConstraintDefinition1 . columnConstraint columnConstraintDefinition2
  416 columnConstraint: . NOT NULL
  417                 | . uniqueSpecification
  418                 | . referencesSpecification
  419                 | . checkConstraintDefinition
  420 uniqueSpecification: . UNIQUE
  421                    | . PRIMARY KEY
  422 referencesSpecification: . REFERENCES referencedTableAndColumns referencesSpecification1 referencesSpecification2
  448 checkConstraintDefinition: . CHECK leftParen searchCondition rightParen

    NOT         shift, and go to state 655
    UNIQUE      shift, and go to state 423
    PRIMARY     shift, and go to state 424
    CHECK       shift, and go to state 425
    REFERENCES  shift, and go to state 656

    columnConstraint           go to state 657
    uniqueSpecification        go to state 658
    referencesSpecification    go to state 659
    checkConstraintDefinition  go to state 660


state 600

  411 columnConstraintDefinition1: constraintNameDefinition .

    $default  reduce using rule 411 (columnConstraintDefinition1)


state 601

  240 columnDefinition3: collateClause .

    $default  reduce using rule 240 (columnDefinition3)


state 602

  455 booleanFactor1: NOT .

    $default  reduce using rule 455 (booleanFactor1)


state 603

  267 rightParen: . ')'
  448 checkConstraintDefinition: CHECK leftParen searchCondition . rightParen
  450 searchCondition: searchCondition . OR booleanTerm

    OR   shift, and go to state 661
    ')'  shift, and go to state 448

    rightParen  go to state 662


state 604

  449 searchCondition: booleanTerm .  [HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, THEN, JOIN, LEFT, FULL, ON, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']
  452 booleanTerm: booleanTerm . AND booleanFactor

    AND  shift, and go to state 663

    $default  reduce using rule 449 (searchCondition)


state 605

  451 booleanTerm: booleanFactor .

    $default  reduce using rule 451 (booleanTerm)


state 606

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  453 booleanFactor: booleanFactor1 . booleanTest
  456 booleanTest: . booleanPrimary booleanTest2
  461 booleanPrimary: . predicate
  462               | . leftParen searchCondition rightParen
  463 predicate: . comparisonPredicate
  464          | . betweenPredicate
  465          | . inPredicate
  466          | . likePredicate
  467          | . nullPredicate
  468          | . quantifiedComparisonPredicate
  469          | . existsPredicate
  470          | . matchPredicate
  471          | . overlapsPredicate
  472 comparisonPredicate: . rowValueConstructor compOp rowValueConstructor
  473 rowValueConstructor: . rowValueConstructorElement
  474                    | . leftParen rowValueConstructorList rightParen
  475                    | . rowSubquery
  476 rowValueConstructorElement: . valueExpression
  477                           | . nullSpecification
  478                           | . defaultSpecification
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression
  812 nullSpecification: . NULL
  813 defaultSpecification: . DEFAULT
  817 rowSubquery: . subquery
  830 betweenPredicate: . rowValueConstructor betweenPredicate1 BETWEEN rowValueConstructor AND rowValueConstructor
  833 inPredicate: . rowValueConstructor inPredicate1 IN inPredicateValue
  841 likePredicate: . matchValue likePredicate1 LIKE pattern likePredicate2
  846 matchValue: . characterValueExpression
  849 nullPredicate: . IS nullPredicate1 NULL
  852 quantifiedComparisonPredicate: . rowValueConstructor compOp quantifier tableSubquery
  858 existsPredicate: . EXISTS tableSubquery
  859 matchPredicate: . rowValueConstructor MATCH matchPredicate1 matchPredicate2 tableSubquery
  865 overlapsPredicate: . rowValueConstructor1 OVERLAPS rowValueConstructor2
  866 rowValueConstructor1: . rowValueConstructor

    EXISTS             shift, and go to state 664
    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    NULL               shift, and go to state 667
    ASC                shift, and go to state 32
    IS                 shift, and go to state 668
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    DEFAULT            shift, and go to state 686
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 691
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    booleanTest                     go to state 696
    booleanPrimary                  go to state 697
    predicate                       go to state 698
    comparisonPredicate             go to state 699
    rowValueConstructor             go to state 700
    rowValueConstructorElement      go to state 701
    valueExpression                 go to state 702
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 726
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 733
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760
    nullSpecification               go to state 761
    defaultSpecification            go to state 762
    rowSubquery                     go to state 763
    betweenPredicate                go to state 764
    inPredicate                     go to state 765
    likePredicate                   go to state 766
    matchValue                      go to state 767
    nullPredicate                   go to state 768
    quantifiedComparisonPredicate   go to state 769
    existsPredicate                 go to state 770
    matchPredicate                  go to state 771
    overlapsPredicate               go to state 772
    rowValueConstructor1            go to state 773


state 607

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  224 identifier: . id
  241 columnName: . identifier
  430 referenceColumnList: . columnNameList
  431 columnNameList: . columnName columnNameList1
  893 referentialConstraintDefinition: FOREIGN KEY leftParen . referencingColumns rightParen referencesSpecification
  894 referencingColumns: . referenceColumnList

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id                   go to state 297
    identifier           go to state 354
    columnName           go to state 608
    referenceColumnList  go to state 774
    columnNameList       go to state 775
    referencingColumns   go to state 776


state 608

  431 columnNameList: columnName . columnNameList1
  432 columnNameList1: .
  433                | . columnNameList1 comma columnName

    $default  reduce using rule 432 (columnNameList1)

    columnNameList1  go to state 777


state 609

  892 uniqueColumnList: columnNameList .

    $default  reduce using rule 892 (uniqueColumnList)


state 610

  267 rightParen: . ')'
  891 uniqueConstraintDefinition: uniqueSpecification leftParen uniqueColumnList . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 778


state 611

  882 constraintCheckTime: INITIALLY IMMEDIATE .

    $default  reduce using rule 882 (constraintCheckTime)


state 612

  881 constraintCheckTime: INITIALLY DEFERRED .

    $default  reduce using rule 881 (constraintCheckTime)


state 613

  190 optSize: '(' NUMBER ')' .

    $default  reduce using rule 190 (optSize)


state 614

  208 partition: '(' PARTITION BY ident orderBy ')' .

    $default  reduce using rule 208 (partition)


state 615

  267 rightParen: . ')'
  292 bitStringType2: leftParen length . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 779


state 616

  290 bitStringType1: leftParen length rightParen .

    $default  reduce using rule 290 (bitStringType1)


state 617

  267 rightParen: . ')'
  286 nationalCharacterStringType6: leftParen length . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 780


state 618

  280 nationalCharacterStringType3: leftParen length rightParen .

    $default  reduce using rule 280 (nationalCharacterStringType3)


state 619

  329 datetimeType3: leftParen timestampPrecision rightParen .

    $default  reduce using rule 329 (datetimeType3)


state 620

  331 datetimeType4: WITH TIME . ZONE

    ZONE  shift, and go to state 781


state 621

  267 rightParen: . ')'
  302 exactNumericType2: leftParen precision exactNumericType1 . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 782


state 622

  266 unsignedInteger: . NUMBER
  304 exactNumericType1: comma . scale
  315 scale: . unsignedInteger

    NUMBER  shift, and go to state 541

    unsignedInteger  go to state 783
    scale            go to state 784


state 623

  267 rightParen: . ')'
  306 exactNumericType4: leftParen precision exactNumericType3 . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 785


state 624

  266 unsignedInteger: . NUMBER
  308 exactNumericType3: comma . scale
  315 scale: . unsignedInteger

    NUMBER  shift, and go to state 541

    unsignedInteger  go to state 783
    scale            go to state 786


state 625

  267 rightParen: . ')'
  310 exactNumericType6: leftParen precision exactNumericType5 . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 787


state 626

  266 unsignedInteger: . NUMBER
  312 exactNumericType5: comma . scale
  315 scale: . unsignedInteger

    NUMBER  shift, and go to state 541

    unsignedInteger  go to state 783
    scale            go to state 788


state 627

  325 datetimeType1: leftParen timePrecision rightParen .

    $default  reduce using rule 325 (datetimeType1)


state 628

  327 datetimeType2: WITH TIME . ZONE

    ZONE  shift, and go to state 789


state 629

  260 characterStringType3: leftParen length . rightParen
  267 rightParen: . ')'

    ')'  shift, and go to state 448

    rightParen  go to state 790


state 630

  256 characterStringType1: leftParen length rightParen .

    $default  reduce using rule 256 (characterStringType1)


state 631

  262 characterStringType4: leftParen length . rightParen
  267 rightParen: . ')'

    ')'  shift, and go to state 448

    rightParen  go to state 791


state 632

  258 characterStringType2: leftParen length rightParen .

    $default  reduce using rule 258 (characterStringType2)


state 633

  265 length: . unsignedInteger
  266 unsignedInteger: . NUMBER
  282 nationalCharacterStringType4: leftParen . length rightParen

    NUMBER  shift, and go to state 541

    length           go to state 792
    unsignedInteger  go to state 543


state 634

  272 nationalCharacterStringType: NATIONAL CHARACTER VARYING nationalCharacterStringType4 .

    $default  reduce using rule 272 (nationalCharacterStringType)


state 635

  267 rightParen: . ')'
  276 nationalCharacterStringType1: leftParen length . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 793


state 636

  265 length: . unsignedInteger
  266 unsignedInteger: . NUMBER
  284 nationalCharacterStringType5: leftParen . length rightParen

    NUMBER  shift, and go to state 541

    length           go to state 794
    unsignedInteger  go to state 543


state 637

  273 nationalCharacterStringType: NATIONAL CHAR VARYING nationalCharacterStringType5 .

    $default  reduce using rule 273 (nationalCharacterStringType)


state 638

  267 rightParen: . ')'
  278 nationalCharacterStringType2: leftParen length . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 795


state 639

  320 approximateNumericType1: leftParen precision rightParen .

    $default  reduce using rule 320 (approximateNumericType1)


state 640

  346 intervalLeadingFieldPrecision: unsignedInteger .

    $default  reduce using rule 346 (intervalLeadingFieldPrecision)


state 641

  314 comma: . ','
  357 singleDatetimeField3: leftParen intervalLeadingFieldPrecision . singleDatetimeField2 rightParen
  358 singleDatetimeField2: .  [')']
  359                     | . comma leftParen intervalFractionalSecondsPrecision

    ','  shift, and go to state 447

    $default  reduce using rule 358 (singleDatetimeField2)

    comma                 go to state 796
    singleDatetimeField2  go to state 797


state 642

  230 leftParen: . '('
  348 endField: SECOND . endField1
  349 endField1: .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, UNIQUE, COLLATE, KEY, AVG, INITIALLY, UPPER, CONSTRAINT, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, PRIMARY, CHECK, REFERENCES, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  350          | . leftParen intervalFractionalSecondsPrecision rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 349 (endField1)

    leftParen  go to state 798
    endField1  go to state 799


state 643

  347 endField: nonsecondDatetimeField .

    $default  reduce using rule 347 (endField)


state 644

  336 intervalQualifier: startField TO endField .

    $default  reduce using rule 336 (intervalQualifier)


state 645

  267 rightParen: . ')'
  340 startField1: leftParen intervalLeadingFieldPrecision . rightParen
  355 singleDatetimeField1: leftParen intervalLeadingFieldPrecision . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 800


state 646

  264 characterStringType5: leftParen length rightParen .

    $default  reduce using rule 264 (characterStringType5)


state 647

  268 characterSetSpecification: UNKNOWN_LEX .

    $default  reduce using rule 268 (characterSetSpecification)


state 648

  249 dataType1: CHARACTER SET characterSetSpecification .

    $default  reduce using rule 249 (dataType1)


state 649

  267 rightParen: . ')'
  405 currentTimeValueFunction1: leftParen timePrecision . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 801


state 650

  267 rightParen: . ')'
  408 currentTimestampValueFunction1: leftParen timestampPrecision . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 802


state 651

  398 intervalString: UNKNOWN_LEX .

    $default  reduce using rule 398 (intervalString)


state 652

  336 intervalQualifier: . startField TO endField
  337                  | . singleDatetimeField
  338 startField: . nonsecondDatetimeField startField1
  341 nonsecondDatetimeField: . YEAR
  342                       | . MONTH
  343                       | . DAY
  344                       | . HOUR
  345                       | . MINUTE
  352 singleDatetimeField: . nonsecondDatetimeField singleDatetimeField1
  353                    | . SECOND singleDatetimeField3
  395 intervalLiteral: INTERVAL intervalLiteral1 intervalString . intervalQualifier

    SECOND  shift, and go to state 478
    MINUTE  shift, and go to state 479
    MONTH   shift, and go to state 480
    DAY     shift, and go to state 481
    HOUR    shift, and go to state 482
    YEAR    shift, and go to state 483

    intervalQualifier       go to state 803
    startField              go to state 485
    nonsecondDatetimeField  go to state 486
    singleDatetimeField     go to state 487


state 653

  660 collationName: qualifiedName .

    $default  reduce using rule 660 (collationName)


state 654

  659 collateClause: COLLATE collationName .

    $default  reduce using rule 659 (collateClause)


state 655

  416 columnConstraint: NOT . NULL

    NULL  shift, and go to state 804


state 656

  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  225 qualifiedLocalTableName: . MODULE period localTableName
  422 referencesSpecification: REFERENCES . referencedTableAndColumns referencesSpecification1 referencesSpecification2
  427 referencedTableAndColumns: . tableName referencedTableAndColumns1

    UNKNOWN_LEX  shift, and go to state 212
    MODULE       shift, and go to state 213

    $default  reduce using rule 219 (qualifiedName1)

    tableName                  go to state 805
    qualifiedName              go to state 215
    qualifiedName1             go to state 216
    schemaName                 go to state 217
    qualifiedLocalTableName    go to state 218
    referencedTableAndColumns  go to state 806


state 657

  409 columnConstraintDefinition: columnConstraintDefinition1 columnConstraint . columnConstraintDefinition2
  412 columnConstraintDefinition2: .  [NOT, UNIQUE, COLLATE, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  413                            | . constraintAttributes
  871 constraintAttributes: . constraintCheckTime constraintAttributes2
  872                     | . constraintAttributes3 DEFERRABLE constraintAttributes4
  877 constraintAttributes3: .  [DEFERRABLE]
  878                      | . NOT
  881 constraintCheckTime: . INITIALLY DEFERRED
  882                    | . INITIALLY IMMEDIATE

    NOT        shift, and go to state 807
    INITIALLY  shift, and go to state 529

    NOT         [reduce using rule 412 (columnConstraintDefinition2)]
    DEFERRABLE  reduce using rule 877 (constraintAttributes3)
    $default    reduce using rule 412 (columnConstraintDefinition2)

    columnConstraintDefinition2  go to state 808
    constraintAttributes         go to state 809
    constraintAttributes3        go to state 810
    constraintCheckTime          go to state 811


state 658

  417 columnConstraint: uniqueSpecification .

    $default  reduce using rule 417 (columnConstraint)


state 659

  418 columnConstraint: referencesSpecification .

    $default  reduce using rule 418 (columnConstraint)


state 660

  419 columnConstraint: checkConstraintDefinition .

    $default  reduce using rule 419 (columnConstraint)


state 661

  450 searchCondition: searchCondition OR . booleanTerm
  451 booleanTerm: . booleanFactor
  452            | . booleanTerm AND booleanFactor
  453 booleanFactor: . booleanFactor1 booleanTest
  454 booleanFactor1: .  [EXISTS, CASE, CAST, DESC, NULL, ASC, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  455               | . NOT

    NOT  shift, and go to state 602

    $default  reduce using rule 454 (booleanFactor1)

    booleanTerm     go to state 812
    booleanFactor   go to state 605
    booleanFactor1  go to state 606


state 662

  448 checkConstraintDefinition: CHECK leftParen searchCondition rightParen .

    $default  reduce using rule 448 (checkConstraintDefinition)


state 663

  452 booleanTerm: booleanTerm AND . booleanFactor
  453 booleanFactor: . booleanFactor1 booleanTest
  454 booleanFactor1: .  [EXISTS, CASE, CAST, DESC, NULL, ASC, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  455               | . NOT

    NOT  shift, and go to state 602

    $default  reduce using rule 454 (booleanFactor1)

    booleanFactor   go to state 813
    booleanFactor1  go to state 606


state 664

  230 leftParen: . '('
  564 subquery: . leftParen queryExpression rightParen
  626 tableSubquery: . subquery
  858 existsPredicate: EXISTS . tableSubquery

    '('  shift, and go to state 294

    leftParen      go to state 814
    subquery       go to state 815
    tableSubquery  go to state 816


state 665

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  683           | CASE . caseOperand simpleCase1 simpleCase2 END
  688 caseOperand: . valueExpression
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  695             | CASE . searchedCase1 searchedCase2 END
  696 searchedCase1: . searchedWhenClause
  697              | . searchedCase1 searchedWhenClause
  700 searchedWhenClause: . WHEN searchCondition THEN result
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression

    WHEN               shift, and go to state 817
    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 818
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 819
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    caseOperand                     go to state 821
    searchedCase                    go to state 731
    searchedCase1                   go to state 822
    searchedWhenClause              go to state 823
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760


state 666

  230 leftParen: . '('
  701 castSpecification: CAST . leftParen castOperand AS castTarget rightParen

    '('  shift, and go to state 294

    leftParen  go to state 825


state 667

  812 nullSpecification: NULL .

    $default  reduce using rule 812 (nullSpecification)


state 668

  849 nullPredicate: IS . nullPredicate1 NULL
  850 nullPredicate1: .  [NULL]
  851               | . NOT

    NOT  shift, and go to state 826

    $default  reduce using rule 850 (nullPredicate1)

    nullPredicate1  go to state 827


state 669

  221 schemaName: UNKNOWN_LEX .  [UNKNOWN_LEX]
  374 sign: UNKNOWN_LEX .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  375 unsignedNumericLiteral: UNKNOWN_LEX .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  382 characterStringLiteral: UNKNOWN_LEX .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  383 nationalCharacterStringLiteral: UNKNOWN_LEX .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  384 bitStringLiteral: UNKNOWN_LEX .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  385 hexStringLiteral: UNKNOWN_LEX .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  517 colon: UNKNOWN_LEX .  [DESC, ASC, UNKNOWN_BODY, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  522 questionMark: UNKNOWN_LEX .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']

    BETWEEN           reduce using rule 375 (unsignedNumericLiteral)
    BETWEEN           [reduce using rule 382 (characterStringLiteral)]
    BETWEEN           [reduce using rule 383 (nationalCharacterStringLiteral)]
    BETWEEN           [reduce using rule 384 (bitStringLiteral)]
    BETWEEN           [reduce using rule 385 (hexStringLiteral)]
    BETWEEN           [reduce using rule 522 (questionMark)]
    HAVING            reduce using rule 375 (unsignedNumericLiteral)
    HAVING            [reduce using rule 382 (characterStringLiteral)]
    HAVING            [reduce using rule 383 (nationalCharacterStringLiteral)]
    HAVING            [reduce using rule 384 (bitStringLiteral)]
    HAVING            [reduce using rule 385 (hexStringLiteral)]
    HAVING            [reduce using rule 522 (questionMark)]
    WHERE             reduce using rule 375 (unsignedNumericLiteral)
    WHERE             [reduce using rule 382 (characterStringLiteral)]
    WHERE             [reduce using rule 383 (nationalCharacterStringLiteral)]
    WHERE             [reduce using rule 384 (bitStringLiteral)]
    WHERE             [reduce using rule 385 (hexStringLiteral)]
    WHERE             [reduce using rule 522 (questionMark)]
    OR                reduce using rule 375 (unsignedNumericLiteral)
    OR                [reduce using rule 382 (characterStringLiteral)]
    OR                [reduce using rule 383 (nationalCharacterStringLiteral)]
    OR                [reduce using rule 384 (bitStringLiteral)]
    OR                [reduce using rule 385 (hexStringLiteral)]
    OR                [reduce using rule 522 (questionMark)]
    GROUP             reduce using rule 375 (unsignedNumericLiteral)
    GROUP             [reduce using rule 382 (characterStringLiteral)]
    GROUP             [reduce using rule 383 (nationalCharacterStringLiteral)]
    GROUP             [reduce using rule 384 (bitStringLiteral)]
    GROUP             [reduce using rule 385 (hexStringLiteral)]
    GROUP             [reduce using rule 522 (questionMark)]
    RIGHT             reduce using rule 375 (unsignedNumericLiteral)
    RIGHT             [reduce using rule 382 (characterStringLiteral)]
    RIGHT             [reduce using rule 383 (nationalCharacterStringLiteral)]
    RIGHT             [reduce using rule 384 (bitStringLiteral)]
    RIGHT             [reduce using rule 385 (hexStringLiteral)]
    RIGHT             [reduce using rule 522 (questionMark)]
    INNER             reduce using rule 375 (unsignedNumericLiteral)
    INNER             [reduce using rule 382 (characterStringLiteral)]
    INNER             [reduce using rule 383 (nationalCharacterStringLiteral)]
    INNER             [reduce using rule 384 (bitStringLiteral)]
    INNER             [reduce using rule 385 (hexStringLiteral)]
    INNER             [reduce using rule 522 (questionMark)]
    UNION             reduce using rule 375 (unsignedNumericLiteral)
    UNION             [reduce using rule 382 (characterStringLiteral)]
    UNION             [reduce using rule 383 (nationalCharacterStringLiteral)]
    UNION             [reduce using rule 384 (bitStringLiteral)]
    UNION             [reduce using rule 385 (hexStringLiteral)]
    UNION             [reduce using rule 522 (questionMark)]
    FROM              reduce using rule 375 (unsignedNumericLiteral)
    FROM              [reduce using rule 382 (characterStringLiteral)]
    FROM              [reduce using rule 383 (nationalCharacterStringLiteral)]
    FROM              [reduce using rule 384 (bitStringLiteral)]
    FROM              [reduce using rule 385 (hexStringLiteral)]
    FROM              [reduce using rule 522 (questionMark)]
    WHEN              reduce using rule 375 (unsignedNumericLiteral)
    WHEN              [reduce using rule 382 (characterStringLiteral)]
    WHEN              [reduce using rule 383 (nationalCharacterStringLiteral)]
    WHEN              [reduce using rule 384 (bitStringLiteral)]
    WHEN              [reduce using rule 385 (hexStringLiteral)]
    WHEN              [reduce using rule 522 (questionMark)]
    THEN              reduce using rule 375 (unsignedNumericLiteral)
    THEN              [reduce using rule 382 (characterStringLiteral)]
    THEN              [reduce using rule 383 (nationalCharacterStringLiteral)]
    THEN              [reduce using rule 384 (bitStringLiteral)]
    THEN              [reduce using rule 385 (hexStringLiteral)]
    THEN              [reduce using rule 522 (questionMark)]
    ELSE              reduce using rule 375 (unsignedNumericLiteral)
    ELSE              [reduce using rule 382 (characterStringLiteral)]
    ELSE              [reduce using rule 383 (nationalCharacterStringLiteral)]
    ELSE              [reduce using rule 384 (bitStringLiteral)]
    ELSE              [reduce using rule 385 (hexStringLiteral)]
    ELSE              [reduce using rule 522 (questionMark)]
    DESC              reduce using rule 374 (sign)
    DESC              [reduce using rule 375 (unsignedNumericLiteral)]
    DESC              [reduce using rule 382 (characterStringLiteral)]
    DESC              [reduce using rule 383 (nationalCharacterStringLiteral)]
    DESC              [reduce using rule 384 (bitStringLiteral)]
    DESC              [reduce using rule 385 (hexStringLiteral)]
    DESC              [reduce using rule 517 (colon)]
    DESC              [reduce using rule 522 (questionMark)]
    LIKE              reduce using rule 375 (unsignedNumericLiteral)
    LIKE              [reduce using rule 382 (characterStringLiteral)]
    LIKE              [reduce using rule 383 (nationalCharacterStringLiteral)]
    LIKE              [reduce using rule 384 (bitStringLiteral)]
    LIKE              [reduce using rule 385 (hexStringLiteral)]
    LIKE              [reduce using rule 522 (questionMark)]
    JOIN              reduce using rule 375 (unsignedNumericLiteral)
    JOIN              [reduce using rule 382 (characterStringLiteral)]
    JOIN              [reduce using rule 383 (nationalCharacterStringLiteral)]
    JOIN              [reduce using rule 384 (bitStringLiteral)]
    JOIN              [reduce using rule 385 (hexStringLiteral)]
    JOIN              [reduce using rule 522 (questionMark)]
    LEFT              reduce using rule 375 (unsignedNumericLiteral)
    LEFT              [reduce using rule 382 (characterStringLiteral)]
    LEFT              [reduce using rule 383 (nationalCharacterStringLiteral)]
    LEFT              [reduce using rule 384 (bitStringLiteral)]
    LEFT              [reduce using rule 385 (hexStringLiteral)]
    LEFT              [reduce using rule 522 (questionMark)]
    FULL              reduce using rule 375 (unsignedNumericLiteral)
    FULL              [reduce using rule 382 (characterStringLiteral)]
    FULL              [reduce using rule 383 (nationalCharacterStringLiteral)]
    FULL              [reduce using rule 384 (bitStringLiteral)]
    FULL              [reduce using rule 385 (hexStringLiteral)]
    FULL              [reduce using rule 522 (questionMark)]
    AND               reduce using rule 375 (unsignedNumericLiteral)
    AND               [reduce using rule 382 (characterStringLiteral)]
    AND               [reduce using rule 383 (nationalCharacterStringLiteral)]
    AND               [reduce using rule 384 (bitStringLiteral)]
    AND               [reduce using rule 385 (hexStringLiteral)]
    AND               [reduce using rule 522 (questionMark)]
    END               reduce using rule 375 (unsignedNumericLiteral)
    END               [reduce using rule 382 (characterStringLiteral)]
    END               [reduce using rule 383 (nationalCharacterStringLiteral)]
    END               [reduce using rule 384 (bitStringLiteral)]
    END               [reduce using rule 385 (hexStringLiteral)]
    END               [reduce using rule 522 (questionMark)]
    ASC               reduce using rule 374 (sign)
    ASC               [reduce using rule 375 (unsignedNumericLiteral)]
    ASC               [reduce using rule 382 (characterStringLiteral)]
    ASC               [reduce using rule 383 (nationalCharacterStringLiteral)]
    ASC               [reduce using rule 384 (bitStringLiteral)]
    ASC               [reduce using rule 385 (hexStringLiteral)]
    ASC               [reduce using rule 517 (colon)]
    ASC               [reduce using rule 522 (questionMark)]
    NOT               reduce using rule 375 (unsignedNumericLiteral)
    NOT               [reduce using rule 382 (characterStringLiteral)]
    NOT               [reduce using rule 383 (nationalCharacterStringLiteral)]
    NOT               [reduce using rule 384 (bitStringLiteral)]
    NOT               [reduce using rule 385 (hexStringLiteral)]
    NOT               [reduce using rule 522 (questionMark)]
    ON                reduce using rule 375 (unsignedNumericLiteral)
    ON                [reduce using rule 382 (characterStringLiteral)]
    ON                [reduce using rule 383 (nationalCharacterStringLiteral)]
    ON                [reduce using rule 384 (bitStringLiteral)]
    ON                [reduce using rule 385 (hexStringLiteral)]
    ON                [reduce using rule 522 (questionMark)]
    AS                reduce using rule 375 (unsignedNumericLiteral)
    AS                [reduce using rule 382 (characterStringLiteral)]
    AS                [reduce using rule 383 (nationalCharacterStringLiteral)]
    AS                [reduce using rule 384 (bitStringLiteral)]
    AS                [reduce using rule 385 (hexStringLiteral)]
    AS                [reduce using rule 522 (questionMark)]
    IN                reduce using rule 375 (unsignedNumericLiteral)
    IN                [reduce using rule 382 (characterStringLiteral)]
    IN                [reduce using rule 383 (nationalCharacterStringLiteral)]
    IN                [reduce using rule 384 (bitStringLiteral)]
    IN                [reduce using rule 385 (hexStringLiteral)]
    IN                [reduce using rule 522 (questionMark)]
    IS                reduce using rule 375 (unsignedNumericLiteral)
    IS                [reduce using rule 382 (characterStringLiteral)]
    IS                [reduce using rule 383 (nationalCharacterStringLiteral)]
    IS                [reduce using rule 384 (bitStringLiteral)]
    IS                [reduce using rule 385 (hexStringLiteral)]
    IS                [reduce using rule 522 (questionMark)]
    UNKNOWN_BODY      reduce using rule 517 (colon)
    UNKNOWN_LEX       reduce using rule 221 (schemaName)
    UNKNOWN_LEX       [reduce using rule 374 (sign)]
    UNKNOWN_LEX       [reduce using rule 375 (unsignedNumericLiteral)]
    UNKNOWN_LEX       [reduce using rule 382 (characterStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 383 (nationalCharacterStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 384 (bitStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 385 (hexStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 522 (questionMark)]
    ACTION            reduce using rule 374 (sign)
    ACTION            [reduce using rule 375 (unsignedNumericLiteral)]
    ACTION            [reduce using rule 382 (characterStringLiteral)]
    ACTION            [reduce using rule 383 (nationalCharacterStringLiteral)]
    ACTION            [reduce using rule 384 (bitStringLiteral)]
    ACTION            [reduce using rule 385 (hexStringLiteral)]
    ACTION            [reduce using rule 517 (colon)]
    ACTION            [reduce using rule 522 (questionMark)]
    MIN               reduce using rule 374 (sign)
    MIN               [reduce using rule 375 (unsignedNumericLiteral)]
    MIN               [reduce using rule 382 (characterStringLiteral)]
    MIN               [reduce using rule 383 (nationalCharacterStringLiteral)]
    MIN               [reduce using rule 384 (bitStringLiteral)]
    MIN               [reduce using rule 385 (hexStringLiteral)]
    MIN               [reduce using rule 517 (colon)]
    MIN               [reduce using rule 522 (questionMark)]
    OCTET_LENGTH      reduce using rule 374 (sign)
    OCTET_LENGTH      [reduce using rule 375 (unsignedNumericLiteral)]
    OCTET_LENGTH      [reduce using rule 382 (characterStringLiteral)]
    OCTET_LENGTH      [reduce using rule 383 (nationalCharacterStringLiteral)]
    OCTET_LENGTH      [reduce using rule 384 (bitStringLiteral)]
    OCTET_LENGTH      [reduce using rule 385 (hexStringLiteral)]
    OCTET_LENGTH      [reduce using rule 517 (colon)]
    OCTET_LENGTH      [reduce using rule 522 (questionMark)]
    CROSS             reduce using rule 375 (unsignedNumericLiteral)
    CROSS             [reduce using rule 382 (characterStringLiteral)]
    CROSS             [reduce using rule 383 (nationalCharacterStringLiteral)]
    CROSS             [reduce using rule 384 (bitStringLiteral)]
    CROSS             [reduce using rule 385 (hexStringLiteral)]
    CROSS             [reduce using rule 522 (questionMark)]
    DEFERRED          reduce using rule 374 (sign)
    DEFERRED          [reduce using rule 375 (unsignedNumericLiteral)]
    DEFERRED          [reduce using rule 382 (characterStringLiteral)]
    DEFERRED          [reduce using rule 383 (nationalCharacterStringLiteral)]
    DEFERRED          [reduce using rule 384 (bitStringLiteral)]
    DEFERRED          [reduce using rule 385 (hexStringLiteral)]
    DEFERRED          [reduce using rule 517 (colon)]
    DEFERRED          [reduce using rule 522 (questionMark)]
    DEFERRABLE        reduce using rule 374 (sign)
    DEFERRABLE        [reduce using rule 375 (unsignedNumericLiteral)]
    DEFERRABLE        [reduce using rule 382 (characterStringLiteral)]
    DEFERRABLE        [reduce using rule 383 (nationalCharacterStringLiteral)]
    DEFERRABLE        [reduce using rule 384 (bitStringLiteral)]
    DEFERRABLE        [reduce using rule 385 (hexStringLiteral)]
    DEFERRABLE        [reduce using rule 517 (colon)]
    DEFERRABLE        [reduce using rule 522 (questionMark)]
    ZONE              reduce using rule 374 (sign)
    ZONE              [reduce using rule 375 (unsignedNumericLiteral)]
    ZONE              [reduce using rule 382 (characterStringLiteral)]
    ZONE              [reduce using rule 383 (nationalCharacterStringLiteral)]
    ZONE              [reduce using rule 384 (bitStringLiteral)]
    ZONE              [reduce using rule 385 (hexStringLiteral)]
    ZONE              [reduce using rule 517 (colon)]
    ZONE              [reduce using rule 522 (questionMark)]
    INTERSECT         reduce using rule 375 (unsignedNumericLiteral)
    INTERSECT         [reduce using rule 382 (characterStringLiteral)]
    INTERSECT         [reduce using rule 383 (nationalCharacterStringLiteral)]
    INTERSECT         [reduce using rule 384 (bitStringLiteral)]
    INTERSECT         [reduce using rule 385 (hexStringLiteral)]
    INTERSECT         [reduce using rule 522 (questionMark)]
    COUNT             reduce using rule 374 (sign)
    COUNT             [reduce using rule 375 (unsignedNumericLiteral)]
    COUNT             [reduce using rule 382 (characterStringLiteral)]
    COUNT             [reduce using rule 383 (nationalCharacterStringLiteral)]
    COUNT             [reduce using rule 384 (bitStringLiteral)]
    COUNT             [reduce using rule 385 (hexStringLiteral)]
    COUNT             [reduce using rule 517 (colon)]
    COUNT             [reduce using rule 522 (questionMark)]
    NATURAL           reduce using rule 375 (unsignedNumericLiteral)
    NATURAL           [reduce using rule 382 (characterStringLiteral)]
    NATURAL           [reduce using rule 383 (nationalCharacterStringLiteral)]
    NATURAL           [reduce using rule 384 (bitStringLiteral)]
    NATURAL           [reduce using rule 385 (hexStringLiteral)]
    NATURAL           [reduce using rule 522 (questionMark)]
    NULLIF            reduce using rule 374 (sign)
    NULLIF            [reduce using rule 375 (unsignedNumericLiteral)]
    NULLIF            [reduce using rule 382 (characterStringLiteral)]
    NULLIF            [reduce using rule 383 (nationalCharacterStringLiteral)]
    NULLIF            [reduce using rule 384 (bitStringLiteral)]
    NULLIF            [reduce using rule 385 (hexStringLiteral)]
    NULLIF            [reduce using rule 517 (colon)]
    NULLIF            [reduce using rule 522 (questionMark)]
    SUM               reduce using rule 374 (sign)
    SUM               [reduce using rule 375 (unsignedNumericLiteral)]
    SUM               [reduce using rule 382 (characterStringLiteral)]
    SUM               [reduce using rule 383 (nationalCharacterStringLiteral)]
    SUM               [reduce using rule 384 (bitStringLiteral)]
    SUM               [reduce using rule 385 (hexStringLiteral)]
    SUM               [reduce using rule 517 (colon)]
    SUM               [reduce using rule 522 (questionMark)]
    COLLATE           reduce using rule 375 (unsignedNumericLiteral)
    COLLATE           [reduce using rule 382 (characterStringLiteral)]
    COLLATE           [reduce using rule 383 (nationalCharacterStringLiteral)]
    COLLATE           [reduce using rule 384 (bitStringLiteral)]
    COLLATE           [reduce using rule 385 (hexStringLiteral)]
    COLLATE           [reduce using rule 522 (questionMark)]
    KEY               reduce using rule 374 (sign)
    KEY               [reduce using rule 375 (unsignedNumericLiteral)]
    KEY               [reduce using rule 382 (characterStringLiteral)]
    KEY               [reduce using rule 383 (nationalCharacterStringLiteral)]
    KEY               [reduce using rule 384 (bitStringLiteral)]
    KEY               [reduce using rule 385 (hexStringLiteral)]
    KEY               [reduce using rule 517 (colon)]
    KEY               [reduce using rule 522 (questionMark)]
    AVG               reduce using rule 374 (sign)
    AVG               [reduce using rule 375 (unsignedNumericLiteral)]
    AVG               [reduce using rule 382 (characterStringLiteral)]
    AVG               [reduce using rule 383 (nationalCharacterStringLiteral)]
    AVG               [reduce using rule 384 (bitStringLiteral)]
    AVG               [reduce using rule 385 (hexStringLiteral)]
    AVG               [reduce using rule 517 (colon)]
    AVG               [reduce using rule 522 (questionMark)]
    INITIALLY         reduce using rule 374 (sign)
    INITIALLY         [reduce using rule 375 (unsignedNumericLiteral)]
    INITIALLY         [reduce using rule 382 (characterStringLiteral)]
    INITIALLY         [reduce using rule 383 (nationalCharacterStringLiteral)]
    INITIALLY         [reduce using rule 384 (bitStringLiteral)]
    INITIALLY         [reduce using rule 385 (hexStringLiteral)]
    INITIALLY         [reduce using rule 517 (colon)]
    INITIALLY         [reduce using rule 522 (questionMark)]
    UPPER             reduce using rule 374 (sign)
    UPPER             [reduce using rule 375 (unsignedNumericLiteral)]
    UPPER             [reduce using rule 382 (characterStringLiteral)]
    UPPER             [reduce using rule 383 (nationalCharacterStringLiteral)]
    UPPER             [reduce using rule 384 (bitStringLiteral)]
    UPPER             [reduce using rule 385 (hexStringLiteral)]
    UPPER             [reduce using rule 517 (colon)]
    UPPER             [reduce using rule 522 (questionMark)]
    EXCEPT            reduce using rule 375 (unsignedNumericLiteral)
    EXCEPT            [reduce using rule 382 (characterStringLiteral)]
    EXCEPT            [reduce using rule 383 (nationalCharacterStringLiteral)]
    EXCEPT            [reduce using rule 384 (bitStringLiteral)]
    EXCEPT            [reduce using rule 385 (hexStringLiteral)]
    EXCEPT            [reduce using rule 522 (questionMark)]
    EXTRACT           reduce using rule 374 (sign)
    EXTRACT           [reduce using rule 375 (unsignedNumericLiteral)]
    EXTRACT           [reduce using rule 382 (characterStringLiteral)]
    EXTRACT           [reduce using rule 383 (nationalCharacterStringLiteral)]
    EXTRACT           [reduce using rule 384 (bitStringLiteral)]
    EXTRACT           [reduce using rule 385 (hexStringLiteral)]
    EXTRACT           [reduce using rule 517 (colon)]
    EXTRACT           [reduce using rule 522 (questionMark)]
    CHAR_LENGTH       reduce using rule 374 (sign)
    CHAR_LENGTH       [reduce using rule 375 (unsignedNumericLiteral)]
    CHAR_LENGTH       [reduce using rule 382 (characterStringLiteral)]
    CHAR_LENGTH       [reduce using rule 383 (nationalCharacterStringLiteral)]
    CHAR_LENGTH       [reduce using rule 384 (bitStringLiteral)]
    CHAR_LENGTH       [reduce using rule 385 (hexStringLiteral)]
    CHAR_LENGTH       [reduce using rule 517 (colon)]
    CHAR_LENGTH       [reduce using rule 522 (questionMark)]
    SUBSTRING         reduce using rule 374 (sign)
    SUBSTRING         [reduce using rule 375 (unsignedNumericLiteral)]
    SUBSTRING         [reduce using rule 382 (characterStringLiteral)]
    SUBSTRING         [reduce using rule 383 (nationalCharacterStringLiteral)]
    SUBSTRING         [reduce using rule 384 (bitStringLiteral)]
    SUBSTRING         [reduce using rule 385 (hexStringLiteral)]
    SUBSTRING         [reduce using rule 517 (colon)]
    SUBSTRING         [reduce using rule 522 (questionMark)]
    PARTIAL           reduce using rule 374 (sign)
    PARTIAL           [reduce using rule 375 (unsignedNumericLiteral)]
    PARTIAL           [reduce using rule 382 (characterStringLiteral)]
    PARTIAL           [reduce using rule 383 (nationalCharacterStringLiteral)]
    PARTIAL           [reduce using rule 384 (bitStringLiteral)]
    PARTIAL           [reduce using rule 385 (hexStringLiteral)]
    PARTIAL           [reduce using rule 517 (colon)]
    PARTIAL           [reduce using rule 522 (questionMark)]
    MAX               reduce using rule 374 (sign)
    MAX               [reduce using rule 375 (unsignedNumericLiteral)]
    MAX               [reduce using rule 382 (characterStringLiteral)]
    MAX               [reduce using rule 383 (nationalCharacterStringLiteral)]
    MAX               [reduce using rule 384 (bitStringLiteral)]
    MAX               [reduce using rule 385 (hexStringLiteral)]
    MAX               [reduce using rule 517 (colon)]
    MAX               [reduce using rule 522 (questionMark)]
    LOWER             reduce using rule 374 (sign)
    LOWER             [reduce using rule 375 (unsignedNumericLiteral)]
    LOWER             [reduce using rule 382 (characterStringLiteral)]
    LOWER             [reduce using rule 383 (nationalCharacterStringLiteral)]
    LOWER             [reduce using rule 384 (bitStringLiteral)]
    LOWER             [reduce using rule 385 (hexStringLiteral)]
    LOWER             [reduce using rule 517 (colon)]
    LOWER             [reduce using rule 522 (questionMark)]
    USING             reduce using rule 375 (unsignedNumericLiteral)
    USING             [reduce using rule 382 (characterStringLiteral)]
    USING             [reduce using rule 383 (nationalCharacterStringLiteral)]
    USING             [reduce using rule 384 (bitStringLiteral)]
    USING             [reduce using rule 385 (hexStringLiteral)]
    USING             [reduce using rule 522 (questionMark)]
    CASCADE           reduce using rule 374 (sign)
    CASCADE           [reduce using rule 375 (unsignedNumericLiteral)]
    CASCADE           [reduce using rule 382 (characterStringLiteral)]
    CASCADE           [reduce using rule 383 (nationalCharacterStringLiteral)]
    CASCADE           [reduce using rule 384 (bitStringLiteral)]
    CASCADE           [reduce using rule 385 (hexStringLiteral)]
    CASCADE           [reduce using rule 517 (colon)]
    CASCADE           [reduce using rule 522 (questionMark)]
    TEMPORARY         reduce using rule 374 (sign)
    TEMPORARY         [reduce using rule 375 (unsignedNumericLiteral)]
    TEMPORARY         [reduce using rule 382 (characterStringLiteral)]
    TEMPORARY         [reduce using rule 383 (nationalCharacterStringLiteral)]
    TEMPORARY         [reduce using rule 384 (bitStringLiteral)]
    TEMPORARY         [reduce using rule 385 (hexStringLiteral)]
    TEMPORARY         [reduce using rule 517 (colon)]
    TEMPORARY         [reduce using rule 522 (questionMark)]
    OVERLAPS          reduce using rule 375 (unsignedNumericLiteral)
    OVERLAPS          [reduce using rule 382 (characterStringLiteral)]
    OVERLAPS          [reduce using rule 383 (nationalCharacterStringLiteral)]
    OVERLAPS          [reduce using rule 384 (bitStringLiteral)]
    OVERLAPS          [reduce using rule 385 (hexStringLiteral)]
    OVERLAPS          [reduce using rule 522 (questionMark)]
    CHARACTER_LENGTH  reduce using rule 374 (sign)
    CHARACTER_LENGTH  [reduce using rule 375 (unsignedNumericLiteral)]
    CHARACTER_LENGTH  [reduce using rule 382 (characterStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 383 (nationalCharacterStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 384 (bitStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 385 (hexStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 517 (colon)]
    CHARACTER_LENGTH  [reduce using rule 522 (questionMark)]
    MATCH             reduce using rule 375 (unsignedNumericLiteral)
    MATCH             [reduce using rule 382 (characterStringLiteral)]
    MATCH             [reduce using rule 383 (nationalCharacterStringLiteral)]
    MATCH             [reduce using rule 384 (bitStringLiteral)]
    MATCH             [reduce using rule 385 (hexStringLiteral)]
    MATCH             [reduce using rule 522 (questionMark)]
    CONVERT           reduce using rule 374 (sign)
    CONVERT           [reduce using rule 375 (unsignedNumericLiteral)]
    CONVERT           [reduce using rule 382 (characterStringLiteral)]
    CONVERT           [reduce using rule 383 (nationalCharacterStringLiteral)]
    CONVERT           [reduce using rule 384 (bitStringLiteral)]
    CONVERT           [reduce using rule 385 (hexStringLiteral)]
    CONVERT           [reduce using rule 517 (colon)]
    CONVERT           [reduce using rule 522 (questionMark)]
    TRANSLATE         reduce using rule 374 (sign)
    TRANSLATE         [reduce using rule 375 (unsignedNumericLiteral)]
    TRANSLATE         [reduce using rule 382 (characterStringLiteral)]
    TRANSLATE         [reduce using rule 383 (nationalCharacterStringLiteral)]
    TRANSLATE         [reduce using rule 384 (bitStringLiteral)]
    TRANSLATE         [reduce using rule 385 (hexStringLiteral)]
    TRANSLATE         [reduce using rule 517 (colon)]
    TRANSLATE         [reduce using rule 522 (questionMark)]
    PRESERVE          reduce using rule 374 (sign)
    PRESERVE          [reduce using rule 375 (unsignedNumericLiteral)]
    PRESERVE          [reduce using rule 382 (characterStringLiteral)]
    PRESERVE          [reduce using rule 383 (nationalCharacterStringLiteral)]
    PRESERVE          [reduce using rule 384 (bitStringLiteral)]
    PRESERVE          [reduce using rule 385 (hexStringLiteral)]
    PRESERVE          [reduce using rule 517 (colon)]
    PRESERVE          [reduce using rule 522 (questionMark)]
    POSITION          reduce using rule 374 (sign)
    POSITION          [reduce using rule 375 (unsignedNumericLiteral)]
    POSITION          [reduce using rule 382 (characterStringLiteral)]
    POSITION          [reduce using rule 383 (nationalCharacterStringLiteral)]
    POSITION          [reduce using rule 384 (bitStringLiteral)]
    POSITION          [reduce using rule 385 (hexStringLiteral)]
    POSITION          [reduce using rule 517 (colon)]
    POSITION          [reduce using rule 522 (questionMark)]
    COALESCE          reduce using rule 374 (sign)
    COALESCE          [reduce using rule 375 (unsignedNumericLiteral)]
    COALESCE          [reduce using rule 382 (characterStringLiteral)]
    COALESCE          [reduce using rule 383 (nationalCharacterStringLiteral)]
    COALESCE          [reduce using rule 384 (bitStringLiteral)]
    COALESCE          [reduce using rule 385 (hexStringLiteral)]
    COALESCE          [reduce using rule 517 (colon)]
    COALESCE          [reduce using rule 522 (questionMark)]
    TRIM              reduce using rule 374 (sign)
    TRIM              [reduce using rule 375 (unsignedNumericLiteral)]
    TRIM              [reduce using rule 382 (characterStringLiteral)]
    TRIM              [reduce using rule 383 (nationalCharacterStringLiteral)]
    TRIM              [reduce using rule 384 (bitStringLiteral)]
    TRIM              [reduce using rule 385 (hexStringLiteral)]
    TRIM              [reduce using rule 517 (colon)]
    TRIM              [reduce using rule 522 (questionMark)]
    AT                reduce using rule 375 (unsignedNumericLiteral)
    AT                [reduce using rule 382 (characterStringLiteral)]
    AT                [reduce using rule 383 (nationalCharacterStringLiteral)]
    AT                [reduce using rule 384 (bitStringLiteral)]
    AT                [reduce using rule 385 (hexStringLiteral)]
    AT                [reduce using rule 522 (questionMark)]
    NUMBER            reduce using rule 374 (sign)
    NUMBER            [reduce using rule 375 (unsignedNumericLiteral)]
    NUMBER            [reduce using rule 382 (characterStringLiteral)]
    NUMBER            [reduce using rule 383 (nationalCharacterStringLiteral)]
    NUMBER            [reduce using rule 384 (bitStringLiteral)]
    NUMBER            [reduce using rule 385 (hexStringLiteral)]
    NUMBER            [reduce using rule 517 (colon)]
    NUMBER            [reduce using rule 522 (questionMark)]
    ID                reduce using rule 374 (sign)
    ID                [reduce using rule 375 (unsignedNumericLiteral)]
    ID                [reduce using rule 382 (characterStringLiteral)]
    ID                [reduce using rule 383 (nationalCharacterStringLiteral)]
    ID                [reduce using rule 384 (bitStringLiteral)]
    ID                [reduce using rule 385 (hexStringLiteral)]
    ID                [reduce using rule 517 (colon)]
    ID                [reduce using rule 522 (questionMark)]
    ','               reduce using rule 375 (unsignedNumericLiteral)
    ','               [reduce using rule 382 (characterStringLiteral)]
    ','               [reduce using rule 383 (nationalCharacterStringLiteral)]
    ','               [reduce using rule 384 (bitStringLiteral)]
    ','               [reduce using rule 385 (hexStringLiteral)]
    ','               [reduce using rule 522 (questionMark)]
    ')'               reduce using rule 375 (unsignedNumericLiteral)
    ')'               [reduce using rule 382 (characterStringLiteral)]
    ')'               [reduce using rule 383 (nationalCharacterStringLiteral)]
    ')'               [reduce using rule 384 (bitStringLiteral)]
    ')'               [reduce using rule 385 (hexStringLiteral)]
    ')'               [reduce using rule 522 (questionMark)]
    $default          reduce using rule 374 (sign)


state 670

   26 id: MIN .  [UNKNOWN_LEX]
  558 setFunctionType: MIN .  ['(']

    '('       reduce using rule 558 (setFunctionType)
    $default  reduce using rule 26 (id)


state 671

   27 id: COUNT .  [UNKNOWN_LEX]
  230 leftParen: . '('
  550 setFunctionSpecification: COUNT . leftParen asterisk rightParen
  560 setFunctionType: COUNT .  ['(']

    '('  shift, and go to state 294

    '('       [reduce using rule 560 (setFunctionType)]
    $default  reduce using rule 27 (id)

    leftParen  go to state 828


state 672

  510 generalValueSpecification: SESSION_USER .

    $default  reduce using rule 510 (generalValueSpecification)


state 673

   32 id: NULLIF .  [UNKNOWN_LEX]
  230 leftParen: . '('
  677 caseAbbreviation: NULLIF . leftParen valueExpression comma valueExpression rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 32 (id)

    leftParen  go to state 829


state 674

   19 id: SUM .  [UNKNOWN_LEX]
  559 setFunctionType: SUM .  ['(']

    '('       reduce using rule 559 (setFunctionType)
    $default  reduce using rule 19 (id)


state 675

   23 id: AVG .  [UNKNOWN_LEX]
  556 setFunctionType: AVG .  ['(']

    '('       reduce using rule 556 (setFunctionType)
    $default  reduce using rule 23 (id)


state 676

   31 id: UPPER .  [UNKNOWN_LEX]
  732 fold: UPPER .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']

    UNKNOWN_LEX  reduce using rule 31 (id)
    UNKNOWN_LEX  [reduce using rule 732 (fold)]
    $default     reduce using rule 732 (fold)


state 677

  511 generalValueSpecification: SYSTEM_USER .

    $default  reduce using rule 511 (generalValueSpecification)


state 678

   40 id: SUBSTRING .  [UNKNOWN_LEX]
  230 leftParen: . '('
  727 characterSubstringFunction: SUBSTRING . leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  752 bitSubstringFunction: SUBSTRING . leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 40 (id)

    leftParen  go to state 830


state 679

  508 generalValueSpecification: USER .

    $default  reduce using rule 508 (generalValueSpecification)


state 680

   33 id: MAX .  [UNKNOWN_LEX]
  557 setFunctionType: MAX .  ['(']

    '('       reduce using rule 557 (setFunctionType)
    $default  reduce using rule 33 (id)


state 681

   18 id: LOWER .  [UNKNOWN_LEX]
  230 leftParen: . '('
  733 fold: LOWER . leftParen characterValueExpression rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 18 (id)

    leftParen  go to state 831


state 682

  512 generalValueSpecification: VALUE .

    $default  reduce using rule 512 (generalValueSpecification)


state 683

   39 id: CONVERT .  [UNKNOWN_LEX]
  230 leftParen: . '('
  734 formofuseConversion: CONVERT . leftParen characterValueExpression USING formofuseConversionName rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 39 (id)

    leftParen  go to state 832


state 684

  509 generalValueSpecification: CURRENT_USER .

    $default  reduce using rule 509 (generalValueSpecification)


state 685

   16 id: TRANSLATE .  [UNKNOWN_LEX]
  230 leftParen: . '('
  736 characterTranslation: TRANSLATE . leftParen characterValueExpression USING translationName rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 16 (id)

    leftParen  go to state 833


state 686

  813 defaultSpecification: DEFAULT .

    $default  reduce using rule 813 (defaultSpecification)


state 687

   29 id: COALESCE .  [UNKNOWN_LEX]
  230 leftParen: . '('
  678 caseAbbreviation: COALESCE . leftParen valueExpression caseAbbreviation1 rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 29 (id)

    leftParen  go to state 834


state 688

   17 id: TRIM .  [UNKNOWN_LEX]
  230 leftParen: . '('
  738 trimFunction: TRIM . leftParen trimOperands rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 17 (id)

    leftParen  go to state 835


state 689

  547 qualifier: tableName .

    $default  reduce using rule 547 (qualifier)


state 690

  549 correlationName: identifier .

    $default  reduce using rule 549 (correlationName)


state 691

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  449 searchCondition: . booleanTerm
  450                | . searchCondition OR booleanTerm
  451 booleanTerm: . booleanFactor
  452            | . booleanTerm AND booleanFactor
  453 booleanFactor: . booleanFactor1 booleanTest
  454 booleanFactor1: .  [EXISTS, CASE, CAST, DESC, NULL, ASC, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  455               | . NOT
  462 booleanPrimary: leftParen . searchCondition rightParen
  474 rowValueConstructor: leftParen . rowValueConstructorList rightParen
  476 rowValueConstructorElement: . valueExpression
  477                           | . nullSpecification
  478                           | . defaultSpecification
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  499                       | leftParen . valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  564         | leftParen . queryExpression rightParen
  565 queryExpression: . nonjoinQueryExpression
  566                | . joinedTable
  567 nonjoinQueryExpression: . nonjoinQueryTerm
  568                       | . queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  569                       | . queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  578 nonjoinQueryTerm: . nonjoinQueryPrimary
  579                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  584 nonjoinQueryPrimary: . simpleTable
  585                    | . leftParen nonjoinQueryExpression rightParen
  586 simpleTable: . querySpecification
  587            | . tableValueConstructor
  588            | . explicitTable
  589 querySpecification: . SELECT querySpecification1 selectList tableExpression
  614 tableReference: . tableName tableReference1
  615               | . derivedTable correlationSpecification
  616               | . joinedTable
  625 derivedTable: . tableSubquery
  626 tableSubquery: . subquery
  627 joinedTable: . crossJoin
  628            | . qualifiedJoin
  629            | . leftParen joinedTable rightParen
  630 crossJoin: . tableReference CROSS JOIN tableReference
  631 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  662 tableValueConstructor: . VALUES tableValueConstructorList
  666 explicitTable: . TABLE tableName
  667 queryTerm: . nonjoinQueryTerm
  668          | . joinedTable
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  786                        | leftParen . datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression
  812 nullSpecification: . NULL
  813 defaultSpecification: . DEFAULT
  814 rowValueConstructorList: . rowValueConstructorElement rowValueConstructorList1

    VALUES             shift, and go to state 836
    SELECT             shift, and go to state 837
    TABLE              shift, and go to state 838
    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    NULL               shift, and go to state 667
    ASC                shift, and go to state 32
    NOT                shift, and go to state 602
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    DEFAULT            shift, and go to state 686
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE               [reduce using rule 454 (booleanFactor1)]
    CASE               [reduce using rule 490 (factor1)]
    CASE               [reduce using rule 792 (intervalFactor1)]
    CAST               [reduce using rule 454 (booleanFactor1)]
    CAST               [reduce using rule 490 (factor1)]
    CAST               [reduce using rule 792 (intervalFactor1)]
    DESC               [reduce using rule 219 (qualifiedName1)]
    DESC               [reduce using rule 454 (booleanFactor1)]
    DESC               [reduce using rule 490 (factor1)]
    DESC               [reduce using rule 545 (columnReference1)]
    DESC               [reduce using rule 792 (intervalFactor1)]
    NULL               [reduce using rule 454 (booleanFactor1)]
    ASC                [reduce using rule 219 (qualifiedName1)]
    ASC                [reduce using rule 454 (booleanFactor1)]
    ASC                [reduce using rule 490 (factor1)]
    ASC                [reduce using rule 545 (columnReference1)]
    ASC                [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX        [reduce using rule 454 (booleanFactor1)]
    UNKNOWN_LEX        [reduce using rule 490 (factor1)]
    UNKNOWN_LEX        [reduce using rule 792 (intervalFactor1)]
    ACTION             [reduce using rule 219 (qualifiedName1)]
    ACTION             [reduce using rule 454 (booleanFactor1)]
    ACTION             [reduce using rule 490 (factor1)]
    ACTION             [reduce using rule 545 (columnReference1)]
    ACTION             [reduce using rule 792 (intervalFactor1)]
    MIN                [reduce using rule 219 (qualifiedName1)]
    MIN                [reduce using rule 454 (booleanFactor1)]
    MIN                [reduce using rule 490 (factor1)]
    MIN                [reduce using rule 545 (columnReference1)]
    MIN                [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH       [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH       [reduce using rule 454 (booleanFactor1)]
    OCTET_LENGTH       [reduce using rule 490 (factor1)]
    OCTET_LENGTH       [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH       [reduce using rule 792 (intervalFactor1)]
    DEFERRED           [reduce using rule 219 (qualifiedName1)]
    DEFERRED           [reduce using rule 454 (booleanFactor1)]
    DEFERRED           [reduce using rule 490 (factor1)]
    DEFERRED           [reduce using rule 545 (columnReference1)]
    DEFERRED           [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE         [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE         [reduce using rule 454 (booleanFactor1)]
    DEFERRABLE         [reduce using rule 490 (factor1)]
    DEFERRABLE         [reduce using rule 545 (columnReference1)]
    DEFERRABLE         [reduce using rule 792 (intervalFactor1)]
    ZONE               [reduce using rule 219 (qualifiedName1)]
    ZONE               [reduce using rule 454 (booleanFactor1)]
    ZONE               [reduce using rule 490 (factor1)]
    ZONE               [reduce using rule 545 (columnReference1)]
    ZONE               [reduce using rule 792 (intervalFactor1)]
    COUNT              [reduce using rule 219 (qualifiedName1)]
    COUNT              [reduce using rule 454 (booleanFactor1)]
    COUNT              [reduce using rule 490 (factor1)]
    COUNT              [reduce using rule 545 (columnReference1)]
    COUNT              [reduce using rule 792 (intervalFactor1)]
    SESSION_USER       [reduce using rule 454 (booleanFactor1)]
    SESSION_USER       [reduce using rule 490 (factor1)]
    SESSION_USER       [reduce using rule 792 (intervalFactor1)]
    DATE               [reduce using rule 454 (booleanFactor1)]
    DATE               [reduce using rule 490 (factor1)]
    DATE               [reduce using rule 792 (intervalFactor1)]
    NULLIF             [reduce using rule 219 (qualifiedName1)]
    NULLIF             [reduce using rule 454 (booleanFactor1)]
    NULLIF             [reduce using rule 490 (factor1)]
    NULLIF             [reduce using rule 545 (columnReference1)]
    NULLIF             [reduce using rule 792 (intervalFactor1)]
    CURRENT_DATE       [reduce using rule 454 (booleanFactor1)]
    SUM                [reduce using rule 219 (qualifiedName1)]
    SUM                [reduce using rule 454 (booleanFactor1)]
    SUM                [reduce using rule 490 (factor1)]
    SUM                [reduce using rule 545 (columnReference1)]
    SUM                [reduce using rule 792 (intervalFactor1)]
    KEY                [reduce using rule 219 (qualifiedName1)]
    KEY                [reduce using rule 454 (booleanFactor1)]
    KEY                [reduce using rule 490 (factor1)]
    KEY                [reduce using rule 545 (columnReference1)]
    KEY                [reduce using rule 792 (intervalFactor1)]
    AVG                [reduce using rule 219 (qualifiedName1)]
    AVG                [reduce using rule 454 (booleanFactor1)]
    AVG                [reduce using rule 490 (factor1)]
    AVG                [reduce using rule 545 (columnReference1)]
    AVG                [reduce using rule 792 (intervalFactor1)]
    INITIALLY          [reduce using rule 219 (qualifiedName1)]
    INITIALLY          [reduce using rule 454 (booleanFactor1)]
    INITIALLY          [reduce using rule 490 (factor1)]
    INITIALLY          [reduce using rule 545 (columnReference1)]
    INITIALLY          [reduce using rule 792 (intervalFactor1)]
    UPPER              [reduce using rule 219 (qualifiedName1)]
    UPPER              [reduce using rule 454 (booleanFactor1)]
    UPPER              [reduce using rule 490 (factor1)]
    UPPER              [reduce using rule 545 (columnReference1)]
    UPPER              [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP          [reduce using rule 454 (booleanFactor1)]
    TIMESTAMP          [reduce using rule 490 (factor1)]
    TIMESTAMP          [reduce using rule 792 (intervalFactor1)]
    MODULE             [reduce using rule 454 (booleanFactor1)]
    MODULE             [reduce using rule 490 (factor1)]
    MODULE             [reduce using rule 792 (intervalFactor1)]
    EXTRACT            [reduce using rule 219 (qualifiedName1)]
    EXTRACT            [reduce using rule 454 (booleanFactor1)]
    EXTRACT            [reduce using rule 490 (factor1)]
    EXTRACT            [reduce using rule 545 (columnReference1)]
    EXTRACT            [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH        [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH        [reduce using rule 454 (booleanFactor1)]
    CHAR_LENGTH        [reduce using rule 490 (factor1)]
    CHAR_LENGTH        [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH        [reduce using rule 792 (intervalFactor1)]
    TIME               [reduce using rule 454 (booleanFactor1)]
    TIME               [reduce using rule 490 (factor1)]
    TIME               [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER        [reduce using rule 454 (booleanFactor1)]
    SYSTEM_USER        [reduce using rule 490 (factor1)]
    SYSTEM_USER        [reduce using rule 792 (intervalFactor1)]
    SUBSTRING          [reduce using rule 219 (qualifiedName1)]
    SUBSTRING          [reduce using rule 454 (booleanFactor1)]
    SUBSTRING          [reduce using rule 490 (factor1)]
    SUBSTRING          [reduce using rule 545 (columnReference1)]
    SUBSTRING          [reduce using rule 792 (intervalFactor1)]
    CURRENT_TIME       [reduce using rule 454 (booleanFactor1)]
    PARTIAL            [reduce using rule 219 (qualifiedName1)]
    PARTIAL            [reduce using rule 454 (booleanFactor1)]
    PARTIAL            [reduce using rule 490 (factor1)]
    PARTIAL            [reduce using rule 545 (columnReference1)]
    PARTIAL            [reduce using rule 792 (intervalFactor1)]
    USER               [reduce using rule 454 (booleanFactor1)]
    USER               [reduce using rule 490 (factor1)]
    USER               [reduce using rule 792 (intervalFactor1)]
    MAX                [reduce using rule 219 (qualifiedName1)]
    MAX                [reduce using rule 454 (booleanFactor1)]
    MAX                [reduce using rule 490 (factor1)]
    MAX                [reduce using rule 545 (columnReference1)]
    MAX                [reduce using rule 792 (intervalFactor1)]
    CURRENT_TIMESTAMP  [reduce using rule 454 (booleanFactor1)]
    LOWER              [reduce using rule 219 (qualifiedName1)]
    LOWER              [reduce using rule 454 (booleanFactor1)]
    LOWER              [reduce using rule 490 (factor1)]
    LOWER              [reduce using rule 545 (columnReference1)]
    LOWER              [reduce using rule 792 (intervalFactor1)]
    CASCADE            [reduce using rule 219 (qualifiedName1)]
    CASCADE            [reduce using rule 454 (booleanFactor1)]
    CASCADE            [reduce using rule 490 (factor1)]
    CASCADE            [reduce using rule 545 (columnReference1)]
    CASCADE            [reduce using rule 792 (intervalFactor1)]
    TEMPORARY          [reduce using rule 219 (qualifiedName1)]
    TEMPORARY          [reduce using rule 454 (booleanFactor1)]
    TEMPORARY          [reduce using rule 490 (factor1)]
    TEMPORARY          [reduce using rule 545 (columnReference1)]
    TEMPORARY          [reduce using rule 792 (intervalFactor1)]
    BIT_LENGTH         reduce using rule 454 (booleanFactor1)
    BIT_LENGTH         [reduce using rule 490 (factor1)]
    VALUE              [reduce using rule 454 (booleanFactor1)]
    VALUE              [reduce using rule 490 (factor1)]
    VALUE              [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH   [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH   [reduce using rule 454 (booleanFactor1)]
    CHARACTER_LENGTH   [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH   [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH   [reduce using rule 792 (intervalFactor1)]
    CONVERT            [reduce using rule 219 (qualifiedName1)]
    CONVERT            [reduce using rule 454 (booleanFactor1)]
    CONVERT            [reduce using rule 490 (factor1)]
    CONVERT            [reduce using rule 545 (columnReference1)]
    CONVERT            [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER       [reduce using rule 454 (booleanFactor1)]
    CURRENT_USER       [reduce using rule 490 (factor1)]
    CURRENT_USER       [reduce using rule 792 (intervalFactor1)]
    TRANSLATE          [reduce using rule 219 (qualifiedName1)]
    TRANSLATE          [reduce using rule 454 (booleanFactor1)]
    TRANSLATE          [reduce using rule 490 (factor1)]
    TRANSLATE          [reduce using rule 545 (columnReference1)]
    TRANSLATE          [reduce using rule 792 (intervalFactor1)]
    INTERVAL           [reduce using rule 454 (booleanFactor1)]
    INTERVAL           [reduce using rule 490 (factor1)]
    INTERVAL           [reduce using rule 792 (intervalFactor1)]
    DEFAULT            [reduce using rule 454 (booleanFactor1)]
    PRESERVE           [reduce using rule 219 (qualifiedName1)]
    PRESERVE           [reduce using rule 454 (booleanFactor1)]
    PRESERVE           [reduce using rule 490 (factor1)]
    PRESERVE           [reduce using rule 545 (columnReference1)]
    PRESERVE           [reduce using rule 792 (intervalFactor1)]
    POSITION           [reduce using rule 219 (qualifiedName1)]
    POSITION           [reduce using rule 454 (booleanFactor1)]
    POSITION           [reduce using rule 490 (factor1)]
    POSITION           [reduce using rule 545 (columnReference1)]
    POSITION           [reduce using rule 792 (intervalFactor1)]
    COALESCE           [reduce using rule 219 (qualifiedName1)]
    COALESCE           [reduce using rule 454 (booleanFactor1)]
    COALESCE           [reduce using rule 490 (factor1)]
    COALESCE           [reduce using rule 545 (columnReference1)]
    COALESCE           [reduce using rule 792 (intervalFactor1)]
    TRIM               [reduce using rule 219 (qualifiedName1)]
    TRIM               [reduce using rule 454 (booleanFactor1)]
    TRIM               [reduce using rule 490 (factor1)]
    TRIM               [reduce using rule 545 (columnReference1)]
    TRIM               [reduce using rule 792 (intervalFactor1)]
    NUMBER             [reduce using rule 219 (qualifiedName1)]
    NUMBER             [reduce using rule 454 (booleanFactor1)]
    NUMBER             [reduce using rule 490 (factor1)]
    NUMBER             [reduce using rule 545 (columnReference1)]
    NUMBER             [reduce using rule 792 (intervalFactor1)]
    ID                 [reduce using rule 219 (qualifiedName1)]
    ID                 [reduce using rule 454 (booleanFactor1)]
    ID                 [reduce using rule 490 (factor1)]
    ID                 [reduce using rule 545 (columnReference1)]
    ID                 [reduce using rule 792 (intervalFactor1)]
    '('                [reduce using rule 454 (booleanFactor1)]
    '('                [reduce using rule 490 (factor1)]
    '('                [reduce using rule 792 (intervalFactor1)]
    $default           reduce using rule 454 (booleanFactor1)

    id                              go to state 297
    tableName                       go to state 839
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 840
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    searchCondition                 go to state 841
    booleanTerm                     go to state 604
    booleanFactor                   go to state 605
    booleanFactor1                  go to state 606
    rowValueConstructorElement      go to state 842
    valueExpression                 go to state 843
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 844
    queryExpression                 go to state 845
    nonjoinQueryExpression          go to state 846
    nonjoinQueryTerm                go to state 847
    nonjoinQueryPrimary             go to state 848
    simpleTable                     go to state 849
    querySpecification              go to state 850
    tableReference                  go to state 851
    derivedTable                    go to state 852
    tableSubquery                   go to state 853
    joinedTable                     go to state 854
    crossJoin                       go to state 855
    qualifiedJoin                   go to state 856
    tableValueConstructor           go to state 857
    explicitTable                   go to state 858
    queryTerm                       go to state 859
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 860
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760
    nullSpecification               go to state 761
    defaultSpecification            go to state 762
    rowValueConstructorList         go to state 861


state 692

  491 factor1: sign .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793 intervalFactor1: sign .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']

    CASE              reduce using rule 491 (factor1)
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              reduce using rule 491 (factor1)
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              reduce using rule 491 (factor1)
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               reduce using rule 491 (factor1)
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       reduce using rule 491 (factor1)
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            reduce using rule 491 (factor1)
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               reduce using rule 491 (factor1)
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      reduce using rule 491 (factor1)
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          reduce using rule 491 (factor1)
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        reduce using rule 491 (factor1)
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              reduce using rule 491 (factor1)
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             reduce using rule 491 (factor1)
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      reduce using rule 491 (factor1)
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              reduce using rule 491 (factor1)
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            reduce using rule 491 (factor1)
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               reduce using rule 491 (factor1)
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               reduce using rule 491 (factor1)
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               reduce using rule 491 (factor1)
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         reduce using rule 491 (factor1)
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             reduce using rule 491 (factor1)
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         reduce using rule 491 (factor1)
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            reduce using rule 491 (factor1)
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           reduce using rule 491 (factor1)
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       reduce using rule 491 (factor1)
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              reduce using rule 491 (factor1)
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       reduce using rule 491 (factor1)
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         reduce using rule 491 (factor1)
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           reduce using rule 491 (factor1)
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              reduce using rule 491 (factor1)
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               reduce using rule 491 (factor1)
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             reduce using rule 491 (factor1)
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           reduce using rule 491 (factor1)
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         reduce using rule 491 (factor1)
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             reduce using rule 491 (factor1)
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  reduce using rule 491 (factor1)
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           reduce using rule 491 (factor1)
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      reduce using rule 491 (factor1)
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         reduce using rule 491 (factor1)
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          reduce using rule 491 (factor1)
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          reduce using rule 491 (factor1)
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          reduce using rule 491 (factor1)
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          reduce using rule 491 (factor1)
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              reduce using rule 491 (factor1)
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            reduce using rule 491 (factor1)
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                reduce using rule 491 (factor1)
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               reduce using rule 491 (factor1)
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)


state 693

  503 unsignedLiteral: unsignedNumericLiteral .

    $default  reduce using rule 503 (unsignedLiteral)


state 694

  504 unsignedLiteral: generalLiteral .

    $default  reduce using rule 504 (unsignedLiteral)


state 695

  779 datetimePrimary: datetimeValueFunction .

    $default  reduce using rule 779 (datetimePrimary)


state 696

  453 booleanFactor: booleanFactor1 booleanTest .

    $default  reduce using rule 453 (booleanFactor)


state 697

  456 booleanTest: booleanPrimary . booleanTest2
  457 booleanTest2: .  [HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, THEN, JOIN, LEFT, FULL, AND, ON, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']
  458             | . IS booleanTest1 truthValue

    IS  shift, and go to state 862

    $default  reduce using rule 457 (booleanTest2)

    booleanTest2  go to state 863


state 698

  461 booleanPrimary: predicate .

    $default  reduce using rule 461 (booleanPrimary)


state 699

  463 predicate: comparisonPredicate .

    $default  reduce using rule 463 (predicate)


state 700

  472 comparisonPredicate: rowValueConstructor . compOp rowValueConstructor
  818 compOp: . equalsOperator
  819       | . notEqualsOperator
  820       | . lessThanOperator
  821       | . greaterThanOperator
  822       | . lessThanOrEqualsOperator
  823       | . greaterThanOrEqualsOperator
  824 equalsOperator: . UNKNOWN_LEX
  825 notEqualsOperator: . UNKNOWN_LEX
  826 lessThanOperator: . UNKNOWN_LEX
  827 greaterThanOperator: . UNKNOWN_LEX
  828 lessThanOrEqualsOperator: . UNKNOWN_LEX
  829 greaterThanOrEqualsOperator: . UNKNOWN_LEX
  830 betweenPredicate: rowValueConstructor . betweenPredicate1 BETWEEN rowValueConstructor AND rowValueConstructor
  831 betweenPredicate1: .  [BETWEEN]
  832                  | . NOT
  833 inPredicate: rowValueConstructor . inPredicate1 IN inPredicateValue
  834 inPredicate1: .  [IN]
  835             | . NOT
  852 quantifiedComparisonPredicate: rowValueConstructor . compOp quantifier tableSubquery
  859 matchPredicate: rowValueConstructor . MATCH matchPredicate1 matchPredicate2 tableSubquery
  866 rowValueConstructor1: rowValueConstructor .  [OVERLAPS]

    NOT          shift, and go to state 864
    UNKNOWN_LEX  shift, and go to state 865
    MATCH        shift, and go to state 866

    IN        reduce using rule 834 (inPredicate1)
    OVERLAPS  reduce using rule 866 (rowValueConstructor1)
    $default  reduce using rule 831 (betweenPredicate1)

    compOp                       go to state 867
    equalsOperator               go to state 868
    notEqualsOperator            go to state 869
    lessThanOperator             go to state 870
    greaterThanOperator          go to state 871
    lessThanOrEqualsOperator     go to state 872
    greaterThanOrEqualsOperator  go to state 873
    betweenPredicate1            go to state 874
    inPredicate1                 go to state 875


state 701

  473 rowValueConstructor: rowValueConstructorElement .

    $default  reduce using rule 473 (rowValueConstructor)


state 702

  476 rowValueConstructorElement: valueExpression .

    $default  reduce using rule 476 (rowValueConstructorElement)


state 703

  479 valueExpression: numericValueExpression .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  484 numericValueExpression: numericValueExpression . plusSign term
  485                       | numericValueExpression . minusSign term
  800 plusSign: . UNKNOWN_LEX
  802 minusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 876

    UNKNOWN_LEX  [reduce using rule 479 (valueExpression)]
    $default     reduce using rule 479 (valueExpression)

    plusSign   go to state 877
    minusSign  go to state 878


state 704

  483 numericValueExpression: term .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  487 term: term . asterisk factor
  488     | term . solidus factor
  552 asterisk: . UNKNOWN_LEX
  790 intervalTerm: term . asterisk intervalFactor
  798 solidus: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 879

    UNKNOWN_LEX  [reduce using rule 483 (numericValueExpression)]
    $default     reduce using rule 483 (numericValueExpression)

    asterisk  go to state 880
    solidus   go to state 881


state 705

  486 term: factor .

    $default  reduce using rule 486 (term)


state 706

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  489 factor: factor1 . numericPrimary
  492 numericPrimary: . valueExpressionPrimary
  493               | . numericValueFunction
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  707 numericValueFunction: . positionExpression
  708                     | . extractExpression
  709                     | . lengthExpression
  710 positionExpression: . POSITION leftParen characterValueExpression IN characterValueExpression rightParen
  761 extractExpression: . EXTRACT leftParen extractField FROM extractSource rightParen
  803 lengthExpression: . charLengthExpression
  804                 | . octetLengthExpression
  805                 | . bitLengthExpression
  806 charLengthExpression: . CHAR_LENGTH
  807                     | . CHARACTER_LENGTH leftParen stringValueExpression rightParen
  810 octetLengthExpression: . OCTET_LENGTH leftParen stringValueExpression rightParen
  811 bitLengthExpression: . BIT_LENGTH leftParen stringValueExpression rightParen

    CASE              shift, and go to state 665
    CAST              shift, and go to state 666
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 882
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 670
    OCTET_LENGTH      shift, and go to state 883
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 671
    SESSION_USER      shift, and go to state 672
    DATE              shift, and go to state 495
    NULLIF            shift, and go to state 673
    SUM               shift, and go to state 674
    KEY               shift, and go to state 42
    AVG               shift, and go to state 675
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    TIMESTAMP         shift, and go to state 497
    MODULE            shift, and go to state 213
    EXTRACT           shift, and go to state 884
    CHAR_LENGTH       shift, and go to state 885
    TIME              shift, and go to state 498
    SYSTEM_USER       shift, and go to state 677
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 679
    MAX               shift, and go to state 680
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    BIT_LENGTH        shift, and go to state 886
    VALUE             shift, and go to state 682
    CHARACTER_LENGTH  shift, and go to state 887
    CONVERT           shift, and go to state 55
    CURRENT_USER      shift, and go to state 684
    TRANSLATE         shift, and go to state 56
    INTERVAL          shift, and go to state 504
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 888
    COALESCE          shift, and go to state 687
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 294

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 889
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    numericPrimary                  go to state 890
    valueExpressionPrimary          go to state 891
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    numericValueFunction            go to state 892
    positionExpression              go to state 893
    extractExpression               go to state 894
    lengthExpression                go to state 895
    charLengthExpression            go to state 896
    octetLengthExpression           go to state 897
    bitLengthExpression             go to state 898


state 707

  718 characterPrimary: valueExpressionPrimary .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  759 bitPrimary: valueExpressionPrimary .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  778 datetimePrimary: valueExpressionPrimary .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']

    BETWEEN           reduce using rule 718 (characterPrimary)
    BETWEEN           [reduce using rule 759 (bitPrimary)]
    BETWEEN           [reduce using rule 778 (datetimePrimary)]
    HAVING            reduce using rule 718 (characterPrimary)
    HAVING            [reduce using rule 759 (bitPrimary)]
    HAVING            [reduce using rule 778 (datetimePrimary)]
    WHERE             reduce using rule 718 (characterPrimary)
    WHERE             [reduce using rule 759 (bitPrimary)]
    WHERE             [reduce using rule 778 (datetimePrimary)]
    OR                reduce using rule 718 (characterPrimary)
    OR                [reduce using rule 759 (bitPrimary)]
    OR                [reduce using rule 778 (datetimePrimary)]
    GROUP             reduce using rule 718 (characterPrimary)
    GROUP             [reduce using rule 759 (bitPrimary)]
    GROUP             [reduce using rule 778 (datetimePrimary)]
    RIGHT             reduce using rule 718 (characterPrimary)
    RIGHT             [reduce using rule 759 (bitPrimary)]
    RIGHT             [reduce using rule 778 (datetimePrimary)]
    INNER             reduce using rule 718 (characterPrimary)
    INNER             [reduce using rule 759 (bitPrimary)]
    INNER             [reduce using rule 778 (datetimePrimary)]
    UNION             reduce using rule 718 (characterPrimary)
    UNION             [reduce using rule 759 (bitPrimary)]
    UNION             [reduce using rule 778 (datetimePrimary)]
    FROM              reduce using rule 718 (characterPrimary)
    FROM              [reduce using rule 759 (bitPrimary)]
    FROM              [reduce using rule 778 (datetimePrimary)]
    WHEN              reduce using rule 718 (characterPrimary)
    WHEN              [reduce using rule 759 (bitPrimary)]
    WHEN              [reduce using rule 778 (datetimePrimary)]
    THEN              reduce using rule 718 (characterPrimary)
    THEN              [reduce using rule 759 (bitPrimary)]
    THEN              [reduce using rule 778 (datetimePrimary)]
    ELSE              reduce using rule 718 (characterPrimary)
    ELSE              [reduce using rule 759 (bitPrimary)]
    ELSE              [reduce using rule 778 (datetimePrimary)]
    DESC              reduce using rule 718 (characterPrimary)
    DESC              [reduce using rule 759 (bitPrimary)]
    DESC              [reduce using rule 778 (datetimePrimary)]
    JOIN              reduce using rule 718 (characterPrimary)
    JOIN              [reduce using rule 759 (bitPrimary)]
    JOIN              [reduce using rule 778 (datetimePrimary)]
    LEFT              reduce using rule 718 (characterPrimary)
    LEFT              [reduce using rule 759 (bitPrimary)]
    LEFT              [reduce using rule 778 (datetimePrimary)]
    FULL              reduce using rule 718 (characterPrimary)
    FULL              [reduce using rule 759 (bitPrimary)]
    FULL              [reduce using rule 778 (datetimePrimary)]
    AND               reduce using rule 718 (characterPrimary)
    AND               [reduce using rule 759 (bitPrimary)]
    AND               [reduce using rule 778 (datetimePrimary)]
    END               reduce using rule 718 (characterPrimary)
    END               [reduce using rule 759 (bitPrimary)]
    END               [reduce using rule 778 (datetimePrimary)]
    ASC               reduce using rule 718 (characterPrimary)
    ASC               [reduce using rule 759 (bitPrimary)]
    ASC               [reduce using rule 778 (datetimePrimary)]
    NOT               reduce using rule 718 (characterPrimary)
    NOT               [reduce using rule 759 (bitPrimary)]
    NOT               [reduce using rule 778 (datetimePrimary)]
    ON                reduce using rule 718 (characterPrimary)
    ON                [reduce using rule 759 (bitPrimary)]
    ON                [reduce using rule 778 (datetimePrimary)]
    AS                reduce using rule 718 (characterPrimary)
    AS                [reduce using rule 759 (bitPrimary)]
    AS                [reduce using rule 778 (datetimePrimary)]
    IN                reduce using rule 718 (characterPrimary)
    IN                [reduce using rule 759 (bitPrimary)]
    IN                [reduce using rule 778 (datetimePrimary)]
    IS                reduce using rule 718 (characterPrimary)
    IS                [reduce using rule 759 (bitPrimary)]
    IS                [reduce using rule 778 (datetimePrimary)]
    UNKNOWN_LEX       reduce using rule 718 (characterPrimary)
    UNKNOWN_LEX       [reduce using rule 759 (bitPrimary)]
    UNKNOWN_LEX       [reduce using rule 778 (datetimePrimary)]
    ACTION            reduce using rule 718 (characterPrimary)
    ACTION            [reduce using rule 759 (bitPrimary)]
    ACTION            [reduce using rule 778 (datetimePrimary)]
    MIN               reduce using rule 718 (characterPrimary)
    MIN               [reduce using rule 759 (bitPrimary)]
    MIN               [reduce using rule 778 (datetimePrimary)]
    OCTET_LENGTH      reduce using rule 718 (characterPrimary)
    OCTET_LENGTH      [reduce using rule 759 (bitPrimary)]
    OCTET_LENGTH      [reduce using rule 778 (datetimePrimary)]
    CROSS             reduce using rule 718 (characterPrimary)
    CROSS             [reduce using rule 759 (bitPrimary)]
    CROSS             [reduce using rule 778 (datetimePrimary)]
    DEFERRED          reduce using rule 718 (characterPrimary)
    DEFERRED          [reduce using rule 759 (bitPrimary)]
    DEFERRED          [reduce using rule 778 (datetimePrimary)]
    DEFERRABLE        reduce using rule 718 (characterPrimary)
    DEFERRABLE        [reduce using rule 759 (bitPrimary)]
    DEFERRABLE        [reduce using rule 778 (datetimePrimary)]
    ZONE              reduce using rule 718 (characterPrimary)
    ZONE              [reduce using rule 759 (bitPrimary)]
    ZONE              [reduce using rule 778 (datetimePrimary)]
    INTERSECT         reduce using rule 718 (characterPrimary)
    INTERSECT         [reduce using rule 759 (bitPrimary)]
    INTERSECT         [reduce using rule 778 (datetimePrimary)]
    COUNT             reduce using rule 718 (characterPrimary)
    COUNT             [reduce using rule 759 (bitPrimary)]
    COUNT             [reduce using rule 778 (datetimePrimary)]
    NATURAL           reduce using rule 718 (characterPrimary)
    NATURAL           [reduce using rule 759 (bitPrimary)]
    NATURAL           [reduce using rule 778 (datetimePrimary)]
    NULLIF            reduce using rule 718 (characterPrimary)
    NULLIF            [reduce using rule 759 (bitPrimary)]
    NULLIF            [reduce using rule 778 (datetimePrimary)]
    SUM               reduce using rule 718 (characterPrimary)
    SUM               [reduce using rule 759 (bitPrimary)]
    SUM               [reduce using rule 778 (datetimePrimary)]
    KEY               reduce using rule 718 (characterPrimary)
    KEY               [reduce using rule 759 (bitPrimary)]
    KEY               [reduce using rule 778 (datetimePrimary)]
    AVG               reduce using rule 718 (characterPrimary)
    AVG               [reduce using rule 759 (bitPrimary)]
    AVG               [reduce using rule 778 (datetimePrimary)]
    INITIALLY         reduce using rule 718 (characterPrimary)
    INITIALLY         [reduce using rule 759 (bitPrimary)]
    INITIALLY         [reduce using rule 778 (datetimePrimary)]
    UPPER             reduce using rule 718 (characterPrimary)
    UPPER             [reduce using rule 759 (bitPrimary)]
    UPPER             [reduce using rule 778 (datetimePrimary)]
    EXCEPT            reduce using rule 718 (characterPrimary)
    EXCEPT            [reduce using rule 759 (bitPrimary)]
    EXCEPT            [reduce using rule 778 (datetimePrimary)]
    EXTRACT           reduce using rule 718 (characterPrimary)
    EXTRACT           [reduce using rule 759 (bitPrimary)]
    EXTRACT           [reduce using rule 778 (datetimePrimary)]
    CHAR_LENGTH       reduce using rule 718 (characterPrimary)
    CHAR_LENGTH       [reduce using rule 759 (bitPrimary)]
    CHAR_LENGTH       [reduce using rule 778 (datetimePrimary)]
    SUBSTRING         reduce using rule 718 (characterPrimary)
    SUBSTRING         [reduce using rule 759 (bitPrimary)]
    SUBSTRING         [reduce using rule 778 (datetimePrimary)]
    PARTIAL           reduce using rule 718 (characterPrimary)
    PARTIAL           [reduce using rule 759 (bitPrimary)]
    PARTIAL           [reduce using rule 778 (datetimePrimary)]
    MAX               reduce using rule 718 (characterPrimary)
    MAX               [reduce using rule 759 (bitPrimary)]
    MAX               [reduce using rule 778 (datetimePrimary)]
    LOWER             reduce using rule 718 (characterPrimary)
    LOWER             [reduce using rule 759 (bitPrimary)]
    LOWER             [reduce using rule 778 (datetimePrimary)]
    USING             reduce using rule 718 (characterPrimary)
    USING             [reduce using rule 759 (bitPrimary)]
    USING             [reduce using rule 778 (datetimePrimary)]
    CASCADE           reduce using rule 718 (characterPrimary)
    CASCADE           [reduce using rule 759 (bitPrimary)]
    CASCADE           [reduce using rule 778 (datetimePrimary)]
    TEMPORARY         reduce using rule 718 (characterPrimary)
    TEMPORARY         [reduce using rule 759 (bitPrimary)]
    TEMPORARY         [reduce using rule 778 (datetimePrimary)]
    OVERLAPS          reduce using rule 718 (characterPrimary)
    OVERLAPS          [reduce using rule 759 (bitPrimary)]
    OVERLAPS          [reduce using rule 778 (datetimePrimary)]
    CHARACTER_LENGTH  reduce using rule 718 (characterPrimary)
    CHARACTER_LENGTH  [reduce using rule 759 (bitPrimary)]
    CHARACTER_LENGTH  [reduce using rule 778 (datetimePrimary)]
    MATCH             reduce using rule 718 (characterPrimary)
    MATCH             [reduce using rule 759 (bitPrimary)]
    MATCH             [reduce using rule 778 (datetimePrimary)]
    CONVERT           reduce using rule 718 (characterPrimary)
    CONVERT           [reduce using rule 759 (bitPrimary)]
    CONVERT           [reduce using rule 778 (datetimePrimary)]
    TRANSLATE         reduce using rule 718 (characterPrimary)
    TRANSLATE         [reduce using rule 759 (bitPrimary)]
    TRANSLATE         [reduce using rule 778 (datetimePrimary)]
    PRESERVE          reduce using rule 718 (characterPrimary)
    PRESERVE          [reduce using rule 759 (bitPrimary)]
    PRESERVE          [reduce using rule 778 (datetimePrimary)]
    POSITION          reduce using rule 718 (characterPrimary)
    POSITION          [reduce using rule 759 (bitPrimary)]
    POSITION          [reduce using rule 778 (datetimePrimary)]
    COALESCE          reduce using rule 718 (characterPrimary)
    COALESCE          [reduce using rule 759 (bitPrimary)]
    COALESCE          [reduce using rule 778 (datetimePrimary)]
    TRIM              reduce using rule 718 (characterPrimary)
    TRIM              [reduce using rule 759 (bitPrimary)]
    TRIM              [reduce using rule 778 (datetimePrimary)]
    AT                reduce using rule 778 (datetimePrimary)
    NUMBER            reduce using rule 718 (characterPrimary)
    NUMBER            [reduce using rule 759 (bitPrimary)]
    NUMBER            [reduce using rule 778 (datetimePrimary)]
    ID                reduce using rule 718 (characterPrimary)
    ID                [reduce using rule 759 (bitPrimary)]
    ID                [reduce using rule 778 (datetimePrimary)]
    ','               reduce using rule 718 (characterPrimary)
    ','               [reduce using rule 759 (bitPrimary)]
    ','               [reduce using rule 778 (datetimePrimary)]
    ')'               reduce using rule 718 (characterPrimary)
    ')'               [reduce using rule 759 (bitPrimary)]
    ')'               [reduce using rule 778 (datetimePrimary)]
    $default          reduce using rule 718 (characterPrimary)


state 708

  494 valueExpressionPrimary: unsignedValueSpecification .

    $default  reduce using rule 494 (valueExpressionPrimary)


state 709

  501 unsignedValueSpecification: unsignedLiteral .

    $default  reduce using rule 501 (unsignedValueSpecification)


state 710

  502 unsignedValueSpecification: generalValueSpecification .

    $default  reduce using rule 502 (unsignedValueSpecification)


state 711

  505 generalValueSpecification: parameterSpecification .

    $default  reduce using rule 505 (generalValueSpecification)


state 712

  513 parameterSpecification: parameterName . parameterSpecification1
  514 parameterSpecification1: .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  515                        | . indicatorParameter
  518 indicatorParameter: . indicatorParameter1 parameterName
  519 indicatorParameter1: .  [UNKNOWN_LEX]
  520                    | . INDICATOR

    INDICATOR  shift, and go to state 899

    UNKNOWN_LEX  reduce using rule 514 (parameterSpecification1)
    UNKNOWN_LEX  [reduce using rule 519 (indicatorParameter1)]
    $default     reduce using rule 514 (parameterSpecification1)

    parameterSpecification1  go to state 900
    indicatorParameter       go to state 901
    indicatorParameter1      go to state 902


state 713

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  224 identifier: . id
  516 parameterName: colon . identifier
  526 embeddedVariableName: colon . hostIdentifier
  527 hostIdentifier: . AdaHostIdentifier
  528               | . CHostIdentifier
  529               | . CobolHostIdentifier
  530               | . FortranHostIdentifier
  531               | . MUMPSHostIdentifier
  532               | . PascalHostIdentifier
  533               | . PLIHostIdentifier
  534 AdaHostIdentifier: . UNKNOWN_BODY
  535 CHostIdentifier: . UNKNOWN_BODY
  536 CobolHostIdentifier: . UNKNOWN_BODY
  537 FortranHostIdentifier: . UNKNOWN_BODY
  538 MUMPSHostIdentifier: . UNKNOWN_BODY
  539 PascalHostIdentifier: . UNKNOWN_BODY
  540 PLIHostIdentifier: . UNKNOWN_BODY

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_BODY      shift, and go to state 903
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id                     go to state 297
    identifier             go to state 904
    hostIdentifier         go to state 905
    AdaHostIdentifier      go to state 906
    CHostIdentifier        go to state 907
    CobolHostIdentifier    go to state 908
    FortranHostIdentifier  go to state 909
    MUMPSHostIdentifier    go to state 910
    PascalHostIdentifier   go to state 911
    PLIHostIdentifier      go to state 912


state 714

  506 generalValueSpecification: dynamicParameterSpecification .

    $default  reduce using rule 506 (generalValueSpecification)


state 715

  521 dynamicParameterSpecification: questionMark .

    $default  reduce using rule 521 (dynamicParameterSpecification)


state 716

  507 generalValueSpecification: variableSpecification .

    $default  reduce using rule 507 (generalValueSpecification)


state 717

  523 variableSpecification: embeddedVariableName . variableSpecification1
  524 variableSpecification1: .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  525                       | . indicatorVariable
  541 indicatorVariable: . indicatorVariable1 embeddedVariableName
  542 indicatorVariable1: .  [UNKNOWN_LEX]
  543                   | . INDICATOR

    INDICATOR  shift, and go to state 913

    UNKNOWN_LEX  reduce using rule 524 (variableSpecification1)
    UNKNOWN_LEX  [reduce using rule 542 (indicatorVariable1)]
    $default     reduce using rule 524 (variableSpecification1)

    variableSpecification1  go to state 914
    indicatorVariable       go to state 915
    indicatorVariable1      go to state 916


state 718

  495 valueExpressionPrimary: columnReference .

    $default  reduce using rule 495 (valueExpressionPrimary)


state 719

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  224 identifier: . id
  241 columnName: . identifier
  544 columnReference: columnReference1 . columnName

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id          go to state 297
    identifier  go to state 354
    columnName  go to state 917


state 720

  222 period: . UNKNOWN_LEX
  546 columnReference1: qualifier . period

    UNKNOWN_LEX  shift, and go to state 292

    period  go to state 918


state 721

  548 qualifier: correlationName .

    $default  reduce using rule 548 (qualifier)


state 722

  496 valueExpressionPrimary: setFunctionSpecification .

    $default  reduce using rule 496 (valueExpressionPrimary)


state 723

  551 setFunctionSpecification: generalSetFunction .

    $default  reduce using rule 551 (setFunctionSpecification)


state 724

  230 leftParen: . '('
  553 generalSetFunction: setFunctionType . leftParen generalSetFunction1 valueExpression rightParen

    '('  shift, and go to state 294

    leftParen  go to state 919


state 725

  497 valueExpressionPrimary: scalarSubquery .

    $default  reduce using rule 497 (valueExpressionPrimary)


state 726

  563 scalarSubquery: subquery .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, THEN, LIKE, JOIN, LEFT, FULL, AND, NOT, ON, IN, IS, UNKNOWN_LEX, CROSS, INTERSECT, NATURAL, COLLATE, EXCEPT, USING, OVERLAPS, MATCH, AT, ',', ')']
  817 rowSubquery: subquery .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, THEN, JOIN, LEFT, FULL, AND, NOT, ON, IN, IS, UNKNOWN_LEX, CROSS, INTERSECT, NATURAL, EXCEPT, USING, OVERLAPS, MATCH, ',', ')']

    BETWEEN      reduce using rule 563 (scalarSubquery)
    BETWEEN      [reduce using rule 817 (rowSubquery)]
    HAVING       reduce using rule 563 (scalarSubquery)
    HAVING       [reduce using rule 817 (rowSubquery)]
    WHERE        reduce using rule 563 (scalarSubquery)
    WHERE        [reduce using rule 817 (rowSubquery)]
    OR           reduce using rule 563 (scalarSubquery)
    OR           [reduce using rule 817 (rowSubquery)]
    GROUP        reduce using rule 563 (scalarSubquery)
    GROUP        [reduce using rule 817 (rowSubquery)]
    RIGHT        reduce using rule 563 (scalarSubquery)
    RIGHT        [reduce using rule 817 (rowSubquery)]
    INNER        reduce using rule 563 (scalarSubquery)
    INNER        [reduce using rule 817 (rowSubquery)]
    UNION        reduce using rule 563 (scalarSubquery)
    UNION        [reduce using rule 817 (rowSubquery)]
    THEN         reduce using rule 563 (scalarSubquery)
    THEN         [reduce using rule 817 (rowSubquery)]
    JOIN         reduce using rule 563 (scalarSubquery)
    JOIN         [reduce using rule 817 (rowSubquery)]
    LEFT         reduce using rule 563 (scalarSubquery)
    LEFT         [reduce using rule 817 (rowSubquery)]
    FULL         reduce using rule 563 (scalarSubquery)
    FULL         [reduce using rule 817 (rowSubquery)]
    AND          reduce using rule 563 (scalarSubquery)
    AND          [reduce using rule 817 (rowSubquery)]
    NOT          reduce using rule 563 (scalarSubquery)
    NOT          [reduce using rule 817 (rowSubquery)]
    ON           reduce using rule 563 (scalarSubquery)
    ON           [reduce using rule 817 (rowSubquery)]
    IN           reduce using rule 563 (scalarSubquery)
    IN           [reduce using rule 817 (rowSubquery)]
    IS           reduce using rule 563 (scalarSubquery)
    IS           [reduce using rule 817 (rowSubquery)]
    UNKNOWN_LEX  reduce using rule 563 (scalarSubquery)
    UNKNOWN_LEX  [reduce using rule 817 (rowSubquery)]
    CROSS        reduce using rule 563 (scalarSubquery)
    CROSS        [reduce using rule 817 (rowSubquery)]
    INTERSECT    reduce using rule 563 (scalarSubquery)
    INTERSECT    [reduce using rule 817 (rowSubquery)]
    NATURAL      reduce using rule 563 (scalarSubquery)
    NATURAL      [reduce using rule 817 (rowSubquery)]
    EXCEPT       reduce using rule 563 (scalarSubquery)
    EXCEPT       [reduce using rule 817 (rowSubquery)]
    USING        reduce using rule 563 (scalarSubquery)
    USING        [reduce using rule 817 (rowSubquery)]
    OVERLAPS     reduce using rule 563 (scalarSubquery)
    OVERLAPS     [reduce using rule 817 (rowSubquery)]
    MATCH        reduce using rule 563 (scalarSubquery)
    MATCH        [reduce using rule 817 (rowSubquery)]
    ','          reduce using rule 563 (scalarSubquery)
    ','          [reduce using rule 817 (rowSubquery)]
    ')'          reduce using rule 563 (scalarSubquery)
    ')'          [reduce using rule 817 (rowSubquery)]
    $default     reduce using rule 563 (scalarSubquery)


state 727

  498 valueExpressionPrimary: caseExpression .

    $default  reduce using rule 498 (valueExpressionPrimary)


state 728

  675 caseExpression: caseAbbreviation .

    $default  reduce using rule 675 (caseExpression)


state 729

  676 caseExpression: caseSpecification .

    $default  reduce using rule 676 (caseExpression)


state 730

  681 caseSpecification: simpleCase .

    $default  reduce using rule 681 (caseSpecification)


state 731

  682 caseSpecification: searchedCase .

    $default  reduce using rule 682 (caseSpecification)


state 732

  500 valueExpressionPrimary: castSpecification .

    $default  reduce using rule 500 (valueExpressionPrimary)


state 733

  713 concatenation: characterValueExpression . concatenationOperator characterFactor
  714 concatenationOperator: . UNKNOWN_LEX
  808 stringValueExpression: characterValueExpression .  [BETWEEN, NOT, IN, UNKNOWN_LEX, OVERLAPS, MATCH]
  846 matchValue: characterValueExpression .  [LIKE, NOT]

    UNKNOWN_LEX  shift, and go to state 920

    LIKE         reduce using rule 846 (matchValue)
    NOT          reduce using rule 808 (stringValueExpression)
    NOT          [reduce using rule 846 (matchValue)]
    UNKNOWN_LEX  [reduce using rule 808 (stringValueExpression)]
    $default     reduce using rule 808 (stringValueExpression)

    concatenationOperator  go to state 921


state 734

  711 characterValueExpression: concatenation .

    $default  reduce using rule 711 (characterValueExpression)


state 735

  712 characterValueExpression: characterFactor .

    $default  reduce using rule 712 (characterValueExpression)


state 736

  659 collateClause: . COLLATE collationName
  715 characterFactor: characterPrimary . characterFactor1
  716 characterFactor1: .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  717                 | . collateClause

    COLLATE  shift, and go to state 596

    $default  reduce using rule 716 (characterFactor1)

    collateClause     go to state 922
    characterFactor1  go to state 923


state 737

  719 characterPrimary: stringValueFunction .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  760 bitPrimary: stringValueFunction .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']

    BETWEEN           reduce using rule 719 (characterPrimary)
    BETWEEN           [reduce using rule 760 (bitPrimary)]
    HAVING            reduce using rule 719 (characterPrimary)
    HAVING            [reduce using rule 760 (bitPrimary)]
    WHERE             reduce using rule 719 (characterPrimary)
    WHERE             [reduce using rule 760 (bitPrimary)]
    OR                reduce using rule 719 (characterPrimary)
    OR                [reduce using rule 760 (bitPrimary)]
    GROUP             reduce using rule 719 (characterPrimary)
    GROUP             [reduce using rule 760 (bitPrimary)]
    RIGHT             reduce using rule 719 (characterPrimary)
    RIGHT             [reduce using rule 760 (bitPrimary)]
    INNER             reduce using rule 719 (characterPrimary)
    INNER             [reduce using rule 760 (bitPrimary)]
    UNION             reduce using rule 719 (characterPrimary)
    UNION             [reduce using rule 760 (bitPrimary)]
    FROM              reduce using rule 719 (characterPrimary)
    FROM              [reduce using rule 760 (bitPrimary)]
    WHEN              reduce using rule 719 (characterPrimary)
    WHEN              [reduce using rule 760 (bitPrimary)]
    THEN              reduce using rule 719 (characterPrimary)
    THEN              [reduce using rule 760 (bitPrimary)]
    ELSE              reduce using rule 719 (characterPrimary)
    ELSE              [reduce using rule 760 (bitPrimary)]
    DESC              reduce using rule 719 (characterPrimary)
    DESC              [reduce using rule 760 (bitPrimary)]
    JOIN              reduce using rule 719 (characterPrimary)
    JOIN              [reduce using rule 760 (bitPrimary)]
    LEFT              reduce using rule 719 (characterPrimary)
    LEFT              [reduce using rule 760 (bitPrimary)]
    FULL              reduce using rule 719 (characterPrimary)
    FULL              [reduce using rule 760 (bitPrimary)]
    AND               reduce using rule 719 (characterPrimary)
    AND               [reduce using rule 760 (bitPrimary)]
    END               reduce using rule 719 (characterPrimary)
    END               [reduce using rule 760 (bitPrimary)]
    ASC               reduce using rule 719 (characterPrimary)
    ASC               [reduce using rule 760 (bitPrimary)]
    NOT               reduce using rule 719 (characterPrimary)
    NOT               [reduce using rule 760 (bitPrimary)]
    ON                reduce using rule 719 (characterPrimary)
    ON                [reduce using rule 760 (bitPrimary)]
    AS                reduce using rule 719 (characterPrimary)
    AS                [reduce using rule 760 (bitPrimary)]
    IN                reduce using rule 719 (characterPrimary)
    IN                [reduce using rule 760 (bitPrimary)]
    IS                reduce using rule 719 (characterPrimary)
    IS                [reduce using rule 760 (bitPrimary)]
    UNKNOWN_LEX       reduce using rule 719 (characterPrimary)
    UNKNOWN_LEX       [reduce using rule 760 (bitPrimary)]
    ACTION            reduce using rule 719 (characterPrimary)
    ACTION            [reduce using rule 760 (bitPrimary)]
    MIN               reduce using rule 719 (characterPrimary)
    MIN               [reduce using rule 760 (bitPrimary)]
    OCTET_LENGTH      reduce using rule 719 (characterPrimary)
    OCTET_LENGTH      [reduce using rule 760 (bitPrimary)]
    CROSS             reduce using rule 719 (characterPrimary)
    CROSS             [reduce using rule 760 (bitPrimary)]
    DEFERRED          reduce using rule 719 (characterPrimary)
    DEFERRED          [reduce using rule 760 (bitPrimary)]
    DEFERRABLE        reduce using rule 719 (characterPrimary)
    DEFERRABLE        [reduce using rule 760 (bitPrimary)]
    ZONE              reduce using rule 719 (characterPrimary)
    ZONE              [reduce using rule 760 (bitPrimary)]
    INTERSECT         reduce using rule 719 (characterPrimary)
    INTERSECT         [reduce using rule 760 (bitPrimary)]
    COUNT             reduce using rule 719 (characterPrimary)
    COUNT             [reduce using rule 760 (bitPrimary)]
    NATURAL           reduce using rule 719 (characterPrimary)
    NATURAL           [reduce using rule 760 (bitPrimary)]
    NULLIF            reduce using rule 719 (characterPrimary)
    NULLIF            [reduce using rule 760 (bitPrimary)]
    SUM               reduce using rule 719 (characterPrimary)
    SUM               [reduce using rule 760 (bitPrimary)]
    KEY               reduce using rule 719 (characterPrimary)
    KEY               [reduce using rule 760 (bitPrimary)]
    AVG               reduce using rule 719 (characterPrimary)
    AVG               [reduce using rule 760 (bitPrimary)]
    INITIALLY         reduce using rule 719 (characterPrimary)
    INITIALLY         [reduce using rule 760 (bitPrimary)]
    UPPER             reduce using rule 719 (characterPrimary)
    UPPER             [reduce using rule 760 (bitPrimary)]
    EXCEPT            reduce using rule 719 (characterPrimary)
    EXCEPT            [reduce using rule 760 (bitPrimary)]
    EXTRACT           reduce using rule 719 (characterPrimary)
    EXTRACT           [reduce using rule 760 (bitPrimary)]
    CHAR_LENGTH       reduce using rule 719 (characterPrimary)
    CHAR_LENGTH       [reduce using rule 760 (bitPrimary)]
    SUBSTRING         reduce using rule 719 (characterPrimary)
    SUBSTRING         [reduce using rule 760 (bitPrimary)]
    PARTIAL           reduce using rule 719 (characterPrimary)
    PARTIAL           [reduce using rule 760 (bitPrimary)]
    MAX               reduce using rule 719 (characterPrimary)
    MAX               [reduce using rule 760 (bitPrimary)]
    LOWER             reduce using rule 719 (characterPrimary)
    LOWER             [reduce using rule 760 (bitPrimary)]
    USING             reduce using rule 719 (characterPrimary)
    USING             [reduce using rule 760 (bitPrimary)]
    CASCADE           reduce using rule 719 (characterPrimary)
    CASCADE           [reduce using rule 760 (bitPrimary)]
    TEMPORARY         reduce using rule 719 (characterPrimary)
    TEMPORARY         [reduce using rule 760 (bitPrimary)]
    OVERLAPS          reduce using rule 719 (characterPrimary)
    OVERLAPS          [reduce using rule 760 (bitPrimary)]
    CHARACTER_LENGTH  reduce using rule 719 (characterPrimary)
    CHARACTER_LENGTH  [reduce using rule 760 (bitPrimary)]
    MATCH             reduce using rule 719 (characterPrimary)
    MATCH             [reduce using rule 760 (bitPrimary)]
    CONVERT           reduce using rule 719 (characterPrimary)
    CONVERT           [reduce using rule 760 (bitPrimary)]
    TRANSLATE         reduce using rule 719 (characterPrimary)
    TRANSLATE         [reduce using rule 760 (bitPrimary)]
    PRESERVE          reduce using rule 719 (characterPrimary)
    PRESERVE          [reduce using rule 760 (bitPrimary)]
    POSITION          reduce using rule 719 (characterPrimary)
    POSITION          [reduce using rule 760 (bitPrimary)]
    COALESCE          reduce using rule 719 (characterPrimary)
    COALESCE          [reduce using rule 760 (bitPrimary)]
    TRIM              reduce using rule 719 (characterPrimary)
    TRIM              [reduce using rule 760 (bitPrimary)]
    NUMBER            reduce using rule 719 (characterPrimary)
    NUMBER            [reduce using rule 760 (bitPrimary)]
    ID                reduce using rule 719 (characterPrimary)
    ID                [reduce using rule 760 (bitPrimary)]
    ','               reduce using rule 719 (characterPrimary)
    ','               [reduce using rule 760 (bitPrimary)]
    ')'               reduce using rule 719 (characterPrimary)
    ')'               [reduce using rule 760 (bitPrimary)]
    $default          reduce using rule 719 (characterPrimary)


state 738

  720 stringValueFunction: characterValueFunction .

    $default  reduce using rule 720 (stringValueFunction)


state 739

  722 characterValueFunction: characterSubstringFunction .

    $default  reduce using rule 722 (characterValueFunction)


state 740

  723 characterValueFunction: fold .

    $default  reduce using rule 723 (characterValueFunction)


state 741

  724 characterValueFunction: formofuseConversion .

    $default  reduce using rule 724 (characterValueFunction)


state 742

  725 characterValueFunction: characterTranslation .

    $default  reduce using rule 725 (characterValueFunction)


state 743

  726 characterValueFunction: trimFunction .

    $default  reduce using rule 726 (characterValueFunction)


state 744

  721 stringValueFunction: bitValueFunction .

    $default  reduce using rule 721 (stringValueFunction)


state 745

  751 bitValueFunction: bitSubstringFunction .

    $default  reduce using rule 751 (bitValueFunction)


state 746

  714 concatenationOperator: . UNKNOWN_LEX
  757 bitConcatenation: bitValueExpression . concatenationOperator bitFactor
  809 stringValueExpression: bitValueExpression .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']

    UNKNOWN_LEX  shift, and go to state 920

    UNKNOWN_LEX  [reduce using rule 809 (stringValueExpression)]
    $default     reduce using rule 809 (stringValueExpression)

    concatenationOperator  go to state 924


state 747

  755 bitValueExpression: bitConcatenation .

    $default  reduce using rule 755 (bitValueExpression)


state 748

  756 bitValueExpression: bitFactor .

    $default  reduce using rule 756 (bitValueExpression)


state 749

  758 bitFactor: bitPrimary .

    $default  reduce using rule 758 (bitFactor)


state 750

  481 valueExpression: datetimeValueExpression .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  772 datetimeValueExpression: datetimeValueExpression . plusSign intervalTerm
  773                        | datetimeValueExpression . minusSign intervalTerm
  800 plusSign: . UNKNOWN_LEX
  802 minusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 876

    UNKNOWN_LEX  [reduce using rule 481 (valueExpression)]
    $default     reduce using rule 481 (valueExpression)

    plusSign   go to state 925
    minusSign  go to state 926


state 751

  770 datetimeValueExpression: datetimeTerm .

    $default  reduce using rule 770 (datetimeValueExpression)


state 752

  774 datetimeTerm: datetimeFactor .

    $default  reduce using rule 774 (datetimeTerm)


state 753

  775 datetimeFactor: datetimePrimary . datetimeFactor1
  776 datetimeFactor1: .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  777                | . timeZone
  780 timeZone: . AT timeZoneSpecifier

    AT  shift, and go to state 927

    $default  reduce using rule 776 (datetimeFactor1)

    datetimeFactor1  go to state 928
    timeZone         go to state 929


state 754

  482 valueExpression: intervalValueExpression .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  771 datetimeValueExpression: intervalValueExpression . plusSign datetimeTerm
  799 intervalValueExpression1: intervalValueExpression .  [UNKNOWN_LEX]
  800 plusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 930

    UNKNOWN_LEX  [reduce using rule 482 (valueExpression)]
    UNKNOWN_LEX  [reduce using rule 799 (intervalValueExpression1)]
    $default     reduce using rule 482 (valueExpression)

    plusSign  go to state 931


state 755

  783 intervalValueExpression: intervalTerm .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  797 intervalTerm2: intervalTerm .  [UNKNOWN_LEX]

    UNKNOWN_LEX  reduce using rule 783 (intervalValueExpression)
    UNKNOWN_LEX  [reduce using rule 797 (intervalTerm2)]
    $default     reduce using rule 783 (intervalValueExpression)


state 756

  787 intervalTerm: intervalFactor .

    $default  reduce using rule 787 (intervalTerm)


state 757

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  791 intervalFactor: intervalFactor1 . intervalPrimary
  794 intervalPrimary: . valueExpressionPrimary intervalPrimary1

    CASE              shift, and go to state 665
    CAST              shift, and go to state 666
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 882
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 670
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 671
    SESSION_USER      shift, and go to state 672
    DATE              shift, and go to state 495
    NULLIF            shift, and go to state 673
    SUM               shift, and go to state 674
    KEY               shift, and go to state 42
    AVG               shift, and go to state 675
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    TIMESTAMP         shift, and go to state 497
    MODULE            shift, and go to state 213
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 498
    SYSTEM_USER       shift, and go to state 677
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 679
    MAX               shift, and go to state 680
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 682
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    CURRENT_USER      shift, and go to state 684
    TRANSLATE         shift, and go to state 56
    INTERVAL          shift, and go to state 504
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 687
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 294

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 889
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    valueExpressionPrimary          go to state 932
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    intervalPrimary                 go to state 933


state 758

  552 asterisk: . UNKNOWN_LEX
  788 intervalTerm: intervalTerm2 . asterisk factor
  789             | intervalTerm2 . solidus factor
  798 solidus: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 879

    asterisk  go to state 934
    solidus   go to state 935


state 759

  784 intervalValueExpression: intervalValueExpression1 . plusSign intervalTerm1
  785                        | intervalValueExpression1 . minusSign intervalTerm1
  800 plusSign: . UNKNOWN_LEX
  802 minusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 876

    plusSign   go to state 936
    minusSign  go to state 937


state 760

  480 valueExpression: stringValueExpression .

    $default  reduce using rule 480 (valueExpression)


state 761

  477 rowValueConstructorElement: nullSpecification .

    $default  reduce using rule 477 (rowValueConstructorElement)


state 762

  478 rowValueConstructorElement: defaultSpecification .

    $default  reduce using rule 478 (rowValueConstructorElement)


state 763

  475 rowValueConstructor: rowSubquery .

    $default  reduce using rule 475 (rowValueConstructor)


state 764

  464 predicate: betweenPredicate .

    $default  reduce using rule 464 (predicate)


state 765

  465 predicate: inPredicate .

    $default  reduce using rule 465 (predicate)


state 766

  466 predicate: likePredicate .

    $default  reduce using rule 466 (predicate)


state 767

  841 likePredicate: matchValue . likePredicate1 LIKE pattern likePredicate2
  842 likePredicate1: .  [LIKE]
  843               | . NOT

    NOT  shift, and go to state 938

    $default  reduce using rule 842 (likePredicate1)

    likePredicate1  go to state 939


state 768

  467 predicate: nullPredicate .

    $default  reduce using rule 467 (predicate)


state 769

  468 predicate: quantifiedComparisonPredicate .

    $default  reduce using rule 468 (predicate)


state 770

  469 predicate: existsPredicate .

    $default  reduce using rule 469 (predicate)


state 771

  470 predicate: matchPredicate .

    $default  reduce using rule 470 (predicate)


state 772

  471 predicate: overlapsPredicate .

    $default  reduce using rule 471 (predicate)


state 773

  865 overlapsPredicate: rowValueConstructor1 . OVERLAPS rowValueConstructor2

    OVERLAPS  shift, and go to state 940


state 774

  894 referencingColumns: referenceColumnList .

    $default  reduce using rule 894 (referencingColumns)


state 775

  430 referenceColumnList: columnNameList .

    $default  reduce using rule 430 (referenceColumnList)


state 776

  267 rightParen: . ')'
  893 referentialConstraintDefinition: FOREIGN KEY leftParen referencingColumns . rightParen referencesSpecification

    ')'  shift, and go to state 448

    rightParen  go to state 941


state 777

  314 comma: . ','
  431 columnNameList: columnName columnNameList1 .  [')']
  433 columnNameList1: columnNameList1 . comma columnName

    ','  shift, and go to state 447

    $default  reduce using rule 431 (columnNameList)

    comma  go to state 942


state 778

  891 uniqueConstraintDefinition: uniqueSpecification leftParen uniqueColumnList rightParen .

    $default  reduce using rule 891 (uniqueConstraintDefinition)


state 779

  292 bitStringType2: leftParen length rightParen .

    $default  reduce using rule 292 (bitStringType2)


state 780

  286 nationalCharacterStringType6: leftParen length rightParen .

    $default  reduce using rule 286 (nationalCharacterStringType6)


state 781

  331 datetimeType4: WITH TIME ZONE .

    $default  reduce using rule 331 (datetimeType4)


state 782

  302 exactNumericType2: leftParen precision exactNumericType1 rightParen .

    $default  reduce using rule 302 (exactNumericType2)


state 783

  315 scale: unsignedInteger .

    $default  reduce using rule 315 (scale)


state 784

  304 exactNumericType1: comma scale .

    $default  reduce using rule 304 (exactNumericType1)


state 785

  306 exactNumericType4: leftParen precision exactNumericType3 rightParen .

    $default  reduce using rule 306 (exactNumericType4)


state 786

  308 exactNumericType3: comma scale .

    $default  reduce using rule 308 (exactNumericType3)


state 787

  310 exactNumericType6: leftParen precision exactNumericType5 rightParen .

    $default  reduce using rule 310 (exactNumericType6)


state 788

  312 exactNumericType5: comma scale .

    $default  reduce using rule 312 (exactNumericType5)


state 789

  327 datetimeType2: WITH TIME ZONE .

    $default  reduce using rule 327 (datetimeType2)


state 790

  260 characterStringType3: leftParen length rightParen .

    $default  reduce using rule 260 (characterStringType3)


state 791

  262 characterStringType4: leftParen length rightParen .

    $default  reduce using rule 262 (characterStringType4)


state 792

  267 rightParen: . ')'
  282 nationalCharacterStringType4: leftParen length . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 943


state 793

  276 nationalCharacterStringType1: leftParen length rightParen .

    $default  reduce using rule 276 (nationalCharacterStringType1)


state 794

  267 rightParen: . ')'
  284 nationalCharacterStringType5: leftParen length . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 944


state 795

  278 nationalCharacterStringType2: leftParen length rightParen .

    $default  reduce using rule 278 (nationalCharacterStringType2)


state 796

  230 leftParen: . '('
  359 singleDatetimeField2: comma . leftParen intervalFractionalSecondsPrecision

    '('  shift, and go to state 294

    leftParen  go to state 945


state 797

  267 rightParen: . ')'
  357 singleDatetimeField3: leftParen intervalLeadingFieldPrecision singleDatetimeField2 . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 946


state 798

  266 unsignedInteger: . NUMBER
  350 endField1: leftParen . intervalFractionalSecondsPrecision rightParen
  351 intervalFractionalSecondsPrecision: . unsignedInteger

    NUMBER  shift, and go to state 541

    unsignedInteger                     go to state 947
    intervalFractionalSecondsPrecision  go to state 948


state 799

  348 endField: SECOND endField1 .

    $default  reduce using rule 348 (endField)


state 800

  340 startField1: leftParen intervalLeadingFieldPrecision rightParen .  [TO]
  355 singleDatetimeField1: leftParen intervalLeadingFieldPrecision rightParen .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, UNIQUE, COLLATE, KEY, AVG, INITIALLY, UPPER, CONSTRAINT, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, PRIMARY, CHECK, REFERENCES, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']

    TO        reduce using rule 340 (startField1)
    $default  reduce using rule 355 (singleDatetimeField1)


state 801

  405 currentTimeValueFunction1: leftParen timePrecision rightParen .

    $default  reduce using rule 405 (currentTimeValueFunction1)


state 802

  408 currentTimestampValueFunction1: leftParen timestampPrecision rightParen .

    $default  reduce using rule 408 (currentTimestampValueFunction1)


state 803

  395 intervalLiteral: INTERVAL intervalLiteral1 intervalString intervalQualifier .

    $default  reduce using rule 395 (intervalLiteral)


state 804

  416 columnConstraint: NOT NULL .

    $default  reduce using rule 416 (columnConstraint)


state 805

  230 leftParen: . '('
  427 referencedTableAndColumns: tableName . referencedTableAndColumns1
  428 referencedTableAndColumns1: .  [NOT, ON, DEFERRABLE, UNIQUE, COLLATE, INITIALLY, CONSTRAINT, PRIMARY, CHECK, REFERENCES, MATCH, ',', ')']
  429                           | . leftParen referenceColumnList rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 428 (referencedTableAndColumns1)

    leftParen                   go to state 949
    referencedTableAndColumns1  go to state 950


state 806

  422 referencesSpecification: REFERENCES referencedTableAndColumns . referencesSpecification1 referencesSpecification2
  423 referencesSpecification1: .  [NOT, ON, DEFERRABLE, UNIQUE, COLLATE, INITIALLY, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  424                         | . MATCH matchType

    MATCH  shift, and go to state 951

    $default  reduce using rule 423 (referencesSpecification1)

    referencesSpecification1  go to state 952


state 807

  878 constraintAttributes3: NOT .

    $default  reduce using rule 878 (constraintAttributes3)


state 808

  409 columnConstraintDefinition: columnConstraintDefinition1 columnConstraint columnConstraintDefinition2 .

    $default  reduce using rule 409 (columnConstraintDefinition)


state 809

  413 columnConstraintDefinition2: constraintAttributes .

    $default  reduce using rule 413 (columnConstraintDefinition2)


state 810

  872 constraintAttributes: constraintAttributes3 . DEFERRABLE constraintAttributes4

    DEFERRABLE  shift, and go to state 953


state 811

  871 constraintAttributes: constraintCheckTime . constraintAttributes2
  873 constraintAttributes2: .  [NOT, UNIQUE, COLLATE, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  874                      | . constraintAttributes1 DEFERRABLE
  875 constraintAttributes1: .  [DEFERRABLE]
  876                      | . NOT

    NOT  shift, and go to state 954

    NOT         [reduce using rule 873 (constraintAttributes2)]
    DEFERRABLE  reduce using rule 875 (constraintAttributes1)
    $default    reduce using rule 873 (constraintAttributes2)

    constraintAttributes2  go to state 955
    constraintAttributes1  go to state 956


state 812

  450 searchCondition: searchCondition OR booleanTerm .  [HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, THEN, JOIN, LEFT, FULL, ON, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']
  452 booleanTerm: booleanTerm . AND booleanFactor

    AND  shift, and go to state 663

    $default  reduce using rule 450 (searchCondition)


state 813

  452 booleanTerm: booleanTerm AND booleanFactor .

    $default  reduce using rule 452 (booleanTerm)


state 814

  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  564 subquery: . leftParen queryExpression rightParen
  564         | leftParen . queryExpression rightParen
  565 queryExpression: . nonjoinQueryExpression
  566                | . joinedTable
  567 nonjoinQueryExpression: . nonjoinQueryTerm
  568                       | . queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  569                       | . queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  578 nonjoinQueryTerm: . nonjoinQueryPrimary
  579                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  584 nonjoinQueryPrimary: . simpleTable
  585                    | . leftParen nonjoinQueryExpression rightParen
  586 simpleTable: . querySpecification
  587            | . tableValueConstructor
  588            | . explicitTable
  589 querySpecification: . SELECT querySpecification1 selectList tableExpression
  614 tableReference: . tableName tableReference1
  615               | . derivedTable correlationSpecification
  616               | . joinedTable
  625 derivedTable: . tableSubquery
  626 tableSubquery: . subquery
  627 joinedTable: . crossJoin
  628            | . qualifiedJoin
  629            | . leftParen joinedTable rightParen
  630 crossJoin: . tableReference CROSS JOIN tableReference
  631 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  662 tableValueConstructor: . VALUES tableValueConstructorList
  666 explicitTable: . TABLE tableName
  667 queryTerm: . nonjoinQueryTerm
  668          | . joinedTable

    VALUES       shift, and go to state 836
    SELECT       shift, and go to state 837
    TABLE        shift, and go to state 838
    UNKNOWN_LEX  shift, and go to state 212
    MODULE       shift, and go to state 213
    '('          shift, and go to state 294

    $default  reduce using rule 219 (qualifiedName1)

    tableName                go to state 957
    qualifiedName            go to state 215
    qualifiedName1           go to state 216
    schemaName               go to state 217
    qualifiedLocalTableName  go to state 218
    leftParen                go to state 958
    subquery                 go to state 815
    queryExpression          go to state 845
    nonjoinQueryExpression   go to state 846
    nonjoinQueryTerm         go to state 847
    nonjoinQueryPrimary      go to state 848
    simpleTable              go to state 849
    querySpecification       go to state 850
    tableReference           go to state 851
    derivedTable             go to state 852
    tableSubquery            go to state 853
    joinedTable              go to state 854
    crossJoin                go to state 855
    qualifiedJoin            go to state 856
    tableValueConstructor    go to state 857
    explicitTable            go to state 858
    queryTerm                go to state 859


state 815

  626 tableSubquery: subquery .

    $default  reduce using rule 626 (tableSubquery)


state 816

  858 existsPredicate: EXISTS tableSubquery .

    $default  reduce using rule 858 (existsPredicate)


state 817

  449 searchCondition: . booleanTerm
  450                | . searchCondition OR booleanTerm
  451 booleanTerm: . booleanFactor
  452            | . booleanTerm AND booleanFactor
  453 booleanFactor: . booleanFactor1 booleanTest
  454 booleanFactor1: .  [EXISTS, CASE, CAST, DESC, NULL, ASC, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  455               | . NOT
  700 searchedWhenClause: WHEN . searchCondition THEN result

    NOT  shift, and go to state 602

    $default  reduce using rule 454 (booleanFactor1)

    searchCondition  go to state 959
    booleanTerm      go to state 604
    booleanFactor    go to state 605
    booleanFactor1   go to state 606


state 818

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  499                       | leftParen . valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  564         | leftParen . queryExpression rightParen
  565 queryExpression: . nonjoinQueryExpression
  566                | . joinedTable
  567 nonjoinQueryExpression: . nonjoinQueryTerm
  568                       | . queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  569                       | . queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  578 nonjoinQueryTerm: . nonjoinQueryPrimary
  579                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  584 nonjoinQueryPrimary: . simpleTable
  585                    | . leftParen nonjoinQueryExpression rightParen
  586 simpleTable: . querySpecification
  587            | . tableValueConstructor
  588            | . explicitTable
  589 querySpecification: . SELECT querySpecification1 selectList tableExpression
  614 tableReference: . tableName tableReference1
  615               | . derivedTable correlationSpecification
  616               | . joinedTable
  625 derivedTable: . tableSubquery
  626 tableSubquery: . subquery
  627 joinedTable: . crossJoin
  628            | . qualifiedJoin
  629            | . leftParen joinedTable rightParen
  630 crossJoin: . tableReference CROSS JOIN tableReference
  631 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  662 tableValueConstructor: . VALUES tableValueConstructorList
  666 explicitTable: . TABLE tableName
  667 queryTerm: . nonjoinQueryTerm
  668          | . joinedTable
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  786                        | leftParen . datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression

    VALUES             shift, and go to state 836
    SELECT             shift, and go to state 837
    TABLE              shift, and go to state 838
    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 839
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 840
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 960
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 844
    queryExpression                 go to state 845
    nonjoinQueryExpression          go to state 846
    nonjoinQueryTerm                go to state 847
    nonjoinQueryPrimary             go to state 848
    simpleTable                     go to state 849
    querySpecification              go to state 850
    tableReference                  go to state 851
    derivedTable                    go to state 852
    tableSubquery                   go to state 853
    joinedTable                     go to state 854
    crossJoin                       go to state 855
    qualifiedJoin                   go to state 856
    tableValueConstructor           go to state 857
    explicitTable                   go to state 858
    queryTerm                       go to state 859
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 860
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760


state 819

  688 caseOperand: valueExpression .

    $default  reduce using rule 688 (caseOperand)


state 820

  563 scalarSubquery: subquery .

    $default  reduce using rule 563 (scalarSubquery)


state 821

  683 simpleCase: CASE caseOperand . simpleCase1 simpleCase2 END
  684 simpleCase1: . simpleWhenClause
  685            | . simpleCase1 simpleWhenClause
  689 simpleWhenClause: . WHEN whenOperand THEN result

    WHEN  shift, and go to state 961

    simpleCase1       go to state 962
    simpleWhenClause  go to state 963


state 822

  694 elseClause: . ELSE result
  695 searchedCase: CASE searchedCase1 . searchedCase2 END
  697 searchedCase1: searchedCase1 . searchedWhenClause
  698 searchedCase2: .  [END]
  699              | . elseClause
  700 searchedWhenClause: . WHEN searchCondition THEN result

    WHEN  shift, and go to state 817
    ELSE  shift, and go to state 964

    $default  reduce using rule 698 (searchedCase2)

    elseClause          go to state 965
    searchedCase2       go to state 966
    searchedWhenClause  go to state 967


state 823

  696 searchedCase1: searchedWhenClause .

    $default  reduce using rule 696 (searchedCase1)


state 824

  713 concatenation: characterValueExpression . concatenationOperator characterFactor
  714 concatenationOperator: . UNKNOWN_LEX
  808 stringValueExpression: characterValueExpression .  [HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, ON, AS, IS, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']

    UNKNOWN_LEX  shift, and go to state 920

    $default  reduce using rule 808 (stringValueExpression)

    concatenationOperator  go to state 921


state 825

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  701                  | CAST leftParen . castOperand AS castTarget rightParen
  702 castOperand: . valueExpression
  703            | . NULL
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    NULL               shift, and go to state 968
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 818
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 969
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    castOperand                     go to state 970
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760


state 826

  851 nullPredicate1: NOT .

    $default  reduce using rule 851 (nullPredicate1)


state 827

  849 nullPredicate: IS nullPredicate1 . NULL

    NULL  shift, and go to state 971


state 828

  550 setFunctionSpecification: COUNT leftParen . asterisk rightParen
  552 asterisk: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 972

    asterisk  go to state 973


state 829

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  677                 | NULLIF leftParen . valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 818
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 974
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760


state 830

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  727                           | SUBSTRING leftParen . characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  752                     | SUBSTRING leftParen . bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction

    CASE              shift, and go to state 665
    CAST              shift, and go to state 666
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 882
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 670
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 671
    SESSION_USER      shift, and go to state 672
    DATE              shift, and go to state 495
    NULLIF            shift, and go to state 673
    SUM               shift, and go to state 674
    KEY               shift, and go to state 42
    AVG               shift, and go to state 675
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 676
    TIMESTAMP         shift, and go to state 497
    MODULE            shift, and go to state 213
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 498
    SYSTEM_USER       shift, and go to state 677
    SUBSTRING         shift, and go to state 678
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 679
    MAX               shift, and go to state 680
    LOWER             shift, and go to state 681
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 682
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 683
    CURRENT_USER      shift, and go to state 684
    TRANSLATE         shift, and go to state 685
    INTERVAL          shift, and go to state 504
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 687
    TRIM              shift, and go to state 688
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 294

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 889
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    valueExpressionPrimary          go to state 975
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 976
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 977
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749


state 831

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  733     | LOWER leftParen . characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

    CASE              shift, and go to state 665
    CAST              shift, and go to state 666
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 882
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 670
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 671
    SESSION_USER      shift, and go to state 672
    DATE              shift, and go to state 495
    NULLIF            shift, and go to state 673
    SUM               shift, and go to state 674
    KEY               shift, and go to state 42
    AVG               shift, and go to state 675
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 676
    TIMESTAMP         shift, and go to state 497
    MODULE            shift, and go to state 213
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 498
    SYSTEM_USER       shift, and go to state 677
    SUBSTRING         shift, and go to state 678
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 679
    MAX               shift, and go to state 680
    LOWER             shift, and go to state 681
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 682
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 683
    CURRENT_USER      shift, and go to state 684
    TRANSLATE         shift, and go to state 685
    INTERVAL          shift, and go to state 504
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 687
    TRIM              shift, and go to state 688
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 294

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 889
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    valueExpressionPrimary          go to state 978
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 979
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 980
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745


state 832

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  734                    | CONVERT leftParen . characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

    CASE              shift, and go to state 665
    CAST              shift, and go to state 666
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 882
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 670
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 671
    SESSION_USER      shift, and go to state 672
    DATE              shift, and go to state 495
    NULLIF            shift, and go to state 673
    SUM               shift, and go to state 674
    KEY               shift, and go to state 42
    AVG               shift, and go to state 675
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 676
    TIMESTAMP         shift, and go to state 497
    MODULE            shift, and go to state 213
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 498
    SYSTEM_USER       shift, and go to state 677
    SUBSTRING         shift, and go to state 678
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 679
    MAX               shift, and go to state 680
    LOWER             shift, and go to state 681
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 682
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 683
    CURRENT_USER      shift, and go to state 684
    TRANSLATE         shift, and go to state 685
    INTERVAL          shift, and go to state 504
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 687
    TRIM              shift, and go to state 688
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 294

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 889
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    valueExpressionPrimary          go to state 978
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 981
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 980
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745


state 833

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  736                     | TRANSLATE leftParen . characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

    CASE              shift, and go to state 665
    CAST              shift, and go to state 666
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 882
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 670
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 671
    SESSION_USER      shift, and go to state 672
    DATE              shift, and go to state 495
    NULLIF            shift, and go to state 673
    SUM               shift, and go to state 674
    KEY               shift, and go to state 42
    AVG               shift, and go to state 675
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 676
    TIMESTAMP         shift, and go to state 497
    MODULE            shift, and go to state 213
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 498
    SYSTEM_USER       shift, and go to state 677
    SUBSTRING         shift, and go to state 678
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 679
    MAX               shift, and go to state 680
    LOWER             shift, and go to state 681
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 682
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 683
    CURRENT_USER      shift, and go to state 684
    TRANSLATE         shift, and go to state 685
    INTERVAL          shift, and go to state 504
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 687
    TRIM              shift, and go to state 688
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 294

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 889
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    valueExpressionPrimary          go to state 978
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 982
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 980
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745


state 834

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  678                 | COALESCE leftParen . valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 818
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 983
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760


state 835

  738 trimFunction: TRIM leftParen . trimOperands rightParen
  739 trimOperands: . trimOperands3 trimSource
  740 trimOperands3: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  741              | . trimOperands1 trimOperands2 FROM
  742 trimOperands1: .  [FROM, CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  743              | . trimSpecification
  746 trimSpecification: . LEADING
  747                  | . TRAILING
  748                  | . BOTH

    BOTH      shift, and go to state 984
    LEADING   shift, and go to state 985
    TRAILING  shift, and go to state 986

    FROM              reduce using rule 742 (trimOperands1)
    CASE              reduce using rule 740 (trimOperands3)
    CASE              [reduce using rule 742 (trimOperands1)]
    CAST              reduce using rule 740 (trimOperands3)
    CAST              [reduce using rule 742 (trimOperands1)]
    DESC              reduce using rule 740 (trimOperands3)
    DESC              [reduce using rule 742 (trimOperands1)]
    ASC               reduce using rule 740 (trimOperands3)
    ASC               [reduce using rule 742 (trimOperands1)]
    UNKNOWN_LEX       reduce using rule 740 (trimOperands3)
    UNKNOWN_LEX       [reduce using rule 742 (trimOperands1)]
    ACTION            reduce using rule 740 (trimOperands3)
    ACTION            [reduce using rule 742 (trimOperands1)]
    MIN               reduce using rule 740 (trimOperands3)
    MIN               [reduce using rule 742 (trimOperands1)]
    OCTET_LENGTH      reduce using rule 740 (trimOperands3)
    OCTET_LENGTH      [reduce using rule 742 (trimOperands1)]
    DEFERRED          reduce using rule 740 (trimOperands3)
    DEFERRED          [reduce using rule 742 (trimOperands1)]
    DEFERRABLE        reduce using rule 740 (trimOperands3)
    DEFERRABLE        [reduce using rule 742 (trimOperands1)]
    ZONE              reduce using rule 740 (trimOperands3)
    ZONE              [reduce using rule 742 (trimOperands1)]
    COUNT             reduce using rule 740 (trimOperands3)
    COUNT             [reduce using rule 742 (trimOperands1)]
    SESSION_USER      reduce using rule 740 (trimOperands3)
    SESSION_USER      [reduce using rule 742 (trimOperands1)]
    DATE              reduce using rule 740 (trimOperands3)
    DATE              [reduce using rule 742 (trimOperands1)]
    NULLIF            reduce using rule 740 (trimOperands3)
    NULLIF            [reduce using rule 742 (trimOperands1)]
    SUM               reduce using rule 740 (trimOperands3)
    SUM               [reduce using rule 742 (trimOperands1)]
    KEY               reduce using rule 740 (trimOperands3)
    KEY               [reduce using rule 742 (trimOperands1)]
    AVG               reduce using rule 740 (trimOperands3)
    AVG               [reduce using rule 742 (trimOperands1)]
    INITIALLY         reduce using rule 740 (trimOperands3)
    INITIALLY         [reduce using rule 742 (trimOperands1)]
    UPPER             reduce using rule 740 (trimOperands3)
    UPPER             [reduce using rule 742 (trimOperands1)]
    TIMESTAMP         reduce using rule 740 (trimOperands3)
    TIMESTAMP         [reduce using rule 742 (trimOperands1)]
    MODULE            reduce using rule 740 (trimOperands3)
    MODULE            [reduce using rule 742 (trimOperands1)]
    EXTRACT           reduce using rule 740 (trimOperands3)
    EXTRACT           [reduce using rule 742 (trimOperands1)]
    CHAR_LENGTH       reduce using rule 740 (trimOperands3)
    CHAR_LENGTH       [reduce using rule 742 (trimOperands1)]
    TIME              reduce using rule 740 (trimOperands3)
    TIME              [reduce using rule 742 (trimOperands1)]
    SYSTEM_USER       reduce using rule 740 (trimOperands3)
    SYSTEM_USER       [reduce using rule 742 (trimOperands1)]
    SUBSTRING         reduce using rule 740 (trimOperands3)
    SUBSTRING         [reduce using rule 742 (trimOperands1)]
    PARTIAL           reduce using rule 740 (trimOperands3)
    PARTIAL           [reduce using rule 742 (trimOperands1)]
    USER              reduce using rule 740 (trimOperands3)
    USER              [reduce using rule 742 (trimOperands1)]
    MAX               reduce using rule 740 (trimOperands3)
    MAX               [reduce using rule 742 (trimOperands1)]
    LOWER             reduce using rule 740 (trimOperands3)
    LOWER             [reduce using rule 742 (trimOperands1)]
    CASCADE           reduce using rule 740 (trimOperands3)
    CASCADE           [reduce using rule 742 (trimOperands1)]
    TEMPORARY         reduce using rule 740 (trimOperands3)
    TEMPORARY         [reduce using rule 742 (trimOperands1)]
    VALUE             reduce using rule 740 (trimOperands3)
    VALUE             [reduce using rule 742 (trimOperands1)]
    CHARACTER_LENGTH  reduce using rule 740 (trimOperands3)
    CHARACTER_LENGTH  [reduce using rule 742 (trimOperands1)]
    CONVERT           reduce using rule 740 (trimOperands3)
    CONVERT           [reduce using rule 742 (trimOperands1)]
    CURRENT_USER      reduce using rule 740 (trimOperands3)
    CURRENT_USER      [reduce using rule 742 (trimOperands1)]
    TRANSLATE         reduce using rule 740 (trimOperands3)
    TRANSLATE         [reduce using rule 742 (trimOperands1)]
    INTERVAL          reduce using rule 740 (trimOperands3)
    INTERVAL          [reduce using rule 742 (trimOperands1)]
    PRESERVE          reduce using rule 740 (trimOperands3)
    PRESERVE          [reduce using rule 742 (trimOperands1)]
    POSITION          reduce using rule 740 (trimOperands3)
    POSITION          [reduce using rule 742 (trimOperands1)]
    COALESCE          reduce using rule 740 (trimOperands3)
    COALESCE          [reduce using rule 742 (trimOperands1)]
    TRIM              reduce using rule 740 (trimOperands3)
    TRIM              [reduce using rule 742 (trimOperands1)]
    NUMBER            reduce using rule 740 (trimOperands3)
    NUMBER            [reduce using rule 742 (trimOperands1)]
    ID                reduce using rule 740 (trimOperands3)
    ID                [reduce using rule 742 (trimOperands1)]
    '('               reduce using rule 740 (trimOperands3)
    '('               [reduce using rule 742 (trimOperands1)]
    $default          reduce using rule 740 (trimOperands3)

    trimOperands       go to state 987
    trimOperands3      go to state 988
    trimOperands1      go to state 989
    trimSpecification  go to state 990


state 836

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  473 rowValueConstructor: . rowValueConstructorElement
  474                    | . leftParen rowValueConstructorList rightParen
  475                    | . rowSubquery
  476 rowValueConstructorElement: . valueExpression
  477                           | . nullSpecification
  478                           | . defaultSpecification
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  662 tableValueConstructor: VALUES . tableValueConstructorList
  663 tableValueConstructorList: . rowValueConstructor tableValueConstructorList1
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression
  812 nullSpecification: . NULL
  813 defaultSpecification: . DEFAULT
  817 rowSubquery: . subquery

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    NULL               shift, and go to state 667
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    DEFAULT            shift, and go to state 686
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 991
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    rowValueConstructor             go to state 992
    rowValueConstructorElement      go to state 701
    valueExpression                 go to state 702
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 726
    tableValueConstructorList       go to state 993
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760
    nullSpecification               go to state 761
    defaultSpecification            go to state 762
    rowSubquery                     go to state 763


state 837

  561 setQuantifier: . DISTINCT
  562              | . ALL
  589 querySpecification: SELECT . querySpecification1 selectList tableExpression
  590 querySpecification1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  591                    | . setQuantifier

    DISTINCT  shift, and go to state 994
    ALL       shift, and go to state 995

    $default  reduce using rule 590 (querySpecification1)

    setQuantifier        go to state 996
    querySpecification1  go to state 997


state 838

  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  225 qualifiedLocalTableName: . MODULE period localTableName
  666 explicitTable: TABLE . tableName

    UNKNOWN_LEX  shift, and go to state 212
    MODULE       shift, and go to state 213

    $default  reduce using rule 219 (qualifiedName1)

    tableName                go to state 998
    qualifiedName            go to state 215
    qualifiedName1           go to state 216
    schemaName               go to state 217
    qualifiedLocalTableName  go to state 218


state 839

  547 qualifier: tableName .  [UNKNOWN_LEX]
  614 tableReference: tableName . tableReference1
  617 tableReference1: .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL, CROSS, NATURAL]
  618                | . correlationSpecification
  619 correlationSpecification: . correlationSpecification1 correlationName correlationSpecification2
  620 correlationSpecification1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  621                          | . AS

    AS  shift, and go to state 999

    RIGHT        reduce using rule 617 (tableReference1)
    INNER        reduce using rule 617 (tableReference1)
    UNION        reduce using rule 617 (tableReference1)
    JOIN         reduce using rule 617 (tableReference1)
    LEFT         reduce using rule 617 (tableReference1)
    FULL         reduce using rule 617 (tableReference1)
    UNKNOWN_LEX  reduce using rule 547 (qualifier)
    CROSS        reduce using rule 617 (tableReference1)
    NATURAL      reduce using rule 617 (tableReference1)
    $default     reduce using rule 620 (correlationSpecification1)

    tableReference1            go to state 1000
    correlationSpecification   go to state 1001
    correlationSpecification1  go to state 1002


state 840

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  499                       | leftParen . valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  564         | leftParen . queryExpression rightParen
  565 queryExpression: . nonjoinQueryExpression
  566                | . joinedTable
  567 nonjoinQueryExpression: . nonjoinQueryTerm
  568                       | . queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  569                       | . queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  578 nonjoinQueryTerm: . nonjoinQueryPrimary
  579                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  584 nonjoinQueryPrimary: . simpleTable
  585                    | . leftParen nonjoinQueryExpression rightParen
  585                    | leftParen . nonjoinQueryExpression rightParen
  586 simpleTable: . querySpecification
  587            | . tableValueConstructor
  588            | . explicitTable
  589 querySpecification: . SELECT querySpecification1 selectList tableExpression
  614 tableReference: . tableName tableReference1
  615               | . derivedTable correlationSpecification
  616               | . joinedTable
  625 derivedTable: . tableSubquery
  626 tableSubquery: . subquery
  627 joinedTable: . crossJoin
  628            | . qualifiedJoin
  629            | . leftParen joinedTable rightParen
  629            | leftParen . joinedTable rightParen
  630 crossJoin: . tableReference CROSS JOIN tableReference
  631 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  662 tableValueConstructor: . VALUES tableValueConstructorList
  666 explicitTable: . TABLE tableName
  667 queryTerm: . nonjoinQueryTerm
  668          | . joinedTable
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  786                        | leftParen . datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression

    VALUES             shift, and go to state 836
    SELECT             shift, and go to state 837
    TABLE              shift, and go to state 838
    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 839
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 840
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 960
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 844
    queryExpression                 go to state 845
    nonjoinQueryExpression          go to state 1003
    nonjoinQueryTerm                go to state 847
    nonjoinQueryPrimary             go to state 848
    simpleTable                     go to state 849
    querySpecification              go to state 850
    tableReference                  go to state 851
    derivedTable                    go to state 852
    tableSubquery                   go to state 853
    joinedTable                     go to state 1004
    crossJoin                       go to state 855
    qualifiedJoin                   go to state 856
    tableValueConstructor           go to state 857
    explicitTable                   go to state 858
    queryTerm                       go to state 859
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 860
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760


state 841

  267 rightParen: . ')'
  450 searchCondition: searchCondition . OR booleanTerm
  462 booleanPrimary: leftParen searchCondition . rightParen

    OR   shift, and go to state 661
    ')'  shift, and go to state 448

    rightParen  go to state 1005


state 842

  814 rowValueConstructorList: rowValueConstructorElement . rowValueConstructorList1
  815 rowValueConstructorList1: .
  816                         | . rowValueConstructorList1 comma rowValueConstructorElement

    $default  reduce using rule 815 (rowValueConstructorList1)

    rowValueConstructorList1  go to state 1006


state 843

  267 rightParen: . ')'
  476 rowValueConstructorElement: valueExpression .  [',', ')']
  499 valueExpressionPrimary: leftParen valueExpression . rightParen

    ')'  shift, and go to state 448

    ')'       [reduce using rule 476 (rowValueConstructorElement)]
    $default  reduce using rule 476 (rowValueConstructorElement)

    rightParen  go to state 1007


state 844

  563 scalarSubquery: subquery .  [UNKNOWN_LEX, COLLATE, AT, ',', ')']
  626 tableSubquery: subquery .  [DESC, ASC, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]

    UNKNOWN_LEX  reduce using rule 563 (scalarSubquery)
    COLLATE      reduce using rule 563 (scalarSubquery)
    AT           reduce using rule 563 (scalarSubquery)
    ','          reduce using rule 563 (scalarSubquery)
    ')'          reduce using rule 563 (scalarSubquery)
    $default     reduce using rule 626 (tableSubquery)


state 845

  267 rightParen: . ')'
  564 subquery: leftParen queryExpression . rightParen
  568 nonjoinQueryExpression: queryExpression . UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  569                       | queryExpression . EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm

    UNION   shift, and go to state 1008
    EXCEPT  shift, and go to state 1009
    ')'     shift, and go to state 448

    rightParen  go to state 1010


state 846

  565 queryExpression: nonjoinQueryExpression .

    $default  reduce using rule 565 (queryExpression)


state 847

  567 nonjoinQueryExpression: nonjoinQueryTerm .  [UNION, EXCEPT, ')']
  667 queryTerm: nonjoinQueryTerm .  [INTERSECT]

    INTERSECT  reduce using rule 667 (queryTerm)
    $default   reduce using rule 567 (nonjoinQueryExpression)


state 848

  578 nonjoinQueryTerm: nonjoinQueryPrimary .

    $default  reduce using rule 578 (nonjoinQueryTerm)


state 849

  584 nonjoinQueryPrimary: simpleTable .

    $default  reduce using rule 584 (nonjoinQueryPrimary)


state 850

  586 simpleTable: querySpecification .

    $default  reduce using rule 586 (simpleTable)


state 851

  630 crossJoin: tableReference . CROSS JOIN tableReference
  631 qualifiedJoin: tableReference . qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  632 qualifiedJoin1: .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL]
  633               | . NATURAL

    CROSS    shift, and go to state 1011
    NATURAL  shift, and go to state 1012

    $default  reduce using rule 632 (qualifiedJoin1)

    qualifiedJoin1  go to state 1013


state 852

  615 tableReference: derivedTable . correlationSpecification
  619 correlationSpecification: . correlationSpecification1 correlationName correlationSpecification2
  620 correlationSpecification1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  621                          | . AS

    AS  shift, and go to state 999

    $default  reduce using rule 620 (correlationSpecification1)

    correlationSpecification   go to state 1014
    correlationSpecification1  go to state 1002


state 853

  625 derivedTable: tableSubquery .

    $default  reduce using rule 625 (derivedTable)


state 854

  566 queryExpression: joinedTable .  [UNION, EXCEPT, ')']
  616 tableReference: joinedTable .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL, CROSS, NATURAL]
  668 queryTerm: joinedTable .  [INTERSECT]

    UNION      reduce using rule 566 (queryExpression)
    UNION      [reduce using rule 616 (tableReference)]
    INTERSECT  reduce using rule 668 (queryTerm)
    EXCEPT     reduce using rule 566 (queryExpression)
    ')'        reduce using rule 566 (queryExpression)
    $default   reduce using rule 616 (tableReference)


state 855

  627 joinedTable: crossJoin .

    $default  reduce using rule 627 (joinedTable)


state 856

  628 joinedTable: qualifiedJoin .

    $default  reduce using rule 628 (joinedTable)


state 857

  587 simpleTable: tableValueConstructor .

    $default  reduce using rule 587 (simpleTable)


state 858

  588 simpleTable: explicitTable .

    $default  reduce using rule 588 (simpleTable)


state 859

  579 nonjoinQueryTerm: queryTerm . INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary

    INTERSECT  shift, and go to state 1015


state 860

  481 valueExpression: datetimeValueExpression .  [',', ')']
  772 datetimeValueExpression: datetimeValueExpression . plusSign intervalTerm
  773                        | datetimeValueExpression . minusSign intervalTerm
  786 intervalValueExpression: leftParen datetimeValueExpression . minusSign datetimeTerm rightParen intervalQualifier
  800 plusSign: . UNKNOWN_LEX
  802 minusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 876

    $default  reduce using rule 481 (valueExpression)

    plusSign   go to state 925
    minusSign  go to state 1016


state 861

  267 rightParen: . ')'
  474 rowValueConstructor: leftParen rowValueConstructorList . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1017


state 862

  458 booleanTest2: IS . booleanTest1 truthValue
  459 booleanTest1: .  [UNKNOWN, TRUE, FALSE]
  460             | . NOT

    NOT  shift, and go to state 1018

    $default  reduce using rule 459 (booleanTest1)

    booleanTest1  go to state 1019


state 863

  456 booleanTest: booleanPrimary booleanTest2 .

    $default  reduce using rule 456 (booleanTest)


state 864

  832 betweenPredicate1: NOT .  [BETWEEN]
  835 inPredicate1: NOT .  [IN]

    IN        reduce using rule 835 (inPredicate1)
    $default  reduce using rule 832 (betweenPredicate1)


state 865

  824 equalsOperator: UNKNOWN_LEX .  [CASE, CAST, DESC, NULL, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, SOME, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, ALL, NULLIF, CURRENT_DATE, SUM, ANY, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  825 notEqualsOperator: UNKNOWN_LEX .  [CASE, CAST, DESC, NULL, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, SOME, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, ALL, NULLIF, CURRENT_DATE, SUM, ANY, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  826 lessThanOperator: UNKNOWN_LEX .  [CASE, CAST, DESC, NULL, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, SOME, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, ALL, NULLIF, CURRENT_DATE, SUM, ANY, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  827 greaterThanOperator: UNKNOWN_LEX .  [CASE, CAST, DESC, NULL, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, SOME, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, ALL, NULLIF, CURRENT_DATE, SUM, ANY, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  828 lessThanOrEqualsOperator: UNKNOWN_LEX .  [CASE, CAST, DESC, NULL, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, SOME, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, ALL, NULLIF, CURRENT_DATE, SUM, ANY, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  829 greaterThanOrEqualsOperator: UNKNOWN_LEX .  [CASE, CAST, DESC, NULL, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, SOME, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, ALL, NULLIF, CURRENT_DATE, SUM, ANY, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']

    CASE               reduce using rule 824 (equalsOperator)
    CASE               [reduce using rule 825 (notEqualsOperator)]
    CASE               [reduce using rule 826 (lessThanOperator)]
    CASE               [reduce using rule 827 (greaterThanOperator)]
    CASE               [reduce using rule 828 (lessThanOrEqualsOperator)]
    CASE               [reduce using rule 829 (greaterThanOrEqualsOperator)]
    CAST               reduce using rule 824 (equalsOperator)
    CAST               [reduce using rule 825 (notEqualsOperator)]
    CAST               [reduce using rule 826 (lessThanOperator)]
    CAST               [reduce using rule 827 (greaterThanOperator)]
    CAST               [reduce using rule 828 (lessThanOrEqualsOperator)]
    CAST               [reduce using rule 829 (greaterThanOrEqualsOperator)]
    DESC               reduce using rule 824 (equalsOperator)
    DESC               [reduce using rule 825 (notEqualsOperator)]
    DESC               [reduce using rule 826 (lessThanOperator)]
    DESC               [reduce using rule 827 (greaterThanOperator)]
    DESC               [reduce using rule 828 (lessThanOrEqualsOperator)]
    DESC               [reduce using rule 829 (greaterThanOrEqualsOperator)]
    NULL               reduce using rule 824 (equalsOperator)
    NULL               [reduce using rule 825 (notEqualsOperator)]
    NULL               [reduce using rule 826 (lessThanOperator)]
    NULL               [reduce using rule 827 (greaterThanOperator)]
    NULL               [reduce using rule 828 (lessThanOrEqualsOperator)]
    NULL               [reduce using rule 829 (greaterThanOrEqualsOperator)]
    ASC                reduce using rule 824 (equalsOperator)
    ASC                [reduce using rule 825 (notEqualsOperator)]
    ASC                [reduce using rule 826 (lessThanOperator)]
    ASC                [reduce using rule 827 (greaterThanOperator)]
    ASC                [reduce using rule 828 (lessThanOrEqualsOperator)]
    ASC                [reduce using rule 829 (greaterThanOrEqualsOperator)]
    UNKNOWN_LEX        reduce using rule 824 (equalsOperator)
    UNKNOWN_LEX        [reduce using rule 825 (notEqualsOperator)]
    UNKNOWN_LEX        [reduce using rule 826 (lessThanOperator)]
    UNKNOWN_LEX        [reduce using rule 827 (greaterThanOperator)]
    UNKNOWN_LEX        [reduce using rule 828 (lessThanOrEqualsOperator)]
    UNKNOWN_LEX        [reduce using rule 829 (greaterThanOrEqualsOperator)]
    ACTION             reduce using rule 824 (equalsOperator)
    ACTION             [reduce using rule 825 (notEqualsOperator)]
    ACTION             [reduce using rule 826 (lessThanOperator)]
    ACTION             [reduce using rule 827 (greaterThanOperator)]
    ACTION             [reduce using rule 828 (lessThanOrEqualsOperator)]
    ACTION             [reduce using rule 829 (greaterThanOrEqualsOperator)]
    MIN                reduce using rule 824 (equalsOperator)
    MIN                [reduce using rule 825 (notEqualsOperator)]
    MIN                [reduce using rule 826 (lessThanOperator)]
    MIN                [reduce using rule 827 (greaterThanOperator)]
    MIN                [reduce using rule 828 (lessThanOrEqualsOperator)]
    MIN                [reduce using rule 829 (greaterThanOrEqualsOperator)]
    OCTET_LENGTH       reduce using rule 824 (equalsOperator)
    OCTET_LENGTH       [reduce using rule 825 (notEqualsOperator)]
    OCTET_LENGTH       [reduce using rule 826 (lessThanOperator)]
    OCTET_LENGTH       [reduce using rule 827 (greaterThanOperator)]
    OCTET_LENGTH       [reduce using rule 828 (lessThanOrEqualsOperator)]
    OCTET_LENGTH       [reduce using rule 829 (greaterThanOrEqualsOperator)]
    SOME               reduce using rule 824 (equalsOperator)
    SOME               [reduce using rule 825 (notEqualsOperator)]
    SOME               [reduce using rule 826 (lessThanOperator)]
    SOME               [reduce using rule 827 (greaterThanOperator)]
    SOME               [reduce using rule 828 (lessThanOrEqualsOperator)]
    SOME               [reduce using rule 829 (greaterThanOrEqualsOperator)]
    DEFERRED           reduce using rule 824 (equalsOperator)
    DEFERRED           [reduce using rule 825 (notEqualsOperator)]
    DEFERRED           [reduce using rule 826 (lessThanOperator)]
    DEFERRED           [reduce using rule 827 (greaterThanOperator)]
    DEFERRED           [reduce using rule 828 (lessThanOrEqualsOperator)]
    DEFERRED           [reduce using rule 829 (greaterThanOrEqualsOperator)]
    DEFERRABLE         reduce using rule 824 (equalsOperator)
    DEFERRABLE         [reduce using rule 825 (notEqualsOperator)]
    DEFERRABLE         [reduce using rule 826 (lessThanOperator)]
    DEFERRABLE         [reduce using rule 827 (greaterThanOperator)]
    DEFERRABLE         [reduce using rule 828 (lessThanOrEqualsOperator)]
    DEFERRABLE         [reduce using rule 829 (greaterThanOrEqualsOperator)]
    ZONE               reduce using rule 824 (equalsOperator)
    ZONE               [reduce using rule 825 (notEqualsOperator)]
    ZONE               [reduce using rule 826 (lessThanOperator)]
    ZONE               [reduce using rule 827 (greaterThanOperator)]
    ZONE               [reduce using rule 828 (lessThanOrEqualsOperator)]
    ZONE               [reduce using rule 829 (greaterThanOrEqualsOperator)]
    COUNT              reduce using rule 824 (equalsOperator)
    COUNT              [reduce using rule 825 (notEqualsOperator)]
    COUNT              [reduce using rule 826 (lessThanOperator)]
    COUNT              [reduce using rule 827 (greaterThanOperator)]
    COUNT              [reduce using rule 828 (lessThanOrEqualsOperator)]
    COUNT              [reduce using rule 829 (greaterThanOrEqualsOperator)]
    SESSION_USER       reduce using rule 824 (equalsOperator)
    SESSION_USER       [reduce using rule 825 (notEqualsOperator)]
    SESSION_USER       [reduce using rule 826 (lessThanOperator)]
    SESSION_USER       [reduce using rule 827 (greaterThanOperator)]
    SESSION_USER       [reduce using rule 828 (lessThanOrEqualsOperator)]
    SESSION_USER       [reduce using rule 829 (greaterThanOrEqualsOperator)]
    DATE               reduce using rule 824 (equalsOperator)
    DATE               [reduce using rule 825 (notEqualsOperator)]
    DATE               [reduce using rule 826 (lessThanOperator)]
    DATE               [reduce using rule 827 (greaterThanOperator)]
    DATE               [reduce using rule 828 (lessThanOrEqualsOperator)]
    DATE               [reduce using rule 829 (greaterThanOrEqualsOperator)]
    ALL                reduce using rule 824 (equalsOperator)
    ALL                [reduce using rule 825 (notEqualsOperator)]
    ALL                [reduce using rule 826 (lessThanOperator)]
    ALL                [reduce using rule 827 (greaterThanOperator)]
    ALL                [reduce using rule 828 (lessThanOrEqualsOperator)]
    ALL                [reduce using rule 829 (greaterThanOrEqualsOperator)]
    NULLIF             reduce using rule 824 (equalsOperator)
    NULLIF             [reduce using rule 825 (notEqualsOperator)]
    NULLIF             [reduce using rule 826 (lessThanOperator)]
    NULLIF             [reduce using rule 827 (greaterThanOperator)]
    NULLIF             [reduce using rule 828 (lessThanOrEqualsOperator)]
    NULLIF             [reduce using rule 829 (greaterThanOrEqualsOperator)]
    CURRENT_DATE       reduce using rule 824 (equalsOperator)
    CURRENT_DATE       [reduce using rule 825 (notEqualsOperator)]
    CURRENT_DATE       [reduce using rule 826 (lessThanOperator)]
    CURRENT_DATE       [reduce using rule 827 (greaterThanOperator)]
    CURRENT_DATE       [reduce using rule 828 (lessThanOrEqualsOperator)]
    CURRENT_DATE       [reduce using rule 829 (greaterThanOrEqualsOperator)]
    SUM                reduce using rule 824 (equalsOperator)
    SUM                [reduce using rule 825 (notEqualsOperator)]
    SUM                [reduce using rule 826 (lessThanOperator)]
    SUM                [reduce using rule 827 (greaterThanOperator)]
    SUM                [reduce using rule 828 (lessThanOrEqualsOperator)]
    SUM                [reduce using rule 829 (greaterThanOrEqualsOperator)]
    ANY                reduce using rule 824 (equalsOperator)
    ANY                [reduce using rule 825 (notEqualsOperator)]
    ANY                [reduce using rule 826 (lessThanOperator)]
    ANY                [reduce using rule 827 (greaterThanOperator)]
    ANY                [reduce using rule 828 (lessThanOrEqualsOperator)]
    ANY                [reduce using rule 829 (greaterThanOrEqualsOperator)]
    KEY                reduce using rule 824 (equalsOperator)
    KEY                [reduce using rule 825 (notEqualsOperator)]
    KEY                [reduce using rule 826 (lessThanOperator)]
    KEY                [reduce using rule 827 (greaterThanOperator)]
    KEY                [reduce using rule 828 (lessThanOrEqualsOperator)]
    KEY                [reduce using rule 829 (greaterThanOrEqualsOperator)]
    AVG                reduce using rule 824 (equalsOperator)
    AVG                [reduce using rule 825 (notEqualsOperator)]
    AVG                [reduce using rule 826 (lessThanOperator)]
    AVG                [reduce using rule 827 (greaterThanOperator)]
    AVG                [reduce using rule 828 (lessThanOrEqualsOperator)]
    AVG                [reduce using rule 829 (greaterThanOrEqualsOperator)]
    INITIALLY          reduce using rule 824 (equalsOperator)
    INITIALLY          [reduce using rule 825 (notEqualsOperator)]
    INITIALLY          [reduce using rule 826 (lessThanOperator)]
    INITIALLY          [reduce using rule 827 (greaterThanOperator)]
    INITIALLY          [reduce using rule 828 (lessThanOrEqualsOperator)]
    INITIALLY          [reduce using rule 829 (greaterThanOrEqualsOperator)]
    UPPER              reduce using rule 824 (equalsOperator)
    UPPER              [reduce using rule 825 (notEqualsOperator)]
    UPPER              [reduce using rule 826 (lessThanOperator)]
    UPPER              [reduce using rule 827 (greaterThanOperator)]
    UPPER              [reduce using rule 828 (lessThanOrEqualsOperator)]
    UPPER              [reduce using rule 829 (greaterThanOrEqualsOperator)]
    TIMESTAMP          reduce using rule 824 (equalsOperator)
    TIMESTAMP          [reduce using rule 825 (notEqualsOperator)]
    TIMESTAMP          [reduce using rule 826 (lessThanOperator)]
    TIMESTAMP          [reduce using rule 827 (greaterThanOperator)]
    TIMESTAMP          [reduce using rule 828 (lessThanOrEqualsOperator)]
    TIMESTAMP          [reduce using rule 829 (greaterThanOrEqualsOperator)]
    MODULE             reduce using rule 824 (equalsOperator)
    MODULE             [reduce using rule 825 (notEqualsOperator)]
    MODULE             [reduce using rule 826 (lessThanOperator)]
    MODULE             [reduce using rule 827 (greaterThanOperator)]
    MODULE             [reduce using rule 828 (lessThanOrEqualsOperator)]
    MODULE             [reduce using rule 829 (greaterThanOrEqualsOperator)]
    EXTRACT            reduce using rule 824 (equalsOperator)
    EXTRACT            [reduce using rule 825 (notEqualsOperator)]
    EXTRACT            [reduce using rule 826 (lessThanOperator)]
    EXTRACT            [reduce using rule 827 (greaterThanOperator)]
    EXTRACT            [reduce using rule 828 (lessThanOrEqualsOperator)]
    EXTRACT            [reduce using rule 829 (greaterThanOrEqualsOperator)]
    CHAR_LENGTH        reduce using rule 824 (equalsOperator)
    CHAR_LENGTH        [reduce using rule 825 (notEqualsOperator)]
    CHAR_LENGTH        [reduce using rule 826 (lessThanOperator)]
    CHAR_LENGTH        [reduce using rule 827 (greaterThanOperator)]
    CHAR_LENGTH        [reduce using rule 828 (lessThanOrEqualsOperator)]
    CHAR_LENGTH        [reduce using rule 829 (greaterThanOrEqualsOperator)]
    TIME               reduce using rule 824 (equalsOperator)
    TIME               [reduce using rule 825 (notEqualsOperator)]
    TIME               [reduce using rule 826 (lessThanOperator)]
    TIME               [reduce using rule 827 (greaterThanOperator)]
    TIME               [reduce using rule 828 (lessThanOrEqualsOperator)]
    TIME               [reduce using rule 829 (greaterThanOrEqualsOperator)]
    SYSTEM_USER        reduce using rule 824 (equalsOperator)
    SYSTEM_USER        [reduce using rule 825 (notEqualsOperator)]
    SYSTEM_USER        [reduce using rule 826 (lessThanOperator)]
    SYSTEM_USER        [reduce using rule 827 (greaterThanOperator)]
    SYSTEM_USER        [reduce using rule 828 (lessThanOrEqualsOperator)]
    SYSTEM_USER        [reduce using rule 829 (greaterThanOrEqualsOperator)]
    SUBSTRING          reduce using rule 824 (equalsOperator)
    SUBSTRING          [reduce using rule 825 (notEqualsOperator)]
    SUBSTRING          [reduce using rule 826 (lessThanOperator)]
    SUBSTRING          [reduce using rule 827 (greaterThanOperator)]
    SUBSTRING          [reduce using rule 828 (lessThanOrEqualsOperator)]
    SUBSTRING          [reduce using rule 829 (greaterThanOrEqualsOperator)]
    CURRENT_TIME       reduce using rule 824 (equalsOperator)
    CURRENT_TIME       [reduce using rule 825 (notEqualsOperator)]
    CURRENT_TIME       [reduce using rule 826 (lessThanOperator)]
    CURRENT_TIME       [reduce using rule 827 (greaterThanOperator)]
    CURRENT_TIME       [reduce using rule 828 (lessThanOrEqualsOperator)]
    CURRENT_TIME       [reduce using rule 829 (greaterThanOrEqualsOperator)]
    PARTIAL            reduce using rule 824 (equalsOperator)
    PARTIAL            [reduce using rule 825 (notEqualsOperator)]
    PARTIAL            [reduce using rule 826 (lessThanOperator)]
    PARTIAL            [reduce using rule 827 (greaterThanOperator)]
    PARTIAL            [reduce using rule 828 (lessThanOrEqualsOperator)]
    PARTIAL            [reduce using rule 829 (greaterThanOrEqualsOperator)]
    USER               reduce using rule 824 (equalsOperator)
    USER               [reduce using rule 825 (notEqualsOperator)]
    USER               [reduce using rule 826 (lessThanOperator)]
    USER               [reduce using rule 827 (greaterThanOperator)]
    USER               [reduce using rule 828 (lessThanOrEqualsOperator)]
    USER               [reduce using rule 829 (greaterThanOrEqualsOperator)]
    MAX                reduce using rule 824 (equalsOperator)
    MAX                [reduce using rule 825 (notEqualsOperator)]
    MAX                [reduce using rule 826 (lessThanOperator)]
    MAX                [reduce using rule 827 (greaterThanOperator)]
    MAX                [reduce using rule 828 (lessThanOrEqualsOperator)]
    MAX                [reduce using rule 829 (greaterThanOrEqualsOperator)]
    CURRENT_TIMESTAMP  reduce using rule 824 (equalsOperator)
    CURRENT_TIMESTAMP  [reduce using rule 825 (notEqualsOperator)]
    CURRENT_TIMESTAMP  [reduce using rule 826 (lessThanOperator)]
    CURRENT_TIMESTAMP  [reduce using rule 827 (greaterThanOperator)]
    CURRENT_TIMESTAMP  [reduce using rule 828 (lessThanOrEqualsOperator)]
    CURRENT_TIMESTAMP  [reduce using rule 829 (greaterThanOrEqualsOperator)]
    LOWER              reduce using rule 824 (equalsOperator)
    LOWER              [reduce using rule 825 (notEqualsOperator)]
    LOWER              [reduce using rule 826 (lessThanOperator)]
    LOWER              [reduce using rule 827 (greaterThanOperator)]
    LOWER              [reduce using rule 828 (lessThanOrEqualsOperator)]
    LOWER              [reduce using rule 829 (greaterThanOrEqualsOperator)]
    CASCADE            reduce using rule 824 (equalsOperator)
    CASCADE            [reduce using rule 825 (notEqualsOperator)]
    CASCADE            [reduce using rule 826 (lessThanOperator)]
    CASCADE            [reduce using rule 827 (greaterThanOperator)]
    CASCADE            [reduce using rule 828 (lessThanOrEqualsOperator)]
    CASCADE            [reduce using rule 829 (greaterThanOrEqualsOperator)]
    TEMPORARY          reduce using rule 824 (equalsOperator)
    TEMPORARY          [reduce using rule 825 (notEqualsOperator)]
    TEMPORARY          [reduce using rule 826 (lessThanOperator)]
    TEMPORARY          [reduce using rule 827 (greaterThanOperator)]
    TEMPORARY          [reduce using rule 828 (lessThanOrEqualsOperator)]
    TEMPORARY          [reduce using rule 829 (greaterThanOrEqualsOperator)]
    BIT_LENGTH         reduce using rule 824 (equalsOperator)
    BIT_LENGTH         [reduce using rule 825 (notEqualsOperator)]
    BIT_LENGTH         [reduce using rule 826 (lessThanOperator)]
    BIT_LENGTH         [reduce using rule 827 (greaterThanOperator)]
    BIT_LENGTH         [reduce using rule 828 (lessThanOrEqualsOperator)]
    BIT_LENGTH         [reduce using rule 829 (greaterThanOrEqualsOperator)]
    VALUE              reduce using rule 824 (equalsOperator)
    VALUE              [reduce using rule 825 (notEqualsOperator)]
    VALUE              [reduce using rule 826 (lessThanOperator)]
    VALUE              [reduce using rule 827 (greaterThanOperator)]
    VALUE              [reduce using rule 828 (lessThanOrEqualsOperator)]
    VALUE              [reduce using rule 829 (greaterThanOrEqualsOperator)]
    CHARACTER_LENGTH   reduce using rule 824 (equalsOperator)
    CHARACTER_LENGTH   [reduce using rule 825 (notEqualsOperator)]
    CHARACTER_LENGTH   [reduce using rule 826 (lessThanOperator)]
    CHARACTER_LENGTH   [reduce using rule 827 (greaterThanOperator)]
    CHARACTER_LENGTH   [reduce using rule 828 (lessThanOrEqualsOperator)]
    CHARACTER_LENGTH   [reduce using rule 829 (greaterThanOrEqualsOperator)]
    CONVERT            reduce using rule 824 (equalsOperator)
    CONVERT            [reduce using rule 825 (notEqualsOperator)]
    CONVERT            [reduce using rule 826 (lessThanOperator)]
    CONVERT            [reduce using rule 827 (greaterThanOperator)]
    CONVERT            [reduce using rule 828 (lessThanOrEqualsOperator)]
    CONVERT            [reduce using rule 829 (greaterThanOrEqualsOperator)]
    CURRENT_USER       reduce using rule 824 (equalsOperator)
    CURRENT_USER       [reduce using rule 825 (notEqualsOperator)]
    CURRENT_USER       [reduce using rule 826 (lessThanOperator)]
    CURRENT_USER       [reduce using rule 827 (greaterThanOperator)]
    CURRENT_USER       [reduce using rule 828 (lessThanOrEqualsOperator)]
    CURRENT_USER       [reduce using rule 829 (greaterThanOrEqualsOperator)]
    TRANSLATE          reduce using rule 824 (equalsOperator)
    TRANSLATE          [reduce using rule 825 (notEqualsOperator)]
    TRANSLATE          [reduce using rule 826 (lessThanOperator)]
    TRANSLATE          [reduce using rule 827 (greaterThanOperator)]
    TRANSLATE          [reduce using rule 828 (lessThanOrEqualsOperator)]
    TRANSLATE          [reduce using rule 829 (greaterThanOrEqualsOperator)]
    INTERVAL           reduce using rule 824 (equalsOperator)
    INTERVAL           [reduce using rule 825 (notEqualsOperator)]
    INTERVAL           [reduce using rule 826 (lessThanOperator)]
    INTERVAL           [reduce using rule 827 (greaterThanOperator)]
    INTERVAL           [reduce using rule 828 (lessThanOrEqualsOperator)]
    INTERVAL           [reduce using rule 829 (greaterThanOrEqualsOperator)]
    DEFAULT            reduce using rule 824 (equalsOperator)
    DEFAULT            [reduce using rule 825 (notEqualsOperator)]
    DEFAULT            [reduce using rule 826 (lessThanOperator)]
    DEFAULT            [reduce using rule 827 (greaterThanOperator)]
    DEFAULT            [reduce using rule 828 (lessThanOrEqualsOperator)]
    DEFAULT            [reduce using rule 829 (greaterThanOrEqualsOperator)]
    PRESERVE           reduce using rule 824 (equalsOperator)
    PRESERVE           [reduce using rule 825 (notEqualsOperator)]
    PRESERVE           [reduce using rule 826 (lessThanOperator)]
    PRESERVE           [reduce using rule 827 (greaterThanOperator)]
    PRESERVE           [reduce using rule 828 (lessThanOrEqualsOperator)]
    PRESERVE           [reduce using rule 829 (greaterThanOrEqualsOperator)]
    POSITION           reduce using rule 824 (equalsOperator)
    POSITION           [reduce using rule 825 (notEqualsOperator)]
    POSITION           [reduce using rule 826 (lessThanOperator)]
    POSITION           [reduce using rule 827 (greaterThanOperator)]
    POSITION           [reduce using rule 828 (lessThanOrEqualsOperator)]
    POSITION           [reduce using rule 829 (greaterThanOrEqualsOperator)]
    COALESCE           reduce using rule 824 (equalsOperator)
    COALESCE           [reduce using rule 825 (notEqualsOperator)]
    COALESCE           [reduce using rule 826 (lessThanOperator)]
    COALESCE           [reduce using rule 827 (greaterThanOperator)]
    COALESCE           [reduce using rule 828 (lessThanOrEqualsOperator)]
    COALESCE           [reduce using rule 829 (greaterThanOrEqualsOperator)]
    TRIM               reduce using rule 824 (equalsOperator)
    TRIM               [reduce using rule 825 (notEqualsOperator)]
    TRIM               [reduce using rule 826 (lessThanOperator)]
    TRIM               [reduce using rule 827 (greaterThanOperator)]
    TRIM               [reduce using rule 828 (lessThanOrEqualsOperator)]
    TRIM               [reduce using rule 829 (greaterThanOrEqualsOperator)]
    NUMBER             reduce using rule 824 (equalsOperator)
    NUMBER             [reduce using rule 825 (notEqualsOperator)]
    NUMBER             [reduce using rule 826 (lessThanOperator)]
    NUMBER             [reduce using rule 827 (greaterThanOperator)]
    NUMBER             [reduce using rule 828 (lessThanOrEqualsOperator)]
    NUMBER             [reduce using rule 829 (greaterThanOrEqualsOperator)]
    ID                 reduce using rule 824 (equalsOperator)
    ID                 [reduce using rule 825 (notEqualsOperator)]
    ID                 [reduce using rule 826 (lessThanOperator)]
    ID                 [reduce using rule 827 (greaterThanOperator)]
    ID                 [reduce using rule 828 (lessThanOrEqualsOperator)]
    ID                 [reduce using rule 829 (greaterThanOrEqualsOperator)]
    '('                reduce using rule 824 (equalsOperator)
    '('                [reduce using rule 825 (notEqualsOperator)]
    '('                [reduce using rule 826 (lessThanOperator)]
    '('                [reduce using rule 827 (greaterThanOperator)]
    '('                [reduce using rule 828 (lessThanOrEqualsOperator)]
    '('                [reduce using rule 829 (greaterThanOrEqualsOperator)]
    $default           reduce using rule 824 (equalsOperator)


state 866

  859 matchPredicate: rowValueConstructor MATCH . matchPredicate1 matchPredicate2 tableSubquery
  860 matchPredicate1: .  [FULL, PARTIAL, '(']
  861                | . UNIQUE

    UNIQUE  shift, and go to state 1020

    $default  reduce using rule 860 (matchPredicate1)

    matchPredicate1  go to state 1021


state 867

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  472 comparisonPredicate: rowValueConstructor compOp . rowValueConstructor
  473 rowValueConstructor: . rowValueConstructorElement
  474                    | . leftParen rowValueConstructorList rightParen
  475                    | . rowSubquery
  476 rowValueConstructorElement: . valueExpression
  477                           | . nullSpecification
  478                           | . defaultSpecification
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression
  812 nullSpecification: . NULL
  813 defaultSpecification: . DEFAULT
  817 rowSubquery: . subquery
  852 quantifiedComparisonPredicate: rowValueConstructor compOp . quantifier tableSubquery
  853 quantifier: . all
  854           | . some
  855 all: . ALL
  856 some: . SOME
  857     | . ANY

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    NULL               shift, and go to state 667
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    SOME               shift, and go to state 1022
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    ALL                shift, and go to state 1023
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    ANY                shift, and go to state 1024
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    DEFAULT            shift, and go to state 686
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 991
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    rowValueConstructor             go to state 1025
    rowValueConstructorElement      go to state 701
    valueExpression                 go to state 702
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 726
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760
    nullSpecification               go to state 761
    defaultSpecification            go to state 762
    rowSubquery                     go to state 763
    quantifier                      go to state 1026
    all                             go to state 1027
    some                            go to state 1028


state 868

  818 compOp: equalsOperator .

    $default  reduce using rule 818 (compOp)


state 869

  819 compOp: notEqualsOperator .

    $default  reduce using rule 819 (compOp)


state 870

  820 compOp: lessThanOperator .

    $default  reduce using rule 820 (compOp)


state 871

  821 compOp: greaterThanOperator .

    $default  reduce using rule 821 (compOp)


state 872

  822 compOp: lessThanOrEqualsOperator .

    $default  reduce using rule 822 (compOp)


state 873

  823 compOp: greaterThanOrEqualsOperator .

    $default  reduce using rule 823 (compOp)


state 874

  830 betweenPredicate: rowValueConstructor betweenPredicate1 . BETWEEN rowValueConstructor AND rowValueConstructor

    BETWEEN  shift, and go to state 1029


state 875

  833 inPredicate: rowValueConstructor inPredicate1 . IN inPredicateValue

    IN  shift, and go to state 1030


state 876

  800 plusSign: UNKNOWN_LEX .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  802 minusSign: UNKNOWN_LEX .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']

    CASE               reduce using rule 800 (plusSign)
    CASE               [reduce using rule 802 (minusSign)]
    CAST               reduce using rule 800 (plusSign)
    CAST               [reduce using rule 802 (minusSign)]
    DESC               reduce using rule 800 (plusSign)
    DESC               [reduce using rule 802 (minusSign)]
    ASC                reduce using rule 800 (plusSign)
    ASC                [reduce using rule 802 (minusSign)]
    UNKNOWN_LEX        reduce using rule 800 (plusSign)
    UNKNOWN_LEX        [reduce using rule 802 (minusSign)]
    ACTION             reduce using rule 800 (plusSign)
    ACTION             [reduce using rule 802 (minusSign)]
    MIN                reduce using rule 800 (plusSign)
    MIN                [reduce using rule 802 (minusSign)]
    OCTET_LENGTH       reduce using rule 800 (plusSign)
    OCTET_LENGTH       [reduce using rule 802 (minusSign)]
    DEFERRED           reduce using rule 800 (plusSign)
    DEFERRED           [reduce using rule 802 (minusSign)]
    DEFERRABLE         reduce using rule 800 (plusSign)
    DEFERRABLE         [reduce using rule 802 (minusSign)]
    ZONE               reduce using rule 800 (plusSign)
    ZONE               [reduce using rule 802 (minusSign)]
    COUNT              reduce using rule 800 (plusSign)
    COUNT              [reduce using rule 802 (minusSign)]
    SESSION_USER       reduce using rule 800 (plusSign)
    SESSION_USER       [reduce using rule 802 (minusSign)]
    DATE               reduce using rule 800 (plusSign)
    DATE               [reduce using rule 802 (minusSign)]
    NULLIF             reduce using rule 800 (plusSign)
    NULLIF             [reduce using rule 802 (minusSign)]
    CURRENT_DATE       reduce using rule 802 (minusSign)
    SUM                reduce using rule 800 (plusSign)
    SUM                [reduce using rule 802 (minusSign)]
    KEY                reduce using rule 800 (plusSign)
    KEY                [reduce using rule 802 (minusSign)]
    AVG                reduce using rule 800 (plusSign)
    AVG                [reduce using rule 802 (minusSign)]
    INITIALLY          reduce using rule 800 (plusSign)
    INITIALLY          [reduce using rule 802 (minusSign)]
    UPPER              reduce using rule 800 (plusSign)
    UPPER              [reduce using rule 802 (minusSign)]
    TIMESTAMP          reduce using rule 800 (plusSign)
    TIMESTAMP          [reduce using rule 802 (minusSign)]
    MODULE             reduce using rule 800 (plusSign)
    MODULE             [reduce using rule 802 (minusSign)]
    EXTRACT            reduce using rule 800 (plusSign)
    EXTRACT            [reduce using rule 802 (minusSign)]
    CHAR_LENGTH        reduce using rule 800 (plusSign)
    CHAR_LENGTH        [reduce using rule 802 (minusSign)]
    TIME               reduce using rule 800 (plusSign)
    TIME               [reduce using rule 802 (minusSign)]
    SYSTEM_USER        reduce using rule 800 (plusSign)
    SYSTEM_USER        [reduce using rule 802 (minusSign)]
    SUBSTRING          reduce using rule 800 (plusSign)
    SUBSTRING          [reduce using rule 802 (minusSign)]
    CURRENT_TIME       reduce using rule 802 (minusSign)
    PARTIAL            reduce using rule 800 (plusSign)
    PARTIAL            [reduce using rule 802 (minusSign)]
    USER               reduce using rule 800 (plusSign)
    USER               [reduce using rule 802 (minusSign)]
    MAX                reduce using rule 800 (plusSign)
    MAX                [reduce using rule 802 (minusSign)]
    CURRENT_TIMESTAMP  reduce using rule 802 (minusSign)
    LOWER              reduce using rule 800 (plusSign)
    LOWER              [reduce using rule 802 (minusSign)]
    CASCADE            reduce using rule 800 (plusSign)
    CASCADE            [reduce using rule 802 (minusSign)]
    TEMPORARY          reduce using rule 800 (plusSign)
    TEMPORARY          [reduce using rule 802 (minusSign)]
    BIT_LENGTH         reduce using rule 800 (plusSign)
    BIT_LENGTH         [reduce using rule 802 (minusSign)]
    VALUE              reduce using rule 800 (plusSign)
    VALUE              [reduce using rule 802 (minusSign)]
    CHARACTER_LENGTH   reduce using rule 800 (plusSign)
    CHARACTER_LENGTH   [reduce using rule 802 (minusSign)]
    CONVERT            reduce using rule 800 (plusSign)
    CONVERT            [reduce using rule 802 (minusSign)]
    CURRENT_USER       reduce using rule 800 (plusSign)
    CURRENT_USER       [reduce using rule 802 (minusSign)]
    TRANSLATE          reduce using rule 800 (plusSign)
    TRANSLATE          [reduce using rule 802 (minusSign)]
    INTERVAL           reduce using rule 800 (plusSign)
    INTERVAL           [reduce using rule 802 (minusSign)]
    PRESERVE           reduce using rule 800 (plusSign)
    PRESERVE           [reduce using rule 802 (minusSign)]
    POSITION           reduce using rule 800 (plusSign)
    POSITION           [reduce using rule 802 (minusSign)]
    COALESCE           reduce using rule 800 (plusSign)
    COALESCE           [reduce using rule 802 (minusSign)]
    TRIM               reduce using rule 800 (plusSign)
    TRIM               [reduce using rule 802 (minusSign)]
    NUMBER             reduce using rule 800 (plusSign)
    NUMBER             [reduce using rule 802 (minusSign)]
    ID                 reduce using rule 800 (plusSign)
    ID                 [reduce using rule 802 (minusSign)]
    '('                reduce using rule 800 (plusSign)
    '('                [reduce using rule 802 (minusSign)]
    $default           reduce using rule 800 (plusSign)


state 877

  374 sign: . UNKNOWN_LEX
  484 numericValueExpression: numericValueExpression plusSign . term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign

    UNKNOWN_LEX  shift, and go to state 591

    UNKNOWN_LEX  [reduce using rule 490 (factor1)]
    $default     reduce using rule 490 (factor1)

    sign     go to state 1031
    term     go to state 1032
    factor   go to state 705
    factor1  go to state 706


state 878

  374 sign: . UNKNOWN_LEX
  485 numericValueExpression: numericValueExpression minusSign . term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign

    UNKNOWN_LEX  shift, and go to state 591

    UNKNOWN_LEX  [reduce using rule 490 (factor1)]
    $default     reduce using rule 490 (factor1)

    sign     go to state 1031
    term     go to state 1033
    factor   go to state 705
    factor1  go to state 706


state 879

  552 asterisk: UNKNOWN_LEX .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  798 solidus: UNKNOWN_LEX .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']

    CASE              reduce using rule 552 (asterisk)
    CASE              [reduce using rule 798 (solidus)]
    CAST              reduce using rule 552 (asterisk)
    CAST              [reduce using rule 798 (solidus)]
    DESC              reduce using rule 552 (asterisk)
    DESC              [reduce using rule 798 (solidus)]
    ASC               reduce using rule 552 (asterisk)
    ASC               [reduce using rule 798 (solidus)]
    UNKNOWN_LEX       reduce using rule 552 (asterisk)
    UNKNOWN_LEX       [reduce using rule 798 (solidus)]
    ACTION            reduce using rule 552 (asterisk)
    ACTION            [reduce using rule 798 (solidus)]
    MIN               reduce using rule 552 (asterisk)
    MIN               [reduce using rule 798 (solidus)]
    OCTET_LENGTH      reduce using rule 552 (asterisk)
    OCTET_LENGTH      [reduce using rule 798 (solidus)]
    DEFERRED          reduce using rule 552 (asterisk)
    DEFERRED          [reduce using rule 798 (solidus)]
    DEFERRABLE        reduce using rule 552 (asterisk)
    DEFERRABLE        [reduce using rule 798 (solidus)]
    ZONE              reduce using rule 552 (asterisk)
    ZONE              [reduce using rule 798 (solidus)]
    COUNT             reduce using rule 552 (asterisk)
    COUNT             [reduce using rule 798 (solidus)]
    SESSION_USER      reduce using rule 552 (asterisk)
    SESSION_USER      [reduce using rule 798 (solidus)]
    DATE              reduce using rule 552 (asterisk)
    DATE              [reduce using rule 798 (solidus)]
    NULLIF            reduce using rule 552 (asterisk)
    NULLIF            [reduce using rule 798 (solidus)]
    SUM               reduce using rule 552 (asterisk)
    SUM               [reduce using rule 798 (solidus)]
    KEY               reduce using rule 552 (asterisk)
    KEY               [reduce using rule 798 (solidus)]
    AVG               reduce using rule 552 (asterisk)
    AVG               [reduce using rule 798 (solidus)]
    INITIALLY         reduce using rule 552 (asterisk)
    INITIALLY         [reduce using rule 798 (solidus)]
    UPPER             reduce using rule 552 (asterisk)
    UPPER             [reduce using rule 798 (solidus)]
    TIMESTAMP         reduce using rule 552 (asterisk)
    TIMESTAMP         [reduce using rule 798 (solidus)]
    MODULE            reduce using rule 552 (asterisk)
    MODULE            [reduce using rule 798 (solidus)]
    EXTRACT           reduce using rule 552 (asterisk)
    EXTRACT           [reduce using rule 798 (solidus)]
    CHAR_LENGTH       reduce using rule 552 (asterisk)
    CHAR_LENGTH       [reduce using rule 798 (solidus)]
    TIME              reduce using rule 552 (asterisk)
    TIME              [reduce using rule 798 (solidus)]
    SYSTEM_USER       reduce using rule 552 (asterisk)
    SYSTEM_USER       [reduce using rule 798 (solidus)]
    SUBSTRING         reduce using rule 552 (asterisk)
    SUBSTRING         [reduce using rule 798 (solidus)]
    PARTIAL           reduce using rule 552 (asterisk)
    PARTIAL           [reduce using rule 798 (solidus)]
    USER              reduce using rule 552 (asterisk)
    USER              [reduce using rule 798 (solidus)]
    MAX               reduce using rule 552 (asterisk)
    MAX               [reduce using rule 798 (solidus)]
    LOWER             reduce using rule 552 (asterisk)
    LOWER             [reduce using rule 798 (solidus)]
    CASCADE           reduce using rule 552 (asterisk)
    CASCADE           [reduce using rule 798 (solidus)]
    TEMPORARY         reduce using rule 552 (asterisk)
    TEMPORARY         [reduce using rule 798 (solidus)]
    BIT_LENGTH        reduce using rule 552 (asterisk)
    BIT_LENGTH        [reduce using rule 798 (solidus)]
    VALUE             reduce using rule 552 (asterisk)
    VALUE             [reduce using rule 798 (solidus)]
    CHARACTER_LENGTH  reduce using rule 552 (asterisk)
    CHARACTER_LENGTH  [reduce using rule 798 (solidus)]
    CONVERT           reduce using rule 552 (asterisk)
    CONVERT           [reduce using rule 798 (solidus)]
    CURRENT_USER      reduce using rule 552 (asterisk)
    CURRENT_USER      [reduce using rule 798 (solidus)]
    TRANSLATE         reduce using rule 552 (asterisk)
    TRANSLATE         [reduce using rule 798 (solidus)]
    INTERVAL          reduce using rule 552 (asterisk)
    INTERVAL          [reduce using rule 798 (solidus)]
    PRESERVE          reduce using rule 552 (asterisk)
    PRESERVE          [reduce using rule 798 (solidus)]
    POSITION          reduce using rule 552 (asterisk)
    POSITION          [reduce using rule 798 (solidus)]
    COALESCE          reduce using rule 552 (asterisk)
    COALESCE          [reduce using rule 798 (solidus)]
    TRIM              reduce using rule 552 (asterisk)
    TRIM              [reduce using rule 798 (solidus)]
    NUMBER            reduce using rule 552 (asterisk)
    NUMBER            [reduce using rule 798 (solidus)]
    ID                reduce using rule 552 (asterisk)
    ID                [reduce using rule 798 (solidus)]
    '('               reduce using rule 552 (asterisk)
    '('               [reduce using rule 798 (solidus)]
    $default          reduce using rule 552 (asterisk)


state 880

  374 sign: . UNKNOWN_LEX
  487 term: term asterisk . factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  790 intervalTerm: term asterisk . intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign

    UNKNOWN_LEX  shift, and go to state 591

    CASE              reduce using rule 490 (factor1)
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              reduce using rule 490 (factor1)
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              reduce using rule 490 (factor1)
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               reduce using rule 490 (factor1)
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            reduce using rule 490 (factor1)
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               reduce using rule 490 (factor1)
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      reduce using rule 490 (factor1)
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          reduce using rule 490 (factor1)
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        reduce using rule 490 (factor1)
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              reduce using rule 490 (factor1)
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             reduce using rule 490 (factor1)
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      reduce using rule 490 (factor1)
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              reduce using rule 490 (factor1)
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            reduce using rule 490 (factor1)
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               reduce using rule 490 (factor1)
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               reduce using rule 490 (factor1)
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               reduce using rule 490 (factor1)
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         reduce using rule 490 (factor1)
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             reduce using rule 490 (factor1)
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         reduce using rule 490 (factor1)
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            reduce using rule 490 (factor1)
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           reduce using rule 490 (factor1)
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       reduce using rule 490 (factor1)
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              reduce using rule 490 (factor1)
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       reduce using rule 490 (factor1)
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         reduce using rule 490 (factor1)
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           reduce using rule 490 (factor1)
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              reduce using rule 490 (factor1)
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               reduce using rule 490 (factor1)
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             reduce using rule 490 (factor1)
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           reduce using rule 490 (factor1)
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         reduce using rule 490 (factor1)
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             reduce using rule 490 (factor1)
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  reduce using rule 490 (factor1)
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           reduce using rule 490 (factor1)
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      reduce using rule 490 (factor1)
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         reduce using rule 490 (factor1)
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          reduce using rule 490 (factor1)
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          reduce using rule 490 (factor1)
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          reduce using rule 490 (factor1)
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          reduce using rule 490 (factor1)
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              reduce using rule 490 (factor1)
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            reduce using rule 490 (factor1)
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                reduce using rule 490 (factor1)
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               reduce using rule 490 (factor1)
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    sign             go to state 692
    factor           go to state 1034
    factor1          go to state 706
    intervalFactor   go to state 1035
    intervalFactor1  go to state 757


state 881

  374 sign: . UNKNOWN_LEX
  488 term: term solidus . factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign

    UNKNOWN_LEX  shift, and go to state 591

    UNKNOWN_LEX  [reduce using rule 490 (factor1)]
    $default     reduce using rule 490 (factor1)

    sign     go to state 1031
    factor   go to state 1036
    factor1  go to state 706


state 882

  221 schemaName: UNKNOWN_LEX .  [UNKNOWN_LEX]
  375 unsignedNumericLiteral: UNKNOWN_LEX .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  382 characterStringLiteral: UNKNOWN_LEX .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  383 nationalCharacterStringLiteral: UNKNOWN_LEX .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  384 bitStringLiteral: UNKNOWN_LEX .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  385 hexStringLiteral: UNKNOWN_LEX .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  517 colon: UNKNOWN_LEX .  [DESC, ASC, UNKNOWN_BODY, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  522 questionMark: UNKNOWN_LEX .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']

    BETWEEN           reduce using rule 375 (unsignedNumericLiteral)
    BETWEEN           [reduce using rule 382 (characterStringLiteral)]
    BETWEEN           [reduce using rule 383 (nationalCharacterStringLiteral)]
    BETWEEN           [reduce using rule 384 (bitStringLiteral)]
    BETWEEN           [reduce using rule 385 (hexStringLiteral)]
    BETWEEN           [reduce using rule 522 (questionMark)]
    ESCAPE            reduce using rule 375 (unsignedNumericLiteral)
    ESCAPE            [reduce using rule 382 (characterStringLiteral)]
    ESCAPE            [reduce using rule 383 (nationalCharacterStringLiteral)]
    ESCAPE            [reduce using rule 384 (bitStringLiteral)]
    ESCAPE            [reduce using rule 385 (hexStringLiteral)]
    ESCAPE            [reduce using rule 522 (questionMark)]
    HAVING            reduce using rule 375 (unsignedNumericLiteral)
    HAVING            [reduce using rule 382 (characterStringLiteral)]
    HAVING            [reduce using rule 383 (nationalCharacterStringLiteral)]
    HAVING            [reduce using rule 384 (bitStringLiteral)]
    HAVING            [reduce using rule 385 (hexStringLiteral)]
    HAVING            [reduce using rule 522 (questionMark)]
    WHERE             reduce using rule 375 (unsignedNumericLiteral)
    WHERE             [reduce using rule 382 (characterStringLiteral)]
    WHERE             [reduce using rule 383 (nationalCharacterStringLiteral)]
    WHERE             [reduce using rule 384 (bitStringLiteral)]
    WHERE             [reduce using rule 385 (hexStringLiteral)]
    WHERE             [reduce using rule 522 (questionMark)]
    OR                reduce using rule 375 (unsignedNumericLiteral)
    OR                [reduce using rule 382 (characterStringLiteral)]
    OR                [reduce using rule 383 (nationalCharacterStringLiteral)]
    OR                [reduce using rule 384 (bitStringLiteral)]
    OR                [reduce using rule 385 (hexStringLiteral)]
    OR                [reduce using rule 522 (questionMark)]
    GROUP             reduce using rule 375 (unsignedNumericLiteral)
    GROUP             [reduce using rule 382 (characterStringLiteral)]
    GROUP             [reduce using rule 383 (nationalCharacterStringLiteral)]
    GROUP             [reduce using rule 384 (bitStringLiteral)]
    GROUP             [reduce using rule 385 (hexStringLiteral)]
    GROUP             [reduce using rule 522 (questionMark)]
    RIGHT             reduce using rule 375 (unsignedNumericLiteral)
    RIGHT             [reduce using rule 382 (characterStringLiteral)]
    RIGHT             [reduce using rule 383 (nationalCharacterStringLiteral)]
    RIGHT             [reduce using rule 384 (bitStringLiteral)]
    RIGHT             [reduce using rule 385 (hexStringLiteral)]
    RIGHT             [reduce using rule 522 (questionMark)]
    INNER             reduce using rule 375 (unsignedNumericLiteral)
    INNER             [reduce using rule 382 (characterStringLiteral)]
    INNER             [reduce using rule 383 (nationalCharacterStringLiteral)]
    INNER             [reduce using rule 384 (bitStringLiteral)]
    INNER             [reduce using rule 385 (hexStringLiteral)]
    INNER             [reduce using rule 522 (questionMark)]
    UNION             reduce using rule 375 (unsignedNumericLiteral)
    UNION             [reduce using rule 382 (characterStringLiteral)]
    UNION             [reduce using rule 383 (nationalCharacterStringLiteral)]
    UNION             [reduce using rule 384 (bitStringLiteral)]
    UNION             [reduce using rule 385 (hexStringLiteral)]
    UNION             [reduce using rule 522 (questionMark)]
    FROM              reduce using rule 375 (unsignedNumericLiteral)
    FROM              [reduce using rule 382 (characterStringLiteral)]
    FROM              [reduce using rule 383 (nationalCharacterStringLiteral)]
    FROM              [reduce using rule 384 (bitStringLiteral)]
    FROM              [reduce using rule 385 (hexStringLiteral)]
    FROM              [reduce using rule 522 (questionMark)]
    WHEN              reduce using rule 375 (unsignedNumericLiteral)
    WHEN              [reduce using rule 382 (characterStringLiteral)]
    WHEN              [reduce using rule 383 (nationalCharacterStringLiteral)]
    WHEN              [reduce using rule 384 (bitStringLiteral)]
    WHEN              [reduce using rule 385 (hexStringLiteral)]
    WHEN              [reduce using rule 522 (questionMark)]
    THEN              reduce using rule 375 (unsignedNumericLiteral)
    THEN              [reduce using rule 382 (characterStringLiteral)]
    THEN              [reduce using rule 383 (nationalCharacterStringLiteral)]
    THEN              [reduce using rule 384 (bitStringLiteral)]
    THEN              [reduce using rule 385 (hexStringLiteral)]
    THEN              [reduce using rule 522 (questionMark)]
    ELSE              reduce using rule 375 (unsignedNumericLiteral)
    ELSE              [reduce using rule 382 (characterStringLiteral)]
    ELSE              [reduce using rule 383 (nationalCharacterStringLiteral)]
    ELSE              [reduce using rule 384 (bitStringLiteral)]
    ELSE              [reduce using rule 385 (hexStringLiteral)]
    ELSE              [reduce using rule 522 (questionMark)]
    DESC              reduce using rule 375 (unsignedNumericLiteral)
    DESC              [reduce using rule 382 (characterStringLiteral)]
    DESC              [reduce using rule 383 (nationalCharacterStringLiteral)]
    DESC              [reduce using rule 384 (bitStringLiteral)]
    DESC              [reduce using rule 385 (hexStringLiteral)]
    DESC              [reduce using rule 517 (colon)]
    DESC              [reduce using rule 522 (questionMark)]
    LIKE              reduce using rule 375 (unsignedNumericLiteral)
    LIKE              [reduce using rule 382 (characterStringLiteral)]
    LIKE              [reduce using rule 383 (nationalCharacterStringLiteral)]
    LIKE              [reduce using rule 384 (bitStringLiteral)]
    LIKE              [reduce using rule 385 (hexStringLiteral)]
    LIKE              [reduce using rule 522 (questionMark)]
    JOIN              reduce using rule 375 (unsignedNumericLiteral)
    JOIN              [reduce using rule 382 (characterStringLiteral)]
    JOIN              [reduce using rule 383 (nationalCharacterStringLiteral)]
    JOIN              [reduce using rule 384 (bitStringLiteral)]
    JOIN              [reduce using rule 385 (hexStringLiteral)]
    JOIN              [reduce using rule 522 (questionMark)]
    LEFT              reduce using rule 375 (unsignedNumericLiteral)
    LEFT              [reduce using rule 382 (characterStringLiteral)]
    LEFT              [reduce using rule 383 (nationalCharacterStringLiteral)]
    LEFT              [reduce using rule 384 (bitStringLiteral)]
    LEFT              [reduce using rule 385 (hexStringLiteral)]
    LEFT              [reduce using rule 522 (questionMark)]
    FULL              reduce using rule 375 (unsignedNumericLiteral)
    FULL              [reduce using rule 382 (characterStringLiteral)]
    FULL              [reduce using rule 383 (nationalCharacterStringLiteral)]
    FULL              [reduce using rule 384 (bitStringLiteral)]
    FULL              [reduce using rule 385 (hexStringLiteral)]
    FULL              [reduce using rule 522 (questionMark)]
    AND               reduce using rule 375 (unsignedNumericLiteral)
    AND               [reduce using rule 382 (characterStringLiteral)]
    AND               [reduce using rule 383 (nationalCharacterStringLiteral)]
    AND               [reduce using rule 384 (bitStringLiteral)]
    AND               [reduce using rule 385 (hexStringLiteral)]
    AND               [reduce using rule 522 (questionMark)]
    END               reduce using rule 375 (unsignedNumericLiteral)
    END               [reduce using rule 382 (characterStringLiteral)]
    END               [reduce using rule 383 (nationalCharacterStringLiteral)]
    END               [reduce using rule 384 (bitStringLiteral)]
    END               [reduce using rule 385 (hexStringLiteral)]
    END               [reduce using rule 522 (questionMark)]
    ASC               reduce using rule 375 (unsignedNumericLiteral)
    ASC               [reduce using rule 382 (characterStringLiteral)]
    ASC               [reduce using rule 383 (nationalCharacterStringLiteral)]
    ASC               [reduce using rule 384 (bitStringLiteral)]
    ASC               [reduce using rule 385 (hexStringLiteral)]
    ASC               [reduce using rule 517 (colon)]
    ASC               [reduce using rule 522 (questionMark)]
    FOR               reduce using rule 375 (unsignedNumericLiteral)
    FOR               [reduce using rule 382 (characterStringLiteral)]
    FOR               [reduce using rule 383 (nationalCharacterStringLiteral)]
    FOR               [reduce using rule 384 (bitStringLiteral)]
    FOR               [reduce using rule 385 (hexStringLiteral)]
    FOR               [reduce using rule 522 (questionMark)]
    NOT               reduce using rule 375 (unsignedNumericLiteral)
    NOT               [reduce using rule 382 (characterStringLiteral)]
    NOT               [reduce using rule 383 (nationalCharacterStringLiteral)]
    NOT               [reduce using rule 384 (bitStringLiteral)]
    NOT               [reduce using rule 385 (hexStringLiteral)]
    NOT               [reduce using rule 522 (questionMark)]
    ON                reduce using rule 375 (unsignedNumericLiteral)
    ON                [reduce using rule 382 (characterStringLiteral)]
    ON                [reduce using rule 383 (nationalCharacterStringLiteral)]
    ON                [reduce using rule 384 (bitStringLiteral)]
    ON                [reduce using rule 385 (hexStringLiteral)]
    ON                [reduce using rule 522 (questionMark)]
    AS                reduce using rule 375 (unsignedNumericLiteral)
    AS                [reduce using rule 382 (characterStringLiteral)]
    AS                [reduce using rule 383 (nationalCharacterStringLiteral)]
    AS                [reduce using rule 384 (bitStringLiteral)]
    AS                [reduce using rule 385 (hexStringLiteral)]
    AS                [reduce using rule 522 (questionMark)]
    IN                reduce using rule 375 (unsignedNumericLiteral)
    IN                [reduce using rule 382 (characterStringLiteral)]
    IN                [reduce using rule 383 (nationalCharacterStringLiteral)]
    IN                [reduce using rule 384 (bitStringLiteral)]
    IN                [reduce using rule 385 (hexStringLiteral)]
    IN                [reduce using rule 522 (questionMark)]
    IS                reduce using rule 375 (unsignedNumericLiteral)
    IS                [reduce using rule 382 (characterStringLiteral)]
    IS                [reduce using rule 383 (nationalCharacterStringLiteral)]
    IS                [reduce using rule 384 (bitStringLiteral)]
    IS                [reduce using rule 385 (hexStringLiteral)]
    IS                [reduce using rule 522 (questionMark)]
    UNKNOWN_BODY      reduce using rule 517 (colon)
    UNKNOWN_LEX       reduce using rule 221 (schemaName)
    UNKNOWN_LEX       [reduce using rule 375 (unsignedNumericLiteral)]
    UNKNOWN_LEX       [reduce using rule 382 (characterStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 383 (nationalCharacterStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 384 (bitStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 385 (hexStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 522 (questionMark)]
    ACTION            reduce using rule 375 (unsignedNumericLiteral)
    ACTION            [reduce using rule 382 (characterStringLiteral)]
    ACTION            [reduce using rule 383 (nationalCharacterStringLiteral)]
    ACTION            [reduce using rule 384 (bitStringLiteral)]
    ACTION            [reduce using rule 385 (hexStringLiteral)]
    ACTION            [reduce using rule 517 (colon)]
    ACTION            [reduce using rule 522 (questionMark)]
    MIN               reduce using rule 375 (unsignedNumericLiteral)
    MIN               [reduce using rule 382 (characterStringLiteral)]
    MIN               [reduce using rule 383 (nationalCharacterStringLiteral)]
    MIN               [reduce using rule 384 (bitStringLiteral)]
    MIN               [reduce using rule 385 (hexStringLiteral)]
    MIN               [reduce using rule 517 (colon)]
    MIN               [reduce using rule 522 (questionMark)]
    SECOND            reduce using rule 375 (unsignedNumericLiteral)
    SECOND            [reduce using rule 382 (characterStringLiteral)]
    SECOND            [reduce using rule 383 (nationalCharacterStringLiteral)]
    SECOND            [reduce using rule 384 (bitStringLiteral)]
    SECOND            [reduce using rule 385 (hexStringLiteral)]
    SECOND            [reduce using rule 522 (questionMark)]
    OCTET_LENGTH      reduce using rule 375 (unsignedNumericLiteral)
    OCTET_LENGTH      [reduce using rule 382 (characterStringLiteral)]
    OCTET_LENGTH      [reduce using rule 383 (nationalCharacterStringLiteral)]
    OCTET_LENGTH      [reduce using rule 384 (bitStringLiteral)]
    OCTET_LENGTH      [reduce using rule 385 (hexStringLiteral)]
    OCTET_LENGTH      [reduce using rule 517 (colon)]
    OCTET_LENGTH      [reduce using rule 522 (questionMark)]
    MINUTE            reduce using rule 375 (unsignedNumericLiteral)
    MINUTE            [reduce using rule 382 (characterStringLiteral)]
    MINUTE            [reduce using rule 383 (nationalCharacterStringLiteral)]
    MINUTE            [reduce using rule 384 (bitStringLiteral)]
    MINUTE            [reduce using rule 385 (hexStringLiteral)]
    MINUTE            [reduce using rule 522 (questionMark)]
    CROSS             reduce using rule 375 (unsignedNumericLiteral)
    CROSS             [reduce using rule 382 (characterStringLiteral)]
    CROSS             [reduce using rule 383 (nationalCharacterStringLiteral)]
    CROSS             [reduce using rule 384 (bitStringLiteral)]
    CROSS             [reduce using rule 385 (hexStringLiteral)]
    CROSS             [reduce using rule 522 (questionMark)]
    DEFERRED          reduce using rule 375 (unsignedNumericLiteral)
    DEFERRED          [reduce using rule 382 (characterStringLiteral)]
    DEFERRED          [reduce using rule 383 (nationalCharacterStringLiteral)]
    DEFERRED          [reduce using rule 384 (bitStringLiteral)]
    DEFERRED          [reduce using rule 385 (hexStringLiteral)]
    DEFERRED          [reduce using rule 517 (colon)]
    DEFERRED          [reduce using rule 522 (questionMark)]
    DEFERRABLE        reduce using rule 375 (unsignedNumericLiteral)
    DEFERRABLE        [reduce using rule 382 (characterStringLiteral)]
    DEFERRABLE        [reduce using rule 383 (nationalCharacterStringLiteral)]
    DEFERRABLE        [reduce using rule 384 (bitStringLiteral)]
    DEFERRABLE        [reduce using rule 385 (hexStringLiteral)]
    DEFERRABLE        [reduce using rule 517 (colon)]
    DEFERRABLE        [reduce using rule 522 (questionMark)]
    MONTH             reduce using rule 375 (unsignedNumericLiteral)
    MONTH             [reduce using rule 382 (characterStringLiteral)]
    MONTH             [reduce using rule 383 (nationalCharacterStringLiteral)]
    MONTH             [reduce using rule 384 (bitStringLiteral)]
    MONTH             [reduce using rule 385 (hexStringLiteral)]
    MONTH             [reduce using rule 522 (questionMark)]
    ZONE              reduce using rule 375 (unsignedNumericLiteral)
    ZONE              [reduce using rule 382 (characterStringLiteral)]
    ZONE              [reduce using rule 383 (nationalCharacterStringLiteral)]
    ZONE              [reduce using rule 384 (bitStringLiteral)]
    ZONE              [reduce using rule 385 (hexStringLiteral)]
    ZONE              [reduce using rule 517 (colon)]
    ZONE              [reduce using rule 522 (questionMark)]
    INTERSECT         reduce using rule 375 (unsignedNumericLiteral)
    INTERSECT         [reduce using rule 382 (characterStringLiteral)]
    INTERSECT         [reduce using rule 383 (nationalCharacterStringLiteral)]
    INTERSECT         [reduce using rule 384 (bitStringLiteral)]
    INTERSECT         [reduce using rule 385 (hexStringLiteral)]
    INTERSECT         [reduce using rule 522 (questionMark)]
    COUNT             reduce using rule 375 (unsignedNumericLiteral)
    COUNT             [reduce using rule 382 (characterStringLiteral)]
    COUNT             [reduce using rule 383 (nationalCharacterStringLiteral)]
    COUNT             [reduce using rule 384 (bitStringLiteral)]
    COUNT             [reduce using rule 385 (hexStringLiteral)]
    COUNT             [reduce using rule 517 (colon)]
    COUNT             [reduce using rule 522 (questionMark)]
    NATURAL           reduce using rule 375 (unsignedNumericLiteral)
    NATURAL           [reduce using rule 382 (characterStringLiteral)]
    NATURAL           [reduce using rule 383 (nationalCharacterStringLiteral)]
    NATURAL           [reduce using rule 384 (bitStringLiteral)]
    NATURAL           [reduce using rule 385 (hexStringLiteral)]
    NATURAL           [reduce using rule 522 (questionMark)]
    NULLIF            reduce using rule 375 (unsignedNumericLiteral)
    NULLIF            [reduce using rule 382 (characterStringLiteral)]
    NULLIF            [reduce using rule 383 (nationalCharacterStringLiteral)]
    NULLIF            [reduce using rule 384 (bitStringLiteral)]
    NULLIF            [reduce using rule 385 (hexStringLiteral)]
    NULLIF            [reduce using rule 517 (colon)]
    NULLIF            [reduce using rule 522 (questionMark)]
    SUM               reduce using rule 375 (unsignedNumericLiteral)
    SUM               [reduce using rule 382 (characterStringLiteral)]
    SUM               [reduce using rule 383 (nationalCharacterStringLiteral)]
    SUM               [reduce using rule 384 (bitStringLiteral)]
    SUM               [reduce using rule 385 (hexStringLiteral)]
    SUM               [reduce using rule 517 (colon)]
    SUM               [reduce using rule 522 (questionMark)]
    COLLATE           reduce using rule 375 (unsignedNumericLiteral)
    COLLATE           [reduce using rule 382 (characterStringLiteral)]
    COLLATE           [reduce using rule 383 (nationalCharacterStringLiteral)]
    COLLATE           [reduce using rule 384 (bitStringLiteral)]
    COLLATE           [reduce using rule 385 (hexStringLiteral)]
    COLLATE           [reduce using rule 522 (questionMark)]
    KEY               reduce using rule 375 (unsignedNumericLiteral)
    KEY               [reduce using rule 382 (characterStringLiteral)]
    KEY               [reduce using rule 383 (nationalCharacterStringLiteral)]
    KEY               [reduce using rule 384 (bitStringLiteral)]
    KEY               [reduce using rule 385 (hexStringLiteral)]
    KEY               [reduce using rule 517 (colon)]
    KEY               [reduce using rule 522 (questionMark)]
    AVG               reduce using rule 375 (unsignedNumericLiteral)
    AVG               [reduce using rule 382 (characterStringLiteral)]
    AVG               [reduce using rule 383 (nationalCharacterStringLiteral)]
    AVG               [reduce using rule 384 (bitStringLiteral)]
    AVG               [reduce using rule 385 (hexStringLiteral)]
    AVG               [reduce using rule 517 (colon)]
    AVG               [reduce using rule 522 (questionMark)]
    INITIALLY         reduce using rule 375 (unsignedNumericLiteral)
    INITIALLY         [reduce using rule 382 (characterStringLiteral)]
    INITIALLY         [reduce using rule 383 (nationalCharacterStringLiteral)]
    INITIALLY         [reduce using rule 384 (bitStringLiteral)]
    INITIALLY         [reduce using rule 385 (hexStringLiteral)]
    INITIALLY         [reduce using rule 517 (colon)]
    INITIALLY         [reduce using rule 522 (questionMark)]
    UPPER             reduce using rule 375 (unsignedNumericLiteral)
    UPPER             [reduce using rule 382 (characterStringLiteral)]
    UPPER             [reduce using rule 383 (nationalCharacterStringLiteral)]
    UPPER             [reduce using rule 384 (bitStringLiteral)]
    UPPER             [reduce using rule 385 (hexStringLiteral)]
    UPPER             [reduce using rule 517 (colon)]
    UPPER             [reduce using rule 522 (questionMark)]
    DAY               reduce using rule 375 (unsignedNumericLiteral)
    DAY               [reduce using rule 382 (characterStringLiteral)]
    DAY               [reduce using rule 383 (nationalCharacterStringLiteral)]
    DAY               [reduce using rule 384 (bitStringLiteral)]
    DAY               [reduce using rule 385 (hexStringLiteral)]
    DAY               [reduce using rule 522 (questionMark)]
    EXCEPT            reduce using rule 375 (unsignedNumericLiteral)
    EXCEPT            [reduce using rule 382 (characterStringLiteral)]
    EXCEPT            [reduce using rule 383 (nationalCharacterStringLiteral)]
    EXCEPT            [reduce using rule 384 (bitStringLiteral)]
    EXCEPT            [reduce using rule 385 (hexStringLiteral)]
    EXCEPT            [reduce using rule 522 (questionMark)]
    EXTRACT           reduce using rule 375 (unsignedNumericLiteral)
    EXTRACT           [reduce using rule 382 (characterStringLiteral)]
    EXTRACT           [reduce using rule 383 (nationalCharacterStringLiteral)]
    EXTRACT           [reduce using rule 384 (bitStringLiteral)]
    EXTRACT           [reduce using rule 385 (hexStringLiteral)]
    EXTRACT           [reduce using rule 517 (colon)]
    EXTRACT           [reduce using rule 522 (questionMark)]
    CHAR_LENGTH       reduce using rule 375 (unsignedNumericLiteral)
    CHAR_LENGTH       [reduce using rule 382 (characterStringLiteral)]
    CHAR_LENGTH       [reduce using rule 383 (nationalCharacterStringLiteral)]
    CHAR_LENGTH       [reduce using rule 384 (bitStringLiteral)]
    CHAR_LENGTH       [reduce using rule 385 (hexStringLiteral)]
    CHAR_LENGTH       [reduce using rule 517 (colon)]
    CHAR_LENGTH       [reduce using rule 522 (questionMark)]
    SUBSTRING         reduce using rule 375 (unsignedNumericLiteral)
    SUBSTRING         [reduce using rule 382 (characterStringLiteral)]
    SUBSTRING         [reduce using rule 383 (nationalCharacterStringLiteral)]
    SUBSTRING         [reduce using rule 384 (bitStringLiteral)]
    SUBSTRING         [reduce using rule 385 (hexStringLiteral)]
    SUBSTRING         [reduce using rule 517 (colon)]
    SUBSTRING         [reduce using rule 522 (questionMark)]
    PARTIAL           reduce using rule 375 (unsignedNumericLiteral)
    PARTIAL           [reduce using rule 382 (characterStringLiteral)]
    PARTIAL           [reduce using rule 383 (nationalCharacterStringLiteral)]
    PARTIAL           [reduce using rule 384 (bitStringLiteral)]
    PARTIAL           [reduce using rule 385 (hexStringLiteral)]
    PARTIAL           [reduce using rule 517 (colon)]
    PARTIAL           [reduce using rule 522 (questionMark)]
    MAX               reduce using rule 375 (unsignedNumericLiteral)
    MAX               [reduce using rule 382 (characterStringLiteral)]
    MAX               [reduce using rule 383 (nationalCharacterStringLiteral)]
    MAX               [reduce using rule 384 (bitStringLiteral)]
    MAX               [reduce using rule 385 (hexStringLiteral)]
    MAX               [reduce using rule 517 (colon)]
    MAX               [reduce using rule 522 (questionMark)]
    LOWER             reduce using rule 375 (unsignedNumericLiteral)
    LOWER             [reduce using rule 382 (characterStringLiteral)]
    LOWER             [reduce using rule 383 (nationalCharacterStringLiteral)]
    LOWER             [reduce using rule 384 (bitStringLiteral)]
    LOWER             [reduce using rule 385 (hexStringLiteral)]
    LOWER             [reduce using rule 517 (colon)]
    LOWER             [reduce using rule 522 (questionMark)]
    USING             reduce using rule 375 (unsignedNumericLiteral)
    USING             [reduce using rule 382 (characterStringLiteral)]
    USING             [reduce using rule 383 (nationalCharacterStringLiteral)]
    USING             [reduce using rule 384 (bitStringLiteral)]
    USING             [reduce using rule 385 (hexStringLiteral)]
    USING             [reduce using rule 522 (questionMark)]
    CASCADE           reduce using rule 375 (unsignedNumericLiteral)
    CASCADE           [reduce using rule 382 (characterStringLiteral)]
    CASCADE           [reduce using rule 383 (nationalCharacterStringLiteral)]
    CASCADE           [reduce using rule 384 (bitStringLiteral)]
    CASCADE           [reduce using rule 385 (hexStringLiteral)]
    CASCADE           [reduce using rule 517 (colon)]
    CASCADE           [reduce using rule 522 (questionMark)]
    TEMPORARY         reduce using rule 375 (unsignedNumericLiteral)
    TEMPORARY         [reduce using rule 382 (characterStringLiteral)]
    TEMPORARY         [reduce using rule 383 (nationalCharacterStringLiteral)]
    TEMPORARY         [reduce using rule 384 (bitStringLiteral)]
    TEMPORARY         [reduce using rule 385 (hexStringLiteral)]
    TEMPORARY         [reduce using rule 517 (colon)]
    TEMPORARY         [reduce using rule 522 (questionMark)]
    HOUR              reduce using rule 375 (unsignedNumericLiteral)
    HOUR              [reduce using rule 382 (characterStringLiteral)]
    HOUR              [reduce using rule 383 (nationalCharacterStringLiteral)]
    HOUR              [reduce using rule 384 (bitStringLiteral)]
    HOUR              [reduce using rule 385 (hexStringLiteral)]
    HOUR              [reduce using rule 522 (questionMark)]
    YEAR              reduce using rule 375 (unsignedNumericLiteral)
    YEAR              [reduce using rule 382 (characterStringLiteral)]
    YEAR              [reduce using rule 383 (nationalCharacterStringLiteral)]
    YEAR              [reduce using rule 384 (bitStringLiteral)]
    YEAR              [reduce using rule 385 (hexStringLiteral)]
    YEAR              [reduce using rule 522 (questionMark)]
    OVERLAPS          reduce using rule 375 (unsignedNumericLiteral)
    OVERLAPS          [reduce using rule 382 (characterStringLiteral)]
    OVERLAPS          [reduce using rule 383 (nationalCharacterStringLiteral)]
    OVERLAPS          [reduce using rule 384 (bitStringLiteral)]
    OVERLAPS          [reduce using rule 385 (hexStringLiteral)]
    OVERLAPS          [reduce using rule 522 (questionMark)]
    CHARACTER_LENGTH  reduce using rule 375 (unsignedNumericLiteral)
    CHARACTER_LENGTH  [reduce using rule 382 (characterStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 383 (nationalCharacterStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 384 (bitStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 385 (hexStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 517 (colon)]
    CHARACTER_LENGTH  [reduce using rule 522 (questionMark)]
    MATCH             reduce using rule 375 (unsignedNumericLiteral)
    MATCH             [reduce using rule 382 (characterStringLiteral)]
    MATCH             [reduce using rule 383 (nationalCharacterStringLiteral)]
    MATCH             [reduce using rule 384 (bitStringLiteral)]
    MATCH             [reduce using rule 385 (hexStringLiteral)]
    MATCH             [reduce using rule 522 (questionMark)]
    CONVERT           reduce using rule 375 (unsignedNumericLiteral)
    CONVERT           [reduce using rule 382 (characterStringLiteral)]
    CONVERT           [reduce using rule 383 (nationalCharacterStringLiteral)]
    CONVERT           [reduce using rule 384 (bitStringLiteral)]
    CONVERT           [reduce using rule 385 (hexStringLiteral)]
    CONVERT           [reduce using rule 517 (colon)]
    CONVERT           [reduce using rule 522 (questionMark)]
    TRANSLATE         reduce using rule 375 (unsignedNumericLiteral)
    TRANSLATE         [reduce using rule 382 (characterStringLiteral)]
    TRANSLATE         [reduce using rule 383 (nationalCharacterStringLiteral)]
    TRANSLATE         [reduce using rule 384 (bitStringLiteral)]
    TRANSLATE         [reduce using rule 385 (hexStringLiteral)]
    TRANSLATE         [reduce using rule 517 (colon)]
    TRANSLATE         [reduce using rule 522 (questionMark)]
    PRESERVE          reduce using rule 375 (unsignedNumericLiteral)
    PRESERVE          [reduce using rule 382 (characterStringLiteral)]
    PRESERVE          [reduce using rule 383 (nationalCharacterStringLiteral)]
    PRESERVE          [reduce using rule 384 (bitStringLiteral)]
    PRESERVE          [reduce using rule 385 (hexStringLiteral)]
    PRESERVE          [reduce using rule 517 (colon)]
    PRESERVE          [reduce using rule 522 (questionMark)]
    POSITION          reduce using rule 375 (unsignedNumericLiteral)
    POSITION          [reduce using rule 382 (characterStringLiteral)]
    POSITION          [reduce using rule 383 (nationalCharacterStringLiteral)]
    POSITION          [reduce using rule 384 (bitStringLiteral)]
    POSITION          [reduce using rule 385 (hexStringLiteral)]
    POSITION          [reduce using rule 517 (colon)]
    POSITION          [reduce using rule 522 (questionMark)]
    COALESCE          reduce using rule 375 (unsignedNumericLiteral)
    COALESCE          [reduce using rule 382 (characterStringLiteral)]
    COALESCE          [reduce using rule 383 (nationalCharacterStringLiteral)]
    COALESCE          [reduce using rule 384 (bitStringLiteral)]
    COALESCE          [reduce using rule 385 (hexStringLiteral)]
    COALESCE          [reduce using rule 517 (colon)]
    COALESCE          [reduce using rule 522 (questionMark)]
    TRIM              reduce using rule 375 (unsignedNumericLiteral)
    TRIM              [reduce using rule 382 (characterStringLiteral)]
    TRIM              [reduce using rule 383 (nationalCharacterStringLiteral)]
    TRIM              [reduce using rule 384 (bitStringLiteral)]
    TRIM              [reduce using rule 385 (hexStringLiteral)]
    TRIM              [reduce using rule 517 (colon)]
    TRIM              [reduce using rule 522 (questionMark)]
    AT                reduce using rule 375 (unsignedNumericLiteral)
    AT                [reduce using rule 382 (characterStringLiteral)]
    AT                [reduce using rule 383 (nationalCharacterStringLiteral)]
    AT                [reduce using rule 384 (bitStringLiteral)]
    AT                [reduce using rule 385 (hexStringLiteral)]
    AT                [reduce using rule 522 (questionMark)]
    NUMBER            reduce using rule 375 (unsignedNumericLiteral)
    NUMBER            [reduce using rule 382 (characterStringLiteral)]
    NUMBER            [reduce using rule 383 (nationalCharacterStringLiteral)]
    NUMBER            [reduce using rule 384 (bitStringLiteral)]
    NUMBER            [reduce using rule 385 (hexStringLiteral)]
    NUMBER            [reduce using rule 517 (colon)]
    NUMBER            [reduce using rule 522 (questionMark)]
    ID                reduce using rule 375 (unsignedNumericLiteral)
    ID                [reduce using rule 382 (characterStringLiteral)]
    ID                [reduce using rule 383 (nationalCharacterStringLiteral)]
    ID                [reduce using rule 384 (bitStringLiteral)]
    ID                [reduce using rule 385 (hexStringLiteral)]
    ID                [reduce using rule 517 (colon)]
    ID                [reduce using rule 522 (questionMark)]
    ','               reduce using rule 375 (unsignedNumericLiteral)
    ','               [reduce using rule 382 (characterStringLiteral)]
    ','               [reduce using rule 383 (nationalCharacterStringLiteral)]
    ','               [reduce using rule 384 (bitStringLiteral)]
    ','               [reduce using rule 385 (hexStringLiteral)]
    ','               [reduce using rule 522 (questionMark)]
    ')'               reduce using rule 375 (unsignedNumericLiteral)
    ')'               [reduce using rule 382 (characterStringLiteral)]
    ')'               [reduce using rule 383 (nationalCharacterStringLiteral)]
    ')'               [reduce using rule 384 (bitStringLiteral)]
    ')'               [reduce using rule 385 (hexStringLiteral)]
    ')'               [reduce using rule 522 (questionMark)]
    $default          reduce using rule 375 (unsignedNumericLiteral)


state 883

   35 id: OCTET_LENGTH .  [UNKNOWN_LEX]
  230 leftParen: . '('
  810 octetLengthExpression: OCTET_LENGTH . leftParen stringValueExpression rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 35 (id)

    leftParen  go to state 1037


state 884

   36 id: EXTRACT .  [UNKNOWN_LEX]
  230 leftParen: . '('
  761 extractExpression: EXTRACT . leftParen extractField FROM extractSource rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 36 (id)

    leftParen  go to state 1038


state 885

   20 id: CHAR_LENGTH .  [UNKNOWN_LEX]
  806 charLengthExpression: CHAR_LENGTH .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']

    UNKNOWN_LEX  reduce using rule 20 (id)
    UNKNOWN_LEX  [reduce using rule 806 (charLengthExpression)]
    $default     reduce using rule 806 (charLengthExpression)


state 886

  230 leftParen: . '('
  811 bitLengthExpression: BIT_LENGTH . leftParen stringValueExpression rightParen

    '('  shift, and go to state 294

    leftParen  go to state 1039


state 887

   25 id: CHARACTER_LENGTH .  [UNKNOWN_LEX]
  230 leftParen: . '('
  807 charLengthExpression: CHARACTER_LENGTH . leftParen stringValueExpression rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 25 (id)

    leftParen  go to state 1040


state 888

   21 id: POSITION .  [UNKNOWN_LEX]
  230 leftParen: . '('
  710 positionExpression: POSITION . leftParen characterValueExpression IN characterValueExpression rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 21 (id)

    leftParen  go to state 1041


state 889

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  499                       | leftParen . valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  564         | leftParen . queryExpression rightParen
  565 queryExpression: . nonjoinQueryExpression
  566                | . joinedTable
  567 nonjoinQueryExpression: . nonjoinQueryTerm
  568                       | . queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  569                       | . queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  578 nonjoinQueryTerm: . nonjoinQueryPrimary
  579                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  584 nonjoinQueryPrimary: . simpleTable
  585                    | . leftParen nonjoinQueryExpression rightParen
  586 simpleTable: . querySpecification
  587            | . tableValueConstructor
  588            | . explicitTable
  589 querySpecification: . SELECT querySpecification1 selectList tableExpression
  614 tableReference: . tableName tableReference1
  615               | . derivedTable correlationSpecification
  616               | . joinedTable
  625 derivedTable: . tableSubquery
  626 tableSubquery: . subquery
  627 joinedTable: . crossJoin
  628            | . qualifiedJoin
  629            | . leftParen joinedTable rightParen
  630 crossJoin: . tableReference CROSS JOIN tableReference
  631 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  662 tableValueConstructor: . VALUES tableValueConstructorList
  666 explicitTable: . TABLE tableName
  667 queryTerm: . nonjoinQueryTerm
  668          | . joinedTable
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression

    VALUES             shift, and go to state 836
    SELECT             shift, and go to state 837
    TABLE              shift, and go to state 838
    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 839
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 840
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 960
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 844
    queryExpression                 go to state 845
    nonjoinQueryExpression          go to state 846
    nonjoinQueryTerm                go to state 847
    nonjoinQueryPrimary             go to state 848
    simpleTable                     go to state 849
    querySpecification              go to state 850
    tableReference                  go to state 851
    derivedTable                    go to state 852
    tableSubquery                   go to state 853
    joinedTable                     go to state 854
    crossJoin                       go to state 855
    qualifiedJoin                   go to state 856
    tableValueConstructor           go to state 857
    explicitTable                   go to state 858
    queryTerm                       go to state 859
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760


state 890

  489 factor: factor1 numericPrimary .

    $default  reduce using rule 489 (factor)


state 891

  492 numericPrimary: valueExpressionPrimary .

    $default  reduce using rule 492 (numericPrimary)


state 892

  493 numericPrimary: numericValueFunction .

    $default  reduce using rule 493 (numericPrimary)


state 893

  707 numericValueFunction: positionExpression .

    $default  reduce using rule 707 (numericValueFunction)


state 894

  708 numericValueFunction: extractExpression .

    $default  reduce using rule 708 (numericValueFunction)


state 895

  709 numericValueFunction: lengthExpression .

    $default  reduce using rule 709 (numericValueFunction)


state 896

  803 lengthExpression: charLengthExpression .

    $default  reduce using rule 803 (lengthExpression)


state 897

  804 lengthExpression: octetLengthExpression .

    $default  reduce using rule 804 (lengthExpression)


state 898

  805 lengthExpression: bitLengthExpression .

    $default  reduce using rule 805 (lengthExpression)


state 899

  520 indicatorParameter1: INDICATOR .

    $default  reduce using rule 520 (indicatorParameter1)


state 900

  513 parameterSpecification: parameterName parameterSpecification1 .

    $default  reduce using rule 513 (parameterSpecification)


state 901

  515 parameterSpecification1: indicatorParameter .

    $default  reduce using rule 515 (parameterSpecification1)


state 902

  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  518 indicatorParameter: indicatorParameter1 . parameterName

    UNKNOWN_LEX  shift, and go to state 1042

    parameterName  go to state 1043
    colon          go to state 1044


state 903

  534 AdaHostIdentifier: UNKNOWN_BODY .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, INDICATOR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  535 CHostIdentifier: UNKNOWN_BODY .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, INDICATOR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  536 CobolHostIdentifier: UNKNOWN_BODY .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, INDICATOR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  537 FortranHostIdentifier: UNKNOWN_BODY .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, INDICATOR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  538 MUMPSHostIdentifier: UNKNOWN_BODY .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, INDICATOR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  539 PascalHostIdentifier: UNKNOWN_BODY .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, INDICATOR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  540 PLIHostIdentifier: UNKNOWN_BODY .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, INDICATOR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']

    BETWEEN           reduce using rule 534 (AdaHostIdentifier)
    BETWEEN           [reduce using rule 535 (CHostIdentifier)]
    BETWEEN           [reduce using rule 536 (CobolHostIdentifier)]
    BETWEEN           [reduce using rule 537 (FortranHostIdentifier)]
    BETWEEN           [reduce using rule 538 (MUMPSHostIdentifier)]
    BETWEEN           [reduce using rule 539 (PascalHostIdentifier)]
    BETWEEN           [reduce using rule 540 (PLIHostIdentifier)]
    ESCAPE            reduce using rule 534 (AdaHostIdentifier)
    ESCAPE            [reduce using rule 535 (CHostIdentifier)]
    ESCAPE            [reduce using rule 536 (CobolHostIdentifier)]
    ESCAPE            [reduce using rule 537 (FortranHostIdentifier)]
    ESCAPE            [reduce using rule 538 (MUMPSHostIdentifier)]
    ESCAPE            [reduce using rule 539 (PascalHostIdentifier)]
    ESCAPE            [reduce using rule 540 (PLIHostIdentifier)]
    HAVING            reduce using rule 534 (AdaHostIdentifier)
    HAVING            [reduce using rule 535 (CHostIdentifier)]
    HAVING            [reduce using rule 536 (CobolHostIdentifier)]
    HAVING            [reduce using rule 537 (FortranHostIdentifier)]
    HAVING            [reduce using rule 538 (MUMPSHostIdentifier)]
    HAVING            [reduce using rule 539 (PascalHostIdentifier)]
    HAVING            [reduce using rule 540 (PLIHostIdentifier)]
    WHERE             reduce using rule 534 (AdaHostIdentifier)
    WHERE             [reduce using rule 535 (CHostIdentifier)]
    WHERE             [reduce using rule 536 (CobolHostIdentifier)]
    WHERE             [reduce using rule 537 (FortranHostIdentifier)]
    WHERE             [reduce using rule 538 (MUMPSHostIdentifier)]
    WHERE             [reduce using rule 539 (PascalHostIdentifier)]
    WHERE             [reduce using rule 540 (PLIHostIdentifier)]
    OR                reduce using rule 534 (AdaHostIdentifier)
    OR                [reduce using rule 535 (CHostIdentifier)]
    OR                [reduce using rule 536 (CobolHostIdentifier)]
    OR                [reduce using rule 537 (FortranHostIdentifier)]
    OR                [reduce using rule 538 (MUMPSHostIdentifier)]
    OR                [reduce using rule 539 (PascalHostIdentifier)]
    OR                [reduce using rule 540 (PLIHostIdentifier)]
    GROUP             reduce using rule 534 (AdaHostIdentifier)
    GROUP             [reduce using rule 535 (CHostIdentifier)]
    GROUP             [reduce using rule 536 (CobolHostIdentifier)]
    GROUP             [reduce using rule 537 (FortranHostIdentifier)]
    GROUP             [reduce using rule 538 (MUMPSHostIdentifier)]
    GROUP             [reduce using rule 539 (PascalHostIdentifier)]
    GROUP             [reduce using rule 540 (PLIHostIdentifier)]
    RIGHT             reduce using rule 534 (AdaHostIdentifier)
    RIGHT             [reduce using rule 535 (CHostIdentifier)]
    RIGHT             [reduce using rule 536 (CobolHostIdentifier)]
    RIGHT             [reduce using rule 537 (FortranHostIdentifier)]
    RIGHT             [reduce using rule 538 (MUMPSHostIdentifier)]
    RIGHT             [reduce using rule 539 (PascalHostIdentifier)]
    RIGHT             [reduce using rule 540 (PLIHostIdentifier)]
    INNER             reduce using rule 534 (AdaHostIdentifier)
    INNER             [reduce using rule 535 (CHostIdentifier)]
    INNER             [reduce using rule 536 (CobolHostIdentifier)]
    INNER             [reduce using rule 537 (FortranHostIdentifier)]
    INNER             [reduce using rule 538 (MUMPSHostIdentifier)]
    INNER             [reduce using rule 539 (PascalHostIdentifier)]
    INNER             [reduce using rule 540 (PLIHostIdentifier)]
    UNION             reduce using rule 534 (AdaHostIdentifier)
    UNION             [reduce using rule 535 (CHostIdentifier)]
    UNION             [reduce using rule 536 (CobolHostIdentifier)]
    UNION             [reduce using rule 537 (FortranHostIdentifier)]
    UNION             [reduce using rule 538 (MUMPSHostIdentifier)]
    UNION             [reduce using rule 539 (PascalHostIdentifier)]
    UNION             [reduce using rule 540 (PLIHostIdentifier)]
    FROM              reduce using rule 534 (AdaHostIdentifier)
    FROM              [reduce using rule 535 (CHostIdentifier)]
    FROM              [reduce using rule 536 (CobolHostIdentifier)]
    FROM              [reduce using rule 537 (FortranHostIdentifier)]
    FROM              [reduce using rule 538 (MUMPSHostIdentifier)]
    FROM              [reduce using rule 539 (PascalHostIdentifier)]
    FROM              [reduce using rule 540 (PLIHostIdentifier)]
    WHEN              reduce using rule 534 (AdaHostIdentifier)
    WHEN              [reduce using rule 535 (CHostIdentifier)]
    WHEN              [reduce using rule 536 (CobolHostIdentifier)]
    WHEN              [reduce using rule 537 (FortranHostIdentifier)]
    WHEN              [reduce using rule 538 (MUMPSHostIdentifier)]
    WHEN              [reduce using rule 539 (PascalHostIdentifier)]
    WHEN              [reduce using rule 540 (PLIHostIdentifier)]
    THEN              reduce using rule 534 (AdaHostIdentifier)
    THEN              [reduce using rule 535 (CHostIdentifier)]
    THEN              [reduce using rule 536 (CobolHostIdentifier)]
    THEN              [reduce using rule 537 (FortranHostIdentifier)]
    THEN              [reduce using rule 538 (MUMPSHostIdentifier)]
    THEN              [reduce using rule 539 (PascalHostIdentifier)]
    THEN              [reduce using rule 540 (PLIHostIdentifier)]
    ELSE              reduce using rule 534 (AdaHostIdentifier)
    ELSE              [reduce using rule 535 (CHostIdentifier)]
    ELSE              [reduce using rule 536 (CobolHostIdentifier)]
    ELSE              [reduce using rule 537 (FortranHostIdentifier)]
    ELSE              [reduce using rule 538 (MUMPSHostIdentifier)]
    ELSE              [reduce using rule 539 (PascalHostIdentifier)]
    ELSE              [reduce using rule 540 (PLIHostIdentifier)]
    DESC              reduce using rule 534 (AdaHostIdentifier)
    DESC              [reduce using rule 535 (CHostIdentifier)]
    DESC              [reduce using rule 536 (CobolHostIdentifier)]
    DESC              [reduce using rule 537 (FortranHostIdentifier)]
    DESC              [reduce using rule 538 (MUMPSHostIdentifier)]
    DESC              [reduce using rule 539 (PascalHostIdentifier)]
    DESC              [reduce using rule 540 (PLIHostIdentifier)]
    LIKE              reduce using rule 534 (AdaHostIdentifier)
    LIKE              [reduce using rule 535 (CHostIdentifier)]
    LIKE              [reduce using rule 536 (CobolHostIdentifier)]
    LIKE              [reduce using rule 537 (FortranHostIdentifier)]
    LIKE              [reduce using rule 538 (MUMPSHostIdentifier)]
    LIKE              [reduce using rule 539 (PascalHostIdentifier)]
    LIKE              [reduce using rule 540 (PLIHostIdentifier)]
    JOIN              reduce using rule 534 (AdaHostIdentifier)
    JOIN              [reduce using rule 535 (CHostIdentifier)]
    JOIN              [reduce using rule 536 (CobolHostIdentifier)]
    JOIN              [reduce using rule 537 (FortranHostIdentifier)]
    JOIN              [reduce using rule 538 (MUMPSHostIdentifier)]
    JOIN              [reduce using rule 539 (PascalHostIdentifier)]
    JOIN              [reduce using rule 540 (PLIHostIdentifier)]
    LEFT              reduce using rule 534 (AdaHostIdentifier)
    LEFT              [reduce using rule 535 (CHostIdentifier)]
    LEFT              [reduce using rule 536 (CobolHostIdentifier)]
    LEFT              [reduce using rule 537 (FortranHostIdentifier)]
    LEFT              [reduce using rule 538 (MUMPSHostIdentifier)]
    LEFT              [reduce using rule 539 (PascalHostIdentifier)]
    LEFT              [reduce using rule 540 (PLIHostIdentifier)]
    FULL              reduce using rule 534 (AdaHostIdentifier)
    FULL              [reduce using rule 535 (CHostIdentifier)]
    FULL              [reduce using rule 536 (CobolHostIdentifier)]
    FULL              [reduce using rule 537 (FortranHostIdentifier)]
    FULL              [reduce using rule 538 (MUMPSHostIdentifier)]
    FULL              [reduce using rule 539 (PascalHostIdentifier)]
    FULL              [reduce using rule 540 (PLIHostIdentifier)]
    AND               reduce using rule 534 (AdaHostIdentifier)
    AND               [reduce using rule 535 (CHostIdentifier)]
    AND               [reduce using rule 536 (CobolHostIdentifier)]
    AND               [reduce using rule 537 (FortranHostIdentifier)]
    AND               [reduce using rule 538 (MUMPSHostIdentifier)]
    AND               [reduce using rule 539 (PascalHostIdentifier)]
    AND               [reduce using rule 540 (PLIHostIdentifier)]
    END               reduce using rule 534 (AdaHostIdentifier)
    END               [reduce using rule 535 (CHostIdentifier)]
    END               [reduce using rule 536 (CobolHostIdentifier)]
    END               [reduce using rule 537 (FortranHostIdentifier)]
    END               [reduce using rule 538 (MUMPSHostIdentifier)]
    END               [reduce using rule 539 (PascalHostIdentifier)]
    END               [reduce using rule 540 (PLIHostIdentifier)]
    ASC               reduce using rule 534 (AdaHostIdentifier)
    ASC               [reduce using rule 535 (CHostIdentifier)]
    ASC               [reduce using rule 536 (CobolHostIdentifier)]
    ASC               [reduce using rule 537 (FortranHostIdentifier)]
    ASC               [reduce using rule 538 (MUMPSHostIdentifier)]
    ASC               [reduce using rule 539 (PascalHostIdentifier)]
    ASC               [reduce using rule 540 (PLIHostIdentifier)]
    FOR               reduce using rule 534 (AdaHostIdentifier)
    FOR               [reduce using rule 535 (CHostIdentifier)]
    FOR               [reduce using rule 536 (CobolHostIdentifier)]
    FOR               [reduce using rule 537 (FortranHostIdentifier)]
    FOR               [reduce using rule 538 (MUMPSHostIdentifier)]
    FOR               [reduce using rule 539 (PascalHostIdentifier)]
    FOR               [reduce using rule 540 (PLIHostIdentifier)]
    NOT               reduce using rule 534 (AdaHostIdentifier)
    NOT               [reduce using rule 535 (CHostIdentifier)]
    NOT               [reduce using rule 536 (CobolHostIdentifier)]
    NOT               [reduce using rule 537 (FortranHostIdentifier)]
    NOT               [reduce using rule 538 (MUMPSHostIdentifier)]
    NOT               [reduce using rule 539 (PascalHostIdentifier)]
    NOT               [reduce using rule 540 (PLIHostIdentifier)]
    ON                reduce using rule 534 (AdaHostIdentifier)
    ON                [reduce using rule 535 (CHostIdentifier)]
    ON                [reduce using rule 536 (CobolHostIdentifier)]
    ON                [reduce using rule 537 (FortranHostIdentifier)]
    ON                [reduce using rule 538 (MUMPSHostIdentifier)]
    ON                [reduce using rule 539 (PascalHostIdentifier)]
    ON                [reduce using rule 540 (PLIHostIdentifier)]
    AS                reduce using rule 534 (AdaHostIdentifier)
    AS                [reduce using rule 535 (CHostIdentifier)]
    AS                [reduce using rule 536 (CobolHostIdentifier)]
    AS                [reduce using rule 537 (FortranHostIdentifier)]
    AS                [reduce using rule 538 (MUMPSHostIdentifier)]
    AS                [reduce using rule 539 (PascalHostIdentifier)]
    AS                [reduce using rule 540 (PLIHostIdentifier)]
    IN                reduce using rule 534 (AdaHostIdentifier)
    IN                [reduce using rule 535 (CHostIdentifier)]
    IN                [reduce using rule 536 (CobolHostIdentifier)]
    IN                [reduce using rule 537 (FortranHostIdentifier)]
    IN                [reduce using rule 538 (MUMPSHostIdentifier)]
    IN                [reduce using rule 539 (PascalHostIdentifier)]
    IN                [reduce using rule 540 (PLIHostIdentifier)]
    IS                reduce using rule 534 (AdaHostIdentifier)
    IS                [reduce using rule 535 (CHostIdentifier)]
    IS                [reduce using rule 536 (CobolHostIdentifier)]
    IS                [reduce using rule 537 (FortranHostIdentifier)]
    IS                [reduce using rule 538 (MUMPSHostIdentifier)]
    IS                [reduce using rule 539 (PascalHostIdentifier)]
    IS                [reduce using rule 540 (PLIHostIdentifier)]
    UNKNOWN_LEX       reduce using rule 534 (AdaHostIdentifier)
    UNKNOWN_LEX       [reduce using rule 535 (CHostIdentifier)]
    UNKNOWN_LEX       [reduce using rule 536 (CobolHostIdentifier)]
    UNKNOWN_LEX       [reduce using rule 537 (FortranHostIdentifier)]
    UNKNOWN_LEX       [reduce using rule 538 (MUMPSHostIdentifier)]
    UNKNOWN_LEX       [reduce using rule 539 (PascalHostIdentifier)]
    UNKNOWN_LEX       [reduce using rule 540 (PLIHostIdentifier)]
    ACTION            reduce using rule 534 (AdaHostIdentifier)
    ACTION            [reduce using rule 535 (CHostIdentifier)]
    ACTION            [reduce using rule 536 (CobolHostIdentifier)]
    ACTION            [reduce using rule 537 (FortranHostIdentifier)]
    ACTION            [reduce using rule 538 (MUMPSHostIdentifier)]
    ACTION            [reduce using rule 539 (PascalHostIdentifier)]
    ACTION            [reduce using rule 540 (PLIHostIdentifier)]
    MIN               reduce using rule 534 (AdaHostIdentifier)
    MIN               [reduce using rule 535 (CHostIdentifier)]
    MIN               [reduce using rule 536 (CobolHostIdentifier)]
    MIN               [reduce using rule 537 (FortranHostIdentifier)]
    MIN               [reduce using rule 538 (MUMPSHostIdentifier)]
    MIN               [reduce using rule 539 (PascalHostIdentifier)]
    MIN               [reduce using rule 540 (PLIHostIdentifier)]
    SECOND            reduce using rule 534 (AdaHostIdentifier)
    SECOND            [reduce using rule 535 (CHostIdentifier)]
    SECOND            [reduce using rule 536 (CobolHostIdentifier)]
    SECOND            [reduce using rule 537 (FortranHostIdentifier)]
    SECOND            [reduce using rule 538 (MUMPSHostIdentifier)]
    SECOND            [reduce using rule 539 (PascalHostIdentifier)]
    SECOND            [reduce using rule 540 (PLIHostIdentifier)]
    OCTET_LENGTH      reduce using rule 534 (AdaHostIdentifier)
    OCTET_LENGTH      [reduce using rule 535 (CHostIdentifier)]
    OCTET_LENGTH      [reduce using rule 536 (CobolHostIdentifier)]
    OCTET_LENGTH      [reduce using rule 537 (FortranHostIdentifier)]
    OCTET_LENGTH      [reduce using rule 538 (MUMPSHostIdentifier)]
    OCTET_LENGTH      [reduce using rule 539 (PascalHostIdentifier)]
    OCTET_LENGTH      [reduce using rule 540 (PLIHostIdentifier)]
    MINUTE            reduce using rule 534 (AdaHostIdentifier)
    MINUTE            [reduce using rule 535 (CHostIdentifier)]
    MINUTE            [reduce using rule 536 (CobolHostIdentifier)]
    MINUTE            [reduce using rule 537 (FortranHostIdentifier)]
    MINUTE            [reduce using rule 538 (MUMPSHostIdentifier)]
    MINUTE            [reduce using rule 539 (PascalHostIdentifier)]
    MINUTE            [reduce using rule 540 (PLIHostIdentifier)]
    CROSS             reduce using rule 534 (AdaHostIdentifier)
    CROSS             [reduce using rule 535 (CHostIdentifier)]
    CROSS             [reduce using rule 536 (CobolHostIdentifier)]
    CROSS             [reduce using rule 537 (FortranHostIdentifier)]
    CROSS             [reduce using rule 538 (MUMPSHostIdentifier)]
    CROSS             [reduce using rule 539 (PascalHostIdentifier)]
    CROSS             [reduce using rule 540 (PLIHostIdentifier)]
    DEFERRED          reduce using rule 534 (AdaHostIdentifier)
    DEFERRED          [reduce using rule 535 (CHostIdentifier)]
    DEFERRED          [reduce using rule 536 (CobolHostIdentifier)]
    DEFERRED          [reduce using rule 537 (FortranHostIdentifier)]
    DEFERRED          [reduce using rule 538 (MUMPSHostIdentifier)]
    DEFERRED          [reduce using rule 539 (PascalHostIdentifier)]
    DEFERRED          [reduce using rule 540 (PLIHostIdentifier)]
    DEFERRABLE        reduce using rule 534 (AdaHostIdentifier)
    DEFERRABLE        [reduce using rule 535 (CHostIdentifier)]
    DEFERRABLE        [reduce using rule 536 (CobolHostIdentifier)]
    DEFERRABLE        [reduce using rule 537 (FortranHostIdentifier)]
    DEFERRABLE        [reduce using rule 538 (MUMPSHostIdentifier)]
    DEFERRABLE        [reduce using rule 539 (PascalHostIdentifier)]
    DEFERRABLE        [reduce using rule 540 (PLIHostIdentifier)]
    MONTH             reduce using rule 534 (AdaHostIdentifier)
    MONTH             [reduce using rule 535 (CHostIdentifier)]
    MONTH             [reduce using rule 536 (CobolHostIdentifier)]
    MONTH             [reduce using rule 537 (FortranHostIdentifier)]
    MONTH             [reduce using rule 538 (MUMPSHostIdentifier)]
    MONTH             [reduce using rule 539 (PascalHostIdentifier)]
    MONTH             [reduce using rule 540 (PLIHostIdentifier)]
    ZONE              reduce using rule 534 (AdaHostIdentifier)
    ZONE              [reduce using rule 535 (CHostIdentifier)]
    ZONE              [reduce using rule 536 (CobolHostIdentifier)]
    ZONE              [reduce using rule 537 (FortranHostIdentifier)]
    ZONE              [reduce using rule 538 (MUMPSHostIdentifier)]
    ZONE              [reduce using rule 539 (PascalHostIdentifier)]
    ZONE              [reduce using rule 540 (PLIHostIdentifier)]
    INTERSECT         reduce using rule 534 (AdaHostIdentifier)
    INTERSECT         [reduce using rule 535 (CHostIdentifier)]
    INTERSECT         [reduce using rule 536 (CobolHostIdentifier)]
    INTERSECT         [reduce using rule 537 (FortranHostIdentifier)]
    INTERSECT         [reduce using rule 538 (MUMPSHostIdentifier)]
    INTERSECT         [reduce using rule 539 (PascalHostIdentifier)]
    INTERSECT         [reduce using rule 540 (PLIHostIdentifier)]
    COUNT             reduce using rule 534 (AdaHostIdentifier)
    COUNT             [reduce using rule 535 (CHostIdentifier)]
    COUNT             [reduce using rule 536 (CobolHostIdentifier)]
    COUNT             [reduce using rule 537 (FortranHostIdentifier)]
    COUNT             [reduce using rule 538 (MUMPSHostIdentifier)]
    COUNT             [reduce using rule 539 (PascalHostIdentifier)]
    COUNT             [reduce using rule 540 (PLIHostIdentifier)]
    NATURAL           reduce using rule 534 (AdaHostIdentifier)
    NATURAL           [reduce using rule 535 (CHostIdentifier)]
    NATURAL           [reduce using rule 536 (CobolHostIdentifier)]
    NATURAL           [reduce using rule 537 (FortranHostIdentifier)]
    NATURAL           [reduce using rule 538 (MUMPSHostIdentifier)]
    NATURAL           [reduce using rule 539 (PascalHostIdentifier)]
    NATURAL           [reduce using rule 540 (PLIHostIdentifier)]
    NULLIF            reduce using rule 534 (AdaHostIdentifier)
    NULLIF            [reduce using rule 535 (CHostIdentifier)]
    NULLIF            [reduce using rule 536 (CobolHostIdentifier)]
    NULLIF            [reduce using rule 537 (FortranHostIdentifier)]
    NULLIF            [reduce using rule 538 (MUMPSHostIdentifier)]
    NULLIF            [reduce using rule 539 (PascalHostIdentifier)]
    NULLIF            [reduce using rule 540 (PLIHostIdentifier)]
    SUM               reduce using rule 534 (AdaHostIdentifier)
    SUM               [reduce using rule 535 (CHostIdentifier)]
    SUM               [reduce using rule 536 (CobolHostIdentifier)]
    SUM               [reduce using rule 537 (FortranHostIdentifier)]
    SUM               [reduce using rule 538 (MUMPSHostIdentifier)]
    SUM               [reduce using rule 539 (PascalHostIdentifier)]
    SUM               [reduce using rule 540 (PLIHostIdentifier)]
    COLLATE           reduce using rule 534 (AdaHostIdentifier)
    COLLATE           [reduce using rule 535 (CHostIdentifier)]
    COLLATE           [reduce using rule 536 (CobolHostIdentifier)]
    COLLATE           [reduce using rule 537 (FortranHostIdentifier)]
    COLLATE           [reduce using rule 538 (MUMPSHostIdentifier)]
    COLLATE           [reduce using rule 539 (PascalHostIdentifier)]
    COLLATE           [reduce using rule 540 (PLIHostIdentifier)]
    KEY               reduce using rule 534 (AdaHostIdentifier)
    KEY               [reduce using rule 535 (CHostIdentifier)]
    KEY               [reduce using rule 536 (CobolHostIdentifier)]
    KEY               [reduce using rule 537 (FortranHostIdentifier)]
    KEY               [reduce using rule 538 (MUMPSHostIdentifier)]
    KEY               [reduce using rule 539 (PascalHostIdentifier)]
    KEY               [reduce using rule 540 (PLIHostIdentifier)]
    AVG               reduce using rule 534 (AdaHostIdentifier)
    AVG               [reduce using rule 535 (CHostIdentifier)]
    AVG               [reduce using rule 536 (CobolHostIdentifier)]
    AVG               [reduce using rule 537 (FortranHostIdentifier)]
    AVG               [reduce using rule 538 (MUMPSHostIdentifier)]
    AVG               [reduce using rule 539 (PascalHostIdentifier)]
    AVG               [reduce using rule 540 (PLIHostIdentifier)]
    INITIALLY         reduce using rule 534 (AdaHostIdentifier)
    INITIALLY         [reduce using rule 535 (CHostIdentifier)]
    INITIALLY         [reduce using rule 536 (CobolHostIdentifier)]
    INITIALLY         [reduce using rule 537 (FortranHostIdentifier)]
    INITIALLY         [reduce using rule 538 (MUMPSHostIdentifier)]
    INITIALLY         [reduce using rule 539 (PascalHostIdentifier)]
    INITIALLY         [reduce using rule 540 (PLIHostIdentifier)]
    UPPER             reduce using rule 534 (AdaHostIdentifier)
    UPPER             [reduce using rule 535 (CHostIdentifier)]
    UPPER             [reduce using rule 536 (CobolHostIdentifier)]
    UPPER             [reduce using rule 537 (FortranHostIdentifier)]
    UPPER             [reduce using rule 538 (MUMPSHostIdentifier)]
    UPPER             [reduce using rule 539 (PascalHostIdentifier)]
    UPPER             [reduce using rule 540 (PLIHostIdentifier)]
    DAY               reduce using rule 534 (AdaHostIdentifier)
    DAY               [reduce using rule 535 (CHostIdentifier)]
    DAY               [reduce using rule 536 (CobolHostIdentifier)]
    DAY               [reduce using rule 537 (FortranHostIdentifier)]
    DAY               [reduce using rule 538 (MUMPSHostIdentifier)]
    DAY               [reduce using rule 539 (PascalHostIdentifier)]
    DAY               [reduce using rule 540 (PLIHostIdentifier)]
    EXCEPT            reduce using rule 534 (AdaHostIdentifier)
    EXCEPT            [reduce using rule 535 (CHostIdentifier)]
    EXCEPT            [reduce using rule 536 (CobolHostIdentifier)]
    EXCEPT            [reduce using rule 537 (FortranHostIdentifier)]
    EXCEPT            [reduce using rule 538 (MUMPSHostIdentifier)]
    EXCEPT            [reduce using rule 539 (PascalHostIdentifier)]
    EXCEPT            [reduce using rule 540 (PLIHostIdentifier)]
    EXTRACT           reduce using rule 534 (AdaHostIdentifier)
    EXTRACT           [reduce using rule 535 (CHostIdentifier)]
    EXTRACT           [reduce using rule 536 (CobolHostIdentifier)]
    EXTRACT           [reduce using rule 537 (FortranHostIdentifier)]
    EXTRACT           [reduce using rule 538 (MUMPSHostIdentifier)]
    EXTRACT           [reduce using rule 539 (PascalHostIdentifier)]
    EXTRACT           [reduce using rule 540 (PLIHostIdentifier)]
    CHAR_LENGTH       reduce using rule 534 (AdaHostIdentifier)
    CHAR_LENGTH       [reduce using rule 535 (CHostIdentifier)]
    CHAR_LENGTH       [reduce using rule 536 (CobolHostIdentifier)]
    CHAR_LENGTH       [reduce using rule 537 (FortranHostIdentifier)]
    CHAR_LENGTH       [reduce using rule 538 (MUMPSHostIdentifier)]
    CHAR_LENGTH       [reduce using rule 539 (PascalHostIdentifier)]
    CHAR_LENGTH       [reduce using rule 540 (PLIHostIdentifier)]
    SUBSTRING         reduce using rule 534 (AdaHostIdentifier)
    SUBSTRING         [reduce using rule 535 (CHostIdentifier)]
    SUBSTRING         [reduce using rule 536 (CobolHostIdentifier)]
    SUBSTRING         [reduce using rule 537 (FortranHostIdentifier)]
    SUBSTRING         [reduce using rule 538 (MUMPSHostIdentifier)]
    SUBSTRING         [reduce using rule 539 (PascalHostIdentifier)]
    SUBSTRING         [reduce using rule 540 (PLIHostIdentifier)]
    PARTIAL           reduce using rule 534 (AdaHostIdentifier)
    PARTIAL           [reduce using rule 535 (CHostIdentifier)]
    PARTIAL           [reduce using rule 536 (CobolHostIdentifier)]
    PARTIAL           [reduce using rule 537 (FortranHostIdentifier)]
    PARTIAL           [reduce using rule 538 (MUMPSHostIdentifier)]
    PARTIAL           [reduce using rule 539 (PascalHostIdentifier)]
    PARTIAL           [reduce using rule 540 (PLIHostIdentifier)]
    MAX               reduce using rule 534 (AdaHostIdentifier)
    MAX               [reduce using rule 535 (CHostIdentifier)]
    MAX               [reduce using rule 536 (CobolHostIdentifier)]
    MAX               [reduce using rule 537 (FortranHostIdentifier)]
    MAX               [reduce using rule 538 (MUMPSHostIdentifier)]
    MAX               [reduce using rule 539 (PascalHostIdentifier)]
    MAX               [reduce using rule 540 (PLIHostIdentifier)]
    LOWER             reduce using rule 534 (AdaHostIdentifier)
    LOWER             [reduce using rule 535 (CHostIdentifier)]
    LOWER             [reduce using rule 536 (CobolHostIdentifier)]
    LOWER             [reduce using rule 537 (FortranHostIdentifier)]
    LOWER             [reduce using rule 538 (MUMPSHostIdentifier)]
    LOWER             [reduce using rule 539 (PascalHostIdentifier)]
    LOWER             [reduce using rule 540 (PLIHostIdentifier)]
    USING             reduce using rule 534 (AdaHostIdentifier)
    USING             [reduce using rule 535 (CHostIdentifier)]
    USING             [reduce using rule 536 (CobolHostIdentifier)]
    USING             [reduce using rule 537 (FortranHostIdentifier)]
    USING             [reduce using rule 538 (MUMPSHostIdentifier)]
    USING             [reduce using rule 539 (PascalHostIdentifier)]
    USING             [reduce using rule 540 (PLIHostIdentifier)]
    CASCADE           reduce using rule 534 (AdaHostIdentifier)
    CASCADE           [reduce using rule 535 (CHostIdentifier)]
    CASCADE           [reduce using rule 536 (CobolHostIdentifier)]
    CASCADE           [reduce using rule 537 (FortranHostIdentifier)]
    CASCADE           [reduce using rule 538 (MUMPSHostIdentifier)]
    CASCADE           [reduce using rule 539 (PascalHostIdentifier)]
    CASCADE           [reduce using rule 540 (PLIHostIdentifier)]
    TEMPORARY         reduce using rule 534 (AdaHostIdentifier)
    TEMPORARY         [reduce using rule 535 (CHostIdentifier)]
    TEMPORARY         [reduce using rule 536 (CobolHostIdentifier)]
    TEMPORARY         [reduce using rule 537 (FortranHostIdentifier)]
    TEMPORARY         [reduce using rule 538 (MUMPSHostIdentifier)]
    TEMPORARY         [reduce using rule 539 (PascalHostIdentifier)]
    TEMPORARY         [reduce using rule 540 (PLIHostIdentifier)]
    HOUR              reduce using rule 534 (AdaHostIdentifier)
    HOUR              [reduce using rule 535 (CHostIdentifier)]
    HOUR              [reduce using rule 536 (CobolHostIdentifier)]
    HOUR              [reduce using rule 537 (FortranHostIdentifier)]
    HOUR              [reduce using rule 538 (MUMPSHostIdentifier)]
    HOUR              [reduce using rule 539 (PascalHostIdentifier)]
    HOUR              [reduce using rule 540 (PLIHostIdentifier)]
    INDICATOR         reduce using rule 534 (AdaHostIdentifier)
    INDICATOR         [reduce using rule 535 (CHostIdentifier)]
    INDICATOR         [reduce using rule 536 (CobolHostIdentifier)]
    INDICATOR         [reduce using rule 537 (FortranHostIdentifier)]
    INDICATOR         [reduce using rule 538 (MUMPSHostIdentifier)]
    INDICATOR         [reduce using rule 539 (PascalHostIdentifier)]
    INDICATOR         [reduce using rule 540 (PLIHostIdentifier)]
    YEAR              reduce using rule 534 (AdaHostIdentifier)
    YEAR              [reduce using rule 535 (CHostIdentifier)]
    YEAR              [reduce using rule 536 (CobolHostIdentifier)]
    YEAR              [reduce using rule 537 (FortranHostIdentifier)]
    YEAR              [reduce using rule 538 (MUMPSHostIdentifier)]
    YEAR              [reduce using rule 539 (PascalHostIdentifier)]
    YEAR              [reduce using rule 540 (PLIHostIdentifier)]
    OVERLAPS          reduce using rule 534 (AdaHostIdentifier)
    OVERLAPS          [reduce using rule 535 (CHostIdentifier)]
    OVERLAPS          [reduce using rule 536 (CobolHostIdentifier)]
    OVERLAPS          [reduce using rule 537 (FortranHostIdentifier)]
    OVERLAPS          [reduce using rule 538 (MUMPSHostIdentifier)]
    OVERLAPS          [reduce using rule 539 (PascalHostIdentifier)]
    OVERLAPS          [reduce using rule 540 (PLIHostIdentifier)]
    CHARACTER_LENGTH  reduce using rule 534 (AdaHostIdentifier)
    CHARACTER_LENGTH  [reduce using rule 535 (CHostIdentifier)]
    CHARACTER_LENGTH  [reduce using rule 536 (CobolHostIdentifier)]
    CHARACTER_LENGTH  [reduce using rule 537 (FortranHostIdentifier)]
    CHARACTER_LENGTH  [reduce using rule 538 (MUMPSHostIdentifier)]
    CHARACTER_LENGTH  [reduce using rule 539 (PascalHostIdentifier)]
    CHARACTER_LENGTH  [reduce using rule 540 (PLIHostIdentifier)]
    MATCH             reduce using rule 534 (AdaHostIdentifier)
    MATCH             [reduce using rule 535 (CHostIdentifier)]
    MATCH             [reduce using rule 536 (CobolHostIdentifier)]
    MATCH             [reduce using rule 537 (FortranHostIdentifier)]
    MATCH             [reduce using rule 538 (MUMPSHostIdentifier)]
    MATCH             [reduce using rule 539 (PascalHostIdentifier)]
    MATCH             [reduce using rule 540 (PLIHostIdentifier)]
    CONVERT           reduce using rule 534 (AdaHostIdentifier)
    CONVERT           [reduce using rule 535 (CHostIdentifier)]
    CONVERT           [reduce using rule 536 (CobolHostIdentifier)]
    CONVERT           [reduce using rule 537 (FortranHostIdentifier)]
    CONVERT           [reduce using rule 538 (MUMPSHostIdentifier)]
    CONVERT           [reduce using rule 539 (PascalHostIdentifier)]
    CONVERT           [reduce using rule 540 (PLIHostIdentifier)]
    TRANSLATE         reduce using rule 534 (AdaHostIdentifier)
    TRANSLATE         [reduce using rule 535 (CHostIdentifier)]
    TRANSLATE         [reduce using rule 536 (CobolHostIdentifier)]
    TRANSLATE         [reduce using rule 537 (FortranHostIdentifier)]
    TRANSLATE         [reduce using rule 538 (MUMPSHostIdentifier)]
    TRANSLATE         [reduce using rule 539 (PascalHostIdentifier)]
    TRANSLATE         [reduce using rule 540 (PLIHostIdentifier)]
    PRESERVE          reduce using rule 534 (AdaHostIdentifier)
    PRESERVE          [reduce using rule 535 (CHostIdentifier)]
    PRESERVE          [reduce using rule 536 (CobolHostIdentifier)]
    PRESERVE          [reduce using rule 537 (FortranHostIdentifier)]
    PRESERVE          [reduce using rule 538 (MUMPSHostIdentifier)]
    PRESERVE          [reduce using rule 539 (PascalHostIdentifier)]
    PRESERVE          [reduce using rule 540 (PLIHostIdentifier)]
    POSITION          reduce using rule 534 (AdaHostIdentifier)
    POSITION          [reduce using rule 535 (CHostIdentifier)]
    POSITION          [reduce using rule 536 (CobolHostIdentifier)]
    POSITION          [reduce using rule 537 (FortranHostIdentifier)]
    POSITION          [reduce using rule 538 (MUMPSHostIdentifier)]
    POSITION          [reduce using rule 539 (PascalHostIdentifier)]
    POSITION          [reduce using rule 540 (PLIHostIdentifier)]
    COALESCE          reduce using rule 534 (AdaHostIdentifier)
    COALESCE          [reduce using rule 535 (CHostIdentifier)]
    COALESCE          [reduce using rule 536 (CobolHostIdentifier)]
    COALESCE          [reduce using rule 537 (FortranHostIdentifier)]
    COALESCE          [reduce using rule 538 (MUMPSHostIdentifier)]
    COALESCE          [reduce using rule 539 (PascalHostIdentifier)]
    COALESCE          [reduce using rule 540 (PLIHostIdentifier)]
    TRIM              reduce using rule 534 (AdaHostIdentifier)
    TRIM              [reduce using rule 535 (CHostIdentifier)]
    TRIM              [reduce using rule 536 (CobolHostIdentifier)]
    TRIM              [reduce using rule 537 (FortranHostIdentifier)]
    TRIM              [reduce using rule 538 (MUMPSHostIdentifier)]
    TRIM              [reduce using rule 539 (PascalHostIdentifier)]
    TRIM              [reduce using rule 540 (PLIHostIdentifier)]
    AT                reduce using rule 534 (AdaHostIdentifier)
    AT                [reduce using rule 535 (CHostIdentifier)]
    AT                [reduce using rule 536 (CobolHostIdentifier)]
    AT                [reduce using rule 537 (FortranHostIdentifier)]
    AT                [reduce using rule 538 (MUMPSHostIdentifier)]
    AT                [reduce using rule 539 (PascalHostIdentifier)]
    AT                [reduce using rule 540 (PLIHostIdentifier)]
    NUMBER            reduce using rule 534 (AdaHostIdentifier)
    NUMBER            [reduce using rule 535 (CHostIdentifier)]
    NUMBER            [reduce using rule 536 (CobolHostIdentifier)]
    NUMBER            [reduce using rule 537 (FortranHostIdentifier)]
    NUMBER            [reduce using rule 538 (MUMPSHostIdentifier)]
    NUMBER            [reduce using rule 539 (PascalHostIdentifier)]
    NUMBER            [reduce using rule 540 (PLIHostIdentifier)]
    ID                reduce using rule 534 (AdaHostIdentifier)
    ID                [reduce using rule 535 (CHostIdentifier)]
    ID                [reduce using rule 536 (CobolHostIdentifier)]
    ID                [reduce using rule 537 (FortranHostIdentifier)]
    ID                [reduce using rule 538 (MUMPSHostIdentifier)]
    ID                [reduce using rule 539 (PascalHostIdentifier)]
    ID                [reduce using rule 540 (PLIHostIdentifier)]
    ','               reduce using rule 534 (AdaHostIdentifier)
    ','               [reduce using rule 535 (CHostIdentifier)]
    ','               [reduce using rule 536 (CobolHostIdentifier)]
    ','               [reduce using rule 537 (FortranHostIdentifier)]
    ','               [reduce using rule 538 (MUMPSHostIdentifier)]
    ','               [reduce using rule 539 (PascalHostIdentifier)]
    ','               [reduce using rule 540 (PLIHostIdentifier)]
    ')'               reduce using rule 534 (AdaHostIdentifier)
    ')'               [reduce using rule 535 (CHostIdentifier)]
    ')'               [reduce using rule 536 (CobolHostIdentifier)]
    ')'               [reduce using rule 537 (FortranHostIdentifier)]
    ')'               [reduce using rule 538 (MUMPSHostIdentifier)]
    ')'               [reduce using rule 539 (PascalHostIdentifier)]
    ')'               [reduce using rule 540 (PLIHostIdentifier)]
    $default          reduce using rule 534 (AdaHostIdentifier)


state 904

  516 parameterName: colon identifier .

    $default  reduce using rule 516 (parameterName)


state 905

  526 embeddedVariableName: colon hostIdentifier .

    $default  reduce using rule 526 (embeddedVariableName)


state 906

  527 hostIdentifier: AdaHostIdentifier .

    $default  reduce using rule 527 (hostIdentifier)


state 907

  528 hostIdentifier: CHostIdentifier .

    $default  reduce using rule 528 (hostIdentifier)


state 908

  529 hostIdentifier: CobolHostIdentifier .

    $default  reduce using rule 529 (hostIdentifier)


state 909

  530 hostIdentifier: FortranHostIdentifier .

    $default  reduce using rule 530 (hostIdentifier)


state 910

  531 hostIdentifier: MUMPSHostIdentifier .

    $default  reduce using rule 531 (hostIdentifier)


state 911

  532 hostIdentifier: PascalHostIdentifier .

    $default  reduce using rule 532 (hostIdentifier)


state 912

  533 hostIdentifier: PLIHostIdentifier .

    $default  reduce using rule 533 (hostIdentifier)


state 913

  543 indicatorVariable1: INDICATOR .

    $default  reduce using rule 543 (indicatorVariable1)


state 914

  523 variableSpecification: embeddedVariableName variableSpecification1 .

    $default  reduce using rule 523 (variableSpecification)


state 915

  525 variableSpecification1: indicatorVariable .

    $default  reduce using rule 525 (variableSpecification1)


state 916

  517 colon: . UNKNOWN_LEX
  526 embeddedVariableName: . colon hostIdentifier
  541 indicatorVariable: indicatorVariable1 . embeddedVariableName

    UNKNOWN_LEX  shift, and go to state 1042

    colon                 go to state 1045
    embeddedVariableName  go to state 1046


state 917

  544 columnReference: columnReference1 columnName .

    $default  reduce using rule 544 (columnReference)


state 918

  546 columnReference1: qualifier period .

    $default  reduce using rule 546 (columnReference1)


state 919

  553 generalSetFunction: setFunctionType leftParen . generalSetFunction1 valueExpression rightParen
  554 generalSetFunction1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  555                    | . setQuantifier
  561 setQuantifier: . DISTINCT
  562              | . ALL

    DISTINCT  shift, and go to state 994
    ALL       shift, and go to state 995

    $default  reduce using rule 554 (generalSetFunction1)

    generalSetFunction1  go to state 1047
    setQuantifier        go to state 1048


state 920

  714 concatenationOperator: UNKNOWN_LEX .

    $default  reduce using rule 714 (concatenationOperator)


state 921

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  713 concatenation: characterValueExpression concatenationOperator . characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

    CASE              shift, and go to state 665
    CAST              shift, and go to state 666
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 882
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 670
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 671
    SESSION_USER      shift, and go to state 672
    DATE              shift, and go to state 495
    NULLIF            shift, and go to state 673
    SUM               shift, and go to state 674
    KEY               shift, and go to state 42
    AVG               shift, and go to state 675
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 676
    TIMESTAMP         shift, and go to state 497
    MODULE            shift, and go to state 213
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 498
    SYSTEM_USER       shift, and go to state 677
    SUBSTRING         shift, and go to state 678
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 679
    MAX               shift, and go to state 680
    LOWER             shift, and go to state 681
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 682
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 683
    CURRENT_USER      shift, and go to state 684
    TRANSLATE         shift, and go to state 685
    INTERVAL          shift, and go to state 504
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 687
    TRIM              shift, and go to state 688
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 294

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 889
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    valueExpressionPrimary          go to state 978
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterFactor                 go to state 1049
    characterPrimary                go to state 736
    stringValueFunction             go to state 980
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745


state 922

  717 characterFactor1: collateClause .

    $default  reduce using rule 717 (characterFactor1)


state 923

  715 characterFactor: characterPrimary characterFactor1 .

    $default  reduce using rule 715 (characterFactor)


state 924

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  757 bitConcatenation: bitValueExpression concatenationOperator . bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction

    CASE              shift, and go to state 665
    CAST              shift, and go to state 666
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 882
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 670
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 671
    SESSION_USER      shift, and go to state 672
    DATE              shift, and go to state 495
    NULLIF            shift, and go to state 673
    SUM               shift, and go to state 674
    KEY               shift, and go to state 42
    AVG               shift, and go to state 675
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 676
    TIMESTAMP         shift, and go to state 497
    MODULE            shift, and go to state 213
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 498
    SYSTEM_USER       shift, and go to state 677
    SUBSTRING         shift, and go to state 678
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 679
    MAX               shift, and go to state 680
    LOWER             shift, and go to state 681
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 682
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 683
    CURRENT_USER      shift, and go to state 684
    TRANSLATE         shift, and go to state 685
    INTERVAL          shift, and go to state 504
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 687
    TRIM              shift, and go to state 688
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 294

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 889
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    valueExpressionPrimary          go to state 1050
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    stringValueFunction             go to state 1051
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitFactor                       go to state 1052
    bitPrimary                      go to state 749


state 925

  374 sign: . UNKNOWN_LEX
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  772 datetimeValueExpression: datetimeValueExpression plusSign . intervalTerm
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm

    UNKNOWN_LEX  shift, and go to state 591

    CASE              reduce using rule 490 (factor1)
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              reduce using rule 490 (factor1)
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              reduce using rule 490 (factor1)
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               reduce using rule 490 (factor1)
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            reduce using rule 490 (factor1)
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               reduce using rule 490 (factor1)
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      reduce using rule 490 (factor1)
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          reduce using rule 490 (factor1)
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        reduce using rule 490 (factor1)
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              reduce using rule 490 (factor1)
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             reduce using rule 490 (factor1)
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      reduce using rule 490 (factor1)
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              reduce using rule 490 (factor1)
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            reduce using rule 490 (factor1)
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               reduce using rule 490 (factor1)
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               reduce using rule 490 (factor1)
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               reduce using rule 490 (factor1)
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         reduce using rule 490 (factor1)
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             reduce using rule 490 (factor1)
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         reduce using rule 490 (factor1)
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            reduce using rule 490 (factor1)
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           reduce using rule 490 (factor1)
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       reduce using rule 490 (factor1)
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              reduce using rule 490 (factor1)
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       reduce using rule 490 (factor1)
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         reduce using rule 490 (factor1)
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           reduce using rule 490 (factor1)
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              reduce using rule 490 (factor1)
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               reduce using rule 490 (factor1)
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             reduce using rule 490 (factor1)
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           reduce using rule 490 (factor1)
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         reduce using rule 490 (factor1)
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             reduce using rule 490 (factor1)
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  reduce using rule 490 (factor1)
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           reduce using rule 490 (factor1)
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      reduce using rule 490 (factor1)
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         reduce using rule 490 (factor1)
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          reduce using rule 490 (factor1)
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          reduce using rule 490 (factor1)
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          reduce using rule 490 (factor1)
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          reduce using rule 490 (factor1)
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              reduce using rule 490 (factor1)
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            reduce using rule 490 (factor1)
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                reduce using rule 490 (factor1)
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               reduce using rule 490 (factor1)
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    sign             go to state 692
    term             go to state 1053
    factor           go to state 705
    factor1          go to state 706
    intervalTerm     go to state 1054
    intervalFactor   go to state 756
    intervalFactor1  go to state 757
    intervalTerm2    go to state 758


state 926

  374 sign: . UNKNOWN_LEX
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  773 datetimeValueExpression: datetimeValueExpression minusSign . intervalTerm
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm

    UNKNOWN_LEX  shift, and go to state 591

    CASE              reduce using rule 490 (factor1)
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              reduce using rule 490 (factor1)
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              reduce using rule 490 (factor1)
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               reduce using rule 490 (factor1)
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            reduce using rule 490 (factor1)
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               reduce using rule 490 (factor1)
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      reduce using rule 490 (factor1)
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          reduce using rule 490 (factor1)
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        reduce using rule 490 (factor1)
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              reduce using rule 490 (factor1)
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             reduce using rule 490 (factor1)
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      reduce using rule 490 (factor1)
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              reduce using rule 490 (factor1)
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            reduce using rule 490 (factor1)
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               reduce using rule 490 (factor1)
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               reduce using rule 490 (factor1)
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               reduce using rule 490 (factor1)
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         reduce using rule 490 (factor1)
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             reduce using rule 490 (factor1)
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         reduce using rule 490 (factor1)
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            reduce using rule 490 (factor1)
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           reduce using rule 490 (factor1)
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       reduce using rule 490 (factor1)
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              reduce using rule 490 (factor1)
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       reduce using rule 490 (factor1)
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         reduce using rule 490 (factor1)
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           reduce using rule 490 (factor1)
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              reduce using rule 490 (factor1)
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               reduce using rule 490 (factor1)
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             reduce using rule 490 (factor1)
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           reduce using rule 490 (factor1)
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         reduce using rule 490 (factor1)
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             reduce using rule 490 (factor1)
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  reduce using rule 490 (factor1)
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           reduce using rule 490 (factor1)
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      reduce using rule 490 (factor1)
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         reduce using rule 490 (factor1)
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          reduce using rule 490 (factor1)
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          reduce using rule 490 (factor1)
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          reduce using rule 490 (factor1)
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          reduce using rule 490 (factor1)
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              reduce using rule 490 (factor1)
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            reduce using rule 490 (factor1)
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                reduce using rule 490 (factor1)
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               reduce using rule 490 (factor1)
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    sign             go to state 692
    term             go to state 1053
    factor           go to state 705
    factor1          go to state 706
    intervalTerm     go to state 1055
    intervalFactor   go to state 756
    intervalFactor1  go to state 757
    intervalTerm2    go to state 758


state 927

  780 timeZone: AT . timeZoneSpecifier
  781 timeZoneSpecifier: . LOCAL
  782                  | . TIME ZONE intervalValueExpression

    LOCAL  shift, and go to state 1056
    TIME   shift, and go to state 1057

    timeZoneSpecifier  go to state 1058


state 928

  775 datetimeFactor: datetimePrimary datetimeFactor1 .

    $default  reduce using rule 775 (datetimeFactor)


state 929

  777 datetimeFactor1: timeZone .

    $default  reduce using rule 777 (datetimeFactor1)


state 930

  800 plusSign: UNKNOWN_LEX .

    $default  reduce using rule 800 (plusSign)


state 931

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  771 datetimeValueExpression: intervalValueExpression plusSign . datetimeTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 882
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 45
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 48
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 51
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 55
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 56
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 60
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 889
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpressionPrimary          go to state 1059
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    datetimeTerm                    go to state 1060
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753


state 932

  336 intervalQualifier: . startField TO endField
  337                  | . singleDatetimeField
  338 startField: . nonsecondDatetimeField startField1
  341 nonsecondDatetimeField: . YEAR
  342                       | . MONTH
  343                       | . DAY
  344                       | . HOUR
  345                       | . MINUTE
  352 singleDatetimeField: . nonsecondDatetimeField singleDatetimeField1
  353                    | . SECOND singleDatetimeField3
  794 intervalPrimary: valueExpressionPrimary . intervalPrimary1
  795 intervalPrimary1: .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  796                 | . intervalQualifier

    SECOND  shift, and go to state 478
    MINUTE  shift, and go to state 479
    MONTH   shift, and go to state 480
    DAY     shift, and go to state 481
    HOUR    shift, and go to state 482
    YEAR    shift, and go to state 483

    $default  reduce using rule 795 (intervalPrimary1)

    intervalQualifier       go to state 1061
    startField              go to state 485
    nonsecondDatetimeField  go to state 486
    singleDatetimeField     go to state 487
    intervalPrimary1        go to state 1062


state 933

  791 intervalFactor: intervalFactor1 intervalPrimary .

    $default  reduce using rule 791 (intervalFactor)


state 934

  374 sign: . UNKNOWN_LEX
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  788 intervalTerm: intervalTerm2 asterisk . factor

    UNKNOWN_LEX  shift, and go to state 591

    UNKNOWN_LEX  [reduce using rule 490 (factor1)]
    $default     reduce using rule 490 (factor1)

    sign     go to state 1031
    factor   go to state 1063
    factor1  go to state 706


state 935

  374 sign: . UNKNOWN_LEX
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  789 intervalTerm: intervalTerm2 solidus . factor

    UNKNOWN_LEX  shift, and go to state 591

    UNKNOWN_LEX  [reduce using rule 490 (factor1)]
    $default     reduce using rule 490 (factor1)

    sign     go to state 1031
    factor   go to state 1064
    factor1  go to state 706


state 936

  374 sign: . UNKNOWN_LEX
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  784 intervalValueExpression: intervalValueExpression1 plusSign . intervalTerm1
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  801 intervalTerm1: . intervalTerm

    UNKNOWN_LEX  shift, and go to state 591

    CASE              reduce using rule 490 (factor1)
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              reduce using rule 490 (factor1)
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              reduce using rule 490 (factor1)
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               reduce using rule 490 (factor1)
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            reduce using rule 490 (factor1)
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               reduce using rule 490 (factor1)
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      reduce using rule 490 (factor1)
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          reduce using rule 490 (factor1)
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        reduce using rule 490 (factor1)
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              reduce using rule 490 (factor1)
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             reduce using rule 490 (factor1)
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      reduce using rule 490 (factor1)
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              reduce using rule 490 (factor1)
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            reduce using rule 490 (factor1)
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               reduce using rule 490 (factor1)
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               reduce using rule 490 (factor1)
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               reduce using rule 490 (factor1)
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         reduce using rule 490 (factor1)
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             reduce using rule 490 (factor1)
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         reduce using rule 490 (factor1)
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            reduce using rule 490 (factor1)
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           reduce using rule 490 (factor1)
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       reduce using rule 490 (factor1)
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              reduce using rule 490 (factor1)
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       reduce using rule 490 (factor1)
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         reduce using rule 490 (factor1)
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           reduce using rule 490 (factor1)
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              reduce using rule 490 (factor1)
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               reduce using rule 490 (factor1)
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             reduce using rule 490 (factor1)
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           reduce using rule 490 (factor1)
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         reduce using rule 490 (factor1)
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             reduce using rule 490 (factor1)
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  reduce using rule 490 (factor1)
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           reduce using rule 490 (factor1)
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      reduce using rule 490 (factor1)
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         reduce using rule 490 (factor1)
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          reduce using rule 490 (factor1)
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          reduce using rule 490 (factor1)
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          reduce using rule 490 (factor1)
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          reduce using rule 490 (factor1)
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              reduce using rule 490 (factor1)
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            reduce using rule 490 (factor1)
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                reduce using rule 490 (factor1)
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               reduce using rule 490 (factor1)
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    sign             go to state 692
    term             go to state 1053
    factor           go to state 705
    factor1          go to state 706
    intervalTerm     go to state 1065
    intervalFactor   go to state 756
    intervalFactor1  go to state 757
    intervalTerm2    go to state 758
    intervalTerm1    go to state 1066


state 937

  374 sign: . UNKNOWN_LEX
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  785 intervalValueExpression: intervalValueExpression1 minusSign . intervalTerm1
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  801 intervalTerm1: . intervalTerm

    UNKNOWN_LEX  shift, and go to state 591

    CASE              reduce using rule 490 (factor1)
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              reduce using rule 490 (factor1)
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              reduce using rule 490 (factor1)
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               reduce using rule 490 (factor1)
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            reduce using rule 490 (factor1)
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               reduce using rule 490 (factor1)
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      reduce using rule 490 (factor1)
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          reduce using rule 490 (factor1)
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        reduce using rule 490 (factor1)
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              reduce using rule 490 (factor1)
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             reduce using rule 490 (factor1)
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      reduce using rule 490 (factor1)
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              reduce using rule 490 (factor1)
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            reduce using rule 490 (factor1)
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               reduce using rule 490 (factor1)
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               reduce using rule 490 (factor1)
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               reduce using rule 490 (factor1)
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         reduce using rule 490 (factor1)
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             reduce using rule 490 (factor1)
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         reduce using rule 490 (factor1)
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            reduce using rule 490 (factor1)
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           reduce using rule 490 (factor1)
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       reduce using rule 490 (factor1)
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              reduce using rule 490 (factor1)
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       reduce using rule 490 (factor1)
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         reduce using rule 490 (factor1)
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           reduce using rule 490 (factor1)
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              reduce using rule 490 (factor1)
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               reduce using rule 490 (factor1)
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             reduce using rule 490 (factor1)
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           reduce using rule 490 (factor1)
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         reduce using rule 490 (factor1)
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             reduce using rule 490 (factor1)
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  reduce using rule 490 (factor1)
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           reduce using rule 490 (factor1)
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      reduce using rule 490 (factor1)
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         reduce using rule 490 (factor1)
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          reduce using rule 490 (factor1)
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          reduce using rule 490 (factor1)
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          reduce using rule 490 (factor1)
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          reduce using rule 490 (factor1)
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              reduce using rule 490 (factor1)
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            reduce using rule 490 (factor1)
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                reduce using rule 490 (factor1)
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               reduce using rule 490 (factor1)
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    sign             go to state 692
    term             go to state 1053
    factor           go to state 705
    factor1          go to state 706
    intervalTerm     go to state 1065
    intervalFactor   go to state 756
    intervalFactor1  go to state 757
    intervalTerm2    go to state 758
    intervalTerm1    go to state 1067


state 938

  843 likePredicate1: NOT .

    $default  reduce using rule 843 (likePredicate1)


state 939

  841 likePredicate: matchValue likePredicate1 . LIKE pattern likePredicate2

    LIKE  shift, and go to state 1068


state 940

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  473 rowValueConstructor: . rowValueConstructorElement
  474                    | . leftParen rowValueConstructorList rightParen
  475                    | . rowSubquery
  476 rowValueConstructorElement: . valueExpression
  477                           | . nullSpecification
  478                           | . defaultSpecification
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression
  812 nullSpecification: . NULL
  813 defaultSpecification: . DEFAULT
  817 rowSubquery: . subquery
  865 overlapsPredicate: rowValueConstructor1 OVERLAPS . rowValueConstructor2
  867 rowValueConstructor2: . rowValueConstructor

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    NULL               shift, and go to state 667
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    DEFAULT            shift, and go to state 686
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 991
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    rowValueConstructor             go to state 1069
    rowValueConstructorElement      go to state 701
    valueExpression                 go to state 702
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 726
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760
    nullSpecification               go to state 761
    defaultSpecification            go to state 762
    rowSubquery                     go to state 763
    rowValueConstructor2            go to state 1070


state 941

  422 referencesSpecification: . REFERENCES referencedTableAndColumns referencesSpecification1 referencesSpecification2
  893 referentialConstraintDefinition: FOREIGN KEY leftParen referencingColumns rightParen . referencesSpecification

    REFERENCES  shift, and go to state 656

    referencesSpecification  go to state 1071


state 942

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  224 identifier: . id
  241 columnName: . identifier
  433 columnNameList1: columnNameList1 comma . columnName

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id          go to state 297
    identifier  go to state 354
    columnName  go to state 1072


state 943

  282 nationalCharacterStringType4: leftParen length rightParen .

    $default  reduce using rule 282 (nationalCharacterStringType4)


state 944

  284 nationalCharacterStringType5: leftParen length rightParen .

    $default  reduce using rule 284 (nationalCharacterStringType5)


state 945

  266 unsignedInteger: . NUMBER
  351 intervalFractionalSecondsPrecision: . unsignedInteger
  359 singleDatetimeField2: comma leftParen . intervalFractionalSecondsPrecision

    NUMBER  shift, and go to state 541

    unsignedInteger                     go to state 947
    intervalFractionalSecondsPrecision  go to state 1073


state 946

  357 singleDatetimeField3: leftParen intervalLeadingFieldPrecision singleDatetimeField2 rightParen .

    $default  reduce using rule 357 (singleDatetimeField3)


state 947

  351 intervalFractionalSecondsPrecision: unsignedInteger .

    $default  reduce using rule 351 (intervalFractionalSecondsPrecision)


state 948

  267 rightParen: . ')'
  350 endField1: leftParen intervalFractionalSecondsPrecision . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1074


state 949

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  224 identifier: . id
  241 columnName: . identifier
  429 referencedTableAndColumns1: leftParen . referenceColumnList rightParen
  430 referenceColumnList: . columnNameList
  431 columnNameList: . columnName columnNameList1

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id                   go to state 297
    identifier           go to state 354
    columnName           go to state 608
    referenceColumnList  go to state 1075
    columnNameList       go to state 775


state 950

  427 referencedTableAndColumns: tableName referencedTableAndColumns1 .

    $default  reduce using rule 427 (referencedTableAndColumns)


state 951

  424 referencesSpecification1: MATCH . matchType
  434 matchType: . FULL
  435          | . PARTIAL

    FULL     shift, and go to state 1076
    PARTIAL  shift, and go to state 1077

    matchType  go to state 1078


state 952

  422 referencesSpecification: REFERENCES referencedTableAndColumns referencesSpecification1 . referencesSpecification2
  425 referencesSpecification2: .  [NOT, DEFERRABLE, UNIQUE, COLLATE, INITIALLY, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  426                         | . referentialTriggeredAction
  436 referentialTriggeredAction: . updateRule referentialTriggeredAction1
  437                           | . deleteRule referentialTriggeredAction2
  442 updateRule: . ON UPDATE referentialAction
  447 deleteRule: . ON DELETE referentialAction

    ON  shift, and go to state 1079

    $default  reduce using rule 425 (referencesSpecification2)

    referencesSpecification2    go to state 1080
    referentialTriggeredAction  go to state 1081
    updateRule                  go to state 1082
    deleteRule                  go to state 1083


state 953

  872 constraintAttributes: constraintAttributes3 DEFERRABLE . constraintAttributes4
  879 constraintAttributes4: .  [NOT, UNIQUE, COLLATE, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  880                      | . constraintCheckTime
  881 constraintCheckTime: . INITIALLY DEFERRED
  882                    | . INITIALLY IMMEDIATE

    INITIALLY  shift, and go to state 529

    $default  reduce using rule 879 (constraintAttributes4)

    constraintAttributes4  go to state 1084
    constraintCheckTime    go to state 1085


state 954

  876 constraintAttributes1: NOT .

    $default  reduce using rule 876 (constraintAttributes1)


state 955

  871 constraintAttributes: constraintCheckTime constraintAttributes2 .

    $default  reduce using rule 871 (constraintAttributes)


state 956

  874 constraintAttributes2: constraintAttributes1 . DEFERRABLE

    DEFERRABLE  shift, and go to state 1086


state 957

  614 tableReference: tableName . tableReference1
  617 tableReference1: .  [HAVING, WHERE, GROUP, RIGHT, INNER, UNION, JOIN, LEFT, FULL, ON, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']
  618                | . correlationSpecification
  619 correlationSpecification: . correlationSpecification1 correlationName correlationSpecification2
  620 correlationSpecification1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  621                          | . AS

    AS  shift, and go to state 999

    HAVING     reduce using rule 617 (tableReference1)
    WHERE      reduce using rule 617 (tableReference1)
    GROUP      reduce using rule 617 (tableReference1)
    RIGHT      reduce using rule 617 (tableReference1)
    INNER      reduce using rule 617 (tableReference1)
    UNION      reduce using rule 617 (tableReference1)
    JOIN       reduce using rule 617 (tableReference1)
    LEFT       reduce using rule 617 (tableReference1)
    FULL       reduce using rule 617 (tableReference1)
    ON         reduce using rule 617 (tableReference1)
    CROSS      reduce using rule 617 (tableReference1)
    INTERSECT  reduce using rule 617 (tableReference1)
    NATURAL    reduce using rule 617 (tableReference1)
    EXCEPT     reduce using rule 617 (tableReference1)
    USING      reduce using rule 617 (tableReference1)
    ','        reduce using rule 617 (tableReference1)
    ')'        reduce using rule 617 (tableReference1)
    $default   reduce using rule 620 (correlationSpecification1)

    tableReference1            go to state 1000
    correlationSpecification   go to state 1001
    correlationSpecification1  go to state 1002


state 958

  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  564 subquery: . leftParen queryExpression rightParen
  564         | leftParen . queryExpression rightParen
  565 queryExpression: . nonjoinQueryExpression
  566                | . joinedTable
  567 nonjoinQueryExpression: . nonjoinQueryTerm
  568                       | . queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  569                       | . queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  578 nonjoinQueryTerm: . nonjoinQueryPrimary
  579                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  584 nonjoinQueryPrimary: . simpleTable
  585                    | . leftParen nonjoinQueryExpression rightParen
  585                    | leftParen . nonjoinQueryExpression rightParen
  586 simpleTable: . querySpecification
  587            | . tableValueConstructor
  588            | . explicitTable
  589 querySpecification: . SELECT querySpecification1 selectList tableExpression
  614 tableReference: . tableName tableReference1
  615               | . derivedTable correlationSpecification
  616               | . joinedTable
  625 derivedTable: . tableSubquery
  626 tableSubquery: . subquery
  627 joinedTable: . crossJoin
  628            | . qualifiedJoin
  629            | . leftParen joinedTable rightParen
  629            | leftParen . joinedTable rightParen
  630 crossJoin: . tableReference CROSS JOIN tableReference
  631 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  662 tableValueConstructor: . VALUES tableValueConstructorList
  666 explicitTable: . TABLE tableName
  667 queryTerm: . nonjoinQueryTerm
  668          | . joinedTable

    VALUES       shift, and go to state 836
    SELECT       shift, and go to state 837
    TABLE        shift, and go to state 838
    UNKNOWN_LEX  shift, and go to state 212
    MODULE       shift, and go to state 213
    '('          shift, and go to state 294

    $default  reduce using rule 219 (qualifiedName1)

    tableName                go to state 957
    qualifiedName            go to state 215
    qualifiedName1           go to state 216
    schemaName               go to state 217
    qualifiedLocalTableName  go to state 218
    leftParen                go to state 958
    subquery                 go to state 815
    queryExpression          go to state 845
    nonjoinQueryExpression   go to state 1003
    nonjoinQueryTerm         go to state 847
    nonjoinQueryPrimary      go to state 848
    simpleTable              go to state 849
    querySpecification       go to state 850
    tableReference           go to state 851
    derivedTable             go to state 852
    tableSubquery            go to state 853
    joinedTable              go to state 1004
    crossJoin                go to state 855
    qualifiedJoin            go to state 856
    tableValueConstructor    go to state 857
    explicitTable            go to state 858
    queryTerm                go to state 859


state 959

  450 searchCondition: searchCondition . OR booleanTerm
  700 searchedWhenClause: WHEN searchCondition . THEN result

    OR    shift, and go to state 661
    THEN  shift, and go to state 1087


state 960

  267 rightParen: . ')'
  499 valueExpressionPrimary: leftParen valueExpression . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1007


state 961

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  689 simpleWhenClause: WHEN . whenOperand THEN result
  690 whenOperand: . valueExpression
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 818
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 1088
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    whenOperand                     go to state 1089
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760


state 962

  683 simpleCase: CASE caseOperand simpleCase1 . simpleCase2 END
  685 simpleCase1: simpleCase1 . simpleWhenClause
  686 simpleCase2: .  [END]
  687            | . elseClause
  689 simpleWhenClause: . WHEN whenOperand THEN result
  694 elseClause: . ELSE result

    WHEN  shift, and go to state 961
    ELSE  shift, and go to state 964

    $default  reduce using rule 686 (simpleCase2)

    simpleCase2       go to state 1090
    simpleWhenClause  go to state 1091
    elseClause        go to state 1092


state 963

  684 simpleCase1: simpleWhenClause .

    $default  reduce using rule 684 (simpleCase1)


state 964

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  691 result: . resultExpression
  692       | . NULL
  693 resultExpression: . valueExpression
  694 elseClause: ELSE . result
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    NULL               shift, and go to state 1093
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 818
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 1094
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    result                          go to state 1095
    resultExpression                go to state 1096
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760


state 965

  699 searchedCase2: elseClause .

    $default  reduce using rule 699 (searchedCase2)


state 966

  695 searchedCase: CASE searchedCase1 searchedCase2 . END

    END  shift, and go to state 1097


state 967

  697 searchedCase1: searchedCase1 searchedWhenClause .

    $default  reduce using rule 697 (searchedCase1)


state 968

  703 castOperand: NULL .

    $default  reduce using rule 703 (castOperand)


state 969

  702 castOperand: valueExpression .

    $default  reduce using rule 702 (castOperand)


state 970

  701 castSpecification: CAST leftParen castOperand . AS castTarget rightParen

    AS  shift, and go to state 1098


state 971

  849 nullPredicate: IS nullPredicate1 NULL .

    $default  reduce using rule 849 (nullPredicate)


state 972

  552 asterisk: UNKNOWN_LEX .

    $default  reduce using rule 552 (asterisk)


state 973

  267 rightParen: . ')'
  550 setFunctionSpecification: COUNT leftParen asterisk . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1099


state 974

  314 comma: . ','
  677 caseAbbreviation: NULLIF leftParen valueExpression . comma valueExpression rightParen

    ','  shift, and go to state 447

    comma  go to state 1100


state 975

  718 characterPrimary: valueExpressionPrimary .  [FROM, UNKNOWN_LEX, COLLATE, ')']
  759 bitPrimary: valueExpressionPrimary .  [FROM, UNKNOWN_LEX, ')']

    FROM         reduce using rule 718 (characterPrimary)
    FROM         [reduce using rule 759 (bitPrimary)]
    UNKNOWN_LEX  reduce using rule 718 (characterPrimary)
    UNKNOWN_LEX  [reduce using rule 759 (bitPrimary)]
    ')'          reduce using rule 718 (characterPrimary)
    ')'          [reduce using rule 759 (bitPrimary)]
    $default     reduce using rule 718 (characterPrimary)


state 976

  713 concatenation: characterValueExpression . concatenationOperator characterFactor
  714 concatenationOperator: . UNKNOWN_LEX
  727 characterSubstringFunction: SUBSTRING leftParen characterValueExpression . FROM startPosition characterSubstringFunction1 rightParen

    FROM         shift, and go to state 1101
    UNKNOWN_LEX  shift, and go to state 920

    concatenationOperator  go to state 921


state 977

  714 concatenationOperator: . UNKNOWN_LEX
  752 bitSubstringFunction: SUBSTRING leftParen bitValueExpression . FROM startPosition bitSubstringFunction1 rightParen
  757 bitConcatenation: bitValueExpression . concatenationOperator bitFactor

    FROM         shift, and go to state 1102
    UNKNOWN_LEX  shift, and go to state 920

    concatenationOperator  go to state 924


state 978

  718 characterPrimary: valueExpressionPrimary .

    $default  reduce using rule 718 (characterPrimary)


state 979

  267 rightParen: . ')'
  713 concatenation: characterValueExpression . concatenationOperator characterFactor
  714 concatenationOperator: . UNKNOWN_LEX
  733 fold: LOWER leftParen characterValueExpression . rightParen

    UNKNOWN_LEX  shift, and go to state 920
    ')'          shift, and go to state 448

    rightParen             go to state 1103
    concatenationOperator  go to state 921


state 980

  719 characterPrimary: stringValueFunction .

    $default  reduce using rule 719 (characterPrimary)


state 981

  713 concatenation: characterValueExpression . concatenationOperator characterFactor
  714 concatenationOperator: . UNKNOWN_LEX
  734 formofuseConversion: CONVERT leftParen characterValueExpression . USING formofuseConversionName rightParen

    UNKNOWN_LEX  shift, and go to state 920
    USING        shift, and go to state 1104

    concatenationOperator  go to state 921


state 982

  713 concatenation: characterValueExpression . concatenationOperator characterFactor
  714 concatenationOperator: . UNKNOWN_LEX
  736 characterTranslation: TRANSLATE leftParen characterValueExpression . USING translationName rightParen

    UNKNOWN_LEX  shift, and go to state 920
    USING        shift, and go to state 1105

    concatenationOperator  go to state 921


state 983

  314 comma: . ','
  678 caseAbbreviation: COALESCE leftParen valueExpression . caseAbbreviation1 rightParen
  679 caseAbbreviation1: . comma valueExpression
  680                  | . caseAbbreviation1 comma valueExpression

    ','  shift, and go to state 447

    comma              go to state 1106
    caseAbbreviation1  go to state 1107


state 984

  748 trimSpecification: BOTH .

    $default  reduce using rule 748 (trimSpecification)


state 985

  746 trimSpecification: LEADING .

    $default  reduce using rule 746 (trimSpecification)


state 986

  747 trimSpecification: TRAILING .

    $default  reduce using rule 747 (trimSpecification)


state 987

  267 rightParen: . ')'
  738 trimFunction: TRIM leftParen trimOperands . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1108


state 988

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  739 trimOperands: trimOperands3 . trimSource
  750 trimSource: . characterValueExpression
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

    CASE              shift, and go to state 665
    CAST              shift, and go to state 666
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 882
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 670
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 671
    SESSION_USER      shift, and go to state 672
    DATE              shift, and go to state 495
    NULLIF            shift, and go to state 673
    SUM               shift, and go to state 674
    KEY               shift, and go to state 42
    AVG               shift, and go to state 675
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 676
    TIMESTAMP         shift, and go to state 497
    MODULE            shift, and go to state 213
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 498
    SYSTEM_USER       shift, and go to state 677
    SUBSTRING         shift, and go to state 678
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 679
    MAX               shift, and go to state 680
    LOWER             shift, and go to state 681
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 682
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 683
    CURRENT_USER      shift, and go to state 684
    TRANSLATE         shift, and go to state 685
    INTERVAL          shift, and go to state 504
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 687
    TRIM              shift, and go to state 688
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 294

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 889
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    valueExpressionPrimary          go to state 978
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 1109
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 980
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    trimSource                      go to state 1110
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745


state 989

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  741 trimOperands3: trimOperands1 . trimOperands2 FROM
  744 trimOperands2: .  [FROM]
  745              | . trimCharacter
  749 trimCharacter: . characterValueExpression
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

    CASE              shift, and go to state 665
    CAST              shift, and go to state 666
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 882
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 670
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 671
    SESSION_USER      shift, and go to state 672
    DATE              shift, and go to state 495
    NULLIF            shift, and go to state 673
    SUM               shift, and go to state 674
    KEY               shift, and go to state 42
    AVG               shift, and go to state 675
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 676
    TIMESTAMP         shift, and go to state 497
    MODULE            shift, and go to state 213
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 498
    SYSTEM_USER       shift, and go to state 677
    SUBSTRING         shift, and go to state 678
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 679
    MAX               shift, and go to state 680
    LOWER             shift, and go to state 681
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 682
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 683
    CURRENT_USER      shift, and go to state 684
    TRANSLATE         shift, and go to state 685
    INTERVAL          shift, and go to state 504
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 687
    TRIM              shift, and go to state 688
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 294

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]
    $default          reduce using rule 744 (trimOperands2)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 889
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    valueExpressionPrimary          go to state 978
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 1111
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 980
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    trimOperands2                   go to state 1112
    trimCharacter                   go to state 1113
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745


state 990

  743 trimOperands1: trimSpecification .

    $default  reduce using rule 743 (trimOperands1)


state 991

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  474 rowValueConstructor: leftParen . rowValueConstructorList rightParen
  476 rowValueConstructorElement: . valueExpression
  477                           | . nullSpecification
  478                           | . defaultSpecification
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  499                       | leftParen . valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  564         | leftParen . queryExpression rightParen
  565 queryExpression: . nonjoinQueryExpression
  566                | . joinedTable
  567 nonjoinQueryExpression: . nonjoinQueryTerm
  568                       | . queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  569                       | . queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  578 nonjoinQueryTerm: . nonjoinQueryPrimary
  579                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  584 nonjoinQueryPrimary: . simpleTable
  585                    | . leftParen nonjoinQueryExpression rightParen
  586 simpleTable: . querySpecification
  587            | . tableValueConstructor
  588            | . explicitTable
  589 querySpecification: . SELECT querySpecification1 selectList tableExpression
  614 tableReference: . tableName tableReference1
  615               | . derivedTable correlationSpecification
  616               | . joinedTable
  625 derivedTable: . tableSubquery
  626 tableSubquery: . subquery
  627 joinedTable: . crossJoin
  628            | . qualifiedJoin
  629            | . leftParen joinedTable rightParen
  630 crossJoin: . tableReference CROSS JOIN tableReference
  631 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  662 tableValueConstructor: . VALUES tableValueConstructorList
  666 explicitTable: . TABLE tableName
  667 queryTerm: . nonjoinQueryTerm
  668          | . joinedTable
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  786                        | leftParen . datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression
  812 nullSpecification: . NULL
  813 defaultSpecification: . DEFAULT
  814 rowValueConstructorList: . rowValueConstructorElement rowValueConstructorList1

    VALUES             shift, and go to state 836
    SELECT             shift, and go to state 837
    TABLE              shift, and go to state 838
    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    NULL               shift, and go to state 667
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    DEFAULT            shift, and go to state 686
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 839
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 840
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    rowValueConstructorElement      go to state 842
    valueExpression                 go to state 843
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 844
    queryExpression                 go to state 845
    nonjoinQueryExpression          go to state 846
    nonjoinQueryTerm                go to state 847
    nonjoinQueryPrimary             go to state 848
    simpleTable                     go to state 849
    querySpecification              go to state 850
    tableReference                  go to state 851
    derivedTable                    go to state 852
    tableSubquery                   go to state 853
    joinedTable                     go to state 854
    crossJoin                       go to state 855
    qualifiedJoin                   go to state 856
    tableValueConstructor           go to state 857
    explicitTable                   go to state 858
    queryTerm                       go to state 859
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 860
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760
    nullSpecification               go to state 761
    defaultSpecification            go to state 762
    rowValueConstructorList         go to state 861


state 992

  663 tableValueConstructorList: rowValueConstructor . tableValueConstructorList1
  664 tableValueConstructorList1: .
  665                           | . tableValueConstructorList1 comma rowValueConstructor

    $default  reduce using rule 664 (tableValueConstructorList1)

    tableValueConstructorList1  go to state 1114


state 993

  662 tableValueConstructor: VALUES tableValueConstructorList .

    $default  reduce using rule 662 (tableValueConstructor)


state 994

  561 setQuantifier: DISTINCT .

    $default  reduce using rule 561 (setQuantifier)


state 995

  562 setQuantifier: ALL .

    $default  reduce using rule 562 (setQuantifier)


state 996

  591 querySpecification1: setQuantifier .

    $default  reduce using rule 591 (querySpecification1)


state 997

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  552 asterisk: . UNKNOWN_LEX
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  589 querySpecification: SELECT querySpecification1 . selectList tableExpression
  592 selectList: . asterisk
  593           | . selectSublist selectList1
  596 selectSublist: . derivedColumn
  597              | . qualifier period asterisk
  598 derivedColumn: . valueExpression derivedColumn1
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 1115
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 818
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 1116
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 1117
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    asterisk                        go to state 1118
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    selectList                      go to state 1119
    selectSublist                   go to state 1120
    derivedColumn                   go to state 1121
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760


state 998

  666 explicitTable: TABLE tableName .

    $default  reduce using rule 666 (explicitTable)


state 999

  621 correlationSpecification1: AS .

    $default  reduce using rule 621 (correlationSpecification1)


state 1000

  614 tableReference: tableName tableReference1 .

    $default  reduce using rule 614 (tableReference)


state 1001

  618 tableReference1: correlationSpecification .

    $default  reduce using rule 618 (tableReference1)


state 1002

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  224 identifier: . id
  549 correlationName: . identifier
  619 correlationSpecification: correlationSpecification1 . correlationName correlationSpecification2

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id               go to state 297
    identifier       go to state 690
    correlationName  go to state 1122


state 1003

  267 rightParen: . ')'
  565 queryExpression: nonjoinQueryExpression .  [UNION, EXCEPT, ')']
  585 nonjoinQueryPrimary: leftParen nonjoinQueryExpression . rightParen

    ')'  shift, and go to state 448

    ')'       [reduce using rule 565 (queryExpression)]
    $default  reduce using rule 565 (queryExpression)

    rightParen  go to state 1123


state 1004

  267 rightParen: . ')'
  566 queryExpression: joinedTable .  [UNION, EXCEPT, ')']
  616 tableReference: joinedTable .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL, CROSS, NATURAL]
  629 joinedTable: leftParen joinedTable . rightParen
  668 queryTerm: joinedTable .  [INTERSECT]

    ')'  shift, and go to state 448

    UNION      reduce using rule 566 (queryExpression)
    UNION      [reduce using rule 616 (tableReference)]
    INTERSECT  reduce using rule 668 (queryTerm)
    EXCEPT     reduce using rule 566 (queryExpression)
    ')'        [reduce using rule 566 (queryExpression)]
    $default   reduce using rule 616 (tableReference)

    rightParen  go to state 1124


state 1005

  462 booleanPrimary: leftParen searchCondition rightParen .

    $default  reduce using rule 462 (booleanPrimary)


state 1006

  314 comma: . ','
  814 rowValueConstructorList: rowValueConstructorElement rowValueConstructorList1 .  [')']
  816 rowValueConstructorList1: rowValueConstructorList1 . comma rowValueConstructorElement

    ','  shift, and go to state 447

    $default  reduce using rule 814 (rowValueConstructorList)

    comma  go to state 1125


state 1007

  499 valueExpressionPrimary: leftParen valueExpression rightParen .

    $default  reduce using rule 499 (valueExpressionPrimary)


state 1008

  568 nonjoinQueryExpression: queryExpression UNION . nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  570 nonjoinQueryExpression1: .  [VALUES, SELECT, TABLE, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, CORRESPONDING, KEY, AVG, INITIALLY, UPPER, MODULE, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  571                        | . ALL

    ALL  shift, and go to state 1126

    $default  reduce using rule 570 (nonjoinQueryExpression1)

    nonjoinQueryExpression1  go to state 1127


state 1009

  569 nonjoinQueryExpression: queryExpression EXCEPT . nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  574 nonjoinQueryExpression3: .  [VALUES, SELECT, TABLE, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, CORRESPONDING, KEY, AVG, INITIALLY, UPPER, MODULE, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  575                        | . ALL

    ALL  shift, and go to state 1128

    $default  reduce using rule 574 (nonjoinQueryExpression3)

    nonjoinQueryExpression3  go to state 1129


state 1010

  564 subquery: leftParen queryExpression rightParen .

    $default  reduce using rule 564 (subquery)


state 1011

  630 crossJoin: tableReference CROSS . JOIN tableReference

    JOIN  shift, and go to state 1130


state 1012

  633 qualifiedJoin1: NATURAL .

    $default  reduce using rule 633 (qualifiedJoin1)


state 1013

  631 qualifiedJoin: tableReference qualifiedJoin1 . qualifiedJoin2 JOIN tableReference qualifiedJoin3
  634 qualifiedJoin2: .  [JOIN]
  635               | . joinType
  638 joinType: . INNER
  639         | . outerJoinType joinType1
  640         | . UNION
  643 outerJoinType: . LEFT
  644              | . RIGHT
  645              | . FULL

    RIGHT  shift, and go to state 1131
    INNER  shift, and go to state 1132
    UNION  shift, and go to state 1133
    LEFT   shift, and go to state 1134
    FULL   shift, and go to state 1135

    $default  reduce using rule 634 (qualifiedJoin2)

    qualifiedJoin2  go to state 1136
    joinType        go to state 1137
    outerJoinType   go to state 1138


state 1014

  615 tableReference: derivedTable correlationSpecification .

    $default  reduce using rule 615 (tableReference)


state 1015

  579 nonjoinQueryTerm: queryTerm INTERSECT . nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  580 nonjoinQueryTerm1: .  [VALUES, SELECT, TABLE, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, CORRESPONDING, KEY, AVG, INITIALLY, UPPER, MODULE, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  581                  | . ALL

    ALL  shift, and go to state 1139

    $default  reduce using rule 580 (nonjoinQueryTerm1)

    nonjoinQueryTerm1  go to state 1140


state 1016

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  773 datetimeValueExpression: datetimeValueExpression minusSign . intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  786 intervalValueExpression: leftParen datetimeValueExpression minusSign . datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 45
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 48
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 51
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 55
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 56
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 60
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 889
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    term                            go to state 1053
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 1059
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    datetimeTerm                    go to state 1141
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalTerm                    go to state 1055
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758


state 1017

  474 rowValueConstructor: leftParen rowValueConstructorList rightParen .

    $default  reduce using rule 474 (rowValueConstructor)


state 1018

  460 booleanTest1: NOT .

    $default  reduce using rule 460 (booleanTest1)


state 1019

  458 booleanTest2: IS booleanTest1 . truthValue
  868 truthValue: . TRUE
  869           | . FALSE
  870           | . UNKNOWN

    UNKNOWN  shift, and go to state 1142
    TRUE     shift, and go to state 1143
    FALSE    shift, and go to state 1144

    truthValue  go to state 1145


state 1020

  861 matchPredicate1: UNIQUE .

    $default  reduce using rule 861 (matchPredicate1)


state 1021

  859 matchPredicate: rowValueConstructor MATCH matchPredicate1 . matchPredicate2 tableSubquery
  862 matchPredicate2: .  ['(']
  863                | . PARTIAL
  864                | . FULL

    FULL     shift, and go to state 1146
    PARTIAL  shift, and go to state 1147

    $default  reduce using rule 862 (matchPredicate2)

    matchPredicate2  go to state 1148


state 1022

  856 some: SOME .

    $default  reduce using rule 856 (some)


state 1023

  855 all: ALL .

    $default  reduce using rule 855 (all)


state 1024

  857 some: ANY .

    $default  reduce using rule 857 (some)


state 1025

  472 comparisonPredicate: rowValueConstructor compOp rowValueConstructor .

    $default  reduce using rule 472 (comparisonPredicate)


state 1026

  230 leftParen: . '('
  564 subquery: . leftParen queryExpression rightParen
  626 tableSubquery: . subquery
  852 quantifiedComparisonPredicate: rowValueConstructor compOp quantifier . tableSubquery

    '('  shift, and go to state 294

    leftParen      go to state 814
    subquery       go to state 815
    tableSubquery  go to state 1149


state 1027

  853 quantifier: all .

    $default  reduce using rule 853 (quantifier)


state 1028

  854 quantifier: some .

    $default  reduce using rule 854 (quantifier)


state 1029

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  473 rowValueConstructor: . rowValueConstructorElement
  474                    | . leftParen rowValueConstructorList rightParen
  475                    | . rowSubquery
  476 rowValueConstructorElement: . valueExpression
  477                           | . nullSpecification
  478                           | . defaultSpecification
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression
  812 nullSpecification: . NULL
  813 defaultSpecification: . DEFAULT
  817 rowSubquery: . subquery
  830 betweenPredicate: rowValueConstructor betweenPredicate1 BETWEEN . rowValueConstructor AND rowValueConstructor

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    NULL               shift, and go to state 667
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    DEFAULT            shift, and go to state 686
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 991
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    rowValueConstructor             go to state 1150
    rowValueConstructorElement      go to state 701
    valueExpression                 go to state 702
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 726
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760
    nullSpecification               go to state 761
    defaultSpecification            go to state 762
    rowSubquery                     go to state 763


state 1030

  230 leftParen: . '('
  564 subquery: . leftParen queryExpression rightParen
  626 tableSubquery: . subquery
  833 inPredicate: rowValueConstructor inPredicate1 IN . inPredicateValue
  836 inPredicateValue: . tableSubquery
  837                 | . leftParen inValueList rightParen

    '('  shift, and go to state 294

    leftParen         go to state 1151
    subquery          go to state 815
    tableSubquery     go to state 1152
    inPredicateValue  go to state 1153


state 1031

  491 factor1: sign .

    $default  reduce using rule 491 (factor1)


state 1032

  484 numericValueExpression: numericValueExpression plusSign term .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  487 term: term . asterisk factor
  488     | term . solidus factor
  552 asterisk: . UNKNOWN_LEX
  798 solidus: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 879

    UNKNOWN_LEX  [reduce using rule 484 (numericValueExpression)]
    $default     reduce using rule 484 (numericValueExpression)

    asterisk  go to state 1154
    solidus   go to state 881


state 1033

  485 numericValueExpression: numericValueExpression minusSign term .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  487 term: term . asterisk factor
  488     | term . solidus factor
  552 asterisk: . UNKNOWN_LEX
  798 solidus: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 879

    UNKNOWN_LEX  [reduce using rule 485 (numericValueExpression)]
    $default     reduce using rule 485 (numericValueExpression)

    asterisk  go to state 1154
    solidus   go to state 881


state 1034

  487 term: term asterisk factor .

    $default  reduce using rule 487 (term)


state 1035

  790 intervalTerm: term asterisk intervalFactor .

    $default  reduce using rule 790 (intervalTerm)


state 1036

  488 term: term solidus factor .

    $default  reduce using rule 488 (term)


state 1037

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression
  810 octetLengthExpression: OCTET_LENGTH leftParen . stringValueExpression rightParen

    CASE              shift, and go to state 665
    CAST              shift, and go to state 666
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 882
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 670
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 671
    SESSION_USER      shift, and go to state 672
    DATE              shift, and go to state 495
    NULLIF            shift, and go to state 673
    SUM               shift, and go to state 674
    KEY               shift, and go to state 42
    AVG               shift, and go to state 675
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 676
    TIMESTAMP         shift, and go to state 497
    MODULE            shift, and go to state 213
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 498
    SYSTEM_USER       shift, and go to state 677
    SUBSTRING         shift, and go to state 678
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 679
    MAX               shift, and go to state 680
    LOWER             shift, and go to state 681
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 682
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 683
    CURRENT_USER      shift, and go to state 684
    TRANSLATE         shift, and go to state 685
    INTERVAL          shift, and go to state 504
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 687
    TRIM              shift, and go to state 688
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 294

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 889
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    valueExpressionPrimary          go to state 975
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    stringValueExpression           go to state 1155


state 1038

  341 nonsecondDatetimeField: . YEAR
  342                       | . MONTH
  343                       | . DAY
  344                       | . HOUR
  345                       | . MINUTE
  761 extractExpression: EXTRACT leftParen . extractField FROM extractSource rightParen
  762 extractField: . datetimeField
  763             | . timeZoneField
  764 datetimeField: . nonsecondDatetimeField
  765              | . SECOND
  766 timeZoneField: . TIMEZONE_HOUR
  767              | . TIMEZONE_MINUTE

    SECOND           shift, and go to state 1156
    MINUTE           shift, and go to state 479
    MONTH            shift, and go to state 480
    DAY              shift, and go to state 481
    TIMEZONE_HOUR    shift, and go to state 1157
    HOUR             shift, and go to state 482
    YEAR             shift, and go to state 483
    TIMEZONE_MINUTE  shift, and go to state 1158

    nonsecondDatetimeField  go to state 1159
    extractField            go to state 1160
    datetimeField           go to state 1161
    timeZoneField           go to state 1162


state 1039

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression
  811 bitLengthExpression: BIT_LENGTH leftParen . stringValueExpression rightParen

    CASE              shift, and go to state 665
    CAST              shift, and go to state 666
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 882
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 670
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 671
    SESSION_USER      shift, and go to state 672
    DATE              shift, and go to state 495
    NULLIF            shift, and go to state 673
    SUM               shift, and go to state 674
    KEY               shift, and go to state 42
    AVG               shift, and go to state 675
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 676
    TIMESTAMP         shift, and go to state 497
    MODULE            shift, and go to state 213
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 498
    SYSTEM_USER       shift, and go to state 677
    SUBSTRING         shift, and go to state 678
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 679
    MAX               shift, and go to state 680
    LOWER             shift, and go to state 681
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 682
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 683
    CURRENT_USER      shift, and go to state 684
    TRANSLATE         shift, and go to state 685
    INTERVAL          shift, and go to state 504
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 687
    TRIM              shift, and go to state 688
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 294

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 889
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    valueExpressionPrimary          go to state 975
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    stringValueExpression           go to state 1163


state 1040

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  807 charLengthExpression: CHARACTER_LENGTH leftParen . stringValueExpression rightParen
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression

    CASE              shift, and go to state 665
    CAST              shift, and go to state 666
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 882
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 670
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 671
    SESSION_USER      shift, and go to state 672
    DATE              shift, and go to state 495
    NULLIF            shift, and go to state 673
    SUM               shift, and go to state 674
    KEY               shift, and go to state 42
    AVG               shift, and go to state 675
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 676
    TIMESTAMP         shift, and go to state 497
    MODULE            shift, and go to state 213
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 498
    SYSTEM_USER       shift, and go to state 677
    SUBSTRING         shift, and go to state 678
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 679
    MAX               shift, and go to state 680
    LOWER             shift, and go to state 681
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 682
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 683
    CURRENT_USER      shift, and go to state 684
    TRANSLATE         shift, and go to state 685
    INTERVAL          shift, and go to state 504
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 687
    TRIM              shift, and go to state 688
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 294

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 889
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    valueExpressionPrimary          go to state 975
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    stringValueExpression           go to state 1164


state 1041

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  710 positionExpression: POSITION leftParen . characterValueExpression IN characterValueExpression rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

    CASE              shift, and go to state 665
    CAST              shift, and go to state 666
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 882
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 670
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 671
    SESSION_USER      shift, and go to state 672
    DATE              shift, and go to state 495
    NULLIF            shift, and go to state 673
    SUM               shift, and go to state 674
    KEY               shift, and go to state 42
    AVG               shift, and go to state 675
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 676
    TIMESTAMP         shift, and go to state 497
    MODULE            shift, and go to state 213
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 498
    SYSTEM_USER       shift, and go to state 677
    SUBSTRING         shift, and go to state 678
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 679
    MAX               shift, and go to state 680
    LOWER             shift, and go to state 681
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 682
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 683
    CURRENT_USER      shift, and go to state 684
    TRANSLATE         shift, and go to state 685
    INTERVAL          shift, and go to state 504
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 687
    TRIM              shift, and go to state 688
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 294

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 889
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    valueExpressionPrimary          go to state 978
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 1165
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 980
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745


state 1042

  517 colon: UNKNOWN_LEX .

    $default  reduce using rule 517 (colon)


state 1043

  518 indicatorParameter: indicatorParameter1 parameterName .

    $default  reduce using rule 518 (indicatorParameter)


state 1044

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  224 identifier: . id
  516 parameterName: colon . identifier

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id          go to state 297
    identifier  go to state 904


state 1045

  526 embeddedVariableName: colon . hostIdentifier
  527 hostIdentifier: . AdaHostIdentifier
  528               | . CHostIdentifier
  529               | . CobolHostIdentifier
  530               | . FortranHostIdentifier
  531               | . MUMPSHostIdentifier
  532               | . PascalHostIdentifier
  533               | . PLIHostIdentifier
  534 AdaHostIdentifier: . UNKNOWN_BODY
  535 CHostIdentifier: . UNKNOWN_BODY
  536 CobolHostIdentifier: . UNKNOWN_BODY
  537 FortranHostIdentifier: . UNKNOWN_BODY
  538 MUMPSHostIdentifier: . UNKNOWN_BODY
  539 PascalHostIdentifier: . UNKNOWN_BODY
  540 PLIHostIdentifier: . UNKNOWN_BODY

    UNKNOWN_BODY  shift, and go to state 903

    hostIdentifier         go to state 905
    AdaHostIdentifier      go to state 906
    CHostIdentifier        go to state 907
    CobolHostIdentifier    go to state 908
    FortranHostIdentifier  go to state 909
    MUMPSHostIdentifier    go to state 910
    PascalHostIdentifier   go to state 911
    PLIHostIdentifier      go to state 912


state 1046

  541 indicatorVariable: indicatorVariable1 embeddedVariableName .

    $default  reduce using rule 541 (indicatorVariable)


state 1047

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  553                   | setFunctionType leftParen generalSetFunction1 . valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 818
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 1166
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760


state 1048

  555 generalSetFunction1: setQuantifier .

    $default  reduce using rule 555 (generalSetFunction1)


state 1049

  713 concatenation: characterValueExpression concatenationOperator characterFactor .

    $default  reduce using rule 713 (concatenation)


state 1050

  759 bitPrimary: valueExpressionPrimary .

    $default  reduce using rule 759 (bitPrimary)


state 1051

  760 bitPrimary: stringValueFunction .

    $default  reduce using rule 760 (bitPrimary)


state 1052

  757 bitConcatenation: bitValueExpression concatenationOperator bitFactor .

    $default  reduce using rule 757 (bitConcatenation)


state 1053

  487 term: term . asterisk factor
  488     | term . solidus factor
  552 asterisk: . UNKNOWN_LEX
  790 intervalTerm: term . asterisk intervalFactor
  798 solidus: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 879

    asterisk  go to state 880
    solidus   go to state 881


state 1054

  772 datetimeValueExpression: datetimeValueExpression plusSign intervalTerm .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  797 intervalTerm2: intervalTerm .  [UNKNOWN_LEX]

    UNKNOWN_LEX  reduce using rule 772 (datetimeValueExpression)
    UNKNOWN_LEX  [reduce using rule 797 (intervalTerm2)]
    $default     reduce using rule 772 (datetimeValueExpression)


state 1055

  773 datetimeValueExpression: datetimeValueExpression minusSign intervalTerm .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  797 intervalTerm2: intervalTerm .  [UNKNOWN_LEX]

    UNKNOWN_LEX  reduce using rule 773 (datetimeValueExpression)
    UNKNOWN_LEX  [reduce using rule 797 (intervalTerm2)]
    $default     reduce using rule 773 (datetimeValueExpression)


state 1056

  781 timeZoneSpecifier: LOCAL .

    $default  reduce using rule 781 (timeZoneSpecifier)


state 1057

  782 timeZoneSpecifier: TIME . ZONE intervalValueExpression

    ZONE  shift, and go to state 1167


state 1058

  780 timeZone: AT timeZoneSpecifier .

    $default  reduce using rule 780 (timeZone)


state 1059

  778 datetimePrimary: valueExpressionPrimary .

    $default  reduce using rule 778 (datetimePrimary)


state 1060

  771 datetimeValueExpression: intervalValueExpression plusSign datetimeTerm .

    $default  reduce using rule 771 (datetimeValueExpression)


state 1061

  796 intervalPrimary1: intervalQualifier .

    $default  reduce using rule 796 (intervalPrimary1)


state 1062

  794 intervalPrimary: valueExpressionPrimary intervalPrimary1 .

    $default  reduce using rule 794 (intervalPrimary)


state 1063

  788 intervalTerm: intervalTerm2 asterisk factor .

    $default  reduce using rule 788 (intervalTerm)


state 1064

  789 intervalTerm: intervalTerm2 solidus factor .

    $default  reduce using rule 789 (intervalTerm)


state 1065

  797 intervalTerm2: intervalTerm .  [UNKNOWN_LEX]
  801 intervalTerm1: intervalTerm .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']

    UNKNOWN_LEX  reduce using rule 797 (intervalTerm2)
    UNKNOWN_LEX  [reduce using rule 801 (intervalTerm1)]
    $default     reduce using rule 801 (intervalTerm1)


state 1066

  784 intervalValueExpression: intervalValueExpression1 plusSign intervalTerm1 .

    $default  reduce using rule 784 (intervalValueExpression)


state 1067

  785 intervalValueExpression: intervalValueExpression1 minusSign intervalTerm1 .

    $default  reduce using rule 785 (intervalValueExpression)


state 1068

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  841 likePredicate: matchValue likePredicate1 LIKE . pattern likePredicate2
  847 pattern: . characterValueExpression

    CASE              shift, and go to state 665
    CAST              shift, and go to state 666
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 882
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 670
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 671
    SESSION_USER      shift, and go to state 672
    DATE              shift, and go to state 495
    NULLIF            shift, and go to state 673
    SUM               shift, and go to state 674
    KEY               shift, and go to state 42
    AVG               shift, and go to state 675
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 676
    TIMESTAMP         shift, and go to state 497
    MODULE            shift, and go to state 213
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 498
    SYSTEM_USER       shift, and go to state 677
    SUBSTRING         shift, and go to state 678
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 679
    MAX               shift, and go to state 680
    LOWER             shift, and go to state 681
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 682
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 683
    CURRENT_USER      shift, and go to state 684
    TRANSLATE         shift, and go to state 685
    INTERVAL          shift, and go to state 504
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 687
    TRIM              shift, and go to state 688
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 294

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 889
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    valueExpressionPrimary          go to state 978
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 1168
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 980
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    pattern                         go to state 1169


state 1069

  867 rowValueConstructor2: rowValueConstructor .

    $default  reduce using rule 867 (rowValueConstructor2)


state 1070

  865 overlapsPredicate: rowValueConstructor1 OVERLAPS rowValueConstructor2 .

    $default  reduce using rule 865 (overlapsPredicate)


state 1071

  893 referentialConstraintDefinition: FOREIGN KEY leftParen referencingColumns rightParen referencesSpecification .

    $default  reduce using rule 893 (referentialConstraintDefinition)


state 1072

  433 columnNameList1: columnNameList1 comma columnName .

    $default  reduce using rule 433 (columnNameList1)


state 1073

  359 singleDatetimeField2: comma leftParen intervalFractionalSecondsPrecision .

    $default  reduce using rule 359 (singleDatetimeField2)


state 1074

  350 endField1: leftParen intervalFractionalSecondsPrecision rightParen .

    $default  reduce using rule 350 (endField1)


state 1075

  267 rightParen: . ')'
  429 referencedTableAndColumns1: leftParen referenceColumnList . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1170


state 1076

  434 matchType: FULL .

    $default  reduce using rule 434 (matchType)


state 1077

  435 matchType: PARTIAL .

    $default  reduce using rule 435 (matchType)


state 1078

  424 referencesSpecification1: MATCH matchType .

    $default  reduce using rule 424 (referencesSpecification1)


state 1079

  442 updateRule: ON . UPDATE referentialAction
  447 deleteRule: ON . DELETE referentialAction

    DELETE  shift, and go to state 1171
    UPDATE  shift, and go to state 1172


state 1080

  422 referencesSpecification: REFERENCES referencedTableAndColumns referencesSpecification1 referencesSpecification2 .

    $default  reduce using rule 422 (referencesSpecification)


state 1081

  426 referencesSpecification2: referentialTriggeredAction .

    $default  reduce using rule 426 (referencesSpecification2)


state 1082

  436 referentialTriggeredAction: updateRule . referentialTriggeredAction1
  438 referentialTriggeredAction1: .  [NOT, DEFERRABLE, UNIQUE, COLLATE, INITIALLY, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  439                            | . deleteRule
  447 deleteRule: . ON DELETE referentialAction

    ON  shift, and go to state 1173

    $default  reduce using rule 438 (referentialTriggeredAction1)

    referentialTriggeredAction1  go to state 1174
    deleteRule                   go to state 1175


state 1083

  437 referentialTriggeredAction: deleteRule . referentialTriggeredAction2
  440 referentialTriggeredAction2: .  [NOT, DEFERRABLE, UNIQUE, COLLATE, INITIALLY, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  441                            | . updateRule
  442 updateRule: . ON UPDATE referentialAction

    ON  shift, and go to state 1176

    $default  reduce using rule 440 (referentialTriggeredAction2)

    referentialTriggeredAction2  go to state 1177
    updateRule                   go to state 1178


state 1084

  872 constraintAttributes: constraintAttributes3 DEFERRABLE constraintAttributes4 .

    $default  reduce using rule 872 (constraintAttributes)


state 1085

  880 constraintAttributes4: constraintCheckTime .

    $default  reduce using rule 880 (constraintAttributes4)


state 1086

  874 constraintAttributes2: constraintAttributes1 DEFERRABLE .

    $default  reduce using rule 874 (constraintAttributes2)


state 1087

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  691 result: . resultExpression
  692       | . NULL
  693 resultExpression: . valueExpression
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  700 searchedWhenClause: WHEN searchCondition THEN . result
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    NULL               shift, and go to state 1093
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 818
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 1094
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    result                          go to state 1179
    resultExpression                go to state 1096
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760


state 1088

  690 whenOperand: valueExpression .

    $default  reduce using rule 690 (whenOperand)


state 1089

  689 simpleWhenClause: WHEN whenOperand . THEN result

    THEN  shift, and go to state 1180


state 1090

  683 simpleCase: CASE caseOperand simpleCase1 simpleCase2 . END

    END  shift, and go to state 1181


state 1091

  685 simpleCase1: simpleCase1 simpleWhenClause .

    $default  reduce using rule 685 (simpleCase1)


state 1092

  687 simpleCase2: elseClause .

    $default  reduce using rule 687 (simpleCase2)


state 1093

  692 result: NULL .

    $default  reduce using rule 692 (result)


state 1094

  693 resultExpression: valueExpression .

    $default  reduce using rule 693 (resultExpression)


state 1095

  694 elseClause: ELSE result .

    $default  reduce using rule 694 (elseClause)


state 1096

  691 result: resultExpression .

    $default  reduce using rule 691 (result)


state 1097

  695 searchedCase: CASE searchedCase1 searchedCase2 END .

    $default  reduce using rule 695 (searchedCase)


state 1098

  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  360 domainName: . qualifiedName
  701 castSpecification: CAST leftParen castOperand AS . castTarget rightParen
  704 castTarget: . domainName
  705           | . typeName
  706 typeName: . UNKNOWN_BODY

    UNKNOWN_BODY  shift, and go to state 1182
    UNKNOWN_LEX   shift, and go to state 212

    $default  reduce using rule 219 (qualifiedName1)

    qualifiedName   go to state 353
    qualifiedName1  go to state 216
    schemaName      go to state 217
    domainName      go to state 1183
    castTarget      go to state 1184
    typeName        go to state 1185


state 1099

  550 setFunctionSpecification: COUNT leftParen asterisk rightParen .

    $default  reduce using rule 550 (setFunctionSpecification)


state 1100

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  677                 | NULLIF leftParen valueExpression comma . valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 818
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 1186
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760


state 1101

  374 sign: . UNKNOWN_LEX
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  727 characterSubstringFunction: SUBSTRING leftParen characterValueExpression FROM . startPosition characterSubstringFunction1 rightParen
  730 startPosition: . numericValueExpression

    UNKNOWN_LEX  shift, and go to state 591

    UNKNOWN_LEX  [reduce using rule 490 (factor1)]
    $default     reduce using rule 490 (factor1)

    sign                    go to state 1031
    numericValueExpression  go to state 1187
    term                    go to state 1188
    factor                  go to state 705
    factor1                 go to state 706
    startPosition           go to state 1189


state 1102

  374 sign: . UNKNOWN_LEX
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  730 startPosition: . numericValueExpression
  752 bitSubstringFunction: SUBSTRING leftParen bitValueExpression FROM . startPosition bitSubstringFunction1 rightParen

    UNKNOWN_LEX  shift, and go to state 591

    UNKNOWN_LEX  [reduce using rule 490 (factor1)]
    $default     reduce using rule 490 (factor1)

    sign                    go to state 1031
    numericValueExpression  go to state 1187
    term                    go to state 1188
    factor                  go to state 705
    factor1                 go to state 706
    startPosition           go to state 1190


state 1103

  733 fold: LOWER leftParen characterValueExpression rightParen .

    $default  reduce using rule 733 (fold)


state 1104

  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  734 formofuseConversion: CONVERT leftParen characterValueExpression USING . formofuseConversionName rightParen
  735 formofuseConversionName: . qualifiedName

    UNKNOWN_LEX  shift, and go to state 212

    $default  reduce using rule 219 (qualifiedName1)

    qualifiedName            go to state 1191
    qualifiedName1           go to state 216
    schemaName               go to state 217
    formofuseConversionName  go to state 1192


state 1105

  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  736 characterTranslation: TRANSLATE leftParen characterValueExpression USING . translationName rightParen
  737 translationName: . qualifiedName

    UNKNOWN_LEX  shift, and go to state 212

    $default  reduce using rule 219 (qualifiedName1)

    qualifiedName    go to state 1193
    qualifiedName1   go to state 216
    schemaName       go to state 217
    translationName  go to state 1194


state 1106

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  679 caseAbbreviation1: comma . valueExpression
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 818
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 1195
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760


state 1107

  267 rightParen: . ')'
  314 comma: . ','
  678 caseAbbreviation: COALESCE leftParen valueExpression caseAbbreviation1 . rightParen
  680 caseAbbreviation1: caseAbbreviation1 . comma valueExpression

    ','  shift, and go to state 447
    ')'  shift, and go to state 448

    rightParen  go to state 1196
    comma       go to state 1197


state 1108

  738 trimFunction: TRIM leftParen trimOperands rightParen .

    $default  reduce using rule 738 (trimFunction)


state 1109

  713 concatenation: characterValueExpression . concatenationOperator characterFactor
  714 concatenationOperator: . UNKNOWN_LEX
  750 trimSource: characterValueExpression .  [')']

    UNKNOWN_LEX  shift, and go to state 920

    $default  reduce using rule 750 (trimSource)

    concatenationOperator  go to state 921


state 1110

  739 trimOperands: trimOperands3 trimSource .

    $default  reduce using rule 739 (trimOperands)


state 1111

  713 concatenation: characterValueExpression . concatenationOperator characterFactor
  714 concatenationOperator: . UNKNOWN_LEX
  749 trimCharacter: characterValueExpression .  [FROM]

    UNKNOWN_LEX  shift, and go to state 920

    $default  reduce using rule 749 (trimCharacter)

    concatenationOperator  go to state 921


state 1112

  741 trimOperands3: trimOperands1 trimOperands2 . FROM

    FROM  shift, and go to state 1198


state 1113

  745 trimOperands2: trimCharacter .

    $default  reduce using rule 745 (trimOperands2)


state 1114

  314 comma: . ','
  663 tableValueConstructorList: rowValueConstructor tableValueConstructorList1 .  [UNION, INTERSECT, EXCEPT, ')']
  665 tableValueConstructorList1: tableValueConstructorList1 . comma rowValueConstructor

    ','  shift, and go to state 447

    $default  reduce using rule 663 (tableValueConstructorList)

    comma  go to state 1199


state 1115

  221 schemaName: UNKNOWN_LEX .  [UNKNOWN_LEX]
  374 sign: UNKNOWN_LEX .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  375 unsignedNumericLiteral: UNKNOWN_LEX .  [FROM, DESC, ASC, AS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',']
  382 characterStringLiteral: UNKNOWN_LEX .  [FROM, DESC, ASC, AS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',']
  383 nationalCharacterStringLiteral: UNKNOWN_LEX .  [FROM, DESC, ASC, AS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',']
  384 bitStringLiteral: UNKNOWN_LEX .  [FROM, DESC, ASC, AS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',']
  385 hexStringLiteral: UNKNOWN_LEX .  [FROM, DESC, ASC, AS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',']
  517 colon: UNKNOWN_LEX .  [DESC, ASC, UNKNOWN_BODY, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  522 questionMark: UNKNOWN_LEX .  [FROM, DESC, ASC, AS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',']
  552 asterisk: UNKNOWN_LEX .  [FROM]

    FROM              reduce using rule 375 (unsignedNumericLiteral)
    FROM              [reduce using rule 382 (characterStringLiteral)]
    FROM              [reduce using rule 383 (nationalCharacterStringLiteral)]
    FROM              [reduce using rule 384 (bitStringLiteral)]
    FROM              [reduce using rule 385 (hexStringLiteral)]
    FROM              [reduce using rule 522 (questionMark)]
    FROM              [reduce using rule 552 (asterisk)]
    DESC              reduce using rule 374 (sign)
    DESC              [reduce using rule 375 (unsignedNumericLiteral)]
    DESC              [reduce using rule 382 (characterStringLiteral)]
    DESC              [reduce using rule 383 (nationalCharacterStringLiteral)]
    DESC              [reduce using rule 384 (bitStringLiteral)]
    DESC              [reduce using rule 385 (hexStringLiteral)]
    DESC              [reduce using rule 517 (colon)]
    DESC              [reduce using rule 522 (questionMark)]
    ASC               reduce using rule 374 (sign)
    ASC               [reduce using rule 375 (unsignedNumericLiteral)]
    ASC               [reduce using rule 382 (characterStringLiteral)]
    ASC               [reduce using rule 383 (nationalCharacterStringLiteral)]
    ASC               [reduce using rule 384 (bitStringLiteral)]
    ASC               [reduce using rule 385 (hexStringLiteral)]
    ASC               [reduce using rule 517 (colon)]
    ASC               [reduce using rule 522 (questionMark)]
    AS                reduce using rule 375 (unsignedNumericLiteral)
    AS                [reduce using rule 382 (characterStringLiteral)]
    AS                [reduce using rule 383 (nationalCharacterStringLiteral)]
    AS                [reduce using rule 384 (bitStringLiteral)]
    AS                [reduce using rule 385 (hexStringLiteral)]
    AS                [reduce using rule 522 (questionMark)]
    UNKNOWN_BODY      reduce using rule 517 (colon)
    UNKNOWN_LEX       reduce using rule 221 (schemaName)
    UNKNOWN_LEX       [reduce using rule 374 (sign)]
    UNKNOWN_LEX       [reduce using rule 375 (unsignedNumericLiteral)]
    UNKNOWN_LEX       [reduce using rule 382 (characterStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 383 (nationalCharacterStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 384 (bitStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 385 (hexStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 522 (questionMark)]
    ACTION            reduce using rule 374 (sign)
    ACTION            [reduce using rule 375 (unsignedNumericLiteral)]
    ACTION            [reduce using rule 382 (characterStringLiteral)]
    ACTION            [reduce using rule 383 (nationalCharacterStringLiteral)]
    ACTION            [reduce using rule 384 (bitStringLiteral)]
    ACTION            [reduce using rule 385 (hexStringLiteral)]
    ACTION            [reduce using rule 517 (colon)]
    ACTION            [reduce using rule 522 (questionMark)]
    MIN               reduce using rule 374 (sign)
    MIN               [reduce using rule 375 (unsignedNumericLiteral)]
    MIN               [reduce using rule 382 (characterStringLiteral)]
    MIN               [reduce using rule 383 (nationalCharacterStringLiteral)]
    MIN               [reduce using rule 384 (bitStringLiteral)]
    MIN               [reduce using rule 385 (hexStringLiteral)]
    MIN               [reduce using rule 517 (colon)]
    MIN               [reduce using rule 522 (questionMark)]
    OCTET_LENGTH      reduce using rule 374 (sign)
    OCTET_LENGTH      [reduce using rule 375 (unsignedNumericLiteral)]
    OCTET_LENGTH      [reduce using rule 382 (characterStringLiteral)]
    OCTET_LENGTH      [reduce using rule 383 (nationalCharacterStringLiteral)]
    OCTET_LENGTH      [reduce using rule 384 (bitStringLiteral)]
    OCTET_LENGTH      [reduce using rule 385 (hexStringLiteral)]
    OCTET_LENGTH      [reduce using rule 517 (colon)]
    OCTET_LENGTH      [reduce using rule 522 (questionMark)]
    DEFERRED          reduce using rule 374 (sign)
    DEFERRED          [reduce using rule 375 (unsignedNumericLiteral)]
    DEFERRED          [reduce using rule 382 (characterStringLiteral)]
    DEFERRED          [reduce using rule 383 (nationalCharacterStringLiteral)]
    DEFERRED          [reduce using rule 384 (bitStringLiteral)]
    DEFERRED          [reduce using rule 385 (hexStringLiteral)]
    DEFERRED          [reduce using rule 517 (colon)]
    DEFERRED          [reduce using rule 522 (questionMark)]
    DEFERRABLE        reduce using rule 374 (sign)
    DEFERRABLE        [reduce using rule 375 (unsignedNumericLiteral)]
    DEFERRABLE        [reduce using rule 382 (characterStringLiteral)]
    DEFERRABLE        [reduce using rule 383 (nationalCharacterStringLiteral)]
    DEFERRABLE        [reduce using rule 384 (bitStringLiteral)]
    DEFERRABLE        [reduce using rule 385 (hexStringLiteral)]
    DEFERRABLE        [reduce using rule 517 (colon)]
    DEFERRABLE        [reduce using rule 522 (questionMark)]
    ZONE              reduce using rule 374 (sign)
    ZONE              [reduce using rule 375 (unsignedNumericLiteral)]
    ZONE              [reduce using rule 382 (characterStringLiteral)]
    ZONE              [reduce using rule 383 (nationalCharacterStringLiteral)]
    ZONE              [reduce using rule 384 (bitStringLiteral)]
    ZONE              [reduce using rule 385 (hexStringLiteral)]
    ZONE              [reduce using rule 517 (colon)]
    ZONE              [reduce using rule 522 (questionMark)]
    COUNT             reduce using rule 374 (sign)
    COUNT             [reduce using rule 375 (unsignedNumericLiteral)]
    COUNT             [reduce using rule 382 (characterStringLiteral)]
    COUNT             [reduce using rule 383 (nationalCharacterStringLiteral)]
    COUNT             [reduce using rule 384 (bitStringLiteral)]
    COUNT             [reduce using rule 385 (hexStringLiteral)]
    COUNT             [reduce using rule 517 (colon)]
    COUNT             [reduce using rule 522 (questionMark)]
    NULLIF            reduce using rule 374 (sign)
    NULLIF            [reduce using rule 375 (unsignedNumericLiteral)]
    NULLIF            [reduce using rule 382 (characterStringLiteral)]
    NULLIF            [reduce using rule 383 (nationalCharacterStringLiteral)]
    NULLIF            [reduce using rule 384 (bitStringLiteral)]
    NULLIF            [reduce using rule 385 (hexStringLiteral)]
    NULLIF            [reduce using rule 517 (colon)]
    NULLIF            [reduce using rule 522 (questionMark)]
    SUM               reduce using rule 374 (sign)
    SUM               [reduce using rule 375 (unsignedNumericLiteral)]
    SUM               [reduce using rule 382 (characterStringLiteral)]
    SUM               [reduce using rule 383 (nationalCharacterStringLiteral)]
    SUM               [reduce using rule 384 (bitStringLiteral)]
    SUM               [reduce using rule 385 (hexStringLiteral)]
    SUM               [reduce using rule 517 (colon)]
    SUM               [reduce using rule 522 (questionMark)]
    COLLATE           reduce using rule 375 (unsignedNumericLiteral)
    COLLATE           [reduce using rule 382 (characterStringLiteral)]
    COLLATE           [reduce using rule 383 (nationalCharacterStringLiteral)]
    COLLATE           [reduce using rule 384 (bitStringLiteral)]
    COLLATE           [reduce using rule 385 (hexStringLiteral)]
    COLLATE           [reduce using rule 522 (questionMark)]
    KEY               reduce using rule 374 (sign)
    KEY               [reduce using rule 375 (unsignedNumericLiteral)]
    KEY               [reduce using rule 382 (characterStringLiteral)]
    KEY               [reduce using rule 383 (nationalCharacterStringLiteral)]
    KEY               [reduce using rule 384 (bitStringLiteral)]
    KEY               [reduce using rule 385 (hexStringLiteral)]
    KEY               [reduce using rule 517 (colon)]
    KEY               [reduce using rule 522 (questionMark)]
    AVG               reduce using rule 374 (sign)
    AVG               [reduce using rule 375 (unsignedNumericLiteral)]
    AVG               [reduce using rule 382 (characterStringLiteral)]
    AVG               [reduce using rule 383 (nationalCharacterStringLiteral)]
    AVG               [reduce using rule 384 (bitStringLiteral)]
    AVG               [reduce using rule 385 (hexStringLiteral)]
    AVG               [reduce using rule 517 (colon)]
    AVG               [reduce using rule 522 (questionMark)]
    INITIALLY         reduce using rule 374 (sign)
    INITIALLY         [reduce using rule 375 (unsignedNumericLiteral)]
    INITIALLY         [reduce using rule 382 (characterStringLiteral)]
    INITIALLY         [reduce using rule 383 (nationalCharacterStringLiteral)]
    INITIALLY         [reduce using rule 384 (bitStringLiteral)]
    INITIALLY         [reduce using rule 385 (hexStringLiteral)]
    INITIALLY         [reduce using rule 517 (colon)]
    INITIALLY         [reduce using rule 522 (questionMark)]
    UPPER             reduce using rule 374 (sign)
    UPPER             [reduce using rule 375 (unsignedNumericLiteral)]
    UPPER             [reduce using rule 382 (characterStringLiteral)]
    UPPER             [reduce using rule 383 (nationalCharacterStringLiteral)]
    UPPER             [reduce using rule 384 (bitStringLiteral)]
    UPPER             [reduce using rule 385 (hexStringLiteral)]
    UPPER             [reduce using rule 517 (colon)]
    UPPER             [reduce using rule 522 (questionMark)]
    EXTRACT           reduce using rule 374 (sign)
    EXTRACT           [reduce using rule 375 (unsignedNumericLiteral)]
    EXTRACT           [reduce using rule 382 (characterStringLiteral)]
    EXTRACT           [reduce using rule 383 (nationalCharacterStringLiteral)]
    EXTRACT           [reduce using rule 384 (bitStringLiteral)]
    EXTRACT           [reduce using rule 385 (hexStringLiteral)]
    EXTRACT           [reduce using rule 517 (colon)]
    EXTRACT           [reduce using rule 522 (questionMark)]
    CHAR_LENGTH       reduce using rule 374 (sign)
    CHAR_LENGTH       [reduce using rule 375 (unsignedNumericLiteral)]
    CHAR_LENGTH       [reduce using rule 382 (characterStringLiteral)]
    CHAR_LENGTH       [reduce using rule 383 (nationalCharacterStringLiteral)]
    CHAR_LENGTH       [reduce using rule 384 (bitStringLiteral)]
    CHAR_LENGTH       [reduce using rule 385 (hexStringLiteral)]
    CHAR_LENGTH       [reduce using rule 517 (colon)]
    CHAR_LENGTH       [reduce using rule 522 (questionMark)]
    SUBSTRING         reduce using rule 374 (sign)
    SUBSTRING         [reduce using rule 375 (unsignedNumericLiteral)]
    SUBSTRING         [reduce using rule 382 (characterStringLiteral)]
    SUBSTRING         [reduce using rule 383 (nationalCharacterStringLiteral)]
    SUBSTRING         [reduce using rule 384 (bitStringLiteral)]
    SUBSTRING         [reduce using rule 385 (hexStringLiteral)]
    SUBSTRING         [reduce using rule 517 (colon)]
    SUBSTRING         [reduce using rule 522 (questionMark)]
    PARTIAL           reduce using rule 374 (sign)
    PARTIAL           [reduce using rule 375 (unsignedNumericLiteral)]
    PARTIAL           [reduce using rule 382 (characterStringLiteral)]
    PARTIAL           [reduce using rule 383 (nationalCharacterStringLiteral)]
    PARTIAL           [reduce using rule 384 (bitStringLiteral)]
    PARTIAL           [reduce using rule 385 (hexStringLiteral)]
    PARTIAL           [reduce using rule 517 (colon)]
    PARTIAL           [reduce using rule 522 (questionMark)]
    MAX               reduce using rule 374 (sign)
    MAX               [reduce using rule 375 (unsignedNumericLiteral)]
    MAX               [reduce using rule 382 (characterStringLiteral)]
    MAX               [reduce using rule 383 (nationalCharacterStringLiteral)]
    MAX               [reduce using rule 384 (bitStringLiteral)]
    MAX               [reduce using rule 385 (hexStringLiteral)]
    MAX               [reduce using rule 517 (colon)]
    MAX               [reduce using rule 522 (questionMark)]
    LOWER             reduce using rule 374 (sign)
    LOWER             [reduce using rule 375 (unsignedNumericLiteral)]
    LOWER             [reduce using rule 382 (characterStringLiteral)]
    LOWER             [reduce using rule 383 (nationalCharacterStringLiteral)]
    LOWER             [reduce using rule 384 (bitStringLiteral)]
    LOWER             [reduce using rule 385 (hexStringLiteral)]
    LOWER             [reduce using rule 517 (colon)]
    LOWER             [reduce using rule 522 (questionMark)]
    CASCADE           reduce using rule 374 (sign)
    CASCADE           [reduce using rule 375 (unsignedNumericLiteral)]
    CASCADE           [reduce using rule 382 (characterStringLiteral)]
    CASCADE           [reduce using rule 383 (nationalCharacterStringLiteral)]
    CASCADE           [reduce using rule 384 (bitStringLiteral)]
    CASCADE           [reduce using rule 385 (hexStringLiteral)]
    CASCADE           [reduce using rule 517 (colon)]
    CASCADE           [reduce using rule 522 (questionMark)]
    TEMPORARY         reduce using rule 374 (sign)
    TEMPORARY         [reduce using rule 375 (unsignedNumericLiteral)]
    TEMPORARY         [reduce using rule 382 (characterStringLiteral)]
    TEMPORARY         [reduce using rule 383 (nationalCharacterStringLiteral)]
    TEMPORARY         [reduce using rule 384 (bitStringLiteral)]
    TEMPORARY         [reduce using rule 385 (hexStringLiteral)]
    TEMPORARY         [reduce using rule 517 (colon)]
    TEMPORARY         [reduce using rule 522 (questionMark)]
    CHARACTER_LENGTH  reduce using rule 374 (sign)
    CHARACTER_LENGTH  [reduce using rule 375 (unsignedNumericLiteral)]
    CHARACTER_LENGTH  [reduce using rule 382 (characterStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 383 (nationalCharacterStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 384 (bitStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 385 (hexStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 517 (colon)]
    CHARACTER_LENGTH  [reduce using rule 522 (questionMark)]
    CONVERT           reduce using rule 374 (sign)
    CONVERT           [reduce using rule 375 (unsignedNumericLiteral)]
    CONVERT           [reduce using rule 382 (characterStringLiteral)]
    CONVERT           [reduce using rule 383 (nationalCharacterStringLiteral)]
    CONVERT           [reduce using rule 384 (bitStringLiteral)]
    CONVERT           [reduce using rule 385 (hexStringLiteral)]
    CONVERT           [reduce using rule 517 (colon)]
    CONVERT           [reduce using rule 522 (questionMark)]
    TRANSLATE         reduce using rule 374 (sign)
    TRANSLATE         [reduce using rule 375 (unsignedNumericLiteral)]
    TRANSLATE         [reduce using rule 382 (characterStringLiteral)]
    TRANSLATE         [reduce using rule 383 (nationalCharacterStringLiteral)]
    TRANSLATE         [reduce using rule 384 (bitStringLiteral)]
    TRANSLATE         [reduce using rule 385 (hexStringLiteral)]
    TRANSLATE         [reduce using rule 517 (colon)]
    TRANSLATE         [reduce using rule 522 (questionMark)]
    PRESERVE          reduce using rule 374 (sign)
    PRESERVE          [reduce using rule 375 (unsignedNumericLiteral)]
    PRESERVE          [reduce using rule 382 (characterStringLiteral)]
    PRESERVE          [reduce using rule 383 (nationalCharacterStringLiteral)]
    PRESERVE          [reduce using rule 384 (bitStringLiteral)]
    PRESERVE          [reduce using rule 385 (hexStringLiteral)]
    PRESERVE          [reduce using rule 517 (colon)]
    PRESERVE          [reduce using rule 522 (questionMark)]
    POSITION          reduce using rule 374 (sign)
    POSITION          [reduce using rule 375 (unsignedNumericLiteral)]
    POSITION          [reduce using rule 382 (characterStringLiteral)]
    POSITION          [reduce using rule 383 (nationalCharacterStringLiteral)]
    POSITION          [reduce using rule 384 (bitStringLiteral)]
    POSITION          [reduce using rule 385 (hexStringLiteral)]
    POSITION          [reduce using rule 517 (colon)]
    POSITION          [reduce using rule 522 (questionMark)]
    COALESCE          reduce using rule 374 (sign)
    COALESCE          [reduce using rule 375 (unsignedNumericLiteral)]
    COALESCE          [reduce using rule 382 (characterStringLiteral)]
    COALESCE          [reduce using rule 383 (nationalCharacterStringLiteral)]
    COALESCE          [reduce using rule 384 (bitStringLiteral)]
    COALESCE          [reduce using rule 385 (hexStringLiteral)]
    COALESCE          [reduce using rule 517 (colon)]
    COALESCE          [reduce using rule 522 (questionMark)]
    TRIM              reduce using rule 374 (sign)
    TRIM              [reduce using rule 375 (unsignedNumericLiteral)]
    TRIM              [reduce using rule 382 (characterStringLiteral)]
    TRIM              [reduce using rule 383 (nationalCharacterStringLiteral)]
    TRIM              [reduce using rule 384 (bitStringLiteral)]
    TRIM              [reduce using rule 385 (hexStringLiteral)]
    TRIM              [reduce using rule 517 (colon)]
    TRIM              [reduce using rule 522 (questionMark)]
    AT                reduce using rule 375 (unsignedNumericLiteral)
    AT                [reduce using rule 382 (characterStringLiteral)]
    AT                [reduce using rule 383 (nationalCharacterStringLiteral)]
    AT                [reduce using rule 384 (bitStringLiteral)]
    AT                [reduce using rule 385 (hexStringLiteral)]
    AT                [reduce using rule 522 (questionMark)]
    NUMBER            reduce using rule 374 (sign)
    NUMBER            [reduce using rule 375 (unsignedNumericLiteral)]
    NUMBER            [reduce using rule 382 (characterStringLiteral)]
    NUMBER            [reduce using rule 383 (nationalCharacterStringLiteral)]
    NUMBER            [reduce using rule 384 (bitStringLiteral)]
    NUMBER            [reduce using rule 385 (hexStringLiteral)]
    NUMBER            [reduce using rule 517 (colon)]
    NUMBER            [reduce using rule 522 (questionMark)]
    ID                reduce using rule 374 (sign)
    ID                [reduce using rule 375 (unsignedNumericLiteral)]
    ID                [reduce using rule 382 (characterStringLiteral)]
    ID                [reduce using rule 383 (nationalCharacterStringLiteral)]
    ID                [reduce using rule 384 (bitStringLiteral)]
    ID                [reduce using rule 385 (hexStringLiteral)]
    ID                [reduce using rule 517 (colon)]
    ID                [reduce using rule 522 (questionMark)]
    ','               reduce using rule 375 (unsignedNumericLiteral)
    ','               [reduce using rule 382 (characterStringLiteral)]
    ','               [reduce using rule 383 (nationalCharacterStringLiteral)]
    ','               [reduce using rule 384 (bitStringLiteral)]
    ','               [reduce using rule 385 (hexStringLiteral)]
    ','               [reduce using rule 522 (questionMark)]
    $default          reduce using rule 374 (sign)


state 1116

  598 derivedColumn: valueExpression . derivedColumn1
  599 derivedColumn1: .  [FROM, ',']
  600               | . asClause
  601 asClause: . asClause1 columnName
  602 asClause1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  603          | . AS

    AS  shift, and go to state 1200

    FROM      reduce using rule 599 (derivedColumn1)
    ','       reduce using rule 599 (derivedColumn1)
    $default  reduce using rule 602 (asClause1)

    derivedColumn1  go to state 1201
    asClause        go to state 1202
    asClause1       go to state 1203


state 1117

  222 period: . UNKNOWN_LEX
  546 columnReference1: qualifier . period
  597 selectSublist: qualifier . period asterisk

    UNKNOWN_LEX  shift, and go to state 292

    period  go to state 1204


state 1118

  592 selectList: asterisk .

    $default  reduce using rule 592 (selectList)


state 1119

  589 querySpecification: SELECT querySpecification1 selectList . tableExpression
  604 tableExpression: . fromClause tableExpression1 tableExpression2 tableExpression3
  611 fromClause: . FROM tableReference fromClause1

    FROM  shift, and go to state 1205

    tableExpression  go to state 1206
    fromClause       go to state 1207


state 1120

  593 selectList: selectSublist . selectList1
  594 selectList1: .
  595            | . selectList1 comma selectSublist

    $default  reduce using rule 594 (selectList1)

    selectList1  go to state 1208


state 1121

  596 selectSublist: derivedColumn .

    $default  reduce using rule 596 (selectSublist)


state 1122

  230 leftParen: . '('
  619 correlationSpecification: correlationSpecification1 correlationName . correlationSpecification2
  622 correlationSpecification2: .  [HAVING, WHERE, GROUP, RIGHT, INNER, UNION, JOIN, LEFT, FULL, ON, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']
  623                          | . leftParen derivedColumnList rightParen

    '('  shift, and go to state 294

    $default  reduce using rule 622 (correlationSpecification2)

    leftParen                  go to state 1209
    correlationSpecification2  go to state 1210


state 1123

  585 nonjoinQueryPrimary: leftParen nonjoinQueryExpression rightParen .

    $default  reduce using rule 585 (nonjoinQueryPrimary)


state 1124

  629 joinedTable: leftParen joinedTable rightParen .

    $default  reduce using rule 629 (joinedTable)


state 1125

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  476 rowValueConstructorElement: . valueExpression
  477                           | . nullSpecification
  478                           | . defaultSpecification
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression
  812 nullSpecification: . NULL
  813 defaultSpecification: . DEFAULT
  816 rowValueConstructorList1: rowValueConstructorList1 comma . rowValueConstructorElement

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    NULL               shift, and go to state 667
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    DEFAULT            shift, and go to state 686
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 818
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    rowValueConstructorElement      go to state 1211
    valueExpression                 go to state 702
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760
    nullSpecification               go to state 761
    defaultSpecification            go to state 762


state 1126

  571 nonjoinQueryExpression1: ALL .

    $default  reduce using rule 571 (nonjoinQueryExpression1)


state 1127

  568 nonjoinQueryExpression: queryExpression UNION nonjoinQueryExpression1 . nonjoinQueryExpression2 queryTerm
  572 nonjoinQueryExpression2: .  [VALUES, SELECT, TABLE, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, MODULE, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  573                        | . correspondingSpec
  669 correspondingSpec: . CORRESPONDING correspondingSpec1

    CORRESPONDING  shift, and go to state 1212

    $default  reduce using rule 572 (nonjoinQueryExpression2)

    nonjoinQueryExpression2  go to state 1213
    correspondingSpec        go to state 1214


state 1128

  575 nonjoinQueryExpression3: ALL .

    $default  reduce using rule 575 (nonjoinQueryExpression3)


state 1129

  569 nonjoinQueryExpression: queryExpression EXCEPT nonjoinQueryExpression3 . nonjoinQueryExpression4 queryTerm
  576 nonjoinQueryExpression4: .  [VALUES, SELECT, TABLE, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, MODULE, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  577                        | . correspondingSpec
  669 correspondingSpec: . CORRESPONDING correspondingSpec1

    CORRESPONDING  shift, and go to state 1212

    $default  reduce using rule 576 (nonjoinQueryExpression4)

    nonjoinQueryExpression4  go to state 1215
    correspondingSpec        go to state 1216


state 1130

  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  564 subquery: . leftParen queryExpression rightParen
  614 tableReference: . tableName tableReference1
  615               | . derivedTable correlationSpecification
  616               | . joinedTable
  625 derivedTable: . tableSubquery
  626 tableSubquery: . subquery
  627 joinedTable: . crossJoin
  628            | . qualifiedJoin
  629            | . leftParen joinedTable rightParen
  630 crossJoin: . tableReference CROSS JOIN tableReference
  630          | tableReference CROSS JOIN . tableReference
  631 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3

    UNKNOWN_LEX  shift, and go to state 212
    MODULE       shift, and go to state 213
    '('          shift, and go to state 294

    $default  reduce using rule 219 (qualifiedName1)

    tableName                go to state 957
    qualifiedName            go to state 215
    qualifiedName1           go to state 216
    schemaName               go to state 217
    qualifiedLocalTableName  go to state 218
    leftParen                go to state 1217
    subquery                 go to state 815
    tableReference           go to state 1218
    derivedTable             go to state 852
    tableSubquery            go to state 853
    joinedTable              go to state 1219
    crossJoin                go to state 855
    qualifiedJoin            go to state 856


state 1131

  644 outerJoinType: RIGHT .

    $default  reduce using rule 644 (outerJoinType)


state 1132

  638 joinType: INNER .

    $default  reduce using rule 638 (joinType)


state 1133

  640 joinType: UNION .

    $default  reduce using rule 640 (joinType)


state 1134

  643 outerJoinType: LEFT .

    $default  reduce using rule 643 (outerJoinType)


state 1135

  645 outerJoinType: FULL .

    $default  reduce using rule 645 (outerJoinType)


state 1136

  631 qualifiedJoin: tableReference qualifiedJoin1 qualifiedJoin2 . JOIN tableReference qualifiedJoin3

    JOIN  shift, and go to state 1220


state 1137

  635 qualifiedJoin2: joinType .

    $default  reduce using rule 635 (qualifiedJoin2)


state 1138

  639 joinType: outerJoinType . joinType1
  641 joinType1: .  [JOIN]
  642          | . OUTER

    OUTER  shift, and go to state 1221

    $default  reduce using rule 641 (joinType1)

    joinType1  go to state 1222


state 1139

  581 nonjoinQueryTerm1: ALL .

    $default  reduce using rule 581 (nonjoinQueryTerm1)


state 1140

  579 nonjoinQueryTerm: queryTerm INTERSECT nonjoinQueryTerm1 . nonjoinQueryTerm2 queryPrimary
  582 nonjoinQueryTerm2: .  [VALUES, SELECT, TABLE, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, MODULE, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  583                  | . correspondingSpec
  669 correspondingSpec: . CORRESPONDING correspondingSpec1

    CORRESPONDING  shift, and go to state 1212

    $default  reduce using rule 582 (nonjoinQueryTerm2)

    nonjoinQueryTerm2  go to state 1223
    correspondingSpec  go to state 1224


state 1141

  267 rightParen: . ')'
  786 intervalValueExpression: leftParen datetimeValueExpression minusSign datetimeTerm . rightParen intervalQualifier

    ')'  shift, and go to state 448

    rightParen  go to state 1225


state 1142

  870 truthValue: UNKNOWN .

    $default  reduce using rule 870 (truthValue)


state 1143

  868 truthValue: TRUE .

    $default  reduce using rule 868 (truthValue)


state 1144

  869 truthValue: FALSE .

    $default  reduce using rule 869 (truthValue)


state 1145

  458 booleanTest2: IS booleanTest1 truthValue .

    $default  reduce using rule 458 (booleanTest2)


state 1146

  864 matchPredicate2: FULL .

    $default  reduce using rule 864 (matchPredicate2)


state 1147

  863 matchPredicate2: PARTIAL .

    $default  reduce using rule 863 (matchPredicate2)


state 1148

  230 leftParen: . '('
  564 subquery: . leftParen queryExpression rightParen
  626 tableSubquery: . subquery
  859 matchPredicate: rowValueConstructor MATCH matchPredicate1 matchPredicate2 . tableSubquery

    '('  shift, and go to state 294

    leftParen      go to state 814
    subquery       go to state 815
    tableSubquery  go to state 1226


state 1149

  852 quantifiedComparisonPredicate: rowValueConstructor compOp quantifier tableSubquery .

    $default  reduce using rule 852 (quantifiedComparisonPredicate)


state 1150

  830 betweenPredicate: rowValueConstructor betweenPredicate1 BETWEEN rowValueConstructor . AND rowValueConstructor

    AND  shift, and go to state 1227


state 1151

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  564         | leftParen . queryExpression rightParen
  565 queryExpression: . nonjoinQueryExpression
  566                | . joinedTable
  567 nonjoinQueryExpression: . nonjoinQueryTerm
  568                       | . queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  569                       | . queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  578 nonjoinQueryTerm: . nonjoinQueryPrimary
  579                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  584 nonjoinQueryPrimary: . simpleTable
  585                    | . leftParen nonjoinQueryExpression rightParen
  586 simpleTable: . querySpecification
  587            | . tableValueConstructor
  588            | . explicitTable
  589 querySpecification: . SELECT querySpecification1 selectList tableExpression
  614 tableReference: . tableName tableReference1
  615               | . derivedTable correlationSpecification
  616               | . joinedTable
  625 derivedTable: . tableSubquery
  626 tableSubquery: . subquery
  627 joinedTable: . crossJoin
  628            | . qualifiedJoin
  629            | . leftParen joinedTable rightParen
  630 crossJoin: . tableReference CROSS JOIN tableReference
  631 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  662 tableValueConstructor: . VALUES tableValueConstructorList
  666 explicitTable: . TABLE tableName
  667 queryTerm: . nonjoinQueryTerm
  668          | . joinedTable
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression
  837 inPredicateValue: leftParen . inValueList rightParen
  838 inValueList: . valueExpression inValueList1

    VALUES             shift, and go to state 836
    SELECT             shift, and go to state 837
    TABLE              shift, and go to state 838
    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 839
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 840
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 1228
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 844
    queryExpression                 go to state 845
    nonjoinQueryExpression          go to state 846
    nonjoinQueryTerm                go to state 847
    nonjoinQueryPrimary             go to state 848
    simpleTable                     go to state 849
    querySpecification              go to state 850
    tableReference                  go to state 851
    derivedTable                    go to state 852
    tableSubquery                   go to state 853
    joinedTable                     go to state 854
    crossJoin                       go to state 855
    qualifiedJoin                   go to state 856
    tableValueConstructor           go to state 857
    explicitTable                   go to state 858
    queryTerm                       go to state 859
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760
    inValueList                     go to state 1229


state 1152

  836 inPredicateValue: tableSubquery .

    $default  reduce using rule 836 (inPredicateValue)


state 1153

  833 inPredicate: rowValueConstructor inPredicate1 IN inPredicateValue .

    $default  reduce using rule 833 (inPredicate)


state 1154

  374 sign: . UNKNOWN_LEX
  487 term: term asterisk . factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign

    UNKNOWN_LEX  shift, and go to state 591

    UNKNOWN_LEX  [reduce using rule 490 (factor1)]
    $default     reduce using rule 490 (factor1)

    sign     go to state 1031
    factor   go to state 1034
    factor1  go to state 706


state 1155

  267 rightParen: . ')'
  810 octetLengthExpression: OCTET_LENGTH leftParen stringValueExpression . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1230


state 1156

  765 datetimeField: SECOND .

    $default  reduce using rule 765 (datetimeField)


state 1157

  766 timeZoneField: TIMEZONE_HOUR .

    $default  reduce using rule 766 (timeZoneField)


state 1158

  767 timeZoneField: TIMEZONE_MINUTE .

    $default  reduce using rule 767 (timeZoneField)


state 1159

  764 datetimeField: nonsecondDatetimeField .

    $default  reduce using rule 764 (datetimeField)


state 1160

  761 extractExpression: EXTRACT leftParen extractField . FROM extractSource rightParen

    FROM  shift, and go to state 1231


state 1161

  762 extractField: datetimeField .

    $default  reduce using rule 762 (extractField)


state 1162

  763 extractField: timeZoneField .

    $default  reduce using rule 763 (extractField)


state 1163

  267 rightParen: . ')'
  811 bitLengthExpression: BIT_LENGTH leftParen stringValueExpression . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1232


state 1164

  267 rightParen: . ')'
  807 charLengthExpression: CHARACTER_LENGTH leftParen stringValueExpression . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1233


state 1165

  710 positionExpression: POSITION leftParen characterValueExpression . IN characterValueExpression rightParen
  713 concatenation: characterValueExpression . concatenationOperator characterFactor
  714 concatenationOperator: . UNKNOWN_LEX

    IN           shift, and go to state 1234
    UNKNOWN_LEX  shift, and go to state 920

    concatenationOperator  go to state 921


state 1166

  267 rightParen: . ')'
  553 generalSetFunction: setFunctionType leftParen generalSetFunction1 valueExpression . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1235


state 1167

  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  782 timeZoneSpecifier: TIME ZONE . intervalValueExpression
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression

    UNKNOWN_LEX  shift, and go to state 591
    '('          shift, and go to state 294

    CASE              reduce using rule 490 (factor1)
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              reduce using rule 490 (factor1)
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              reduce using rule 490 (factor1)
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               reduce using rule 490 (factor1)
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            reduce using rule 490 (factor1)
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               reduce using rule 490 (factor1)
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      reduce using rule 490 (factor1)
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          reduce using rule 490 (factor1)
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        reduce using rule 490 (factor1)
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              reduce using rule 490 (factor1)
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             reduce using rule 490 (factor1)
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      reduce using rule 490 (factor1)
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              reduce using rule 490 (factor1)
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            reduce using rule 490 (factor1)
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               reduce using rule 490 (factor1)
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               reduce using rule 490 (factor1)
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               reduce using rule 490 (factor1)
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         reduce using rule 490 (factor1)
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             reduce using rule 490 (factor1)
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         reduce using rule 490 (factor1)
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            reduce using rule 490 (factor1)
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           reduce using rule 490 (factor1)
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       reduce using rule 490 (factor1)
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              reduce using rule 490 (factor1)
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       reduce using rule 490 (factor1)
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         reduce using rule 490 (factor1)
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           reduce using rule 490 (factor1)
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              reduce using rule 490 (factor1)
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               reduce using rule 490 (factor1)
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             reduce using rule 490 (factor1)
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           reduce using rule 490 (factor1)
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         reduce using rule 490 (factor1)
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             reduce using rule 490 (factor1)
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  reduce using rule 490 (factor1)
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           reduce using rule 490 (factor1)
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      reduce using rule 490 (factor1)
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         reduce using rule 490 (factor1)
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          reduce using rule 490 (factor1)
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          reduce using rule 490 (factor1)
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          reduce using rule 490 (factor1)
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          reduce using rule 490 (factor1)
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              reduce using rule 490 (factor1)
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            reduce using rule 490 (factor1)
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                reduce using rule 490 (factor1)
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    leftParen                 go to state 1236
    sign                      go to state 692
    term                      go to state 1053
    factor                    go to state 705
    factor1                   go to state 706
    intervalValueExpression   go to state 1237
    intervalTerm              go to state 755
    intervalFactor            go to state 756
    intervalFactor1           go to state 757
    intervalTerm2             go to state 758
    intervalValueExpression1  go to state 759


state 1168

  713 concatenation: characterValueExpression . concatenationOperator characterFactor
  714 concatenationOperator: . UNKNOWN_LEX
  847 pattern: characterValueExpression .  [ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, THEN, JOIN, LEFT, FULL, AND, ON, IS, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']

    UNKNOWN_LEX  shift, and go to state 920

    $default  reduce using rule 847 (pattern)

    concatenationOperator  go to state 921


state 1169

  841 likePredicate: matchValue likePredicate1 LIKE pattern . likePredicate2
  844 likePredicate2: .  [HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, THEN, JOIN, LEFT, FULL, AND, ON, IS, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']
  845               | . ESCAPE escapeCharacter

    ESCAPE  shift, and go to state 1238

    $default  reduce using rule 844 (likePredicate2)

    likePredicate2  go to state 1239


state 1170

  429 referencedTableAndColumns1: leftParen referenceColumnList rightParen .

    $default  reduce using rule 429 (referencedTableAndColumns1)


state 1171

  443 referentialAction: . CASCADE
  444                  | . SET NULL
  445                  | . SET DEFAULT
  446                  | . NO ACTION
  447 deleteRule: ON DELETE . referentialAction

    SET      shift, and go to state 1240
    NO       shift, and go to state 1241
    CASCADE  shift, and go to state 1242

    referentialAction  go to state 1243


state 1172

  442 updateRule: ON UPDATE . referentialAction
  443 referentialAction: . CASCADE
  444                  | . SET NULL
  445                  | . SET DEFAULT
  446                  | . NO ACTION

    SET      shift, and go to state 1240
    NO       shift, and go to state 1241
    CASCADE  shift, and go to state 1242

    referentialAction  go to state 1244


state 1173

  447 deleteRule: ON . DELETE referentialAction

    DELETE  shift, and go to state 1171


state 1174

  436 referentialTriggeredAction: updateRule referentialTriggeredAction1 .

    $default  reduce using rule 436 (referentialTriggeredAction)


state 1175

  439 referentialTriggeredAction1: deleteRule .

    $default  reduce using rule 439 (referentialTriggeredAction1)


state 1176

  442 updateRule: ON . UPDATE referentialAction

    UPDATE  shift, and go to state 1172


state 1177

  437 referentialTriggeredAction: deleteRule referentialTriggeredAction2 .

    $default  reduce using rule 437 (referentialTriggeredAction)


state 1178

  441 referentialTriggeredAction2: updateRule .

    $default  reduce using rule 441 (referentialTriggeredAction2)


state 1179

  700 searchedWhenClause: WHEN searchCondition THEN result .

    $default  reduce using rule 700 (searchedWhenClause)


state 1180

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  689 simpleWhenClause: WHEN whenOperand THEN . result
  691 result: . resultExpression
  692       | . NULL
  693 resultExpression: . valueExpression
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    NULL               shift, and go to state 1093
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 818
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 1094
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    result                          go to state 1245
    resultExpression                go to state 1096
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760


state 1181

  683 simpleCase: CASE caseOperand simpleCase1 simpleCase2 END .

    $default  reduce using rule 683 (simpleCase)


state 1182

  706 typeName: UNKNOWN_BODY .

    $default  reduce using rule 706 (typeName)


state 1183

  704 castTarget: domainName .

    $default  reduce using rule 704 (castTarget)


state 1184

  267 rightParen: . ')'
  701 castSpecification: CAST leftParen castOperand AS castTarget . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1246


state 1185

  705 castTarget: typeName .

    $default  reduce using rule 705 (castTarget)


state 1186

  267 rightParen: . ')'
  677 caseAbbreviation: NULLIF leftParen valueExpression comma valueExpression . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1247


state 1187

  484 numericValueExpression: numericValueExpression . plusSign term
  485                       | numericValueExpression . minusSign term
  730 startPosition: numericValueExpression .  [FOR, ')']
  800 plusSign: . UNKNOWN_LEX
  802 minusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 876

    $default  reduce using rule 730 (startPosition)

    plusSign   go to state 877
    minusSign  go to state 878


state 1188

  483 numericValueExpression: term .  [FOR, UNKNOWN_LEX, ')']
  487 term: term . asterisk factor
  488     | term . solidus factor
  552 asterisk: . UNKNOWN_LEX
  798 solidus: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 879

    UNKNOWN_LEX  [reduce using rule 483 (numericValueExpression)]
    $default     reduce using rule 483 (numericValueExpression)

    asterisk  go to state 1154
    solidus   go to state 881


state 1189

  727 characterSubstringFunction: SUBSTRING leftParen characterValueExpression FROM startPosition . characterSubstringFunction1 rightParen
  728 characterSubstringFunction1: .  [')']
  729                            | . FOR stringLength

    FOR  shift, and go to state 1248

    $default  reduce using rule 728 (characterSubstringFunction1)

    characterSubstringFunction1  go to state 1249


state 1190

  752 bitSubstringFunction: SUBSTRING leftParen bitValueExpression FROM startPosition . bitSubstringFunction1 rightParen
  753 bitSubstringFunction1: .  [')']
  754                      | . FOR stringLength

    FOR  shift, and go to state 1250

    $default  reduce using rule 753 (bitSubstringFunction1)

    bitSubstringFunction1  go to state 1251


state 1191

  735 formofuseConversionName: qualifiedName .

    $default  reduce using rule 735 (formofuseConversionName)


state 1192

  267 rightParen: . ')'
  734 formofuseConversion: CONVERT leftParen characterValueExpression USING formofuseConversionName . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1252


state 1193

  737 translationName: qualifiedName .

    $default  reduce using rule 737 (translationName)


state 1194

  267 rightParen: . ')'
  736 characterTranslation: TRANSLATE leftParen characterValueExpression USING translationName . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1253


state 1195

  679 caseAbbreviation1: comma valueExpression .

    $default  reduce using rule 679 (caseAbbreviation1)


state 1196

  678 caseAbbreviation: COALESCE leftParen valueExpression caseAbbreviation1 rightParen .

    $default  reduce using rule 678 (caseAbbreviation)


state 1197

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  680 caseAbbreviation1: caseAbbreviation1 comma . valueExpression
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 818
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 1254
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760


state 1198

  741 trimOperands3: trimOperands1 trimOperands2 FROM .

    $default  reduce using rule 741 (trimOperands3)


state 1199

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  473 rowValueConstructor: . rowValueConstructorElement
  474                    | . leftParen rowValueConstructorList rightParen
  475                    | . rowSubquery
  476 rowValueConstructorElement: . valueExpression
  477                           | . nullSpecification
  478                           | . defaultSpecification
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  665 tableValueConstructorList1: tableValueConstructorList1 comma . rowValueConstructor
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression
  812 nullSpecification: . NULL
  813 defaultSpecification: . DEFAULT
  817 rowSubquery: . subquery

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    NULL               shift, and go to state 667
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    DEFAULT            shift, and go to state 686
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 991
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    rowValueConstructor             go to state 1255
    rowValueConstructorElement      go to state 701
    valueExpression                 go to state 702
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 726
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760
    nullSpecification               go to state 761
    defaultSpecification            go to state 762
    rowSubquery                     go to state 763


state 1200

  603 asClause1: AS .

    $default  reduce using rule 603 (asClause1)


state 1201

  598 derivedColumn: valueExpression derivedColumn1 .

    $default  reduce using rule 598 (derivedColumn)


state 1202

  600 derivedColumn1: asClause .

    $default  reduce using rule 600 (derivedColumn1)


state 1203

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  224 identifier: . id
  241 columnName: . identifier
  601 asClause: asClause1 . columnName

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id          go to state 297
    identifier  go to state 354
    columnName  go to state 1256


state 1204

  546 columnReference1: qualifier period .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  552 asterisk: . UNKNOWN_LEX
  597 selectSublist: qualifier period . asterisk

    UNKNOWN_LEX  shift, and go to state 972

    $default  reduce using rule 546 (columnReference1)

    asterisk  go to state 1257


state 1205

  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  564 subquery: . leftParen queryExpression rightParen
  611 fromClause: FROM . tableReference fromClause1
  614 tableReference: . tableName tableReference1
  615               | . derivedTable correlationSpecification
  616               | . joinedTable
  625 derivedTable: . tableSubquery
  626 tableSubquery: . subquery
  627 joinedTable: . crossJoin
  628            | . qualifiedJoin
  629            | . leftParen joinedTable rightParen
  630 crossJoin: . tableReference CROSS JOIN tableReference
  631 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3

    UNKNOWN_LEX  shift, and go to state 212
    MODULE       shift, and go to state 213
    '('          shift, and go to state 294

    $default  reduce using rule 219 (qualifiedName1)

    tableName                go to state 957
    qualifiedName            go to state 215
    qualifiedName1           go to state 216
    schemaName               go to state 217
    qualifiedLocalTableName  go to state 218
    leftParen                go to state 1217
    subquery                 go to state 815
    tableReference           go to state 1258
    derivedTable             go to state 852
    tableSubquery            go to state 853
    joinedTable              go to state 1219
    crossJoin                go to state 855
    qualifiedJoin            go to state 856


state 1206

  589 querySpecification: SELECT querySpecification1 selectList tableExpression .

    $default  reduce using rule 589 (querySpecification)


state 1207

  604 tableExpression: fromClause . tableExpression1 tableExpression2 tableExpression3
  605 tableExpression1: .  [HAVING, GROUP, UNION, INTERSECT, EXCEPT, ')']
  606                 | . whereClause
  651 whereClause: . WHERE searchCondition

    WHERE  shift, and go to state 1259

    $default  reduce using rule 605 (tableExpression1)

    tableExpression1  go to state 1260
    whereClause       go to state 1261


state 1208

  314 comma: . ','
  593 selectList: selectSublist selectList1 .  [FROM]
  595 selectList1: selectList1 . comma selectSublist

    ','  shift, and go to state 447

    $default  reduce using rule 593 (selectList)

    comma  go to state 1262


state 1209

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  224 identifier: . id
  241 columnName: . identifier
  431 columnNameList: . columnName columnNameList1
  623 correlationSpecification2: leftParen . derivedColumnList rightParen
  624 derivedColumnList: . columnNameList

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id                 go to state 297
    identifier         go to state 354
    columnName         go to state 608
    columnNameList     go to state 1263
    derivedColumnList  go to state 1264


state 1210

  619 correlationSpecification: correlationSpecification1 correlationName correlationSpecification2 .

    $default  reduce using rule 619 (correlationSpecification)


state 1211

  816 rowValueConstructorList1: rowValueConstructorList1 comma rowValueConstructorElement .

    $default  reduce using rule 816 (rowValueConstructorList1)


state 1212

  669 correspondingSpec: CORRESPONDING . correspondingSpec1
  670 correspondingSpec1: .  [VALUES, SELECT, TABLE, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, MODULE, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  671                   | . BY leftParen correspondingColumnList rightParen

    BY  shift, and go to state 1265

    $default  reduce using rule 670 (correspondingSpec1)

    correspondingSpec1  go to state 1266


state 1213

  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  564 subquery: . leftParen queryExpression rightParen
  568 nonjoinQueryExpression: queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 . queryTerm
  578 nonjoinQueryTerm: . nonjoinQueryPrimary
  579                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  584 nonjoinQueryPrimary: . simpleTable
  585                    | . leftParen nonjoinQueryExpression rightParen
  586 simpleTable: . querySpecification
  587            | . tableValueConstructor
  588            | . explicitTable
  589 querySpecification: . SELECT querySpecification1 selectList tableExpression
  614 tableReference: . tableName tableReference1
  615               | . derivedTable correlationSpecification
  616               | . joinedTable
  625 derivedTable: . tableSubquery
  626 tableSubquery: . subquery
  627 joinedTable: . crossJoin
  628            | . qualifiedJoin
  629            | . leftParen joinedTable rightParen
  630 crossJoin: . tableReference CROSS JOIN tableReference
  631 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  662 tableValueConstructor: . VALUES tableValueConstructorList
  666 explicitTable: . TABLE tableName
  667 queryTerm: . nonjoinQueryTerm
  668          | . joinedTable

    VALUES       shift, and go to state 836
    SELECT       shift, and go to state 837
    TABLE        shift, and go to state 838
    UNKNOWN_LEX  shift, and go to state 212
    MODULE       shift, and go to state 213
    '('          shift, and go to state 294

    $default  reduce using rule 219 (qualifiedName1)

    tableName                go to state 957
    qualifiedName            go to state 215
    qualifiedName1           go to state 216
    schemaName               go to state 217
    qualifiedLocalTableName  go to state 218
    leftParen                go to state 958
    subquery                 go to state 815
    nonjoinQueryTerm         go to state 1267
    nonjoinQueryPrimary      go to state 848
    simpleTable              go to state 849
    querySpecification       go to state 850
    tableReference           go to state 851
    derivedTable             go to state 852
    tableSubquery            go to state 853
    joinedTable              go to state 1268
    crossJoin                go to state 855
    qualifiedJoin            go to state 856
    tableValueConstructor    go to state 857
    explicitTable            go to state 858
    queryTerm                go to state 1269


state 1214

  573 nonjoinQueryExpression2: correspondingSpec .

    $default  reduce using rule 573 (nonjoinQueryExpression2)


state 1215

  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  564 subquery: . leftParen queryExpression rightParen
  569 nonjoinQueryExpression: queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 . queryTerm
  578 nonjoinQueryTerm: . nonjoinQueryPrimary
  579                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  584 nonjoinQueryPrimary: . simpleTable
  585                    | . leftParen nonjoinQueryExpression rightParen
  586 simpleTable: . querySpecification
  587            | . tableValueConstructor
  588            | . explicitTable
  589 querySpecification: . SELECT querySpecification1 selectList tableExpression
  614 tableReference: . tableName tableReference1
  615               | . derivedTable correlationSpecification
  616               | . joinedTable
  625 derivedTable: . tableSubquery
  626 tableSubquery: . subquery
  627 joinedTable: . crossJoin
  628            | . qualifiedJoin
  629            | . leftParen joinedTable rightParen
  630 crossJoin: . tableReference CROSS JOIN tableReference
  631 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  662 tableValueConstructor: . VALUES tableValueConstructorList
  666 explicitTable: . TABLE tableName
  667 queryTerm: . nonjoinQueryTerm
  668          | . joinedTable

    VALUES       shift, and go to state 836
    SELECT       shift, and go to state 837
    TABLE        shift, and go to state 838
    UNKNOWN_LEX  shift, and go to state 212
    MODULE       shift, and go to state 213
    '('          shift, and go to state 294

    $default  reduce using rule 219 (qualifiedName1)

    tableName                go to state 957
    qualifiedName            go to state 215
    qualifiedName1           go to state 216
    schemaName               go to state 217
    qualifiedLocalTableName  go to state 218
    leftParen                go to state 958
    subquery                 go to state 815
    nonjoinQueryTerm         go to state 1267
    nonjoinQueryPrimary      go to state 848
    simpleTable              go to state 849
    querySpecification       go to state 850
    tableReference           go to state 851
    derivedTable             go to state 852
    tableSubquery            go to state 853
    joinedTable              go to state 1268
    crossJoin                go to state 855
    qualifiedJoin            go to state 856
    tableValueConstructor    go to state 857
    explicitTable            go to state 858
    queryTerm                go to state 1270


state 1216

  577 nonjoinQueryExpression4: correspondingSpec .

    $default  reduce using rule 577 (nonjoinQueryExpression4)


state 1217

  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  564 subquery: . leftParen queryExpression rightParen
  564         | leftParen . queryExpression rightParen
  565 queryExpression: . nonjoinQueryExpression
  566                | . joinedTable
  567 nonjoinQueryExpression: . nonjoinQueryTerm
  568                       | . queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  569                       | . queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  578 nonjoinQueryTerm: . nonjoinQueryPrimary
  579                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  584 nonjoinQueryPrimary: . simpleTable
  585                    | . leftParen nonjoinQueryExpression rightParen
  586 simpleTable: . querySpecification
  587            | . tableValueConstructor
  588            | . explicitTable
  589 querySpecification: . SELECT querySpecification1 selectList tableExpression
  614 tableReference: . tableName tableReference1
  615               | . derivedTable correlationSpecification
  616               | . joinedTable
  625 derivedTable: . tableSubquery
  626 tableSubquery: . subquery
  627 joinedTable: . crossJoin
  628            | . qualifiedJoin
  629            | . leftParen joinedTable rightParen
  629            | leftParen . joinedTable rightParen
  630 crossJoin: . tableReference CROSS JOIN tableReference
  631 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  662 tableValueConstructor: . VALUES tableValueConstructorList
  666 explicitTable: . TABLE tableName
  667 queryTerm: . nonjoinQueryTerm
  668          | . joinedTable

    VALUES       shift, and go to state 836
    SELECT       shift, and go to state 837
    TABLE        shift, and go to state 838
    UNKNOWN_LEX  shift, and go to state 212
    MODULE       shift, and go to state 213
    '('          shift, and go to state 294

    $default  reduce using rule 219 (qualifiedName1)

    tableName                go to state 957
    qualifiedName            go to state 215
    qualifiedName1           go to state 216
    schemaName               go to state 217
    qualifiedLocalTableName  go to state 218
    leftParen                go to state 958
    subquery                 go to state 815
    queryExpression          go to state 845
    nonjoinQueryExpression   go to state 846
    nonjoinQueryTerm         go to state 847
    nonjoinQueryPrimary      go to state 848
    simpleTable              go to state 849
    querySpecification       go to state 850
    tableReference           go to state 851
    derivedTable             go to state 852
    tableSubquery            go to state 853
    joinedTable              go to state 1004
    crossJoin                go to state 855
    qualifiedJoin            go to state 856
    tableValueConstructor    go to state 857
    explicitTable            go to state 858
    queryTerm                go to state 859


state 1218

  630 crossJoin: tableReference . CROSS JOIN tableReference
  630          | tableReference CROSS JOIN tableReference .  [HAVING, WHERE, GROUP, RIGHT, INNER, UNION, JOIN, LEFT, FULL, ON, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']
  631 qualifiedJoin: tableReference . qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  632 qualifiedJoin1: .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL]
  633               | . NATURAL

    CROSS    shift, and go to state 1011
    NATURAL  shift, and go to state 1012

    RIGHT     reduce using rule 630 (crossJoin)
    RIGHT     [reduce using rule 632 (qualifiedJoin1)]
    INNER     reduce using rule 630 (crossJoin)
    INNER     [reduce using rule 632 (qualifiedJoin1)]
    UNION     reduce using rule 630 (crossJoin)
    UNION     [reduce using rule 632 (qualifiedJoin1)]
    JOIN      reduce using rule 630 (crossJoin)
    JOIN      [reduce using rule 632 (qualifiedJoin1)]
    LEFT      reduce using rule 630 (crossJoin)
    LEFT      [reduce using rule 632 (qualifiedJoin1)]
    FULL      reduce using rule 630 (crossJoin)
    FULL      [reduce using rule 632 (qualifiedJoin1)]
    CROSS     [reduce using rule 630 (crossJoin)]
    NATURAL   [reduce using rule 630 (crossJoin)]
    $default  reduce using rule 630 (crossJoin)

    qualifiedJoin1  go to state 1013


state 1219

  616 tableReference: joinedTable .

    $default  reduce using rule 616 (tableReference)


state 1220

  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  564 subquery: . leftParen queryExpression rightParen
  614 tableReference: . tableName tableReference1
  615               | . derivedTable correlationSpecification
  616               | . joinedTable
  625 derivedTable: . tableSubquery
  626 tableSubquery: . subquery
  627 joinedTable: . crossJoin
  628            | . qualifiedJoin
  629            | . leftParen joinedTable rightParen
  630 crossJoin: . tableReference CROSS JOIN tableReference
  631 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  631              | tableReference qualifiedJoin1 qualifiedJoin2 JOIN . tableReference qualifiedJoin3

    UNKNOWN_LEX  shift, and go to state 212
    MODULE       shift, and go to state 213
    '('          shift, and go to state 294

    $default  reduce using rule 219 (qualifiedName1)

    tableName                go to state 957
    qualifiedName            go to state 215
    qualifiedName1           go to state 216
    schemaName               go to state 217
    qualifiedLocalTableName  go to state 218
    leftParen                go to state 1217
    subquery                 go to state 815
    tableReference           go to state 1271
    derivedTable             go to state 852
    tableSubquery            go to state 853
    joinedTable              go to state 1219
    crossJoin                go to state 855
    qualifiedJoin            go to state 856


state 1221

  642 joinType1: OUTER .

    $default  reduce using rule 642 (joinType1)


state 1222

  639 joinType: outerJoinType joinType1 .

    $default  reduce using rule 639 (joinType)


state 1223

  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  564 subquery: . leftParen queryExpression rightParen
  579 nonjoinQueryTerm: queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 . queryPrimary
  584 nonjoinQueryPrimary: . simpleTable
  585                    | . leftParen nonjoinQueryExpression rightParen
  586 simpleTable: . querySpecification
  587            | . tableValueConstructor
  588            | . explicitTable
  589 querySpecification: . SELECT querySpecification1 selectList tableExpression
  614 tableReference: . tableName tableReference1
  615               | . derivedTable correlationSpecification
  616               | . joinedTable
  625 derivedTable: . tableSubquery
  626 tableSubquery: . subquery
  627 joinedTable: . crossJoin
  628            | . qualifiedJoin
  629            | . leftParen joinedTable rightParen
  630 crossJoin: . tableReference CROSS JOIN tableReference
  631 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  662 tableValueConstructor: . VALUES tableValueConstructorList
  666 explicitTable: . TABLE tableName
  673 queryPrimary: . nonjoinQueryPrimary
  674             | . joinedTable

    VALUES       shift, and go to state 836
    SELECT       shift, and go to state 837
    TABLE        shift, and go to state 838
    UNKNOWN_LEX  shift, and go to state 212
    MODULE       shift, and go to state 213
    '('          shift, and go to state 294

    $default  reduce using rule 219 (qualifiedName1)

    tableName                go to state 957
    qualifiedName            go to state 215
    qualifiedName1           go to state 216
    schemaName               go to state 217
    qualifiedLocalTableName  go to state 218
    leftParen                go to state 958
    subquery                 go to state 815
    nonjoinQueryPrimary      go to state 1272
    simpleTable              go to state 849
    querySpecification       go to state 850
    tableReference           go to state 851
    derivedTable             go to state 852
    tableSubquery            go to state 853
    joinedTable              go to state 1273
    crossJoin                go to state 855
    qualifiedJoin            go to state 856
    tableValueConstructor    go to state 857
    explicitTable            go to state 858
    queryPrimary             go to state 1274


state 1224

  583 nonjoinQueryTerm2: correspondingSpec .

    $default  reduce using rule 583 (nonjoinQueryTerm2)


state 1225

  336 intervalQualifier: . startField TO endField
  337                  | . singleDatetimeField
  338 startField: . nonsecondDatetimeField startField1
  341 nonsecondDatetimeField: . YEAR
  342                       | . MONTH
  343                       | . DAY
  344                       | . HOUR
  345                       | . MINUTE
  352 singleDatetimeField: . nonsecondDatetimeField singleDatetimeField1
  353                    | . SECOND singleDatetimeField3
  786 intervalValueExpression: leftParen datetimeValueExpression minusSign datetimeTerm rightParen . intervalQualifier

    SECOND  shift, and go to state 478
    MINUTE  shift, and go to state 479
    MONTH   shift, and go to state 480
    DAY     shift, and go to state 481
    HOUR    shift, and go to state 482
    YEAR    shift, and go to state 483

    intervalQualifier       go to state 1275
    startField              go to state 485
    nonsecondDatetimeField  go to state 486
    singleDatetimeField     go to state 487


state 1226

  859 matchPredicate: rowValueConstructor MATCH matchPredicate1 matchPredicate2 tableSubquery .

    $default  reduce using rule 859 (matchPredicate)


state 1227

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  473 rowValueConstructor: . rowValueConstructorElement
  474                    | . leftParen rowValueConstructorList rightParen
  475                    | . rowSubquery
  476 rowValueConstructorElement: . valueExpression
  477                           | . nullSpecification
  478                           | . defaultSpecification
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression
  812 nullSpecification: . NULL
  813 defaultSpecification: . DEFAULT
  817 rowSubquery: . subquery
  830 betweenPredicate: rowValueConstructor betweenPredicate1 BETWEEN rowValueConstructor AND . rowValueConstructor

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    NULL               shift, and go to state 667
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    DEFAULT            shift, and go to state 686
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 991
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    rowValueConstructor             go to state 1276
    rowValueConstructorElement      go to state 701
    valueExpression                 go to state 702
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 726
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760
    nullSpecification               go to state 761
    defaultSpecification            go to state 762
    rowSubquery                     go to state 763


state 1228

  314 comma: . ','
  838 inValueList: valueExpression . inValueList1
  839 inValueList1: . comma valueExpression
  840             | . inValueList1 comma valueExpression

    ','  shift, and go to state 447

    comma         go to state 1277
    inValueList1  go to state 1278


state 1229

  267 rightParen: . ')'
  837 inPredicateValue: leftParen inValueList . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1279


state 1230

  810 octetLengthExpression: OCTET_LENGTH leftParen stringValueExpression rightParen .

    $default  reduce using rule 810 (octetLengthExpression)


state 1231

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  761 extractExpression: EXTRACT leftParen extractField FROM . extractSource rightParen
  768 extractSource: . datetimeValueExpression
  769              | . intervalValueExpression
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 45
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 48
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 51
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 55
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 56
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 60
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 818
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    term                            go to state 1053
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 1059
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    extractSource                   go to state 1280
    datetimeValueExpression         go to state 1281
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 1282
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759


state 1232

  811 bitLengthExpression: BIT_LENGTH leftParen stringValueExpression rightParen .

    $default  reduce using rule 811 (bitLengthExpression)


state 1233

  807 charLengthExpression: CHARACTER_LENGTH leftParen stringValueExpression rightParen .

    $default  reduce using rule 807 (charLengthExpression)


state 1234

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  710 positionExpression: POSITION leftParen characterValueExpression IN . characterValueExpression rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

    CASE              shift, and go to state 665
    CAST              shift, and go to state 666
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 882
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 670
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 671
    SESSION_USER      shift, and go to state 672
    DATE              shift, and go to state 495
    NULLIF            shift, and go to state 673
    SUM               shift, and go to state 674
    KEY               shift, and go to state 42
    AVG               shift, and go to state 675
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 676
    TIMESTAMP         shift, and go to state 497
    MODULE            shift, and go to state 213
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 498
    SYSTEM_USER       shift, and go to state 677
    SUBSTRING         shift, and go to state 678
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 679
    MAX               shift, and go to state 680
    LOWER             shift, and go to state 681
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 682
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 683
    CURRENT_USER      shift, and go to state 684
    TRANSLATE         shift, and go to state 685
    INTERVAL          shift, and go to state 504
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 687
    TRIM              shift, and go to state 688
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 294

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 889
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    valueExpressionPrimary          go to state 978
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 1283
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 980
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745


state 1235

  553 generalSetFunction: setFunctionType leftParen generalSetFunction1 valueExpression rightParen .

    $default  reduce using rule 553 (generalSetFunction)


state 1236

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  786                        | leftParen . datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 45
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 48
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 51
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 55
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 56
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 60
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 818
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    term                            go to state 1053
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 1059
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    datetimeValueExpression         go to state 1284
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 1285
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759


state 1237

  782 timeZoneSpecifier: TIME ZONE intervalValueExpression .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  799 intervalValueExpression1: intervalValueExpression .  [UNKNOWN_LEX]

    UNKNOWN_LEX  reduce using rule 782 (timeZoneSpecifier)
    UNKNOWN_LEX  [reduce using rule 799 (intervalValueExpression1)]
    $default     reduce using rule 782 (timeZoneSpecifier)


state 1238

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  845 likePredicate2: ESCAPE . escapeCharacter
  848 escapeCharacter: . characterValueExpression

    CASE              shift, and go to state 665
    CAST              shift, and go to state 666
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 882
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 670
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 671
    SESSION_USER      shift, and go to state 672
    DATE              shift, and go to state 495
    NULLIF            shift, and go to state 673
    SUM               shift, and go to state 674
    KEY               shift, and go to state 42
    AVG               shift, and go to state 675
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 676
    TIMESTAMP         shift, and go to state 497
    MODULE            shift, and go to state 213
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 498
    SYSTEM_USER       shift, and go to state 677
    SUBSTRING         shift, and go to state 678
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 679
    MAX               shift, and go to state 680
    LOWER             shift, and go to state 681
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 682
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 683
    CURRENT_USER      shift, and go to state 684
    TRANSLATE         shift, and go to state 685
    INTERVAL          shift, and go to state 504
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 687
    TRIM              shift, and go to state 688
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 294

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 889
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    valueExpressionPrimary          go to state 978
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 1286
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 980
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    escapeCharacter                 go to state 1287


state 1239

  841 likePredicate: matchValue likePredicate1 LIKE pattern likePredicate2 .

    $default  reduce using rule 841 (likePredicate)


state 1240

  444 referentialAction: SET . NULL
  445                  | SET . DEFAULT

    NULL     shift, and go to state 1288
    DEFAULT  shift, and go to state 1289


state 1241

  446 referentialAction: NO . ACTION

    ACTION  shift, and go to state 1290


state 1242

  443 referentialAction: CASCADE .

    $default  reduce using rule 443 (referentialAction)


state 1243

  447 deleteRule: ON DELETE referentialAction .

    $default  reduce using rule 447 (deleteRule)


state 1244

  442 updateRule: ON UPDATE referentialAction .

    $default  reduce using rule 442 (updateRule)


state 1245

  689 simpleWhenClause: WHEN whenOperand THEN result .

    $default  reduce using rule 689 (simpleWhenClause)


state 1246

  701 castSpecification: CAST leftParen castOperand AS castTarget rightParen .

    $default  reduce using rule 701 (castSpecification)


state 1247

  677 caseAbbreviation: NULLIF leftParen valueExpression comma valueExpression rightParen .

    $default  reduce using rule 677 (caseAbbreviation)


state 1248

  374 sign: . UNKNOWN_LEX
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  729 characterSubstringFunction1: FOR . stringLength
  731 stringLength: . numericValueExpression

    UNKNOWN_LEX  shift, and go to state 591

    UNKNOWN_LEX  [reduce using rule 490 (factor1)]
    $default     reduce using rule 490 (factor1)

    sign                    go to state 1031
    numericValueExpression  go to state 1291
    term                    go to state 1188
    factor                  go to state 705
    factor1                 go to state 706
    stringLength            go to state 1292


state 1249

  267 rightParen: . ')'
  727 characterSubstringFunction: SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1293


state 1250

  374 sign: . UNKNOWN_LEX
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  731 stringLength: . numericValueExpression
  754 bitSubstringFunction1: FOR . stringLength

    UNKNOWN_LEX  shift, and go to state 591

    UNKNOWN_LEX  [reduce using rule 490 (factor1)]
    $default     reduce using rule 490 (factor1)

    sign                    go to state 1031
    numericValueExpression  go to state 1291
    term                    go to state 1188
    factor                  go to state 705
    factor1                 go to state 706
    stringLength            go to state 1294


state 1251

  267 rightParen: . ')'
  752 bitSubstringFunction: SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1295


state 1252

  734 formofuseConversion: CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen .

    $default  reduce using rule 734 (formofuseConversion)


state 1253

  736 characterTranslation: TRANSLATE leftParen characterValueExpression USING translationName rightParen .

    $default  reduce using rule 736 (characterTranslation)


state 1254

  680 caseAbbreviation1: caseAbbreviation1 comma valueExpression .

    $default  reduce using rule 680 (caseAbbreviation1)


state 1255

  665 tableValueConstructorList1: tableValueConstructorList1 comma rowValueConstructor .

    $default  reduce using rule 665 (tableValueConstructorList1)


state 1256

  601 asClause: asClause1 columnName .

    $default  reduce using rule 601 (asClause)


state 1257

  597 selectSublist: qualifier period asterisk .

    $default  reduce using rule 597 (selectSublist)


state 1258

  611 fromClause: FROM tableReference . fromClause1
  612 fromClause1: .  [HAVING, WHERE, GROUP, UNION, INTERSECT, EXCEPT, ',', ')']
  613            | . fromClause1 comma tableReference
  630 crossJoin: tableReference . CROSS JOIN tableReference
  631 qualifiedJoin: tableReference . qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  632 qualifiedJoin1: .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL]
  633               | . NATURAL

    CROSS    shift, and go to state 1011
    NATURAL  shift, and go to state 1012

    RIGHT     reduce using rule 632 (qualifiedJoin1)
    INNER     reduce using rule 632 (qualifiedJoin1)
    UNION     reduce using rule 612 (fromClause1)
    UNION     [reduce using rule 632 (qualifiedJoin1)]
    JOIN      reduce using rule 632 (qualifiedJoin1)
    LEFT      reduce using rule 632 (qualifiedJoin1)
    FULL      reduce using rule 632 (qualifiedJoin1)
    $default  reduce using rule 612 (fromClause1)

    fromClause1     go to state 1296
    qualifiedJoin1  go to state 1013


state 1259

  449 searchCondition: . booleanTerm
  450                | . searchCondition OR booleanTerm
  451 booleanTerm: . booleanFactor
  452            | . booleanTerm AND booleanFactor
  453 booleanFactor: . booleanFactor1 booleanTest
  454 booleanFactor1: .  [EXISTS, CASE, CAST, DESC, NULL, ASC, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  455               | . NOT
  651 whereClause: WHERE . searchCondition

    NOT  shift, and go to state 602

    $default  reduce using rule 454 (booleanFactor1)

    searchCondition  go to state 1297
    booleanTerm      go to state 604
    booleanFactor    go to state 605
    booleanFactor1   go to state 606


state 1260

  604 tableExpression: fromClause tableExpression1 . tableExpression2 tableExpression3
  607 tableExpression2: .  [HAVING, UNION, INTERSECT, EXCEPT, ')']
  608                 | . groupByClause
  652 groupByClause: . GROUP BY groupingColumnReferenceList

    GROUP  shift, and go to state 1298

    $default  reduce using rule 607 (tableExpression2)

    tableExpression2  go to state 1299
    groupByClause     go to state 1300


state 1261

  606 tableExpression1: whereClause .

    $default  reduce using rule 606 (tableExpression1)


state 1262

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  595 selectList1: selectList1 comma . selectSublist
  596 selectSublist: . derivedColumn
  597              | . qualifier period asterisk
  598 derivedColumn: . valueExpression derivedColumn1
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 818
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 1116
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 1117
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    selectSublist                   go to state 1301
    derivedColumn                   go to state 1121
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760


state 1263

  624 derivedColumnList: columnNameList .

    $default  reduce using rule 624 (derivedColumnList)


state 1264

  267 rightParen: . ')'
  623 correlationSpecification2: leftParen derivedColumnList . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1302


state 1265

  230 leftParen: . '('
  671 correspondingSpec1: BY . leftParen correspondingColumnList rightParen

    '('  shift, and go to state 294

    leftParen  go to state 1303


state 1266

  669 correspondingSpec: CORRESPONDING correspondingSpec1 .

    $default  reduce using rule 669 (correspondingSpec)


state 1267

  667 queryTerm: nonjoinQueryTerm .

    $default  reduce using rule 667 (queryTerm)


state 1268

  616 tableReference: joinedTable .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL, CROSS, NATURAL]
  668 queryTerm: joinedTable .  [UNION, INTERSECT, EXCEPT, ')']

    UNION      reduce using rule 616 (tableReference)
    UNION      [reduce using rule 668 (queryTerm)]
    INTERSECT  reduce using rule 668 (queryTerm)
    EXCEPT     reduce using rule 668 (queryTerm)
    ')'        reduce using rule 668 (queryTerm)
    $default   reduce using rule 616 (tableReference)


state 1269

  568 nonjoinQueryExpression: queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm .  [UNION, EXCEPT, ')']
  579 nonjoinQueryTerm: queryTerm . INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary

    INTERSECT  shift, and go to state 1015

    $default  reduce using rule 568 (nonjoinQueryExpression)


state 1270

  569 nonjoinQueryExpression: queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm .  [UNION, EXCEPT, ')']
  579 nonjoinQueryTerm: queryTerm . INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary

    INTERSECT  shift, and go to state 1015

    $default  reduce using rule 569 (nonjoinQueryExpression)


state 1271

  630 crossJoin: tableReference . CROSS JOIN tableReference
  631 qualifiedJoin: tableReference . qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  631              | tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference . qualifiedJoin3
  632 qualifiedJoin1: .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL]
  633               | . NATURAL
  636 qualifiedJoin3: .  [HAVING, WHERE, GROUP, RIGHT, INNER, UNION, JOIN, LEFT, FULL, ON, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']
  637               | . joinSpecification
  646 joinSpecification: . joinCondition
  647                  | . namedColumnsJoin
  648 joinCondition: . ON searchCondition
  649 namedColumnsJoin: . USING leftParen joinColumnList rightParen

    ON       shift, and go to state 1304
    CROSS    shift, and go to state 1011
    NATURAL  shift, and go to state 1012
    USING    shift, and go to state 1305

    RIGHT     reduce using rule 632 (qualifiedJoin1)
    RIGHT     [reduce using rule 636 (qualifiedJoin3)]
    INNER     reduce using rule 632 (qualifiedJoin1)
    INNER     [reduce using rule 636 (qualifiedJoin3)]
    UNION     reduce using rule 632 (qualifiedJoin1)
    UNION     [reduce using rule 636 (qualifiedJoin3)]
    JOIN      reduce using rule 632 (qualifiedJoin1)
    JOIN      [reduce using rule 636 (qualifiedJoin3)]
    LEFT      reduce using rule 632 (qualifiedJoin1)
    LEFT      [reduce using rule 636 (qualifiedJoin3)]
    FULL      reduce using rule 632 (qualifiedJoin1)
    FULL      [reduce using rule 636 (qualifiedJoin3)]
    ON        [reduce using rule 636 (qualifiedJoin3)]
    CROSS     [reduce using rule 636 (qualifiedJoin3)]
    NATURAL   [reduce using rule 636 (qualifiedJoin3)]
    USING     [reduce using rule 636 (qualifiedJoin3)]
    $default  reduce using rule 636 (qualifiedJoin3)

    qualifiedJoin1     go to state 1013
    qualifiedJoin3     go to state 1306
    joinSpecification  go to state 1307
    joinCondition      go to state 1308
    namedColumnsJoin   go to state 1309


state 1272

  673 queryPrimary: nonjoinQueryPrimary .

    $default  reduce using rule 673 (queryPrimary)


state 1273

  616 tableReference: joinedTable .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL, CROSS, NATURAL]
  674 queryPrimary: joinedTable .  [UNION, INTERSECT, EXCEPT, ')']

    UNION      reduce using rule 616 (tableReference)
    UNION      [reduce using rule 674 (queryPrimary)]
    INTERSECT  reduce using rule 674 (queryPrimary)
    EXCEPT     reduce using rule 674 (queryPrimary)
    ')'        reduce using rule 674 (queryPrimary)
    $default   reduce using rule 616 (tableReference)


state 1274

  579 nonjoinQueryTerm: queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary .

    $default  reduce using rule 579 (nonjoinQueryTerm)


state 1275

  786 intervalValueExpression: leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier .

    $default  reduce using rule 786 (intervalValueExpression)


state 1276

  830 betweenPredicate: rowValueConstructor betweenPredicate1 BETWEEN rowValueConstructor AND rowValueConstructor .

    $default  reduce using rule 830 (betweenPredicate)


state 1277

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression
  839 inValueList1: comma . valueExpression

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 818
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 1310
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760


state 1278

  314 comma: . ','
  838 inValueList: valueExpression inValueList1 .  [')']
  840 inValueList1: inValueList1 . comma valueExpression

    ','  shift, and go to state 447

    $default  reduce using rule 838 (inValueList)

    comma  go to state 1311


state 1279

  837 inPredicateValue: leftParen inValueList rightParen .

    $default  reduce using rule 837 (inPredicateValue)


state 1280

  267 rightParen: . ')'
  761 extractExpression: EXTRACT leftParen extractField FROM extractSource . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1312


state 1281

  768 extractSource: datetimeValueExpression .  [')']
  772 datetimeValueExpression: datetimeValueExpression . plusSign intervalTerm
  773                        | datetimeValueExpression . minusSign intervalTerm
  800 plusSign: . UNKNOWN_LEX
  802 minusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 876

    $default  reduce using rule 768 (extractSource)

    plusSign   go to state 925
    minusSign  go to state 926


state 1282

  769 extractSource: intervalValueExpression .  [')']
  771 datetimeValueExpression: intervalValueExpression . plusSign datetimeTerm
  799 intervalValueExpression1: intervalValueExpression .  [UNKNOWN_LEX]
  800 plusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 930

    UNKNOWN_LEX  [reduce using rule 799 (intervalValueExpression1)]
    $default     reduce using rule 769 (extractSource)

    plusSign  go to state 931


state 1283

  267 rightParen: . ')'
  710 positionExpression: POSITION leftParen characterValueExpression IN characterValueExpression . rightParen
  713 concatenation: characterValueExpression . concatenationOperator characterFactor
  714 concatenationOperator: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 920
    ')'          shift, and go to state 448

    rightParen             go to state 1313
    concatenationOperator  go to state 921


state 1284

  772 datetimeValueExpression: datetimeValueExpression . plusSign intervalTerm
  773                        | datetimeValueExpression . minusSign intervalTerm
  786 intervalValueExpression: leftParen datetimeValueExpression . minusSign datetimeTerm rightParen intervalQualifier
  800 plusSign: . UNKNOWN_LEX
  802 minusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 876

    plusSign   go to state 925
    minusSign  go to state 1016


state 1285

  771 datetimeValueExpression: intervalValueExpression . plusSign datetimeTerm
  799 intervalValueExpression1: intervalValueExpression .  [UNKNOWN_LEX]
  800 plusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 930

    UNKNOWN_LEX  [reduce using rule 799 (intervalValueExpression1)]

    plusSign  go to state 931


state 1286

  713 concatenation: characterValueExpression . concatenationOperator characterFactor
  714 concatenationOperator: . UNKNOWN_LEX
  848 escapeCharacter: characterValueExpression .  [HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, THEN, JOIN, LEFT, FULL, AND, ON, IS, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']

    UNKNOWN_LEX  shift, and go to state 920

    $default  reduce using rule 848 (escapeCharacter)

    concatenationOperator  go to state 921


state 1287

  845 likePredicate2: ESCAPE escapeCharacter .

    $default  reduce using rule 845 (likePredicate2)


state 1288

  444 referentialAction: SET NULL .

    $default  reduce using rule 444 (referentialAction)


state 1289

  445 referentialAction: SET DEFAULT .

    $default  reduce using rule 445 (referentialAction)


state 1290

  446 referentialAction: NO ACTION .

    $default  reduce using rule 446 (referentialAction)


state 1291

  484 numericValueExpression: numericValueExpression . plusSign term
  485                       | numericValueExpression . minusSign term
  731 stringLength: numericValueExpression .  [')']
  800 plusSign: . UNKNOWN_LEX
  802 minusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 876

    $default  reduce using rule 731 (stringLength)

    plusSign   go to state 877
    minusSign  go to state 878


state 1292

  729 characterSubstringFunction1: FOR stringLength .

    $default  reduce using rule 729 (characterSubstringFunction1)


state 1293

  727 characterSubstringFunction: SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen .

    $default  reduce using rule 727 (characterSubstringFunction)


state 1294

  754 bitSubstringFunction1: FOR stringLength .

    $default  reduce using rule 754 (bitSubstringFunction1)


state 1295

  752 bitSubstringFunction: SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen .

    $default  reduce using rule 752 (bitSubstringFunction)


state 1296

  314 comma: . ','
  611 fromClause: FROM tableReference fromClause1 .  [HAVING, WHERE, GROUP, UNION, INTERSECT, EXCEPT, ')']
  613 fromClause1: fromClause1 . comma tableReference

    ','  shift, and go to state 447

    $default  reduce using rule 611 (fromClause)

    comma  go to state 1314


state 1297

  450 searchCondition: searchCondition . OR booleanTerm
  651 whereClause: WHERE searchCondition .  [HAVING, GROUP, UNION, INTERSECT, EXCEPT, ')']

    OR  shift, and go to state 661

    $default  reduce using rule 651 (whereClause)


state 1298

  652 groupByClause: GROUP . BY groupingColumnReferenceList

    BY  shift, and go to state 1315


state 1299

  604 tableExpression: fromClause tableExpression1 tableExpression2 . tableExpression3
  609 tableExpression3: .  [UNION, INTERSECT, EXCEPT, ')']
  610                 | . havingClause
  661 havingClause: . HAVING searchCondition

    HAVING  shift, and go to state 1316

    $default  reduce using rule 609 (tableExpression3)

    tableExpression3  go to state 1317
    havingClause      go to state 1318


state 1300

  608 tableExpression2: groupByClause .

    $default  reduce using rule 608 (tableExpression2)


state 1301

  595 selectList1: selectList1 comma selectSublist .

    $default  reduce using rule 595 (selectList1)


state 1302

  623 correlationSpecification2: leftParen derivedColumnList rightParen .

    $default  reduce using rule 623 (correlationSpecification2)


state 1303

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  224 identifier: . id
  241 columnName: . identifier
  431 columnNameList: . columnName columnNameList1
  671 correspondingSpec1: BY leftParen . correspondingColumnList rightParen
  672 correspondingColumnList: . columnNameList

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id                       go to state 297
    identifier               go to state 354
    columnName               go to state 608
    columnNameList           go to state 1319
    correspondingColumnList  go to state 1320


state 1304

  449 searchCondition: . booleanTerm
  450                | . searchCondition OR booleanTerm
  451 booleanTerm: . booleanFactor
  452            | . booleanTerm AND booleanFactor
  453 booleanFactor: . booleanFactor1 booleanTest
  454 booleanFactor1: .  [EXISTS, CASE, CAST, DESC, NULL, ASC, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  455               | . NOT
  648 joinCondition: ON . searchCondition

    NOT  shift, and go to state 602

    $default  reduce using rule 454 (booleanFactor1)

    searchCondition  go to state 1321
    booleanTerm      go to state 604
    booleanFactor    go to state 605
    booleanFactor1   go to state 606


state 1305

  230 leftParen: . '('
  649 namedColumnsJoin: USING . leftParen joinColumnList rightParen

    '('  shift, and go to state 294

    leftParen  go to state 1322


state 1306

  631 qualifiedJoin: tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3 .

    $default  reduce using rule 631 (qualifiedJoin)


state 1307

  637 qualifiedJoin3: joinSpecification .

    $default  reduce using rule 637 (qualifiedJoin3)


state 1308

  646 joinSpecification: joinCondition .

    $default  reduce using rule 646 (joinSpecification)


state 1309

  647 joinSpecification: namedColumnsJoin .

    $default  reduce using rule 647 (joinSpecification)


state 1310

  839 inValueList1: comma valueExpression .

    $default  reduce using rule 839 (inValueList1)


state 1311

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  374 sign: . UNKNOWN_LEX
  375 unsignedNumericLiteral: . UNKNOWN_LEX
  376 generalLiteral: . characterStringLiteral
  377               | . nationalCharacterStringLiteral
  378               | . bitStringLiteral
  379               | . hexStringLiteral
  380               | . datetimeLiteral
  381               | . intervalLiteral
  382 characterStringLiteral: . UNKNOWN_LEX
  383 nationalCharacterStringLiteral: . UNKNOWN_LEX
  384 bitStringLiteral: . UNKNOWN_LEX
  385 hexStringLiteral: . UNKNOWN_LEX
  386 datetimeLiteral: . dateLiteral
  387                | . timeLiteral
  388                | . timestampLiteral
  389 dateLiteral: . DATE dateString
  391 timeLiteral: . TIME timeString
  393 timestampLiteral: . TIMESTAMP timestampString
  395 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  399 datetimeValueFunction: . currentDateValueFunction
  400                      | . currentTimeValueFunction
  401                      | . currentTimestampValueFunction
  402 currentDateValueFunction: . CURRENT_DATE
  403 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  406 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  479 valueExpression: . numericValueExpression
  480                | . stringValueExpression
  481                | . datetimeValueExpression
  482                | . intervalValueExpression
  483 numericValueExpression: . term
  484                       | . numericValueExpression plusSign term
  485                       | . numericValueExpression minusSign term
  486 term: . factor
  487     | . term asterisk factor
  488     | . term solidus factor
  489 factor: . factor1 numericPrimary
  490 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  491        | . sign
  494 valueExpressionPrimary: . unsignedValueSpecification
  495                       | . columnReference
  496                       | . setFunctionSpecification
  497                       | . scalarSubquery
  498                       | . caseExpression
  499                       | . leftParen valueExpression rightParen
  500                       | . castSpecification
  501 unsignedValueSpecification: . unsignedLiteral
  502                           | . generalValueSpecification
  503 unsignedLiteral: . unsignedNumericLiteral
  504                | . generalLiteral
  505 generalValueSpecification: . parameterSpecification
  506                          | . dynamicParameterSpecification
  507                          | . variableSpecification
  508                          | . USER
  509                          | . CURRENT_USER
  510                          | . SESSION_USER
  511                          | . SYSTEM_USER
  512                          | . VALUE
  513 parameterSpecification: . parameterName parameterSpecification1
  516 parameterName: . colon identifier
  517 colon: . UNKNOWN_LEX
  521 dynamicParameterSpecification: . questionMark
  522 questionMark: . UNKNOWN_LEX
  523 variableSpecification: . embeddedVariableName variableSpecification1
  526 embeddedVariableName: . colon hostIdentifier
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  550 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  551                         | . generalSetFunction
  553 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  556 setFunctionType: . AVG
  557                | . MAX
  558                | . MIN
  559                | . SUM
  560                | . COUNT
  563 scalarSubquery: . subquery
  564 subquery: . leftParen queryExpression rightParen
  675 caseExpression: . caseAbbreviation
  676               | . caseSpecification
  677 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseSpecification: . simpleCase
  682                  | . searchedCase
  683 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  695 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 characterValueExpression: . concatenation
  712                         | . characterFactor
  713 concatenation: . characterValueExpression concatenationOperator characterFactor
  715 characterFactor: . characterPrimary characterFactor1
  718 characterPrimary: . valueExpressionPrimary
  719                 | . stringValueFunction
  720 stringValueFunction: . characterValueFunction
  721                    | . bitValueFunction
  722 characterValueFunction: . characterSubstringFunction
  723                       | . fold
  724                       | . formofuseConversion
  725                       | . characterTranslation
  726                       | . trimFunction
  727 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  732 fold: . UPPER
  733     | . LOWER leftParen characterValueExpression rightParen
  734 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  736 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  738 trimFunction: . TRIM leftParen trimOperands rightParen
  751 bitValueFunction: . bitSubstringFunction
  752 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  755 bitValueExpression: . bitConcatenation
  756                   | . bitFactor
  757 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  758 bitFactor: . bitPrimary
  759 bitPrimary: . valueExpressionPrimary
  760           | . stringValueFunction
  770 datetimeValueExpression: . datetimeTerm
  771                        | . intervalValueExpression plusSign datetimeTerm
  772                        | . datetimeValueExpression plusSign intervalTerm
  773                        | . datetimeValueExpression minusSign intervalTerm
  774 datetimeTerm: . datetimeFactor
  775 datetimeFactor: . datetimePrimary datetimeFactor1
  778 datetimePrimary: . valueExpressionPrimary
  779                | . datetimeValueFunction
  783 intervalValueExpression: . intervalTerm
  784                        | . intervalValueExpression1 plusSign intervalTerm1
  785                        | . intervalValueExpression1 minusSign intervalTerm1
  786                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787 intervalTerm: . intervalFactor
  788             | . intervalTerm2 asterisk factor
  789             | . intervalTerm2 solidus factor
  790             | . term asterisk intervalFactor
  791 intervalFactor: . intervalFactor1 intervalPrimary
  792 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  793                | . sign
  797 intervalTerm2: . intervalTerm
  799 intervalValueExpression1: . intervalValueExpression
  808 stringValueExpression: . characterValueExpression
  809                      | . bitValueExpression
  840 inValueList1: inValueList1 comma . valueExpression

    CASE               shift, and go to state 665
    CAST               shift, and go to state 666
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 669
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 670
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 671
    SESSION_USER       shift, and go to state 672
    DATE               shift, and go to state 495
    NULLIF             shift, and go to state 673
    CURRENT_DATE       shift, and go to state 496
    SUM                shift, and go to state 674
    KEY                shift, and go to state 42
    AVG                shift, and go to state 675
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 676
    TIMESTAMP          shift, and go to state 497
    MODULE             shift, and go to state 213
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 498
    SYSTEM_USER        shift, and go to state 677
    SUBSTRING          shift, and go to state 678
    CURRENT_TIME       shift, and go to state 500
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 679
    MAX                shift, and go to state 680
    CURRENT_TIMESTAMP  shift, and go to state 502
    LOWER              shift, and go to state 681
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 682
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 683
    CURRENT_USER       shift, and go to state 684
    TRANSLATE          shift, and go to state 685
    INTERVAL           shift, and go to state 504
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 687
    TRIM               shift, and go to state 688
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 294

    CASE              [reduce using rule 490 (factor1)]
    CASE              [reduce using rule 792 (intervalFactor1)]
    CAST              [reduce using rule 490 (factor1)]
    CAST              [reduce using rule 792 (intervalFactor1)]
    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 490 (factor1)]
    DESC              [reduce using rule 545 (columnReference1)]
    DESC              [reduce using rule 792 (intervalFactor1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 490 (factor1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 792 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 490 (factor1)]
    UNKNOWN_LEX       [reduce using rule 792 (intervalFactor1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 490 (factor1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 792 (intervalFactor1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 490 (factor1)]
    MIN               [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 792 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 490 (factor1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 792 (intervalFactor1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 490 (factor1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 792 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 490 (factor1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 792 (intervalFactor1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 490 (factor1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 792 (intervalFactor1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 490 (factor1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 792 (intervalFactor1)]
    SESSION_USER      [reduce using rule 490 (factor1)]
    SESSION_USER      [reduce using rule 792 (intervalFactor1)]
    DATE              [reduce using rule 490 (factor1)]
    DATE              [reduce using rule 792 (intervalFactor1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 490 (factor1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 792 (intervalFactor1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 490 (factor1)]
    SUM               [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 792 (intervalFactor1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 490 (factor1)]
    KEY               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 792 (intervalFactor1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 490 (factor1)]
    AVG               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 792 (intervalFactor1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 490 (factor1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 792 (intervalFactor1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 490 (factor1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 792 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 490 (factor1)]
    TIMESTAMP         [reduce using rule 792 (intervalFactor1)]
    MODULE            [reduce using rule 490 (factor1)]
    MODULE            [reduce using rule 792 (intervalFactor1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 490 (factor1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 792 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 490 (factor1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 792 (intervalFactor1)]
    TIME              [reduce using rule 490 (factor1)]
    TIME              [reduce using rule 792 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 490 (factor1)]
    SYSTEM_USER       [reduce using rule 792 (intervalFactor1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 490 (factor1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 792 (intervalFactor1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 490 (factor1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 792 (intervalFactor1)]
    USER              [reduce using rule 490 (factor1)]
    USER              [reduce using rule 792 (intervalFactor1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 490 (factor1)]
    MAX               [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 792 (intervalFactor1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 490 (factor1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 792 (intervalFactor1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 490 (factor1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 792 (intervalFactor1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 490 (factor1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 792 (intervalFactor1)]
    VALUE             [reduce using rule 490 (factor1)]
    VALUE             [reduce using rule 792 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 490 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 792 (intervalFactor1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 490 (factor1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 792 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 490 (factor1)]
    CURRENT_USER      [reduce using rule 792 (intervalFactor1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 490 (factor1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 792 (intervalFactor1)]
    INTERVAL          [reduce using rule 490 (factor1)]
    INTERVAL          [reduce using rule 792 (intervalFactor1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 490 (factor1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 792 (intervalFactor1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 490 (factor1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 792 (intervalFactor1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 490 (factor1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 792 (intervalFactor1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 490 (factor1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 792 (intervalFactor1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 490 (factor1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 792 (intervalFactor1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 490 (factor1)]
    ID                [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 792 (intervalFactor1)]
    '('               [reduce using rule 490 (factor1)]
    '('               [reduce using rule 792 (intervalFactor1)]
    $default          reduce using rule 490 (factor1)

    id                              go to state 297
    tableName                       go to state 689
    qualifiedName                   go to state 215
    qualifiedName1                  go to state 216
    schemaName                      go to state 217
    identifier                      go to state 690
    qualifiedLocalTableName         go to state 218
    leftParen                       go to state 818
    sign                            go to state 692
    unsignedNumericLiteral          go to state 693
    generalLiteral                  go to state 694
    characterStringLiteral          go to state 511
    nationalCharacterStringLiteral  go to state 512
    bitStringLiteral                go to state 513
    hexStringLiteral                go to state 514
    datetimeLiteral                 go to state 515
    dateLiteral                     go to state 516
    timeLiteral                     go to state 517
    timestampLiteral                go to state 518
    intervalLiteral                 go to state 519
    datetimeValueFunction           go to state 695
    currentDateValueFunction        go to state 521
    currentTimeValueFunction        go to state 522
    currentTimestampValueFunction   go to state 523
    valueExpression                 go to state 1323
    numericValueExpression          go to state 703
    term                            go to state 704
    factor                          go to state 705
    factor1                         go to state 706
    valueExpressionPrimary          go to state 707
    unsignedValueSpecification      go to state 708
    unsignedLiteral                 go to state 709
    generalValueSpecification       go to state 710
    parameterSpecification          go to state 711
    parameterName                   go to state 712
    colon                           go to state 713
    dynamicParameterSpecification   go to state 714
    questionMark                    go to state 715
    variableSpecification           go to state 716
    embeddedVariableName            go to state 717
    columnReference                 go to state 718
    columnReference1                go to state 719
    qualifier                       go to state 720
    correlationName                 go to state 721
    setFunctionSpecification        go to state 722
    generalSetFunction              go to state 723
    setFunctionType                 go to state 724
    scalarSubquery                  go to state 725
    subquery                        go to state 820
    caseExpression                  go to state 727
    caseAbbreviation                go to state 728
    caseSpecification               go to state 729
    simpleCase                      go to state 730
    searchedCase                    go to state 731
    castSpecification               go to state 732
    characterValueExpression        go to state 824
    concatenation                   go to state 734
    characterFactor                 go to state 735
    characterPrimary                go to state 736
    stringValueFunction             go to state 737
    characterValueFunction          go to state 738
    characterSubstringFunction      go to state 739
    fold                            go to state 740
    formofuseConversion             go to state 741
    characterTranslation            go to state 742
    trimFunction                    go to state 743
    bitValueFunction                go to state 744
    bitSubstringFunction            go to state 745
    bitValueExpression              go to state 746
    bitConcatenation                go to state 747
    bitFactor                       go to state 748
    bitPrimary                      go to state 749
    datetimeValueExpression         go to state 750
    datetimeTerm                    go to state 751
    datetimeFactor                  go to state 752
    datetimePrimary                 go to state 753
    intervalValueExpression         go to state 754
    intervalTerm                    go to state 755
    intervalFactor                  go to state 756
    intervalFactor1                 go to state 757
    intervalTerm2                   go to state 758
    intervalValueExpression1        go to state 759
    stringValueExpression           go to state 760


state 1312

  761 extractExpression: EXTRACT leftParen extractField FROM extractSource rightParen .

    $default  reduce using rule 761 (extractExpression)


state 1313

  710 positionExpression: POSITION leftParen characterValueExpression IN characterValueExpression rightParen .

    $default  reduce using rule 710 (positionExpression)


state 1314

  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  225 qualifiedLocalTableName: . MODULE period localTableName
  230 leftParen: . '('
  564 subquery: . leftParen queryExpression rightParen
  613 fromClause1: fromClause1 comma . tableReference
  614 tableReference: . tableName tableReference1
  615               | . derivedTable correlationSpecification
  616               | . joinedTable
  625 derivedTable: . tableSubquery
  626 tableSubquery: . subquery
  627 joinedTable: . crossJoin
  628            | . qualifiedJoin
  629            | . leftParen joinedTable rightParen
  630 crossJoin: . tableReference CROSS JOIN tableReference
  631 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3

    UNKNOWN_LEX  shift, and go to state 212
    MODULE       shift, and go to state 213
    '('          shift, and go to state 294

    $default  reduce using rule 219 (qualifiedName1)

    tableName                go to state 957
    qualifiedName            go to state 215
    qualifiedName1           go to state 216
    schemaName               go to state 217
    qualifiedLocalTableName  go to state 218
    leftParen                go to state 1217
    subquery                 go to state 815
    tableReference           go to state 1324
    derivedTable             go to state 852
    tableSubquery            go to state 853
    joinedTable              go to state 1219
    crossJoin                go to state 855
    qualifiedJoin            go to state 856


state 1315

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  652 groupByClause: GROUP BY . groupingColumnReferenceList
  653 groupingColumnReferenceList: . groupingColumnReference groupingColumnReferenceList1
  656 groupingColumnReference: . columnReference groupingColumnReference1

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 212
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    MODULE            shift, and go to state 213
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]

    id                           go to state 297
    tableName                    go to state 689
    qualifiedName                go to state 215
    qualifiedName1               go to state 216
    schemaName                   go to state 217
    identifier                   go to state 690
    qualifiedLocalTableName      go to state 218
    columnReference              go to state 1325
    columnReference1             go to state 719
    qualifier                    go to state 720
    correlationName              go to state 721
    groupingColumnReferenceList  go to state 1326
    groupingColumnReference      go to state 1327


state 1316

  449 searchCondition: . booleanTerm
  450                | . searchCondition OR booleanTerm
  451 booleanTerm: . booleanFactor
  452            | . booleanTerm AND booleanFactor
  453 booleanFactor: . booleanFactor1 booleanTest
  454 booleanFactor1: .  [EXISTS, CASE, CAST, DESC, NULL, ASC, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  455               | . NOT
  661 havingClause: HAVING . searchCondition

    NOT  shift, and go to state 602

    $default  reduce using rule 454 (booleanFactor1)

    searchCondition  go to state 1328
    booleanTerm      go to state 604
    booleanFactor    go to state 605
    booleanFactor1   go to state 606


state 1317

  604 tableExpression: fromClause tableExpression1 tableExpression2 tableExpression3 .

    $default  reduce using rule 604 (tableExpression)


state 1318

  610 tableExpression3: havingClause .

    $default  reduce using rule 610 (tableExpression3)


state 1319

  672 correspondingColumnList: columnNameList .

    $default  reduce using rule 672 (correspondingColumnList)


state 1320

  267 rightParen: . ')'
  671 correspondingSpec1: BY leftParen correspondingColumnList . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1329


state 1321

  450 searchCondition: searchCondition . OR booleanTerm
  648 joinCondition: ON searchCondition .  [HAVING, WHERE, GROUP, RIGHT, INNER, UNION, JOIN, LEFT, FULL, ON, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']

    OR  shift, and go to state 661

    $default  reduce using rule 648 (joinCondition)


state 1322

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  224 identifier: . id
  241 columnName: . identifier
  431 columnNameList: . columnName columnNameList1
  649 namedColumnsJoin: USING leftParen . joinColumnList rightParen
  650 joinColumnList: . columnNameList

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id              go to state 297
    identifier      go to state 354
    columnName      go to state 608
    columnNameList  go to state 1330
    joinColumnList  go to state 1331


state 1323

  840 inValueList1: inValueList1 comma valueExpression .

    $default  reduce using rule 840 (inValueList1)


state 1324

  613 fromClause1: fromClause1 comma tableReference .  [HAVING, WHERE, GROUP, UNION, INTERSECT, EXCEPT, ',', ')']
  630 crossJoin: tableReference . CROSS JOIN tableReference
  631 qualifiedJoin: tableReference . qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  632 qualifiedJoin1: .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL]
  633               | . NATURAL

    CROSS    shift, and go to state 1011
    NATURAL  shift, and go to state 1012

    RIGHT     reduce using rule 632 (qualifiedJoin1)
    INNER     reduce using rule 632 (qualifiedJoin1)
    UNION     reduce using rule 613 (fromClause1)
    UNION     [reduce using rule 632 (qualifiedJoin1)]
    JOIN      reduce using rule 632 (qualifiedJoin1)
    LEFT      reduce using rule 632 (qualifiedJoin1)
    FULL      reduce using rule 632 (qualifiedJoin1)
    $default  reduce using rule 613 (fromClause1)

    qualifiedJoin1  go to state 1013


state 1325

  656 groupingColumnReference: columnReference . groupingColumnReference1
  657 groupingColumnReference1: .  [HAVING, UNION, INTERSECT, EXCEPT, ',', ')']
  658                         | . collateClause
  659 collateClause: . COLLATE collationName

    COLLATE  shift, and go to state 596

    $default  reduce using rule 657 (groupingColumnReference1)

    groupingColumnReference1  go to state 1332
    collateClause             go to state 1333


state 1326

  652 groupByClause: GROUP BY groupingColumnReferenceList .

    $default  reduce using rule 652 (groupByClause)


state 1327

  653 groupingColumnReferenceList: groupingColumnReference . groupingColumnReferenceList1
  654 groupingColumnReferenceList1: .
  655                             | . groupingColumnReferenceList1 comma groupingColumnReference

    $default  reduce using rule 654 (groupingColumnReferenceList1)

    groupingColumnReferenceList1  go to state 1334


state 1328

  450 searchCondition: searchCondition . OR booleanTerm
  661 havingClause: HAVING searchCondition .  [UNION, INTERSECT, EXCEPT, ')']

    OR  shift, and go to state 661

    $default  reduce using rule 661 (havingClause)


state 1329

  671 correspondingSpec1: BY leftParen correspondingColumnList rightParen .

    $default  reduce using rule 671 (correspondingSpec1)


state 1330

  650 joinColumnList: columnNameList .

    $default  reduce using rule 650 (joinColumnList)


state 1331

  267 rightParen: . ')'
  649 namedColumnsJoin: USING leftParen joinColumnList . rightParen

    ')'  shift, and go to state 448

    rightParen  go to state 1335


state 1332

  656 groupingColumnReference: columnReference groupingColumnReference1 .

    $default  reduce using rule 656 (groupingColumnReference)


state 1333

  658 groupingColumnReference1: collateClause .

    $default  reduce using rule 658 (groupingColumnReference1)


state 1334

  314 comma: . ','
  653 groupingColumnReferenceList: groupingColumnReference groupingColumnReferenceList1 .  [HAVING, UNION, INTERSECT, EXCEPT, ')']
  655 groupingColumnReferenceList1: groupingColumnReferenceList1 . comma groupingColumnReference

    ','  shift, and go to state 447

    $default  reduce using rule 653 (groupingColumnReferenceList)

    comma  go to state 1336


state 1335

  649 namedColumnsJoin: USING leftParen joinColumnList rightParen .

    $default  reduce using rule 649 (namedColumnsJoin)


state 1336

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  216 tableName: . qualifiedName
  217          | . qualifiedLocalTableName
  218 qualifiedName: . qualifiedName1 qualifiedIdentifier
  219 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  220               | . schemaName period
  221 schemaName: . UNKNOWN_LEX
  224 identifier: . id
  225 qualifiedLocalTableName: . MODULE period localTableName
  544 columnReference: . columnReference1 columnName
  545 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  546                 | . qualifier period
  547 qualifier: . tableName
  548          | . correlationName
  549 correlationName: . identifier
  655 groupingColumnReferenceList1: groupingColumnReferenceList1 comma . groupingColumnReference
  656 groupingColumnReference: . columnReference groupingColumnReference1

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 212
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    MODULE            shift, and go to state 213
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    DESC              [reduce using rule 219 (qualifiedName1)]
    DESC              [reduce using rule 545 (columnReference1)]
    ASC               [reduce using rule 219 (qualifiedName1)]
    ASC               [reduce using rule 545 (columnReference1)]
    ACTION            [reduce using rule 219 (qualifiedName1)]
    ACTION            [reduce using rule 545 (columnReference1)]
    MIN               [reduce using rule 219 (qualifiedName1)]
    MIN               [reduce using rule 545 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 219 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 545 (columnReference1)]
    DEFERRED          [reduce using rule 219 (qualifiedName1)]
    DEFERRED          [reduce using rule 545 (columnReference1)]
    DEFERRABLE        [reduce using rule 219 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 545 (columnReference1)]
    ZONE              [reduce using rule 219 (qualifiedName1)]
    ZONE              [reduce using rule 545 (columnReference1)]
    COUNT             [reduce using rule 219 (qualifiedName1)]
    COUNT             [reduce using rule 545 (columnReference1)]
    NULLIF            [reduce using rule 219 (qualifiedName1)]
    NULLIF            [reduce using rule 545 (columnReference1)]
    SUM               [reduce using rule 219 (qualifiedName1)]
    SUM               [reduce using rule 545 (columnReference1)]
    KEY               [reduce using rule 219 (qualifiedName1)]
    KEY               [reduce using rule 545 (columnReference1)]
    AVG               [reduce using rule 219 (qualifiedName1)]
    AVG               [reduce using rule 545 (columnReference1)]
    INITIALLY         [reduce using rule 219 (qualifiedName1)]
    INITIALLY         [reduce using rule 545 (columnReference1)]
    UPPER             [reduce using rule 219 (qualifiedName1)]
    UPPER             [reduce using rule 545 (columnReference1)]
    EXTRACT           [reduce using rule 219 (qualifiedName1)]
    EXTRACT           [reduce using rule 545 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 219 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 545 (columnReference1)]
    SUBSTRING         [reduce using rule 219 (qualifiedName1)]
    SUBSTRING         [reduce using rule 545 (columnReference1)]
    PARTIAL           [reduce using rule 219 (qualifiedName1)]
    PARTIAL           [reduce using rule 545 (columnReference1)]
    MAX               [reduce using rule 219 (qualifiedName1)]
    MAX               [reduce using rule 545 (columnReference1)]
    LOWER             [reduce using rule 219 (qualifiedName1)]
    LOWER             [reduce using rule 545 (columnReference1)]
    CASCADE           [reduce using rule 219 (qualifiedName1)]
    CASCADE           [reduce using rule 545 (columnReference1)]
    TEMPORARY         [reduce using rule 219 (qualifiedName1)]
    TEMPORARY         [reduce using rule 545 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 219 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 545 (columnReference1)]
    CONVERT           [reduce using rule 219 (qualifiedName1)]
    CONVERT           [reduce using rule 545 (columnReference1)]
    TRANSLATE         [reduce using rule 219 (qualifiedName1)]
    TRANSLATE         [reduce using rule 545 (columnReference1)]
    PRESERVE          [reduce using rule 219 (qualifiedName1)]
    PRESERVE          [reduce using rule 545 (columnReference1)]
    POSITION          [reduce using rule 219 (qualifiedName1)]
    POSITION          [reduce using rule 545 (columnReference1)]
    COALESCE          [reduce using rule 219 (qualifiedName1)]
    COALESCE          [reduce using rule 545 (columnReference1)]
    TRIM              [reduce using rule 219 (qualifiedName1)]
    TRIM              [reduce using rule 545 (columnReference1)]
    NUMBER            [reduce using rule 219 (qualifiedName1)]
    NUMBER            [reduce using rule 545 (columnReference1)]
    ID                [reduce using rule 219 (qualifiedName1)]
    ID                [reduce using rule 545 (columnReference1)]

    id                       go to state 297
    tableName                go to state 689
    qualifiedName            go to state 215
    qualifiedName1           go to state 216
    schemaName               go to state 217
    identifier               go to state 690
    qualifiedLocalTableName  go to state 218
    columnReference          go to state 1325
    columnReference1         go to state 719
    qualifier                go to state 720
    correlationName          go to state 721
    groupingColumnReference  go to state 1337


state 1337

  655 groupingColumnReferenceList1: groupingColumnReferenceList1 comma groupingColumnReference .

    $default  reduce using rule 655 (groupingColumnReferenceList1)
