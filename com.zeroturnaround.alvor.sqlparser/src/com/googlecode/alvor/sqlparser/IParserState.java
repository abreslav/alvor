/**
 * 
 */
package com.googlecode.alvor.sqlparser;

import java.util.Collection;

/**
 * Represents a state of a (G)LR parser, a part of the parser's static representation 
 * (e.g., loaded from XML generated by Bison).
 *  
 * @author abreslav
 *
 */
public interface IParserState {

	/**
	 * The accepting state
	 */
	public static final IParserState ACCEPT = new IParserState() {
		
		@Override
		public Collection<IAction> getActions(int symbolNumber) {
			throw new UnsupportedOperationException("Already accepted");
		}
		
		public String toString() {
			return "ACCEPT";			
		}

		@Override
		public boolean isTerminating() {
			return true;
		}

		@Override
		public boolean isError() {
			return false;
		}
	};

	/**
	 * Returns action(s) corresponding to this state. For LR-parsers this collection cannot have 
	 * more than one action. For GLR it can.
	 * @param symbolNumber the index of the symbol (terminal for normal actions 
	 * and nonterminal for GOTOs) in the input alphabet of the parser
	 * @return a collection of parser actions
	 */
	Collection<IAction> getActions(int symbolNumber);
	
	/**
	 * @return true iff this state is ACCEPT or error
	 */
	boolean isTerminating();
	
	/**
	 * @return true iff this state represents parsing error
	 */
	boolean isError();
}
