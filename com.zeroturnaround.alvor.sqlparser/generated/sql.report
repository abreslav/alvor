Terminals unused in grammar

   DIGAL_ERR
   STRING_SQ_ERR
   MULTILINE_COMMENT_ERR
   UNKNOWN_CHARACTER_ERR


State 23 conflicts: 1 reduce/reduce
State 89 conflicts: 2 reduce/reduce
State 99 conflicts: 76 reduce/reduce
State 131 conflicts: 1 reduce/reduce
State 207 conflicts: 2 reduce/reduce
State 297 conflicts: 32 shift/reduce
State 421 conflicts: 1 shift/reduce
State 451 conflicts: 32 shift/reduce
State 494 conflicts: 9 reduce/reduce
State 505 conflicts: 1 shift/reduce
State 607 conflicts: 46 shift/reduce, 46 reduce/reduce
State 658 conflicts: 1 shift/reduce
State 666 conflicts: 46 shift/reduce, 46 reduce/reduce
State 670 conflicts: 67 reduce/reduce
State 672 conflicts: 1 shift/reduce
State 677 conflicts: 1 reduce/reduce
State 692 conflicts: 51 shift/reduce, 47 reduce/reduce
State 693 conflicts: 46 reduce/reduce
State 704 conflicts: 1 shift/reduce
State 705 conflicts: 1 shift/reduce
State 707 conflicts: 32 shift/reduce, 32 reduce/reduce
State 708 conflicts: 64 reduce/reduce
State 713 conflicts: 1 reduce/reduce
State 718 conflicts: 1 reduce/reduce
State 727 conflicts: 27 reduce/reduce
State 734 conflicts: 1 shift/reduce, 1 reduce/reduce
State 738 conflicts: 64 reduce/reduce
State 747 conflicts: 1 shift/reduce
State 751 conflicts: 1 shift/reduce
State 755 conflicts: 1 shift/reduce, 1 reduce/reduce
State 756 conflicts: 1 reduce/reduce
State 758 conflicts: 32 shift/reduce, 32 reduce/reduce
State 812 conflicts: 1 shift/reduce
State 819 conflicts: 46 shift/reduce, 46 reduce/reduce
State 826 conflicts: 46 shift/reduce, 46 reduce/reduce
State 830 conflicts: 46 shift/reduce, 46 reduce/reduce
State 831 conflicts: 32 shift/reduce, 32 reduce/reduce
State 832 conflicts: 32 shift/reduce, 32 reduce/reduce
State 833 conflicts: 32 shift/reduce, 32 reduce/reduce
State 834 conflicts: 32 shift/reduce, 32 reduce/reduce
State 835 conflicts: 46 shift/reduce, 46 reduce/reduce
State 836 conflicts: 46 reduce/reduce
State 837 conflicts: 46 shift/reduce, 46 reduce/reduce
State 841 conflicts: 46 shift/reduce, 46 reduce/reduce
State 844 conflicts: 1 shift/reduce
State 855 conflicts: 1 reduce/reduce
State 866 conflicts: 55 reduce/reduce
State 868 conflicts: 46 shift/reduce, 46 reduce/reduce
State 877 conflicts: 47 reduce/reduce
State 878 conflicts: 1 shift/reduce
State 879 conflicts: 1 shift/reduce
State 880 conflicts: 47 reduce/reduce
State 881 conflicts: 1 shift/reduce, 46 reduce/reduce
State 882 conflicts: 1 shift/reduce
State 883 conflicts: 75 reduce/reduce
State 886 conflicts: 1 reduce/reduce
State 890 conflicts: 46 shift/reduce, 46 reduce/reduce
State 904 conflicts: 76 reduce/reduce
State 922 conflicts: 32 shift/reduce, 32 reduce/reduce
State 925 conflicts: 32 shift/reduce, 32 reduce/reduce
State 926 conflicts: 1 shift/reduce, 46 reduce/reduce
State 927 conflicts: 1 shift/reduce, 46 reduce/reduce
State 932 conflicts: 32 shift/reduce, 32 reduce/reduce
State 935 conflicts: 1 shift/reduce
State 936 conflicts: 1 shift/reduce
State 937 conflicts: 1 shift/reduce, 46 reduce/reduce
State 938 conflicts: 1 shift/reduce, 46 reduce/reduce
State 941 conflicts: 46 shift/reduce, 46 reduce/reduce
State 962 conflicts: 46 shift/reduce, 46 reduce/reduce
State 965 conflicts: 46 shift/reduce, 46 reduce/reduce
State 976 conflicts: 3 reduce/reduce
State 989 conflicts: 32 shift/reduce, 32 reduce/reduce
State 990 conflicts: 32 shift/reduce, 32 reduce/reduce
State 992 conflicts: 46 shift/reduce, 46 reduce/reduce
State 998 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1004 conflicts: 1 shift/reduce
State 1005 conflicts: 1 shift/reduce, 1 reduce/reduce
State 1017 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1030 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1033 conflicts: 1 shift/reduce
State 1034 conflicts: 1 shift/reduce
State 1038 conflicts: 32 shift/reduce, 32 reduce/reduce
State 1040 conflicts: 32 shift/reduce, 32 reduce/reduce
State 1041 conflicts: 32 shift/reduce, 32 reduce/reduce
State 1042 conflicts: 32 shift/reduce, 32 reduce/reduce
State 1048 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1055 conflicts: 1 reduce/reduce
State 1056 conflicts: 1 reduce/reduce
State 1066 conflicts: 1 reduce/reduce
State 1069 conflicts: 32 shift/reduce, 32 reduce/reduce
State 1088 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1101 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1102 conflicts: 1 shift/reduce
State 1103 conflicts: 1 shift/reduce
State 1107 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1116 conflicts: 38 reduce/reduce
State 1126 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1152 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1155 conflicts: 1 shift/reduce
State 1168 conflicts: 2 shift/reduce, 46 reduce/reduce
State 1181 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1189 conflicts: 1 shift/reduce
State 1198 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1200 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1219 conflicts: 2 shift/reduce, 6 reduce/reduce
State 1228 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1232 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1235 conflicts: 32 shift/reduce, 32 reduce/reduce
State 1237 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1238 conflicts: 1 reduce/reduce
State 1239 conflicts: 32 shift/reduce, 32 reduce/reduce
State 1249 conflicts: 1 shift/reduce
State 1251 conflicts: 1 shift/reduce
State 1259 conflicts: 1 reduce/reduce
State 1263 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1269 conflicts: 1 reduce/reduce
State 1272 conflicts: 4 shift/reduce, 6 reduce/reduce
State 1274 conflicts: 1 reduce/reduce
State 1278 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1283 conflicts: 1 shift/reduce
State 1286 conflicts: 1 shift/reduce
State 1312 conflicts: 46 shift/reduce, 46 reduce/reduce
State 1316 conflicts: 32 shift/reduce, 32 reduce/reduce
State 1325 conflicts: 1 reduce/reduce
State 1337 conflicts: 32 shift/reduce, 32 reduce/reduce


Grammar

    0 $accept: query $end

    1 query: bracketedSelect
    2      | delete
    3      | insert
    4      | update
    5      | COMMIT
    6      | tableDefinition
    7      | beginEndBlock
    8      | declareBeginEndBlock
    9      | callStatement

   10 id: ID
   11   | ACTION
   12   | ASC
   13   | PRESERVE
   14   | KEY
   15   | NUMBER
   16   | TRANSLATE
   17   | TRIM
   18   | LOWER
   19   | SUM
   20   | CHAR_LENGTH
   21   | POSITION
   22   | ZONE
   23   | AVG
   24   | DEFERRABLE
   25   | CHARACTER_LENGTH
   26   | MIN
   27   | COUNT
   28   | CASCADE
   29   | COALESCE
   30   | TEMPORARY
   31   | UPPER
   32   | NULLIF
   33   | MAX
   34   | DEFERRED
   35   | OCTET_LENGTH
   36   | EXTRACT
   37   | PARTIAL
   38   | INITIALLY
   39   | CONVERT
   40   | SUBSTRING
   41   | DESC

   42 update: UPDATE alias SET assignList where

   43 assignList: assign
   44           | assignList ',' assign

   45 assign: ident '=' simpleExpr
   46       | '(' idList ')' '=' simpleExpr

   47 delete: DELETE optFrom alias where

   48 callStatement: '{' CALL ident identRest '}'

   49 declareBeginEndBlock: DECLARE declarationList beginEndBlock

   50 declaration: ID ident identRestEx declInitializer ';'
   51            | ID identEx declInitializer ';'

   52 declarationList: declaration
   53                | declaration declarationList
   54                | /* empty */

   55 declInitializer: COLONEQUALS simpleExpr
   56                | /* empty */

   57 beginEndBlock: BEGIN plSqlStatementList END ';'

   58 plSqlStatementList: plSqlStatement
   59                   | plSqlStatement plSqlStatementList

   60 plSqlStatement: assignTarget COLONEQUALS simpleExpr ';'
   61               | ident identRestEx ';'
   62               | selectInto ';'
   63               | delete ';'
   64               | update ';'
   65               | insert ';'
   66               | EXECUTE STRING_SQ ';'
   67               | EXECUTE IMMEDIATE STRING_SQ ';'

   68 assignTarget: '?'
   69             | ident

   70 optFrom: FROM
   71        | /* empty */

   72 insert: INSERT INTO alias optIdList insertRest

   73 insertRest: VALUES identRest
   74           | select

   75 optIdList: /* empty */
   76          | '(' idList ')'

   77 idList: id
   78       | idList ',' id

   79 bracketedSelect: select
   80                | '(' select ')'

   81 select: basicSelect where byClauses forUpdate
   82       | select UNION select

   83 basicSelect: SELECT optDist whatToSelect FROM tableList

   84 selectInto: basicSelectInto where byClauses

   85 basicSelectInto: SELECT optDist whatToSelect INTO intoList FROM tableList

   86 intoList: intoId
   87         | intoId ',' intoList

   88 intoId: ID
   89       | ':' ID

   90 where: WHERE whereCond
   91      | /* empty */

   92 forUpdate: FOR UPDATE
   93          | /* empty */

   94 groupBy: GROUP BY simExList having

   95 optGroupBy: groupBy
   96           | /* empty */

   97 having: HAVING condition
   98       | /* empty */

   99 orderBy: ORDER BY directionList

  100 optOrderBy: orderBy
  101           | /* empty */

  102 byClauses: orderBy optGroupBy
  103          | groupBy optOrderBy
  104          | /* empty */

  105 directionList: direction
  106              | directionList ',' direction

  107 direction: simpleExpr orderDirection

  108 orderDirection: ASC
  109               | DESC
  110               | /* empty */

  111 optDist: DISTINCT
  112        | /* empty */

  113 whatToSelect: selectExpressionList

  114 selectExpression: expression
  115                 | selectExpression AS id
  116                 | selectExpression id

  117 expression: condition
  118           | simpleExpr

  119 selectExpressionList: selectExpression
  120                     | selectExpressionList ',' selectExpression

  121 tableList: table
  122          | tableList ',' table

  123 table: alias
  124      | table join alias ON condition

  125 join: JOIN
  126     | LEFT JOIN
  127     | outerType OUTER JOIN
  128     | INNER JOIN

  129 outerType: LEFT
  130          | RIGHT
  131          | FULL

  132 alias: tableExpr
  133      | tableExpr id

  134 tableExpr: ident
  135          | TABLE '(' simpleExpr ')'
  136          | '(' select ')'

  137 ident: id
  138      | id '.' id
  139      | id '.' id '.' id

  140 identEx: ident
  141        | ident '%' id

  142 whereCond: condition

  143 condition: condition AND condition
  144          | condition OR condition
  145          | condition XOR condition
  146          | NOT condition
  147          | '(' condition ')'
  148          | comparison
  149          | simpleExpr inExpr '(' simExList ')'
  150          | simpleExpr inExpr '(' select ')'
  151          | '(' idList2 ')' inExpr '(' simExList ')'
  152          | '(' idList2 ')' inExpr '(' select ')'
  153          | simpleExpr IS optNot NULL
  154          | simpleExpr optNot LIKE simpleExpr escape
  155          | EXISTS '(' select ')'
  156          | simpleExpr optNot BETWEEN simpleExpr AND simpleExpr

  157 idList2: id ',' id
  158        | idList2 ',' id

  159 comparison: simpleExpr '=' simpleExpr
  160           | simpleExpr '>' simpleExpr
  161           | simpleExpr '<' simpleExpr
  162           | simpleExpr LE simpleExpr
  163           | simpleExpr NE simpleExpr
  164           | simpleExpr GE simpleExpr

  165 escape: ESCAPE STRING_SQ
  166       | /* empty */

  167 inExpr: optNot IN

  168 optNot: NOT
  169       | /* empty */

  170 simpleExpr: NUMBER
  171           | simpleExpr OUTERJ
  172           | '-' simpleExpr
  173           | CASE whenList else END
  174           | STRING_SQ
  175           | ident identRestEx
  176           | '(' simpleExpr ')'
  177           | simpleExpr '-' simpleExpr
  178           | simpleExpr '+' simpleExpr
  179           | simpleExpr '*' simpleExpr
  180           | simpleExpr '/' simpleExpr
  181           | simpleExpr CONCAT simpleExpr
  182           | simpleExpr OVER partition
  183           | CAST '(' simpleExpr AS id optSize ')'
  184           | '(' select ')'
  185           | id '.' '*'
  186           | '*'
  187           | '?'
  188           | NULL

  189 optSize: /* empty */
  190        | '(' NUMBER ')'

  191 identRest: '(' simExList ')'
  192          | /* empty */

  193 identRestEx: identRest
  194            | '(' namedArgList ')'

  195 namedArgList: namedArg
  196             | namedArg ',' namedArgList
  197             | /* empty */

  198 namedArg: simpleExpr
  199         | ID EQUALSGT simpleExpr

  200 whenList: when
  201         | when whenList

  202 when: WHEN condition THEN simpleExpr

  203 else: ELSE simpleExpr
  204     | /* empty */

  205 simExList: /* empty */
  206          | nonemptySimExList

  207 nonemptySimExList: simpleExpr
  208                  | nonemptySimExList ',' simpleExpr

  209 partition: '(' PARTITION BY ident orderBy ')'

  210 tableDefinition: CREATE tableDefinition1 TABLE tableName tableElementList tableDefinition2

  211 tableDefinition1: /* empty */
  212                 | GLOBAL
  213                 | LOCAL TEMPORARY

  214 tableDefinition2: /* empty */
  215                 | ON COMMIT DELETE
  216                 | PRESERVE ROWS

  217 tableName: qualifiedName
  218          | qualifiedLocalTableName

  219 qualifiedName: qualifiedName1 qualifiedIdentifier

  220 qualifiedName1: /* empty */
  221               | schemaName period

  222 schemaName: UNKNOWN_LEX

  223 period: UNKNOWN_LEX

  224 qualifiedIdentifier: identifier

  225 identifier: id

  226 qualifiedLocalTableName: MODULE period localTableName

  227 localTableName: qualifiedIdentifier

  228 tableElementList: leftParen tableElement tableElementList1 rightParen

  229 tableElementList1: /* empty */
  230                  | tableElementList1 comma tableElement

  231 leftParen: '('

  232 tableElement: columnDefinition
  233             | tableConstraintDefinition

  234 columnDefinition: columnName dataType
  235                 | domainName columnDefinition1 columnDefinition2 columnDefinition3

  236 columnDefinition1: /* empty */
  237                  | defaultClause

  238 columnDefinition2: /* empty */
  239                  | columnDefinition2 columnConstraintDefinition

  240 columnDefinition3: /* empty */
  241                  | collateClause

  242 columnName: identifier

  243 dataType: characterStringType dataType1
  244         | nationalCharacterStringType
  245         | bitStringType
  246         | numericType
  247         | datetimeType
  248         | intervalType

  249 dataType1: /* empty */
  250          | CHARACTER SET characterSetSpecification

  251 characterStringType: CHARACTER characterStringType1
  252                    | CHAR characterStringType2
  253                    | CHARACTER VARYING characterStringType3
  254                    | CHAR VARYING characterStringType4
  255                    | VARCHAR characterStringType5

  256 characterStringType1: /* empty */
  257                     | leftParen length rightParen

  258 characterStringType2: /* empty */
  259                     | leftParen length rightParen

  260 characterStringType3: /* empty */
  261                     | leftParen length rightParen

  262 characterStringType4: /* empty */
  263                     | leftParen length rightParen

  264 characterStringType5: /* empty */
  265                     | leftParen length rightParen

  266 length: unsignedInteger

  267 unsignedInteger: NUMBER

  268 rightParen: ')'

  269 characterSetSpecification: UNKNOWN_LEX

  270 nationalCharacterStringType: NATIONAL CHARACTER nationalCharacterStringType1
  271                            | NATIONAL CHAR nationalCharacterStringType2
  272                            | NCHAR nationalCharacterStringType3
  273                            | NATIONAL CHARACTER VARYING nationalCharacterStringType4
  274                            | NATIONAL CHAR VARYING nationalCharacterStringType5
  275                            | NCHAR VARYING nationalCharacterStringType6

  276 nationalCharacterStringType1: /* empty */
  277                             | leftParen length rightParen

  278 nationalCharacterStringType2: /* empty */
  279                             | leftParen length rightParen

  280 nationalCharacterStringType3: /* empty */
  281                             | leftParen length rightParen

  282 nationalCharacterStringType4: /* empty */
  283                             | leftParen length rightParen

  284 nationalCharacterStringType5: /* empty */
  285                             | leftParen length rightParen

  286 nationalCharacterStringType6: /* empty */
  287                             | leftParen length rightParen

  288 bitStringType: BIT bitStringType1
  289              | BIT VARYING bitStringType2

  290 bitStringType1: /* empty */
  291               | leftParen length rightParen

  292 bitStringType2: /* empty */
  293               | leftParen length rightParen

  294 numericType: exactNumericType
  295            | approximateNumericType

  296 exactNumericType: NUMERIC exactNumericType2
  297                 | DECIMAL exactNumericType4
  298                 | DEC exactNumericType6
  299                 | INTEGER
  300                 | INT
  301                 | SMALLINT

  302 exactNumericType2: /* empty */
  303                  | leftParen precision exactNumericType1 rightParen

  304 exactNumericType1: /* empty */
  305                  | comma scale

  306 exactNumericType4: /* empty */
  307                  | leftParen precision exactNumericType3 rightParen

  308 exactNumericType3: /* empty */
  309                  | comma scale

  310 exactNumericType6: /* empty */
  311                  | leftParen precision exactNumericType5 rightParen

  312 exactNumericType5: /* empty */
  313                  | comma scale

  314 precision: unsignedInteger

  315 comma: ','

  316 scale: unsignedInteger

  317 approximateNumericType: FLOAT approximateNumericType1
  318                       | REAL
  319                       | DOUBLE PRECISION

  320 approximateNumericType1: /* empty */
  321                        | leftParen precision rightParen

  322 datetimeType: DATE
  323             | TIME datetimeType1 datetimeType2
  324             | TIMESTAMP datetimeType3 datetimeType4

  325 datetimeType1: /* empty */
  326              | leftParen timePrecision rightParen

  327 datetimeType2: /* empty */
  328              | WITH TIME ZONE

  329 datetimeType3: /* empty */
  330              | leftParen timestampPrecision rightParen

  331 datetimeType4: /* empty */
  332              | WITH TIME ZONE

  333 timePrecision: timeFractionalSecondsPrecision

  334 timeFractionalSecondsPrecision: unsignedInteger

  335 timestampPrecision: timeFractionalSecondsPrecision

  336 intervalType: INTERVAL intervalQualifier

  337 intervalQualifier: startField TO endField
  338                  | singleDatetimeField

  339 startField: nonsecondDatetimeField startField1

  340 startField1: /* empty */
  341            | leftParen intervalLeadingFieldPrecision rightParen

  342 nonsecondDatetimeField: YEAR
  343                       | MONTH
  344                       | DAY
  345                       | HOUR
  346                       | MINUTE

  347 intervalLeadingFieldPrecision: unsignedInteger

  348 endField: nonsecondDatetimeField
  349         | SECOND endField1

  350 endField1: /* empty */
  351          | leftParen intervalFractionalSecondsPrecision rightParen

  352 intervalFractionalSecondsPrecision: unsignedInteger

  353 singleDatetimeField: nonsecondDatetimeField singleDatetimeField1
  354                    | SECOND singleDatetimeField3

  355 singleDatetimeField1: /* empty */
  356                     | leftParen intervalLeadingFieldPrecision rightParen

  357 singleDatetimeField3: /* empty */
  358                     | leftParen intervalLeadingFieldPrecision singleDatetimeField2 rightParen

  359 singleDatetimeField2: /* empty */
  360                     | comma leftParen intervalFractionalSecondsPrecision

  361 domainName: qualifiedName

  362 defaultClause: DEFAULT defaultOption

  363 defaultOption: literal
  364              | datetimeValueFunction
  365              | USER
  366              | CURRENT_USER
  367              | SESSION_USER
  368              | SYSTEM_USER
  369              | NULL

  370 literal: signedNumericLiteral
  371        | generalLiteral

  372 signedNumericLiteral: signedNumericLiteral1 unsignedNumericLiteral

  373 signedNumericLiteral1: /* empty */
  374                      | sign

  375 sign: UNKNOWN_LEX

  376 unsignedNumericLiteral: UNKNOWN_LEX

  377 generalLiteral: characterStringLiteral
  378               | nationalCharacterStringLiteral
  379               | bitStringLiteral
  380               | hexStringLiteral
  381               | datetimeLiteral
  382               | intervalLiteral

  383 characterStringLiteral: UNKNOWN_LEX

  384 nationalCharacterStringLiteral: UNKNOWN_LEX

  385 bitStringLiteral: UNKNOWN_LEX

  386 hexStringLiteral: UNKNOWN_LEX

  387 datetimeLiteral: dateLiteral
  388                | timeLiteral
  389                | timestampLiteral

  390 dateLiteral: DATE dateString

  391 dateString: UNKNOWN_LEX

  392 timeLiteral: TIME timeString

  393 timeString: UNKNOWN_LEX

  394 timestampLiteral: TIMESTAMP timestampString

  395 timestampString: UNKNOWN_LEX

  396 intervalLiteral: INTERVAL intervalLiteral1 intervalString intervalQualifier

  397 intervalLiteral1: /* empty */
  398                 | sign

  399 intervalString: UNKNOWN_LEX

  400 datetimeValueFunction: currentDateValueFunction
  401                      | currentTimeValueFunction
  402                      | currentTimestampValueFunction

  403 currentDateValueFunction: CURRENT_DATE

  404 currentTimeValueFunction: CURRENT_TIME currentTimeValueFunction1

  405 currentTimeValueFunction1: /* empty */
  406                          | leftParen timePrecision rightParen

  407 currentTimestampValueFunction: CURRENT_TIMESTAMP currentTimestampValueFunction1

  408 currentTimestampValueFunction1: /* empty */
  409                               | leftParen timestampPrecision rightParen

  410 columnConstraintDefinition: columnConstraintDefinition1 columnConstraint columnConstraintDefinition2

  411 columnConstraintDefinition1: /* empty */
  412                            | constraintNameDefinition

  413 columnConstraintDefinition2: /* empty */
  414                            | constraintAttributes

  415 constraintNameDefinition: CONSTRAINT constraintName

  416 constraintName: qualifiedName

  417 columnConstraint: NOT NULL
  418                 | uniqueSpecification
  419                 | referencesSpecification
  420                 | checkConstraintDefinition

  421 uniqueSpecification: UNIQUE
  422                    | PRIMARY KEY

  423 referencesSpecification: REFERENCES referencedTableAndColumns referencesSpecification1 referencesSpecification2

  424 referencesSpecification1: /* empty */
  425                         | MATCH matchType

  426 referencesSpecification2: /* empty */
  427                         | referentialTriggeredAction

  428 referencedTableAndColumns: tableName referencedTableAndColumns1

  429 referencedTableAndColumns1: /* empty */
  430                           | leftParen referenceColumnList rightParen

  431 referenceColumnList: columnNameList

  432 columnNameList: columnName columnNameList1

  433 columnNameList1: /* empty */
  434                | columnNameList1 comma columnName

  435 matchType: FULL
  436          | PARTIAL

  437 referentialTriggeredAction: updateRule referentialTriggeredAction1
  438                           | deleteRule referentialTriggeredAction2

  439 referentialTriggeredAction1: /* empty */
  440                            | deleteRule

  441 referentialTriggeredAction2: /* empty */
  442                            | updateRule

  443 updateRule: ON UPDATE referentialAction

  444 referentialAction: CASCADE
  445                  | SET NULL
  446                  | SET DEFAULT
  447                  | NO ACTION

  448 deleteRule: ON DELETE referentialAction

  449 checkConstraintDefinition: CHECK leftParen searchCondition rightParen

  450 searchCondition: booleanTerm
  451                | searchCondition OR booleanTerm

  452 booleanTerm: booleanFactor
  453            | booleanTerm AND booleanFactor

  454 booleanFactor: booleanFactor1 booleanTest

  455 booleanFactor1: /* empty */
  456               | NOT

  457 booleanTest: booleanPrimary booleanTest2

  458 booleanTest2: /* empty */
  459             | IS booleanTest1 truthValue

  460 booleanTest1: /* empty */
  461             | NOT

  462 booleanPrimary: predicate
  463               | leftParen searchCondition rightParen

  464 predicate: comparisonPredicate
  465          | betweenPredicate
  466          | inPredicate
  467          | likePredicate
  468          | nullPredicate
  469          | quantifiedComparisonPredicate
  470          | existsPredicate
  471          | matchPredicate
  472          | overlapsPredicate

  473 comparisonPredicate: rowValueConstructor compOp rowValueConstructor

  474 rowValueConstructor: rowValueConstructorElement
  475                    | leftParen rowValueConstructorList rightParen
  476                    | rowSubquery

  477 rowValueConstructorElement: valueExpression
  478                           | nullSpecification
  479                           | defaultSpecification

  480 valueExpression: numericValueExpression
  481                | stringValueExpression
  482                | datetimeValueExpression
  483                | intervalValueExpression

  484 numericValueExpression: term
  485                       | numericValueExpression plusSign term
  486                       | numericValueExpression minusSign term

  487 term: factor
  488     | term asterisk factor
  489     | term solidus factor

  490 factor: factor1 numericPrimary

  491 factor1: /* empty */
  492        | sign

  493 numericPrimary: valueExpressionPrimary
  494               | numericValueFunction

  495 valueExpressionPrimary: unsignedValueSpecification
  496                       | columnReference
  497                       | setFunctionSpecification
  498                       | scalarSubquery
  499                       | caseExpression
  500                       | leftParen valueExpression rightParen
  501                       | castSpecification

  502 unsignedValueSpecification: unsignedLiteral
  503                           | generalValueSpecification

  504 unsignedLiteral: unsignedNumericLiteral
  505                | generalLiteral

  506 generalValueSpecification: parameterSpecification
  507                          | dynamicParameterSpecification
  508                          | variableSpecification
  509                          | USER
  510                          | CURRENT_USER
  511                          | SESSION_USER
  512                          | SYSTEM_USER
  513                          | VALUE

  514 parameterSpecification: parameterName parameterSpecification1

  515 parameterSpecification1: /* empty */
  516                        | indicatorParameter

  517 parameterName: colon identifier

  518 colon: UNKNOWN_LEX

  519 indicatorParameter: indicatorParameter1 parameterName

  520 indicatorParameter1: /* empty */
  521                    | INDICATOR

  522 dynamicParameterSpecification: questionMark

  523 questionMark: UNKNOWN_LEX

  524 variableSpecification: embeddedVariableName variableSpecification1

  525 variableSpecification1: /* empty */
  526                       | indicatorVariable

  527 embeddedVariableName: colon hostIdentifier

  528 hostIdentifier: AdaHostIdentifier
  529               | CHostIdentifier
  530               | CobolHostIdentifier
  531               | FortranHostIdentifier
  532               | MUMPSHostIdentifier
  533               | PascalHostIdentifier
  534               | PLIHostIdentifier

  535 AdaHostIdentifier: UNKNOWN_BODY

  536 CHostIdentifier: UNKNOWN_BODY

  537 CobolHostIdentifier: UNKNOWN_BODY

  538 FortranHostIdentifier: UNKNOWN_BODY

  539 MUMPSHostIdentifier: UNKNOWN_BODY

  540 PascalHostIdentifier: UNKNOWN_BODY

  541 PLIHostIdentifier: UNKNOWN_BODY

  542 indicatorVariable: indicatorVariable1 embeddedVariableName

  543 indicatorVariable1: /* empty */
  544                   | INDICATOR

  545 columnReference: columnReference1 columnName

  546 columnReference1: /* empty */
  547                 | qualifier period

  548 qualifier: tableName
  549          | correlationName

  550 correlationName: identifier

  551 setFunctionSpecification: COUNT leftParen asterisk rightParen
  552                         | generalSetFunction

  553 asterisk: UNKNOWN_LEX

  554 generalSetFunction: setFunctionType leftParen generalSetFunction1 valueExpression rightParen

  555 generalSetFunction1: /* empty */
  556                    | setQuantifier

  557 setFunctionType: AVG
  558                | MAX
  559                | MIN
  560                | SUM
  561                | COUNT

  562 setQuantifier: DISTINCT
  563              | ALL

  564 scalarSubquery: subquery

  565 subquery: leftParen queryExpression rightParen

  566 queryExpression: nonjoinQueryExpression
  567                | joinedTable

  568 nonjoinQueryExpression: nonjoinQueryTerm
  569                       | queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  570                       | queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm

  571 nonjoinQueryExpression1: /* empty */
  572                        | ALL

  573 nonjoinQueryExpression2: /* empty */
  574                        | correspondingSpec

  575 nonjoinQueryExpression3: /* empty */
  576                        | ALL

  577 nonjoinQueryExpression4: /* empty */
  578                        | correspondingSpec

  579 nonjoinQueryTerm: nonjoinQueryPrimary
  580                 | queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary

  581 nonjoinQueryTerm1: /* empty */
  582                  | ALL

  583 nonjoinQueryTerm2: /* empty */
  584                  | correspondingSpec

  585 nonjoinQueryPrimary: simpleTable
  586                    | leftParen nonjoinQueryExpression rightParen

  587 simpleTable: querySpecification
  588            | tableValueConstructor
  589            | explicitTable

  590 querySpecification: SELECT querySpecification1 selectList tableExpression

  591 querySpecification1: /* empty */
  592                    | setQuantifier

  593 selectList: asterisk
  594           | selectSublist selectList1

  595 selectList1: /* empty */
  596            | selectList1 comma selectSublist

  597 selectSublist: derivedColumn
  598              | qualifier period asterisk

  599 derivedColumn: valueExpression derivedColumn1

  600 derivedColumn1: /* empty */
  601               | asClause

  602 asClause: asClause1 columnName

  603 asClause1: /* empty */
  604          | AS

  605 tableExpression: fromClause tableExpression1 tableExpression2 tableExpression3

  606 tableExpression1: /* empty */
  607                 | whereClause

  608 tableExpression2: /* empty */
  609                 | groupByClause

  610 tableExpression3: /* empty */
  611                 | havingClause

  612 fromClause: FROM tableReference fromClause1

  613 fromClause1: /* empty */
  614            | fromClause1 comma tableReference

  615 tableReference: tableName tableReference1
  616               | derivedTable correlationSpecification
  617               | joinedTable

  618 tableReference1: /* empty */
  619                | correlationSpecification

  620 correlationSpecification: correlationSpecification1 correlationName correlationSpecification2

  621 correlationSpecification1: /* empty */
  622                          | AS

  623 correlationSpecification2: /* empty */
  624                          | leftParen derivedColumnList rightParen

  625 derivedColumnList: columnNameList

  626 derivedTable: tableSubquery

  627 tableSubquery: subquery

  628 joinedTable: crossJoin
  629            | qualifiedJoin
  630            | leftParen joinedTable rightParen

  631 crossJoin: tableReference CROSS JOIN tableReference

  632 qualifiedJoin: tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3

  633 qualifiedJoin1: /* empty */
  634               | NATURAL

  635 qualifiedJoin2: /* empty */
  636               | joinType

  637 qualifiedJoin3: /* empty */
  638               | joinSpecification

  639 joinType: INNER
  640         | outerJoinType joinType1
  641         | UNION

  642 joinType1: /* empty */
  643          | OUTER

  644 outerJoinType: LEFT
  645              | RIGHT
  646              | FULL

  647 joinSpecification: joinCondition
  648                  | namedColumnsJoin

  649 joinCondition: ON searchCondition

  650 namedColumnsJoin: USING leftParen joinColumnList rightParen

  651 joinColumnList: columnNameList

  652 whereClause: WHERE searchCondition

  653 groupByClause: GROUP BY groupingColumnReferenceList

  654 groupingColumnReferenceList: groupingColumnReference groupingColumnReferenceList1

  655 groupingColumnReferenceList1: /* empty */
  656                             | groupingColumnReferenceList1 comma groupingColumnReference

  657 groupingColumnReference: columnReference groupingColumnReference1

  658 groupingColumnReference1: /* empty */
  659                         | collateClause

  660 collateClause: COLLATE collationName

  661 collationName: qualifiedName

  662 havingClause: HAVING searchCondition

  663 tableValueConstructor: VALUES tableValueConstructorList

  664 tableValueConstructorList: rowValueConstructor tableValueConstructorList1

  665 tableValueConstructorList1: /* empty */
  666                           | tableValueConstructorList1 comma rowValueConstructor

  667 explicitTable: TABLE tableName

  668 queryTerm: nonjoinQueryTerm
  669          | joinedTable

  670 correspondingSpec: CORRESPONDING correspondingSpec1

  671 correspondingSpec1: /* empty */
  672                   | BY leftParen correspondingColumnList rightParen

  673 correspondingColumnList: columnNameList

  674 queryPrimary: nonjoinQueryPrimary
  675             | joinedTable

  676 caseExpression: caseAbbreviation
  677               | caseSpecification

  678 caseAbbreviation: NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | COALESCE leftParen valueExpression caseAbbreviation1 rightParen

  680 caseAbbreviation1: comma valueExpression
  681                  | caseAbbreviation1 comma valueExpression

  682 caseSpecification: simpleCase
  683                  | searchedCase

  684 simpleCase: CASE caseOperand simpleCase1 simpleCase2 END

  685 simpleCase1: simpleWhenClause
  686            | simpleCase1 simpleWhenClause

  687 simpleCase2: /* empty */
  688            | elseClause

  689 caseOperand: valueExpression

  690 simpleWhenClause: WHEN whenOperand THEN result

  691 whenOperand: valueExpression

  692 result: resultExpression
  693       | NULL

  694 resultExpression: valueExpression

  695 elseClause: ELSE result

  696 searchedCase: CASE searchedCase1 searchedCase2 END

  697 searchedCase1: searchedWhenClause
  698              | searchedCase1 searchedWhenClause

  699 searchedCase2: /* empty */
  700              | elseClause

  701 searchedWhenClause: WHEN searchCondition THEN result

  702 castSpecification: CAST leftParen castOperand AS castTarget rightParen

  703 castOperand: valueExpression
  704            | NULL

  705 castTarget: domainName
  706           | typeName

  707 typeName: UNKNOWN_BODY

  708 numericValueFunction: positionExpression
  709                     | extractExpression
  710                     | lengthExpression

  711 positionExpression: POSITION leftParen characterValueExpression IN characterValueExpression rightParen

  712 characterValueExpression: concatenation
  713                         | characterFactor

  714 concatenation: characterValueExpression concatenationOperator characterFactor

  715 concatenationOperator: UNKNOWN_LEX

  716 characterFactor: characterPrimary characterFactor1

  717 characterFactor1: /* empty */
  718                 | collateClause

  719 characterPrimary: valueExpressionPrimary
  720                 | stringValueFunction

  721 stringValueFunction: characterValueFunction
  722                    | bitValueFunction

  723 characterValueFunction: characterSubstringFunction
  724                       | fold
  725                       | formofuseConversion
  726                       | characterTranslation
  727                       | trimFunction

  728 characterSubstringFunction: SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen

  729 characterSubstringFunction1: /* empty */
  730                            | FOR stringLength

  731 startPosition: numericValueExpression

  732 stringLength: numericValueExpression

  733 fold: UPPER
  734     | LOWER leftParen characterValueExpression rightParen

  735 formofuseConversion: CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen

  736 formofuseConversionName: qualifiedName

  737 characterTranslation: TRANSLATE leftParen characterValueExpression USING translationName rightParen

  738 translationName: qualifiedName

  739 trimFunction: TRIM leftParen trimOperands rightParen

  740 trimOperands: trimOperands3 trimSource

  741 trimOperands3: /* empty */
  742              | trimOperands1 trimOperands2 FROM

  743 trimOperands1: /* empty */
  744              | trimSpecification

  745 trimOperands2: /* empty */
  746              | trimCharacter

  747 trimSpecification: LEADING
  748                  | TRAILING
  749                  | BOTH

  750 trimCharacter: characterValueExpression

  751 trimSource: characterValueExpression

  752 bitValueFunction: bitSubstringFunction

  753 bitSubstringFunction: SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

  754 bitSubstringFunction1: /* empty */
  755                      | FOR stringLength

  756 bitValueExpression: bitConcatenation
  757                   | bitFactor

  758 bitConcatenation: bitValueExpression concatenationOperator bitFactor

  759 bitFactor: bitPrimary

  760 bitPrimary: valueExpressionPrimary
  761           | stringValueFunction

  762 extractExpression: EXTRACT leftParen extractField FROM extractSource rightParen

  763 extractField: datetimeField
  764             | timeZoneField

  765 datetimeField: nonsecondDatetimeField
  766              | SECOND

  767 timeZoneField: TIMEZONE_HOUR
  768              | TIMEZONE_MINUTE

  769 extractSource: datetimeValueExpression
  770              | intervalValueExpression

  771 datetimeValueExpression: datetimeTerm
  772                        | intervalValueExpression plusSign datetimeTerm
  773                        | datetimeValueExpression plusSign intervalTerm
  774                        | datetimeValueExpression minusSign intervalTerm

  775 datetimeTerm: datetimeFactor

  776 datetimeFactor: datetimePrimary datetimeFactor1

  777 datetimeFactor1: /* empty */
  778                | timeZone

  779 datetimePrimary: valueExpressionPrimary
  780                | datetimeValueFunction

  781 timeZone: AT timeZoneSpecifier

  782 timeZoneSpecifier: LOCAL
  783                  | TIME ZONE intervalValueExpression

  784 intervalValueExpression: intervalTerm
  785                        | intervalValueExpression1 plusSign intervalTerm1
  786                        | intervalValueExpression1 minusSign intervalTerm1
  787                        | leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier

  788 intervalTerm: intervalFactor
  789             | intervalTerm2 asterisk factor
  790             | intervalTerm2 solidus factor
  791             | term asterisk intervalFactor

  792 intervalFactor: intervalFactor1 intervalPrimary

  793 intervalFactor1: /* empty */
  794                | sign

  795 intervalPrimary: valueExpressionPrimary intervalPrimary1

  796 intervalPrimary1: /* empty */
  797                 | intervalQualifier

  798 intervalTerm2: intervalTerm

  799 solidus: UNKNOWN_LEX

  800 intervalValueExpression1: intervalValueExpression

  801 plusSign: UNKNOWN_LEX

  802 intervalTerm1: intervalTerm

  803 minusSign: UNKNOWN_LEX

  804 lengthExpression: charLengthExpression
  805                 | octetLengthExpression
  806                 | bitLengthExpression

  807 charLengthExpression: CHAR_LENGTH
  808                     | CHARACTER_LENGTH leftParen stringValueExpression rightParen

  809 stringValueExpression: characterValueExpression
  810                      | bitValueExpression

  811 octetLengthExpression: OCTET_LENGTH leftParen stringValueExpression rightParen

  812 bitLengthExpression: BIT_LENGTH leftParen stringValueExpression rightParen

  813 nullSpecification: NULL

  814 defaultSpecification: DEFAULT

  815 rowValueConstructorList: rowValueConstructorElement rowValueConstructorList1

  816 rowValueConstructorList1: /* empty */
  817                         | rowValueConstructorList1 comma rowValueConstructorElement

  818 rowSubquery: subquery

  819 compOp: equalsOperator
  820       | notEqualsOperator
  821       | lessThanOperator
  822       | greaterThanOperator
  823       | lessThanOrEqualsOperator
  824       | greaterThanOrEqualsOperator

  825 equalsOperator: UNKNOWN_LEX

  826 notEqualsOperator: UNKNOWN_LEX

  827 lessThanOperator: UNKNOWN_LEX

  828 greaterThanOperator: UNKNOWN_LEX

  829 lessThanOrEqualsOperator: UNKNOWN_LEX

  830 greaterThanOrEqualsOperator: UNKNOWN_LEX

  831 betweenPredicate: rowValueConstructor betweenPredicate1 BETWEEN rowValueConstructor AND rowValueConstructor

  832 betweenPredicate1: /* empty */
  833                  | NOT

  834 inPredicate: rowValueConstructor inPredicate1 IN inPredicateValue

  835 inPredicate1: /* empty */
  836             | NOT

  837 inPredicateValue: tableSubquery
  838                 | leftParen inValueList rightParen

  839 inValueList: valueExpression inValueList1

  840 inValueList1: comma valueExpression
  841             | inValueList1 comma valueExpression

  842 likePredicate: matchValue likePredicate1 LIKE pattern likePredicate2

  843 likePredicate1: /* empty */
  844               | NOT

  845 likePredicate2: /* empty */
  846               | ESCAPE escapeCharacter

  847 matchValue: characterValueExpression

  848 pattern: characterValueExpression

  849 escapeCharacter: characterValueExpression

  850 nullPredicate: IS nullPredicate1 NULL

  851 nullPredicate1: /* empty */
  852               | NOT

  853 quantifiedComparisonPredicate: rowValueConstructor compOp quantifier tableSubquery

  854 quantifier: all
  855           | some

  856 all: ALL

  857 some: SOME
  858     | ANY

  859 existsPredicate: EXISTS tableSubquery

  860 matchPredicate: rowValueConstructor MATCH matchPredicate1 matchPredicate2 tableSubquery

  861 matchPredicate1: /* empty */
  862                | UNIQUE

  863 matchPredicate2: /* empty */
  864                | PARTIAL
  865                | FULL

  866 overlapsPredicate: rowValueConstructor1 OVERLAPS rowValueConstructor2

  867 rowValueConstructor1: rowValueConstructor

  868 rowValueConstructor2: rowValueConstructor

  869 truthValue: TRUE
  870           | FALSE
  871           | UNKNOWN

  872 constraintAttributes: constraintCheckTime constraintAttributes2
  873                     | constraintAttributes3 DEFERRABLE constraintAttributes4

  874 constraintAttributes2: /* empty */
  875                      | constraintAttributes1 DEFERRABLE

  876 constraintAttributes1: /* empty */
  877                      | NOT

  878 constraintAttributes3: /* empty */
  879                      | NOT

  880 constraintAttributes4: /* empty */
  881                      | constraintCheckTime

  882 constraintCheckTime: INITIALLY DEFERRED
  883                    | INITIALLY IMMEDIATE

  884 tableConstraintDefinition: tableConstraintDefinition1 tableConstraint tableConstraintDefinition2

  885 tableConstraintDefinition1: /* empty */
  886                           | constraintNameDefinition

  887 tableConstraintDefinition2: /* empty */
  888                           | constraintCheckTime

  889 tableConstraint: uniqueConstraintDefinition
  890                | referentialConstraintDefinition
  891                | checkConstraintDefinition

  892 uniqueConstraintDefinition: uniqueSpecification leftParen uniqueColumnList rightParen

  893 uniqueColumnList: columnNameList

  894 referentialConstraintDefinition: FOREIGN KEY leftParen referencingColumns rightParen referencesSpecification

  895 referencingColumns: referenceColumnList


Terminals, with rules where they appear

$end (0) 0
'%' (37) 141
'(' (40) 46 76 80 135 136 147 149 150 151 152 155 176 183 184 190 191
    194 209 231
')' (41) 46 76 80 135 136 147 149 150 151 152 155 176 183 184 190 191
    194 209 268
'*' (42) 179 185 186
'+' (43) 178
',' (44) 44 78 87 106 120 122 157 158 196 208 315
'-' (45) 172 177
'.' (46) 138 139 185
'/' (47) 180
':' (58) 89
';' (59) 50 51 57 60 61 62 63 64 65 66 67
'<' (60) 161
'=' (61) 45 46 159
'>' (62) 160
'?' (63) 68 187
'{' (123) 48
'}' (125) 48
error (256)
PARTITION (258) 209
IMMEDIATE (259) 67 883
DISTINCT (260) 111 562
EXECUTE (261) 66 67
BETWEEN (262) 156 831
DECLARE (263) 49
VALUES (264) 73 663
SELECT (265) 83 85 590
DELETE (266) 47 215 448
INSERT (267) 72
ESCAPE (268) 165 846
OVER (269) 182
UPDATE (270) 42 92 443
EXISTS (271) 155 859
HAVING (272) 97 662
COMMIT (273) 5 215
WHERE (274) 90 652
BEGIN (275) 57
TABLE (276) 135 210 667
ORDER (277) 99
OR (278) 144 451
GROUP (279) 94 653
RIGHT (280) 130 645
INNER (281) 128 639
OUTER (282) 127 643
UNION (283) 82 569 641
FROM (284) 70 83 85 612 728 742 753 762
WHEN (285) 202 690 701
THEN (286) 202 690 701
CASE (287) 173 684 696
CAST (288) 183 702
CALL (289) 48
ELSE (290) 203 695
DESC (291) 41 109
LIKE (292) 154 842
JOIN (293) 125 126 127 128 631 632
LEFT (294) 126 129 644
NULL (295) 153 188 369 417 445 693 704 813 850
FULL (296) 131 435 646 865
INTO (297) 72 85
AND (298) 143 156 453 831
SET (299) 42 250 445 446
END (300) 57 173 684 696
ASC (301) 12 108
XOR (302) 145
FOR (303) 92 730 755
NOT (304) 146 168 417 456 461 833 836 844 852 877 879
ON (305) 124 215 443 448 649
BY (306) 94 99 209 653 672
AS (307) 115 183 604 622 702
IN (308) 167 711 834
IS (309) 153 459 850
UNKNOWN (310) 871
UNKNOWN_BODY (311) 535 536 537 538 539 540 541 707
UNKNOWN_LEX (312) 222 223 269 375 376 383 384 385 386 391 393 395 399
    518 523 553 715 799 801 803 825 826 827 828 829 830
REAL (313) 318
ACTION (314) 11 447
MIN (315) 26 559
LOCAL (316) 213 782
SECOND (317) 349 354 766
BIT (318) 288 289
OCTET_LENGTH (319) 35 811
PRECISION (320) 319
BOTH (321) 749
SOME (322) 857
MINUTE (323) 346
CROSS (324) 631
DEFERRED (325) 34 882
DEFERRABLE (326) 24 873 875
MONTH (327) 343
SMALLINT (328) 301
WITH (329) 328 332
NCHAR (330) 272 275
ZONE (331) 22 328 332 783
NO (332) 447
INTERSECT (333) 580
COUNT (334) 27 551 561
SESSION_USER (335) 367 511
NATURAL (336) 634
DATE (337) 322 390
ALL (338) 563 572 576 582 856
DOUBLE (339) 319
NULLIF (340) 32 678
CURRENT_DATE (341) 403
SUM (342) 19 560
CORRESPONDING (343) 670
UNIQUE (344) 421 862
ANY (345) 858
COLLATE (346) 660
KEY (347) 14 422 894
AVG (348) 23 557
INITIALLY (349) 38 882 883
UPPER (350) 31 733
TIMESTAMP (351) 324 394
CONSTRAINT (352) 415
LEADING (353) 747
NUMERIC (354) 296
DAY (355) 344
DECIMAL (356) 297
DEC (357) 298
EXCEPT (358) 570
TRUE (359) 869
MODULE (360) 226
EXTRACT (361) 36 762
CHAR_LENGTH (362) 20 807
TIME (363) 323 328 332 392 783
SYSTEM_USER (364) 368 512
SUBSTRING (365) 40 728 753
INTEGER (366) 299
CURRENT_TIME (367) 404
CREATE (368) 210
PARTIAL (369) 37 436 864
PRIMARY (370) 422
CHECK (371) 449
CHARACTER (372) 250 251 253 270 273
USER (373) 365 509
CHAR (374) 252 254 271 274
TIMEZONE_HOUR (375) 767
REFERENCES (376) 423
MAX (377) 33 558
CURRENT_TIMESTAMP (378) 407
GLOBAL (379) 212
LOWER (380) 18 734
USING (381) 650 735 737
ROWS (382) 216
TO (383) 337
CASCADE (384) 28 444
TRAILING (385) 748
TEMPORARY (386) 30 213
HOUR (387) 345
BIT_LENGTH (388) 812
INDICATOR (389) 521 544
FALSE (390) 870
VALUE (391) 513
FOREIGN (392) 894
YEAR (393) 342
OVERLAPS (394) 866
CHARACTER_LENGTH (395) 25 808
MATCH (396) 425 860
INT (397) 300
CONVERT (398) 39 735
NATIONAL (399) 270 271 273 274
FLOAT (400) 317
CURRENT_USER (401) 366 510
TRANSLATE (402) 16 737
INTERVAL (403) 336 396
VARCHAR (404) 255
DEFAULT (405) 362 446 814
VARYING (406) 253 254 273 274 275 289
PRESERVE (407) 13 216
POSITION (408) 21 711
COALESCE (409) 29 679
TRIM (410) 17 739
TIMEZONE_MINUTE (411) 768
AT (412) 781
OUTERJ (413) 171
NE (414) 163
LE (415) 162
GE (416) 164
CONCAT (417) 181
COLONEQUALS (418) 55 60
EQUALSGT (419) 199
DIGAL_ERR (420)
STRING_SQ (421) 66 67 165 174
STRING_SQ_ERR (422)
MULTILINE_COMMENT_ERR (423)
NUMBER (424) 15 170 190 267
ID (425) 10 50 51 88 89 199
UNKNOWN_CHARACTER_ERR (426)


Nonterminals, with rules where they appear

$accept (189)
    on left: 0
query (190)
    on left: 1 2 3 4 5 6 7 8 9, on right: 0
id (191)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    28 29 30 31 32 33 34 35 36 37 38 39 40 41, on right: 77 78 115
    116 133 137 138 139 141 157 158 183 185 225
update (192)
    on left: 42, on right: 4 64
assignList (193)
    on left: 43 44, on right: 42 44
assign (194)
    on left: 45 46, on right: 43 44
delete (195)
    on left: 47, on right: 2 63
callStatement (196)
    on left: 48, on right: 9
declareBeginEndBlock (197)
    on left: 49, on right: 8
declaration (198)
    on left: 50 51, on right: 52 53
declarationList (199)
    on left: 52 53 54, on right: 49 53
declInitializer (200)
    on left: 55 56, on right: 50 51
beginEndBlock (201)
    on left: 57, on right: 7 49
plSqlStatementList (202)
    on left: 58 59, on right: 57 59
plSqlStatement (203)
    on left: 60 61 62 63 64 65 66 67, on right: 58 59
assignTarget (204)
    on left: 68 69, on right: 60
optFrom (205)
    on left: 70 71, on right: 47
insert (206)
    on left: 72, on right: 3 65
insertRest (207)
    on left: 73 74, on right: 72
optIdList (208)
    on left: 75 76, on right: 72
idList (209)
    on left: 77 78, on right: 46 76 78
bracketedSelect (210)
    on left: 79 80, on right: 1
select (211)
    on left: 81 82, on right: 74 79 80 82 136 150 152 155 184
basicSelect (212)
    on left: 83, on right: 81
selectInto (213)
    on left: 84, on right: 62
basicSelectInto (214)
    on left: 85, on right: 84
intoList (215)
    on left: 86 87, on right: 85 87
intoId (216)
    on left: 88 89, on right: 86 87
where (217)
    on left: 90 91, on right: 42 47 81 84
forUpdate (218)
    on left: 92 93, on right: 81
groupBy (219)
    on left: 94, on right: 95 103
optGroupBy (220)
    on left: 95 96, on right: 102
having (221)
    on left: 97 98, on right: 94
orderBy (222)
    on left: 99, on right: 100 102 209
optOrderBy (223)
    on left: 100 101, on right: 103
byClauses (224)
    on left: 102 103 104, on right: 81 84
directionList (225)
    on left: 105 106, on right: 99 106
direction (226)
    on left: 107, on right: 105 106
orderDirection (227)
    on left: 108 109 110, on right: 107
optDist (228)
    on left: 111 112, on right: 83 85
whatToSelect (229)
    on left: 113, on right: 83 85
selectExpression (230)
    on left: 114 115 116, on right: 115 116 119 120
expression (231)
    on left: 117 118, on right: 114
selectExpressionList (232)
    on left: 119 120, on right: 113 120
tableList (233)
    on left: 121 122, on right: 83 85 122
table (234)
    on left: 123 124, on right: 121 122 124
join (235)
    on left: 125 126 127 128, on right: 124
outerType (236)
    on left: 129 130 131, on right: 127
alias (237)
    on left: 132 133, on right: 42 47 72 123 124
tableExpr (238)
    on left: 134 135 136, on right: 132 133
ident (239)
    on left: 137 138 139, on right: 45 48 50 61 69 134 140 141 175
    209
identEx (240)
    on left: 140 141, on right: 51
whereCond (241)
    on left: 142, on right: 90
condition (242)
    on left: 143 144 145 146 147 148 149 150 151 152 153 154 155 156,
    on right: 97 117 124 142 143 144 145 146 147 202
idList2 (243)
    on left: 157 158, on right: 151 152 158
comparison (244)
    on left: 159 160 161 162 163 164, on right: 148
escape (245)
    on left: 165 166, on right: 154
inExpr (246)
    on left: 167, on right: 149 150 151 152
optNot (247)
    on left: 168 169, on right: 153 154 156 167
simpleExpr (248)
    on left: 170 171 172 173 174 175 176 177 178 179 180 181 182 183
    184 185 186 187 188, on right: 45 46 55 60 107 118 135 149 150
    153 154 156 159 160 161 162 163 164 171 172 176 177 178 179 180
    181 182 183 198 199 202 203 207 208
optSize (249)
    on left: 189 190, on right: 183
identRest (250)
    on left: 191 192, on right: 48 73 193
identRestEx (251)
    on left: 193 194, on right: 50 61 175
namedArgList (252)
    on left: 195 196 197, on right: 194 196
namedArg (253)
    on left: 198 199, on right: 195 196
whenList (254)
    on left: 200 201, on right: 173 201
when (255)
    on left: 202, on right: 200 201
else (256)
    on left: 203 204, on right: 173
simExList (257)
    on left: 205 206, on right: 94 149 151 191
nonemptySimExList (258)
    on left: 207 208, on right: 206 208
partition (259)
    on left: 209, on right: 182
tableDefinition (260)
    on left: 210, on right: 6
tableDefinition1 (261)
    on left: 211 212 213, on right: 210
tableDefinition2 (262)
    on left: 214 215 216, on right: 210
tableName (263)
    on left: 217 218, on right: 210 428 548 615 667
qualifiedName (264)
    on left: 219, on right: 217 361 416 661 736 738
qualifiedName1 (265)
    on left: 220 221, on right: 219
schemaName (266)
    on left: 222, on right: 221
period (267)
    on left: 223, on right: 221 226 547 598
qualifiedIdentifier (268)
    on left: 224, on right: 219 227
identifier (269)
    on left: 225, on right: 224 242 517 550
qualifiedLocalTableName (270)
    on left: 226, on right: 218
localTableName (271)
    on left: 227, on right: 226
tableElementList (272)
    on left: 228, on right: 210
tableElementList1 (273)
    on left: 229 230, on right: 228 230
leftParen (274)
    on left: 231, on right: 228 257 259 261 263 265 277 279 281 283
    285 287 291 293 303 307 311 321 326 330 341 351 356 358 360 406
    409 430 449 463 475 500 551 554 565 586 624 630 650 672 678 679
    702 711 728 734 735 737 739 753 762 787 808 811 812 838 892 894
tableElement (275)
    on left: 232 233, on right: 228 230
columnDefinition (276)
    on left: 234 235, on right: 232
columnDefinition1 (277)
    on left: 236 237, on right: 235
columnDefinition2 (278)
    on left: 238 239, on right: 235 239
columnDefinition3 (279)
    on left: 240 241, on right: 235
columnName (280)
    on left: 242, on right: 234 432 434 545 602
dataType (281)
    on left: 243 244 245 246 247 248, on right: 234
dataType1 (282)
    on left: 249 250, on right: 243
characterStringType (283)
    on left: 251 252 253 254 255, on right: 243
characterStringType1 (284)
    on left: 256 257, on right: 251
characterStringType2 (285)
    on left: 258 259, on right: 252
characterStringType3 (286)
    on left: 260 261, on right: 253
characterStringType4 (287)
    on left: 262 263, on right: 254
characterStringType5 (288)
    on left: 264 265, on right: 255
length (289)
    on left: 266, on right: 257 259 261 263 265 277 279 281 283 285
    287 291 293
unsignedInteger (290)
    on left: 267, on right: 266 314 316 334 347 352
rightParen (291)
    on left: 268, on right: 228 257 259 261 263 265 277 279 281 283
    285 287 291 293 303 307 311 321 326 330 341 351 356 358 406 409
    430 449 463 475 500 551 554 565 586 624 630 650 672 678 679 702
    711 728 734 735 737 739 753 762 787 808 811 812 838 892 894
characterSetSpecification (292)
    on left: 269, on right: 250
nationalCharacterStringType (293)
    on left: 270 271 272 273 274 275, on right: 244
nationalCharacterStringType1 (294)
    on left: 276 277, on right: 270
nationalCharacterStringType2 (295)
    on left: 278 279, on right: 271
nationalCharacterStringType3 (296)
    on left: 280 281, on right: 272
nationalCharacterStringType4 (297)
    on left: 282 283, on right: 273
nationalCharacterStringType5 (298)
    on left: 284 285, on right: 274
nationalCharacterStringType6 (299)
    on left: 286 287, on right: 275
bitStringType (300)
    on left: 288 289, on right: 245
bitStringType1 (301)
    on left: 290 291, on right: 288
bitStringType2 (302)
    on left: 292 293, on right: 289
numericType (303)
    on left: 294 295, on right: 246
exactNumericType (304)
    on left: 296 297 298 299 300 301, on right: 294
exactNumericType2 (305)
    on left: 302 303, on right: 296
exactNumericType1 (306)
    on left: 304 305, on right: 303
exactNumericType4 (307)
    on left: 306 307, on right: 297
exactNumericType3 (308)
    on left: 308 309, on right: 307
exactNumericType6 (309)
    on left: 310 311, on right: 298
exactNumericType5 (310)
    on left: 312 313, on right: 311
precision (311)
    on left: 314, on right: 303 307 311 321
comma (312)
    on left: 315, on right: 230 305 309 313 360 434 596 614 656 666
    678 680 681 817 840 841
scale (313)
    on left: 316, on right: 305 309 313
approximateNumericType (314)
    on left: 317 318 319, on right: 295
approximateNumericType1 (315)
    on left: 320 321, on right: 317
datetimeType (316)
    on left: 322 323 324, on right: 247
datetimeType1 (317)
    on left: 325 326, on right: 323
datetimeType2 (318)
    on left: 327 328, on right: 323
datetimeType3 (319)
    on left: 329 330, on right: 324
datetimeType4 (320)
    on left: 331 332, on right: 324
timePrecision (321)
    on left: 333, on right: 326 406
timeFractionalSecondsPrecision (322)
    on left: 334, on right: 333 335
timestampPrecision (323)
    on left: 335, on right: 330 409
intervalType (324)
    on left: 336, on right: 248
intervalQualifier (325)
    on left: 337 338, on right: 336 396 787 797
startField (326)
    on left: 339, on right: 337
startField1 (327)
    on left: 340 341, on right: 339
nonsecondDatetimeField (328)
    on left: 342 343 344 345 346, on right: 339 348 353 765
intervalLeadingFieldPrecision (329)
    on left: 347, on right: 341 356 358
endField (330)
    on left: 348 349, on right: 337
endField1 (331)
    on left: 350 351, on right: 349
intervalFractionalSecondsPrecision (332)
    on left: 352, on right: 351 360
singleDatetimeField (333)
    on left: 353 354, on right: 338
singleDatetimeField1 (334)
    on left: 355 356, on right: 353
singleDatetimeField3 (335)
    on left: 357 358, on right: 354
singleDatetimeField2 (336)
    on left: 359 360, on right: 358
domainName (337)
    on left: 361, on right: 235 705
defaultClause (338)
    on left: 362, on right: 237
defaultOption (339)
    on left: 363 364 365 366 367 368 369, on right: 362
literal (340)
    on left: 370 371, on right: 363
signedNumericLiteral (341)
    on left: 372, on right: 370
signedNumericLiteral1 (342)
    on left: 373 374, on right: 372
sign (343)
    on left: 375, on right: 374 398 492 794
unsignedNumericLiteral (344)
    on left: 376, on right: 372 504
generalLiteral (345)
    on left: 377 378 379 380 381 382, on right: 371 505
characterStringLiteral (346)
    on left: 383, on right: 377
nationalCharacterStringLiteral (347)
    on left: 384, on right: 378
bitStringLiteral (348)
    on left: 385, on right: 379
hexStringLiteral (349)
    on left: 386, on right: 380
datetimeLiteral (350)
    on left: 387 388 389, on right: 381
dateLiteral (351)
    on left: 390, on right: 387
dateString (352)
    on left: 391, on right: 390
timeLiteral (353)
    on left: 392, on right: 388
timeString (354)
    on left: 393, on right: 392
timestampLiteral (355)
    on left: 394, on right: 389
timestampString (356)
    on left: 395, on right: 394
intervalLiteral (357)
    on left: 396, on right: 382
intervalLiteral1 (358)
    on left: 397 398, on right: 396
intervalString (359)
    on left: 399, on right: 396
datetimeValueFunction (360)
    on left: 400 401 402, on right: 364 780
currentDateValueFunction (361)
    on left: 403, on right: 400
currentTimeValueFunction (362)
    on left: 404, on right: 401
currentTimeValueFunction1 (363)
    on left: 405 406, on right: 404
currentTimestampValueFunction (364)
    on left: 407, on right: 402
currentTimestampValueFunction1 (365)
    on left: 408 409, on right: 407
columnConstraintDefinition (366)
    on left: 410, on right: 239
columnConstraintDefinition1 (367)
    on left: 411 412, on right: 410
columnConstraintDefinition2 (368)
    on left: 413 414, on right: 410
constraintNameDefinition (369)
    on left: 415, on right: 412 886
constraintName (370)
    on left: 416, on right: 415
columnConstraint (371)
    on left: 417 418 419 420, on right: 410
uniqueSpecification (372)
    on left: 421 422, on right: 418 892
referencesSpecification (373)
    on left: 423, on right: 419 894
referencesSpecification1 (374)
    on left: 424 425, on right: 423
referencesSpecification2 (375)
    on left: 426 427, on right: 423
referencedTableAndColumns (376)
    on left: 428, on right: 423
referencedTableAndColumns1 (377)
    on left: 429 430, on right: 428
referenceColumnList (378)
    on left: 431, on right: 430 895
columnNameList (379)
    on left: 432, on right: 431 625 651 673 893
columnNameList1 (380)
    on left: 433 434, on right: 432 434
matchType (381)
    on left: 435 436, on right: 425
referentialTriggeredAction (382)
    on left: 437 438, on right: 427
referentialTriggeredAction1 (383)
    on left: 439 440, on right: 437
referentialTriggeredAction2 (384)
    on left: 441 442, on right: 438
updateRule (385)
    on left: 443, on right: 437 442
referentialAction (386)
    on left: 444 445 446 447, on right: 443 448
deleteRule (387)
    on left: 448, on right: 438 440
checkConstraintDefinition (388)
    on left: 449, on right: 420 891
searchCondition (389)
    on left: 450 451, on right: 449 451 463 649 652 662 701
booleanTerm (390)
    on left: 452 453, on right: 450 451 453
booleanFactor (391)
    on left: 454, on right: 452 453
booleanFactor1 (392)
    on left: 455 456, on right: 454
booleanTest (393)
    on left: 457, on right: 454
booleanTest2 (394)
    on left: 458 459, on right: 457
booleanTest1 (395)
    on left: 460 461, on right: 459
booleanPrimary (396)
    on left: 462 463, on right: 457
predicate (397)
    on left: 464 465 466 467 468 469 470 471 472, on right: 462
comparisonPredicate (398)
    on left: 473, on right: 464
rowValueConstructor (399)
    on left: 474 475 476, on right: 473 664 666 831 834 853 860 867
    868
rowValueConstructorElement (400)
    on left: 477 478 479, on right: 474 815 817
valueExpression (401)
    on left: 480 481 482 483, on right: 477 500 554 599 678 679 680
    681 689 691 694 703 839 840 841
numericValueExpression (402)
    on left: 484 485 486, on right: 480 485 486 731 732
term (403)
    on left: 487 488 489, on right: 484 485 486 488 489 791
factor (404)
    on left: 490, on right: 487 488 489 789 790
factor1 (405)
    on left: 491 492, on right: 490
numericPrimary (406)
    on left: 493 494, on right: 490
valueExpressionPrimary (407)
    on left: 495 496 497 498 499 500 501, on right: 493 719 760 779
    795
unsignedValueSpecification (408)
    on left: 502 503, on right: 495
unsignedLiteral (409)
    on left: 504 505, on right: 502
generalValueSpecification (410)
    on left: 506 507 508 509 510 511 512 513, on right: 503
parameterSpecification (411)
    on left: 514, on right: 506
parameterSpecification1 (412)
    on left: 515 516, on right: 514
parameterName (413)
    on left: 517, on right: 514 519
colon (414)
    on left: 518, on right: 517 527
indicatorParameter (415)
    on left: 519, on right: 516
indicatorParameter1 (416)
    on left: 520 521, on right: 519
dynamicParameterSpecification (417)
    on left: 522, on right: 507
questionMark (418)
    on left: 523, on right: 522
variableSpecification (419)
    on left: 524, on right: 508
variableSpecification1 (420)
    on left: 525 526, on right: 524
embeddedVariableName (421)
    on left: 527, on right: 524 542
hostIdentifier (422)
    on left: 528 529 530 531 532 533 534, on right: 527
AdaHostIdentifier (423)
    on left: 535, on right: 528
CHostIdentifier (424)
    on left: 536, on right: 529
CobolHostIdentifier (425)
    on left: 537, on right: 530
FortranHostIdentifier (426)
    on left: 538, on right: 531
MUMPSHostIdentifier (427)
    on left: 539, on right: 532
PascalHostIdentifier (428)
    on left: 540, on right: 533
PLIHostIdentifier (429)
    on left: 541, on right: 534
indicatorVariable (430)
    on left: 542, on right: 526
indicatorVariable1 (431)
    on left: 543 544, on right: 542
columnReference (432)
    on left: 545, on right: 496 657
columnReference1 (433)
    on left: 546 547, on right: 545
qualifier (434)
    on left: 548 549, on right: 547 598
correlationName (435)
    on left: 550, on right: 549 620
setFunctionSpecification (436)
    on left: 551 552, on right: 497
asterisk (437)
    on left: 553, on right: 488 551 593 598 789 791
generalSetFunction (438)
    on left: 554, on right: 552
generalSetFunction1 (439)
    on left: 555 556, on right: 554
setFunctionType (440)
    on left: 557 558 559 560 561, on right: 554
setQuantifier (441)
    on left: 562 563, on right: 556 592
scalarSubquery (442)
    on left: 564, on right: 498
subquery (443)
    on left: 565, on right: 564 627 818
queryExpression (444)
    on left: 566 567, on right: 565 569 570
nonjoinQueryExpression (445)
    on left: 568 569 570, on right: 566 586
nonjoinQueryExpression1 (446)
    on left: 571 572, on right: 569
nonjoinQueryExpression2 (447)
    on left: 573 574, on right: 569
nonjoinQueryExpression3 (448)
    on left: 575 576, on right: 570
nonjoinQueryExpression4 (449)
    on left: 577 578, on right: 570
nonjoinQueryTerm (450)
    on left: 579 580, on right: 568 668
nonjoinQueryTerm1 (451)
    on left: 581 582, on right: 580
nonjoinQueryTerm2 (452)
    on left: 583 584, on right: 580
nonjoinQueryPrimary (453)
    on left: 585 586, on right: 579 674
simpleTable (454)
    on left: 587 588 589, on right: 585
querySpecification (455)
    on left: 590, on right: 587
querySpecification1 (456)
    on left: 591 592, on right: 590
selectList (457)
    on left: 593 594, on right: 590
selectList1 (458)
    on left: 595 596, on right: 594 596
selectSublist (459)
    on left: 597 598, on right: 594 596
derivedColumn (460)
    on left: 599, on right: 597
derivedColumn1 (461)
    on left: 600 601, on right: 599
asClause (462)
    on left: 602, on right: 601
asClause1 (463)
    on left: 603 604, on right: 602
tableExpression (464)
    on left: 605, on right: 590
tableExpression1 (465)
    on left: 606 607, on right: 605
tableExpression2 (466)
    on left: 608 609, on right: 605
tableExpression3 (467)
    on left: 610 611, on right: 605
fromClause (468)
    on left: 612, on right: 605
fromClause1 (469)
    on left: 613 614, on right: 612 614
tableReference (470)
    on left: 615 616 617, on right: 612 614 631 632
tableReference1 (471)
    on left: 618 619, on right: 615
correlationSpecification (472)
    on left: 620, on right: 616 619
correlationSpecification1 (473)
    on left: 621 622, on right: 620
correlationSpecification2 (474)
    on left: 623 624, on right: 620
derivedColumnList (475)
    on left: 625, on right: 624
derivedTable (476)
    on left: 626, on right: 616
tableSubquery (477)
    on left: 627, on right: 626 837 853 859 860
joinedTable (478)
    on left: 628 629 630, on right: 567 617 630 669 675
crossJoin (479)
    on left: 631, on right: 628
qualifiedJoin (480)
    on left: 632, on right: 629
qualifiedJoin1 (481)
    on left: 633 634, on right: 632
qualifiedJoin2 (482)
    on left: 635 636, on right: 632
qualifiedJoin3 (483)
    on left: 637 638, on right: 632
joinType (484)
    on left: 639 640 641, on right: 636
joinType1 (485)
    on left: 642 643, on right: 640
outerJoinType (486)
    on left: 644 645 646, on right: 640
joinSpecification (487)
    on left: 647 648, on right: 638
joinCondition (488)
    on left: 649, on right: 647
namedColumnsJoin (489)
    on left: 650, on right: 648
joinColumnList (490)
    on left: 651, on right: 650
whereClause (491)
    on left: 652, on right: 607
groupByClause (492)
    on left: 653, on right: 609
groupingColumnReferenceList (493)
    on left: 654, on right: 653
groupingColumnReferenceList1 (494)
    on left: 655 656, on right: 654 656
groupingColumnReference (495)
    on left: 657, on right: 654 656
groupingColumnReference1 (496)
    on left: 658 659, on right: 657
collateClause (497)
    on left: 660, on right: 241 659 718
collationName (498)
    on left: 661, on right: 660
havingClause (499)
    on left: 662, on right: 611
tableValueConstructor (500)
    on left: 663, on right: 588
tableValueConstructorList (501)
    on left: 664, on right: 663
tableValueConstructorList1 (502)
    on left: 665 666, on right: 664 666
explicitTable (503)
    on left: 667, on right: 589
queryTerm (504)
    on left: 668 669, on right: 569 570 580
correspondingSpec (505)
    on left: 670, on right: 574 578 584
correspondingSpec1 (506)
    on left: 671 672, on right: 670
correspondingColumnList (507)
    on left: 673, on right: 672
queryPrimary (508)
    on left: 674 675, on right: 580
caseExpression (509)
    on left: 676 677, on right: 499
caseAbbreviation (510)
    on left: 678 679, on right: 676
caseAbbreviation1 (511)
    on left: 680 681, on right: 679 681
caseSpecification (512)
    on left: 682 683, on right: 677
simpleCase (513)
    on left: 684, on right: 682
simpleCase1 (514)
    on left: 685 686, on right: 684 686
simpleCase2 (515)
    on left: 687 688, on right: 684
caseOperand (516)
    on left: 689, on right: 684
simpleWhenClause (517)
    on left: 690, on right: 685 686
whenOperand (518)
    on left: 691, on right: 690
result (519)
    on left: 692 693, on right: 690 695 701
resultExpression (520)
    on left: 694, on right: 692
elseClause (521)
    on left: 695, on right: 688 700
searchedCase (522)
    on left: 696, on right: 683
searchedCase1 (523)
    on left: 697 698, on right: 696 698
searchedCase2 (524)
    on left: 699 700, on right: 696
searchedWhenClause (525)
    on left: 701, on right: 697 698
castSpecification (526)
    on left: 702, on right: 501
castOperand (527)
    on left: 703 704, on right: 702
castTarget (528)
    on left: 705 706, on right: 702
typeName (529)
    on left: 707, on right: 706
numericValueFunction (530)
    on left: 708 709 710, on right: 494
positionExpression (531)
    on left: 711, on right: 708
characterValueExpression (532)
    on left: 712 713, on right: 711 714 728 734 735 737 750 751 809
    847 848 849
concatenation (533)
    on left: 714, on right: 712
concatenationOperator (534)
    on left: 715, on right: 714 758
characterFactor (535)
    on left: 716, on right: 713 714
characterFactor1 (536)
    on left: 717 718, on right: 716
characterPrimary (537)
    on left: 719 720, on right: 716
stringValueFunction (538)
    on left: 721 722, on right: 720 761
characterValueFunction (539)
    on left: 723 724 725 726 727, on right: 721
characterSubstringFunction (540)
    on left: 728, on right: 723
characterSubstringFunction1 (541)
    on left: 729 730, on right: 728
startPosition (542)
    on left: 731, on right: 728 753
stringLength (543)
    on left: 732, on right: 730 755
fold (544)
    on left: 733 734, on right: 724
formofuseConversion (545)
    on left: 735, on right: 725
formofuseConversionName (546)
    on left: 736, on right: 735
characterTranslation (547)
    on left: 737, on right: 726
translationName (548)
    on left: 738, on right: 737
trimFunction (549)
    on left: 739, on right: 727
trimOperands (550)
    on left: 740, on right: 739
trimOperands3 (551)
    on left: 741 742, on right: 740
trimOperands1 (552)
    on left: 743 744, on right: 742
trimOperands2 (553)
    on left: 745 746, on right: 742
trimSpecification (554)
    on left: 747 748 749, on right: 744
trimCharacter (555)
    on left: 750, on right: 746
trimSource (556)
    on left: 751, on right: 740
bitValueFunction (557)
    on left: 752, on right: 722
bitSubstringFunction (558)
    on left: 753, on right: 752
bitSubstringFunction1 (559)
    on left: 754 755, on right: 753
bitValueExpression (560)
    on left: 756 757, on right: 753 758 810
bitConcatenation (561)
    on left: 758, on right: 756
bitFactor (562)
    on left: 759, on right: 757 758
bitPrimary (563)
    on left: 760 761, on right: 759
extractExpression (564)
    on left: 762, on right: 709
extractField (565)
    on left: 763 764, on right: 762
datetimeField (566)
    on left: 765 766, on right: 763
timeZoneField (567)
    on left: 767 768, on right: 764
extractSource (568)
    on left: 769 770, on right: 762
datetimeValueExpression (569)
    on left: 771 772 773 774, on right: 482 769 773 774 787
datetimeTerm (570)
    on left: 775, on right: 771 772 787
datetimeFactor (571)
    on left: 776, on right: 775
datetimeFactor1 (572)
    on left: 777 778, on right: 776
datetimePrimary (573)
    on left: 779 780, on right: 776
timeZone (574)
    on left: 781, on right: 778
timeZoneSpecifier (575)
    on left: 782 783, on right: 781
intervalValueExpression (576)
    on left: 784 785 786 787, on right: 483 770 772 783 800
intervalTerm (577)
    on left: 788 789 790 791, on right: 773 774 784 798 802
intervalFactor (578)
    on left: 792, on right: 788 791
intervalFactor1 (579)
    on left: 793 794, on right: 792
intervalPrimary (580)
    on left: 795, on right: 792
intervalPrimary1 (581)
    on left: 796 797, on right: 795
intervalTerm2 (582)
    on left: 798, on right: 789 790
solidus (583)
    on left: 799, on right: 489 790
intervalValueExpression1 (584)
    on left: 800, on right: 785 786
plusSign (585)
    on left: 801, on right: 485 772 773 785
intervalTerm1 (586)
    on left: 802, on right: 785 786
minusSign (587)
    on left: 803, on right: 486 774 786 787
lengthExpression (588)
    on left: 804 805 806, on right: 710
charLengthExpression (589)
    on left: 807 808, on right: 804
stringValueExpression (590)
    on left: 809 810, on right: 481 808 811 812
octetLengthExpression (591)
    on left: 811, on right: 805
bitLengthExpression (592)
    on left: 812, on right: 806
nullSpecification (593)
    on left: 813, on right: 478
defaultSpecification (594)
    on left: 814, on right: 479
rowValueConstructorList (595)
    on left: 815, on right: 475
rowValueConstructorList1 (596)
    on left: 816 817, on right: 815 817
rowSubquery (597)
    on left: 818, on right: 476
compOp (598)
    on left: 819 820 821 822 823 824, on right: 473 853
equalsOperator (599)
    on left: 825, on right: 819
notEqualsOperator (600)
    on left: 826, on right: 820
lessThanOperator (601)
    on left: 827, on right: 821
greaterThanOperator (602)
    on left: 828, on right: 822
lessThanOrEqualsOperator (603)
    on left: 829, on right: 823
greaterThanOrEqualsOperator (604)
    on left: 830, on right: 824
betweenPredicate (605)
    on left: 831, on right: 465
betweenPredicate1 (606)
    on left: 832 833, on right: 831
inPredicate (607)
    on left: 834, on right: 466
inPredicate1 (608)
    on left: 835 836, on right: 834
inPredicateValue (609)
    on left: 837 838, on right: 834
inValueList (610)
    on left: 839, on right: 838
inValueList1 (611)
    on left: 840 841, on right: 839 841
likePredicate (612)
    on left: 842, on right: 467
likePredicate1 (613)
    on left: 843 844, on right: 842
likePredicate2 (614)
    on left: 845 846, on right: 842
matchValue (615)
    on left: 847, on right: 842
pattern (616)
    on left: 848, on right: 842
escapeCharacter (617)
    on left: 849, on right: 846
nullPredicate (618)
    on left: 850, on right: 468
nullPredicate1 (619)
    on left: 851 852, on right: 850
quantifiedComparisonPredicate (620)
    on left: 853, on right: 469
quantifier (621)
    on left: 854 855, on right: 853
all (622)
    on left: 856, on right: 854
some (623)
    on left: 857 858, on right: 855
existsPredicate (624)
    on left: 859, on right: 470
matchPredicate (625)
    on left: 860, on right: 471
matchPredicate1 (626)
    on left: 861 862, on right: 860
matchPredicate2 (627)
    on left: 863 864 865, on right: 860
overlapsPredicate (628)
    on left: 866, on right: 472
rowValueConstructor1 (629)
    on left: 867, on right: 866
rowValueConstructor2 (630)
    on left: 868, on right: 866
truthValue (631)
    on left: 869 870 871, on right: 459
constraintAttributes (632)
    on left: 872 873, on right: 414
constraintAttributes2 (633)
    on left: 874 875, on right: 872
constraintAttributes1 (634)
    on left: 876 877, on right: 875
constraintAttributes3 (635)
    on left: 878 879, on right: 873
constraintAttributes4 (636)
    on left: 880 881, on right: 873
constraintCheckTime (637)
    on left: 882 883, on right: 872 881 888
tableConstraintDefinition (638)
    on left: 884, on right: 233
tableConstraintDefinition1 (639)
    on left: 885 886, on right: 884
tableConstraintDefinition2 (640)
    on left: 887 888, on right: 884
tableConstraint (641)
    on left: 889 890 891, on right: 884
uniqueConstraintDefinition (642)
    on left: 892, on right: 889
uniqueColumnList (643)
    on left: 893, on right: 892
referentialConstraintDefinition (644)
    on left: 894, on right: 890
referencingColumns (645)
    on left: 895, on right: 894


state 0

    0 $accept: . query $end
    1 query: . bracketedSelect
    2      | . delete
    3      | . insert
    4      | . update
    5      | . COMMIT
    6      | . tableDefinition
    7      | . beginEndBlock
    8      | . declareBeginEndBlock
    9      | . callStatement
   42 update: . UPDATE alias SET assignList where
   47 delete: . DELETE optFrom alias where
   48 callStatement: . '{' CALL ident identRest '}'
   49 declareBeginEndBlock: . DECLARE declarationList beginEndBlock
   57 beginEndBlock: . BEGIN plSqlStatementList END ';'
   72 insert: . INSERT INTO alias optIdList insertRest
   79 bracketedSelect: . select
   80                | . '(' select ')'
   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList
  210 tableDefinition: . CREATE tableDefinition1 TABLE tableName tableElementList tableDefinition2

    DECLARE  shift, and go to state 1
    SELECT   shift, and go to state 2
    DELETE   shift, and go to state 3
    INSERT   shift, and go to state 4
    UPDATE   shift, and go to state 5
    COMMIT   shift, and go to state 6
    BEGIN    shift, and go to state 7
    CREATE   shift, and go to state 8
    '('      shift, and go to state 9
    '{'      shift, and go to state 10

    query                 go to state 11
    update                go to state 12
    delete                go to state 13
    callStatement         go to state 14
    declareBeginEndBlock  go to state 15
    beginEndBlock         go to state 16
    insert                go to state 17
    bracketedSelect       go to state 18
    select                go to state 19
    basicSelect           go to state 20
    tableDefinition       go to state 21


state 1

   49 declareBeginEndBlock: DECLARE . declarationList beginEndBlock
   50 declaration: . ID ident identRestEx declInitializer ';'
   51            | . ID identEx declInitializer ';'
   52 declarationList: . declaration
   53                | . declaration declarationList
   54                | .  [BEGIN]

    ID  shift, and go to state 22

    $default  reduce using rule 54 (declarationList)

    declaration      go to state 23
    declarationList  go to state 24


state 2

   83 basicSelect: SELECT . optDist whatToSelect FROM tableList
  111 optDist: . DISTINCT
  112        | .  [EXISTS, CASE, CAST, DESC, NULL, ASC, NOT, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, STRING_SQ, NUMBER, ID, '-', '*', '(', '?']

    DISTINCT  shift, and go to state 25

    $default  reduce using rule 112 (optDist)

    optDist  go to state 26


state 3

   47 delete: DELETE . optFrom alias where
   70 optFrom: . FROM
   71        | .  [TABLE, DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']

    FROM  shift, and go to state 27

    $default  reduce using rule 71 (optFrom)

    optFrom  go to state 28


state 4

   72 insert: INSERT . INTO alias optIdList insertRest

    INTO  shift, and go to state 29


state 5

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   42 update: UPDATE . alias SET assignList where
  132 alias: . tableExpr
  133      | . tableExpr id
  134 tableExpr: . ident
  135          | . TABLE '(' simpleExpr ')'
  136          | . '(' select ')'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    TABLE             shift, and go to state 30
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 63

    id         go to state 64
    alias      go to state 65
    tableExpr  go to state 66
    ident      go to state 67


state 6

    5 query: COMMIT .

    $default  reduce using rule 5 (query)


state 7

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   42 update: . UPDATE alias SET assignList where
   47 delete: . DELETE optFrom alias where
   57 beginEndBlock: BEGIN . plSqlStatementList END ';'
   58 plSqlStatementList: . plSqlStatement
   59                   | . plSqlStatement plSqlStatementList
   60 plSqlStatement: . assignTarget COLONEQUALS simpleExpr ';'
   61               | . ident identRestEx ';'
   62               | . selectInto ';'
   63               | . delete ';'
   64               | . update ';'
   65               | . insert ';'
   66               | . EXECUTE STRING_SQ ';'
   67               | . EXECUTE IMMEDIATE STRING_SQ ';'
   68 assignTarget: . '?'
   69             | . ident
   72 insert: . INSERT INTO alias optIdList insertRest
   84 selectInto: . basicSelectInto where byClauses
   85 basicSelectInto: . SELECT optDist whatToSelect INTO intoList FROM tableList
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    EXECUTE           shift, and go to state 68
    SELECT            shift, and go to state 69
    DELETE            shift, and go to state 3
    INSERT            shift, and go to state 4
    UPDATE            shift, and go to state 5
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '?'               shift, and go to state 70

    id                  go to state 64
    update              go to state 71
    delete              go to state 72
    plSqlStatementList  go to state 73
    plSqlStatement      go to state 74
    assignTarget        go to state 75
    insert              go to state 76
    selectInto          go to state 77
    basicSelectInto     go to state 78
    ident               go to state 79


state 8

  210 tableDefinition: CREATE . tableDefinition1 TABLE tableName tableElementList tableDefinition2
  211 tableDefinition1: .  [TABLE]
  212                 | . GLOBAL
  213                 | . LOCAL TEMPORARY

    LOCAL   shift, and go to state 80
    GLOBAL  shift, and go to state 81

    $default  reduce using rule 211 (tableDefinition1)

    tableDefinition1  go to state 82


state 9

   80 bracketedSelect: '(' . select ')'
   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList

    SELECT  shift, and go to state 2

    select       go to state 83
    basicSelect  go to state 20


state 10

   48 callStatement: '{' . CALL ident identRest '}'

    CALL  shift, and go to state 84


state 11

    0 $accept: query . $end

    $end  shift, and go to state 85


state 12

    4 query: update .

    $default  reduce using rule 4 (query)


state 13

    2 query: delete .

    $default  reduce using rule 2 (query)


state 14

    9 query: callStatement .

    $default  reduce using rule 9 (query)


state 15

    8 query: declareBeginEndBlock .

    $default  reduce using rule 8 (query)


state 16

    7 query: beginEndBlock .

    $default  reduce using rule 7 (query)


state 17

    3 query: insert .

    $default  reduce using rule 3 (query)


state 18

    1 query: bracketedSelect .

    $default  reduce using rule 1 (query)


state 19

   79 bracketedSelect: select .  [$end]
   82 select: select . UNION select

    UNION  shift, and go to state 86

    $default  reduce using rule 79 (bracketedSelect)


state 20

   81 select: basicSelect . where byClauses forUpdate
   90 where: . WHERE whereCond
   91      | .  [$end, ORDER, GROUP, UNION, FOR, ')', ';']

    WHERE  shift, and go to state 87

    $default  reduce using rule 91 (where)

    where  go to state 88


state 21

    6 query: tableDefinition .

    $default  reduce using rule 6 (query)


state 22

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   50 declaration: ID . ident identRestEx declInitializer ';'
   51            | ID . identEx declInitializer ';'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  140 identEx: . ident
  141        | . ident '%' id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id       go to state 64
    ident    go to state 89
    identEx  go to state 90


state 23

   50 declaration: . ID ident identRestEx declInitializer ';'
   51            | . ID identEx declInitializer ';'
   52 declarationList: . declaration
   52                | declaration .  [BEGIN]
   53                | . declaration declarationList
   53                | declaration . declarationList
   54                | .  [BEGIN]

    ID  shift, and go to state 22

    BEGIN     reduce using rule 52 (declarationList)
    BEGIN     [reduce using rule 54 (declarationList)]
    $default  reduce using rule 52 (declarationList)

    declaration      go to state 23
    declarationList  go to state 91


state 24

   49 declareBeginEndBlock: DECLARE declarationList . beginEndBlock
   57 beginEndBlock: . BEGIN plSqlStatementList END ';'

    BEGIN  shift, and go to state 7

    beginEndBlock  go to state 92


state 25

  111 optDist: DISTINCT .

    $default  reduce using rule 111 (optDist)


state 26

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   83 basicSelect: SELECT optDist . whatToSelect FROM tableList
  113 whatToSelect: . selectExpressionList
  114 selectExpression: . expression
  115                 | . selectExpression AS id
  116                 | . selectExpression id
  117 expression: . condition
  118           | . simpleExpr
  119 selectExpressionList: . selectExpression
  120                     | . selectExpressionList ',' selectExpression
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id                    go to state 104
    whatToSelect          go to state 105
    selectExpression      go to state 106
    expression            go to state 107
    selectExpressionList  go to state 108
    ident                 go to state 109
    condition             go to state 110
    comparison            go to state 111
    simpleExpr            go to state 112


state 27

   70 optFrom: FROM .

    $default  reduce using rule 70 (optFrom)


state 28

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   47 delete: DELETE optFrom . alias where
  132 alias: . tableExpr
  133      | . tableExpr id
  134 tableExpr: . ident
  135          | . TABLE '(' simpleExpr ')'
  136          | . '(' select ')'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    TABLE             shift, and go to state 30
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 63

    id         go to state 64
    alias      go to state 113
    tableExpr  go to state 66
    ident      go to state 67


state 29

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   72 insert: INSERT INTO . alias optIdList insertRest
  132 alias: . tableExpr
  133      | . tableExpr id
  134 tableExpr: . ident
  135          | . TABLE '(' simpleExpr ')'
  136          | . '(' select ')'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    TABLE             shift, and go to state 30
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 63

    id         go to state 64
    alias      go to state 114
    tableExpr  go to state 66
    ident      go to state 67


state 30

  135 tableExpr: TABLE . '(' simpleExpr ')'

    '('  shift, and go to state 115


state 31

   41 id: DESC .

    $default  reduce using rule 41 (id)


state 32

   12 id: ASC .

    $default  reduce using rule 12 (id)


state 33

   11 id: ACTION .

    $default  reduce using rule 11 (id)


state 34

   26 id: MIN .

    $default  reduce using rule 26 (id)


state 35

   35 id: OCTET_LENGTH .

    $default  reduce using rule 35 (id)


state 36

   34 id: DEFERRED .

    $default  reduce using rule 34 (id)


state 37

   24 id: DEFERRABLE .

    $default  reduce using rule 24 (id)


state 38

   22 id: ZONE .

    $default  reduce using rule 22 (id)


state 39

   27 id: COUNT .

    $default  reduce using rule 27 (id)


state 40

   32 id: NULLIF .

    $default  reduce using rule 32 (id)


state 41

   19 id: SUM .

    $default  reduce using rule 19 (id)


state 42

   14 id: KEY .

    $default  reduce using rule 14 (id)


state 43

   23 id: AVG .

    $default  reduce using rule 23 (id)


state 44

   38 id: INITIALLY .

    $default  reduce using rule 38 (id)


state 45

   31 id: UPPER .

    $default  reduce using rule 31 (id)


state 46

   36 id: EXTRACT .

    $default  reduce using rule 36 (id)


state 47

   20 id: CHAR_LENGTH .

    $default  reduce using rule 20 (id)


state 48

   40 id: SUBSTRING .

    $default  reduce using rule 40 (id)


state 49

   37 id: PARTIAL .

    $default  reduce using rule 37 (id)


state 50

   33 id: MAX .

    $default  reduce using rule 33 (id)


state 51

   18 id: LOWER .

    $default  reduce using rule 18 (id)


state 52

   28 id: CASCADE .

    $default  reduce using rule 28 (id)


state 53

   30 id: TEMPORARY .

    $default  reduce using rule 30 (id)


state 54

   25 id: CHARACTER_LENGTH .

    $default  reduce using rule 25 (id)


state 55

   39 id: CONVERT .

    $default  reduce using rule 39 (id)


state 56

   16 id: TRANSLATE .

    $default  reduce using rule 16 (id)


state 57

   13 id: PRESERVE .

    $default  reduce using rule 13 (id)


state 58

   21 id: POSITION .

    $default  reduce using rule 21 (id)


state 59

   29 id: COALESCE .

    $default  reduce using rule 29 (id)


state 60

   17 id: TRIM .

    $default  reduce using rule 17 (id)


state 61

   15 id: NUMBER .

    $default  reduce using rule 15 (id)


state 62

   10 id: ID .

    $default  reduce using rule 10 (id)


state 63

   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList
  136 tableExpr: '(' . select ')'

    SELECT  shift, and go to state 2

    select       go to state 116
    basicSelect  go to state 20


state 64

  137 ident: id .  [$end, VALUES, SELECT, WHERE, ORDER, GROUP, RIGHT, INNER, UNION, DESC, JOIN, LEFT, FULL, SET, ASC, FOR, ON, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, COLONEQUALS, NUMBER, ID, '=', ',', '(', ')', '}', ';', '%']
  138      | id . '.' id
  139      | id . '.' id '.' id

    '.'  shift, and go to state 117

    $default  reduce using rule 137 (ident)


state 65

   42 update: UPDATE alias . SET assignList where

    SET  shift, and go to state 118


state 66

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  132 alias: tableExpr .  [$end, VALUES, SELECT, WHERE, ORDER, GROUP, RIGHT, INNER, UNION, JOIN, LEFT, FULL, SET, FOR, ON, ',', '(', ')', ';']
  133      | tableExpr . id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    $default  reduce using rule 132 (alias)

    id  go to state 119


state 67

  134 tableExpr: ident .

    $default  reduce using rule 134 (tableExpr)


state 68

   66 plSqlStatement: EXECUTE . STRING_SQ ';'
   67               | EXECUTE . IMMEDIATE STRING_SQ ';'

    IMMEDIATE  shift, and go to state 120
    STRING_SQ  shift, and go to state 121


state 69

   85 basicSelectInto: SELECT . optDist whatToSelect INTO intoList FROM tableList
  111 optDist: . DISTINCT
  112        | .  [EXISTS, CASE, CAST, DESC, NULL, ASC, NOT, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, STRING_SQ, NUMBER, ID, '-', '*', '(', '?']

    DISTINCT  shift, and go to state 25

    $default  reduce using rule 112 (optDist)

    optDist  go to state 122


state 70

   68 assignTarget: '?' .

    $default  reduce using rule 68 (assignTarget)


state 71

   64 plSqlStatement: update . ';'

    ';'  shift, and go to state 123


state 72

   63 plSqlStatement: delete . ';'

    ';'  shift, and go to state 124


state 73

   57 beginEndBlock: BEGIN plSqlStatementList . END ';'

    END  shift, and go to state 125


state 74

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   42 update: . UPDATE alias SET assignList where
   47 delete: . DELETE optFrom alias where
   58 plSqlStatementList: . plSqlStatement
   58                   | plSqlStatement .  [END]
   59                   | . plSqlStatement plSqlStatementList
   59                   | plSqlStatement . plSqlStatementList
   60 plSqlStatement: . assignTarget COLONEQUALS simpleExpr ';'
   61               | . ident identRestEx ';'
   62               | . selectInto ';'
   63               | . delete ';'
   64               | . update ';'
   65               | . insert ';'
   66               | . EXECUTE STRING_SQ ';'
   67               | . EXECUTE IMMEDIATE STRING_SQ ';'
   68 assignTarget: . '?'
   69             | . ident
   72 insert: . INSERT INTO alias optIdList insertRest
   84 selectInto: . basicSelectInto where byClauses
   85 basicSelectInto: . SELECT optDist whatToSelect INTO intoList FROM tableList
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    EXECUTE           shift, and go to state 68
    SELECT            shift, and go to state 69
    DELETE            shift, and go to state 3
    INSERT            shift, and go to state 4
    UPDATE            shift, and go to state 5
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '?'               shift, and go to state 70

    $default  reduce using rule 58 (plSqlStatementList)

    id                  go to state 64
    update              go to state 71
    delete              go to state 72
    plSqlStatementList  go to state 126
    plSqlStatement      go to state 74
    assignTarget        go to state 75
    insert              go to state 76
    selectInto          go to state 77
    basicSelectInto     go to state 78
    ident               go to state 79


state 75

   60 plSqlStatement: assignTarget . COLONEQUALS simpleExpr ';'

    COLONEQUALS  shift, and go to state 127


state 76

   65 plSqlStatement: insert . ';'

    ';'  shift, and go to state 128


state 77

   62 plSqlStatement: selectInto . ';'

    ';'  shift, and go to state 129


state 78

   84 selectInto: basicSelectInto . where byClauses
   90 where: . WHERE whereCond
   91      | .  [ORDER, GROUP, ';']

    WHERE  shift, and go to state 87

    $default  reduce using rule 91 (where)

    where  go to state 130


state 79

   61 plSqlStatement: ident . identRestEx ';'
   69 assignTarget: ident .  [COLONEQUALS]
  191 identRest: . '(' simExList ')'
  192          | .  [';']
  193 identRestEx: . identRest
  194            | . '(' namedArgList ')'

    '('  shift, and go to state 131

    ';'       reduce using rule 192 (identRest)
    $default  reduce using rule 69 (assignTarget)

    identRest    go to state 132
    identRestEx  go to state 133


state 80

  213 tableDefinition1: LOCAL . TEMPORARY

    TEMPORARY  shift, and go to state 134


state 81

  212 tableDefinition1: GLOBAL .

    $default  reduce using rule 212 (tableDefinition1)


state 82

  210 tableDefinition: CREATE tableDefinition1 . TABLE tableName tableElementList tableDefinition2

    TABLE  shift, and go to state 135


state 83

   80 bracketedSelect: '(' select . ')'
   82 select: select . UNION select

    UNION  shift, and go to state 86
    ')'    shift, and go to state 136


state 84

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   48 callStatement: '{' CALL . ident identRest '}'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id     go to state 64
    ident  go to state 137


state 85

    0 $accept: query $end .

    $default  accept


state 86

   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   82       | select UNION . select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList

    SELECT  shift, and go to state 2

    select       go to state 138
    basicSelect  go to state 20


state 87

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   90 where: WHERE . whereCond
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  142 whereCond: . condition
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    whereCond   go to state 139
    condition   go to state 140
    comparison  go to state 111
    simpleExpr  go to state 141


state 88

   81 select: basicSelect where . byClauses forUpdate
   94 groupBy: . GROUP BY simExList having
   99 orderBy: . ORDER BY directionList
  102 byClauses: . orderBy optGroupBy
  103          | . groupBy optOrderBy
  104          | .  [$end, UNION, FOR, ')', ';']

    ORDER  shift, and go to state 142
    GROUP  shift, and go to state 143

    $default  reduce using rule 104 (byClauses)

    groupBy    go to state 144
    orderBy    go to state 145
    byClauses  go to state 146


state 89

   50 declaration: ID ident . identRestEx declInitializer ';'
  140 identEx: ident .  [COLONEQUALS, ';']
  141        | ident . '%' id
  191 identRest: . '(' simExList ')'
  192          | .  [COLONEQUALS, ';']
  193 identRestEx: . identRest
  194            | . '(' namedArgList ')'

    '('  shift, and go to state 131
    '%'  shift, and go to state 147

    COLONEQUALS  reduce using rule 140 (identEx)
    COLONEQUALS  [reduce using rule 192 (identRest)]
    ';'          reduce using rule 140 (identEx)
    ';'          [reduce using rule 192 (identRest)]
    $default     reduce using rule 140 (identEx)

    identRest    go to state 132
    identRestEx  go to state 148


state 90

   51 declaration: ID identEx . declInitializer ';'
   55 declInitializer: . COLONEQUALS simpleExpr
   56                | .  [';']

    COLONEQUALS  shift, and go to state 149

    $default  reduce using rule 56 (declInitializer)

    declInitializer  go to state 150


state 91

   53 declarationList: declaration declarationList .

    $default  reduce using rule 53 (declarationList)


state 92

   49 declareBeginEndBlock: DECLARE declarationList beginEndBlock .

    $default  reduce using rule 49 (declareBeginEndBlock)


state 93

  155 condition: EXISTS . '(' select ')'

    '('  shift, and go to state 151


state 94

  173 simpleExpr: CASE . whenList else END
  200 whenList: . when
  201         | . when whenList
  202 when: . WHEN condition THEN simpleExpr

    WHEN  shift, and go to state 152

    whenList  go to state 153
    when      go to state 154


state 95

  183 simpleExpr: CAST . '(' simpleExpr AS id optSize ')'

    '('  shift, and go to state 155


state 96

  188 simpleExpr: NULL .

    $default  reduce using rule 188 (simpleExpr)


state 97

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  146          | NOT . condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    condition   go to state 156
    comparison  go to state 111
    simpleExpr  go to state 141


state 98

  174 simpleExpr: STRING_SQ .

    $default  reduce using rule 174 (simpleExpr)


state 99

   15 id: NUMBER .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, OUTERJ, NE, LE, GE, CONCAT, NUMBER, ID, '=', '>', '<', '-', '+', '/', '*', ',', '(', ')', ';', '.']
  170 simpleExpr: NUMBER .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, OUTERJ, NE, LE, GE, CONCAT, NUMBER, ID, '=', '>', '<', '-', '+', '/', '*', ',', ')', ';']

    $end              reduce using rule 15 (id)
    $end              [reduce using rule 170 (simpleExpr)]
    BETWEEN           reduce using rule 15 (id)
    BETWEEN           [reduce using rule 170 (simpleExpr)]
    ESCAPE            reduce using rule 15 (id)
    ESCAPE            [reduce using rule 170 (simpleExpr)]
    OVER              reduce using rule 15 (id)
    OVER              [reduce using rule 170 (simpleExpr)]
    HAVING            reduce using rule 15 (id)
    HAVING            [reduce using rule 170 (simpleExpr)]
    WHERE             reduce using rule 15 (id)
    WHERE             [reduce using rule 170 (simpleExpr)]
    ORDER             reduce using rule 15 (id)
    ORDER             [reduce using rule 170 (simpleExpr)]
    OR                reduce using rule 15 (id)
    OR                [reduce using rule 170 (simpleExpr)]
    GROUP             reduce using rule 15 (id)
    GROUP             [reduce using rule 170 (simpleExpr)]
    RIGHT             reduce using rule 15 (id)
    RIGHT             [reduce using rule 170 (simpleExpr)]
    INNER             reduce using rule 15 (id)
    INNER             [reduce using rule 170 (simpleExpr)]
    UNION             reduce using rule 15 (id)
    UNION             [reduce using rule 170 (simpleExpr)]
    FROM              reduce using rule 15 (id)
    FROM              [reduce using rule 170 (simpleExpr)]
    WHEN              reduce using rule 15 (id)
    WHEN              [reduce using rule 170 (simpleExpr)]
    THEN              reduce using rule 15 (id)
    THEN              [reduce using rule 170 (simpleExpr)]
    ELSE              reduce using rule 15 (id)
    ELSE              [reduce using rule 170 (simpleExpr)]
    DESC              reduce using rule 15 (id)
    DESC              [reduce using rule 170 (simpleExpr)]
    LIKE              reduce using rule 15 (id)
    LIKE              [reduce using rule 170 (simpleExpr)]
    JOIN              reduce using rule 15 (id)
    JOIN              [reduce using rule 170 (simpleExpr)]
    LEFT              reduce using rule 15 (id)
    LEFT              [reduce using rule 170 (simpleExpr)]
    FULL              reduce using rule 15 (id)
    FULL              [reduce using rule 170 (simpleExpr)]
    INTO              reduce using rule 15 (id)
    INTO              [reduce using rule 170 (simpleExpr)]
    AND               reduce using rule 15 (id)
    AND               [reduce using rule 170 (simpleExpr)]
    END               reduce using rule 15 (id)
    END               [reduce using rule 170 (simpleExpr)]
    ASC               reduce using rule 15 (id)
    ASC               [reduce using rule 170 (simpleExpr)]
    XOR               reduce using rule 15 (id)
    XOR               [reduce using rule 170 (simpleExpr)]
    FOR               reduce using rule 15 (id)
    FOR               [reduce using rule 170 (simpleExpr)]
    NOT               reduce using rule 15 (id)
    NOT               [reduce using rule 170 (simpleExpr)]
    AS                reduce using rule 15 (id)
    AS                [reduce using rule 170 (simpleExpr)]
    IN                reduce using rule 15 (id)
    IN                [reduce using rule 170 (simpleExpr)]
    IS                reduce using rule 15 (id)
    IS                [reduce using rule 170 (simpleExpr)]
    ACTION            reduce using rule 15 (id)
    ACTION            [reduce using rule 170 (simpleExpr)]
    MIN               reduce using rule 15 (id)
    MIN               [reduce using rule 170 (simpleExpr)]
    OCTET_LENGTH      reduce using rule 15 (id)
    OCTET_LENGTH      [reduce using rule 170 (simpleExpr)]
    DEFERRED          reduce using rule 15 (id)
    DEFERRED          [reduce using rule 170 (simpleExpr)]
    DEFERRABLE        reduce using rule 15 (id)
    DEFERRABLE        [reduce using rule 170 (simpleExpr)]
    ZONE              reduce using rule 15 (id)
    ZONE              [reduce using rule 170 (simpleExpr)]
    COUNT             reduce using rule 15 (id)
    COUNT             [reduce using rule 170 (simpleExpr)]
    NULLIF            reduce using rule 15 (id)
    NULLIF            [reduce using rule 170 (simpleExpr)]
    SUM               reduce using rule 15 (id)
    SUM               [reduce using rule 170 (simpleExpr)]
    KEY               reduce using rule 15 (id)
    KEY               [reduce using rule 170 (simpleExpr)]
    AVG               reduce using rule 15 (id)
    AVG               [reduce using rule 170 (simpleExpr)]
    INITIALLY         reduce using rule 15 (id)
    INITIALLY         [reduce using rule 170 (simpleExpr)]
    UPPER             reduce using rule 15 (id)
    UPPER             [reduce using rule 170 (simpleExpr)]
    EXTRACT           reduce using rule 15 (id)
    EXTRACT           [reduce using rule 170 (simpleExpr)]
    CHAR_LENGTH       reduce using rule 15 (id)
    CHAR_LENGTH       [reduce using rule 170 (simpleExpr)]
    SUBSTRING         reduce using rule 15 (id)
    SUBSTRING         [reduce using rule 170 (simpleExpr)]
    PARTIAL           reduce using rule 15 (id)
    PARTIAL           [reduce using rule 170 (simpleExpr)]
    MAX               reduce using rule 15 (id)
    MAX               [reduce using rule 170 (simpleExpr)]
    LOWER             reduce using rule 15 (id)
    LOWER             [reduce using rule 170 (simpleExpr)]
    CASCADE           reduce using rule 15 (id)
    CASCADE           [reduce using rule 170 (simpleExpr)]
    TEMPORARY         reduce using rule 15 (id)
    TEMPORARY         [reduce using rule 170 (simpleExpr)]
    CHARACTER_LENGTH  reduce using rule 15 (id)
    CHARACTER_LENGTH  [reduce using rule 170 (simpleExpr)]
    CONVERT           reduce using rule 15 (id)
    CONVERT           [reduce using rule 170 (simpleExpr)]
    TRANSLATE         reduce using rule 15 (id)
    TRANSLATE         [reduce using rule 170 (simpleExpr)]
    PRESERVE          reduce using rule 15 (id)
    PRESERVE          [reduce using rule 170 (simpleExpr)]
    POSITION          reduce using rule 15 (id)
    POSITION          [reduce using rule 170 (simpleExpr)]
    COALESCE          reduce using rule 15 (id)
    COALESCE          [reduce using rule 170 (simpleExpr)]
    TRIM              reduce using rule 15 (id)
    TRIM              [reduce using rule 170 (simpleExpr)]
    OUTERJ            reduce using rule 15 (id)
    OUTERJ            [reduce using rule 170 (simpleExpr)]
    NE                reduce using rule 15 (id)
    NE                [reduce using rule 170 (simpleExpr)]
    LE                reduce using rule 15 (id)
    LE                [reduce using rule 170 (simpleExpr)]
    GE                reduce using rule 15 (id)
    GE                [reduce using rule 170 (simpleExpr)]
    CONCAT            reduce using rule 15 (id)
    CONCAT            [reduce using rule 170 (simpleExpr)]
    NUMBER            reduce using rule 15 (id)
    NUMBER            [reduce using rule 170 (simpleExpr)]
    ID                reduce using rule 15 (id)
    ID                [reduce using rule 170 (simpleExpr)]
    '='               reduce using rule 15 (id)
    '='               [reduce using rule 170 (simpleExpr)]
    '>'               reduce using rule 15 (id)
    '>'               [reduce using rule 170 (simpleExpr)]
    '<'               reduce using rule 15 (id)
    '<'               [reduce using rule 170 (simpleExpr)]
    '-'               reduce using rule 15 (id)
    '-'               [reduce using rule 170 (simpleExpr)]
    '+'               reduce using rule 15 (id)
    '+'               [reduce using rule 170 (simpleExpr)]
    '/'               reduce using rule 15 (id)
    '/'               [reduce using rule 170 (simpleExpr)]
    '*'               reduce using rule 15 (id)
    '*'               [reduce using rule 170 (simpleExpr)]
    ','               reduce using rule 15 (id)
    ','               [reduce using rule 170 (simpleExpr)]
    ')'               reduce using rule 15 (id)
    ')'               [reduce using rule 170 (simpleExpr)]
    ';'               reduce using rule 15 (id)
    ';'               [reduce using rule 170 (simpleExpr)]
    $default          reduce using rule 15 (id)


state 100

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  172           | '-' . simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 158


state 101

  186 simpleExpr: '*' .

    $default  reduce using rule 186 (simpleExpr)


state 102

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  147          | '(' . condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  151          | '(' . idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  152          | '(' . idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  157 idList2: . id ',' id
  158        | . idList2 ',' id
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  176           | '(' . simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  184           | '(' . select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    SELECT            shift, and go to state 2
    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id           go to state 159
    select       go to state 160
    basicSelect  go to state 20
    ident        go to state 109
    condition    go to state 161
    idList2      go to state 162
    comparison   go to state 111
    simpleExpr   go to state 163


state 103

  187 simpleExpr: '?' .

    $default  reduce using rule 187 (simpleExpr)


state 104

  137 ident: id .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, OUTERJ, NE, LE, GE, CONCAT, NUMBER, ID, '=', '>', '<', '-', '+', '/', '*', ',', '(', ')', ';']
  138      | id . '.' id
  139      | id . '.' id '.' id
  185 simpleExpr: id . '.' '*'

    '.'  shift, and go to state 164

    $default  reduce using rule 137 (ident)


state 105

   83 basicSelect: SELECT optDist whatToSelect . FROM tableList

    FROM  shift, and go to state 165


state 106

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  115 selectExpression: selectExpression . AS id
  116                 | selectExpression . id
  119 selectExpressionList: selectExpression .  [FROM, INTO, ',']

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    AS                shift, and go to state 166
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    $default  reduce using rule 119 (selectExpressionList)

    id  go to state 167


state 107

  114 selectExpression: expression .

    $default  reduce using rule 114 (selectExpression)


state 108

  113 whatToSelect: selectExpressionList .  [FROM, INTO]
  120 selectExpressionList: selectExpressionList . ',' selectExpression

    ','  shift, and go to state 168

    $default  reduce using rule 113 (whatToSelect)


state 109

  175 simpleExpr: ident . identRestEx
  191 identRest: . '(' simExList ')'
  192          | .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, OUTERJ, NE, LE, GE, CONCAT, NUMBER, ID, '=', '>', '<', '-', '+', '/', '*', ',', ')', ';']
  193 identRestEx: . identRest
  194            | . '(' namedArgList ')'

    '('  shift, and go to state 131

    $default  reduce using rule 192 (identRest)

    identRest    go to state 132
    identRestEx  go to state 169


state 110

  117 expression: condition .  [FROM, DESC, INTO, ASC, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',']
  143 condition: condition . AND condition
  144          | condition . OR condition
  145          | condition . XOR condition

    OR   shift, and go to state 170
    AND  shift, and go to state 171
    XOR  shift, and go to state 172

    $default  reduce using rule 117 (expression)


state 111

  148 condition: comparison .

    $default  reduce using rule 148 (condition)


state 112

  118 expression: simpleExpr .  [FROM, DESC, INTO, ASC, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',']
  149 condition: simpleExpr . inExpr '(' simExList ')'
  150          | simpleExpr . inExpr '(' select ')'
  153          | simpleExpr . IS optNot NULL
  154          | simpleExpr . optNot LIKE simpleExpr escape
  156          | simpleExpr . optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: simpleExpr . '=' simpleExpr
  160           | simpleExpr . '>' simpleExpr
  161           | simpleExpr . '<' simpleExpr
  162           | simpleExpr . LE simpleExpr
  163           | simpleExpr . NE simpleExpr
  164           | simpleExpr . GE simpleExpr
  167 inExpr: . optNot IN
  168 optNot: . NOT
  169       | .  [BETWEEN, LIKE, IN]
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    NOT     shift, and go to state 174
    IS      shift, and go to state 175
    OUTERJ  shift, and go to state 176
    NE      shift, and go to state 177
    LE      shift, and go to state 178
    GE      shift, and go to state 179
    CONCAT  shift, and go to state 180
    '='     shift, and go to state 181
    '>'     shift, and go to state 182
    '<'     shift, and go to state 183
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    BETWEEN   reduce using rule 169 (optNot)
    LIKE      reduce using rule 169 (optNot)
    IN        reduce using rule 169 (optNot)
    $default  reduce using rule 118 (expression)

    inExpr  go to state 188
    optNot  go to state 189


state 113

   47 delete: DELETE optFrom alias . where
   90 where: . WHERE whereCond
   91      | .  [$end, ';']

    WHERE  shift, and go to state 87

    $default  reduce using rule 91 (where)

    where  go to state 190


state 114

   72 insert: INSERT INTO alias . optIdList insertRest
   75 optIdList: .  [VALUES, SELECT]
   76          | . '(' idList ')'

    '('  shift, and go to state 191

    $default  reduce using rule 75 (optIdList)

    optIdList  go to state 192


state 115

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  135 tableExpr: TABLE '(' . simpleExpr ')'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 193


state 116

   82 select: select . UNION select
  136 tableExpr: '(' select . ')'

    UNION  shift, and go to state 86
    ')'    shift, and go to state 194


state 117

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  138 ident: id '.' . id
  139      | id '.' . id '.' id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id  go to state 195


state 118

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   42 update: UPDATE alias SET . assignList where
   43 assignList: . assign
   44           | . assignList ',' assign
   45 assign: . ident '=' simpleExpr
   46       | . '(' idList ')' '=' simpleExpr
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 196

    id          go to state 64
    assignList  go to state 197
    assign      go to state 198
    ident       go to state 199


state 119

  133 alias: tableExpr id .

    $default  reduce using rule 133 (alias)


state 120

   67 plSqlStatement: EXECUTE IMMEDIATE . STRING_SQ ';'

    STRING_SQ  shift, and go to state 200


state 121

   66 plSqlStatement: EXECUTE STRING_SQ . ';'

    ';'  shift, and go to state 201


state 122

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   85 basicSelectInto: SELECT optDist . whatToSelect INTO intoList FROM tableList
  113 whatToSelect: . selectExpressionList
  114 selectExpression: . expression
  115                 | . selectExpression AS id
  116                 | . selectExpression id
  117 expression: . condition
  118           | . simpleExpr
  119 selectExpressionList: . selectExpression
  120                     | . selectExpressionList ',' selectExpression
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id                    go to state 104
    whatToSelect          go to state 202
    selectExpression      go to state 106
    expression            go to state 107
    selectExpressionList  go to state 108
    ident                 go to state 109
    condition             go to state 110
    comparison            go to state 111
    simpleExpr            go to state 112


state 123

   64 plSqlStatement: update ';' .

    $default  reduce using rule 64 (plSqlStatement)


state 124

   63 plSqlStatement: delete ';' .

    $default  reduce using rule 63 (plSqlStatement)


state 125

   57 beginEndBlock: BEGIN plSqlStatementList END . ';'

    ';'  shift, and go to state 203


state 126

   59 plSqlStatementList: plSqlStatement plSqlStatementList .

    $default  reduce using rule 59 (plSqlStatementList)


state 127

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   60 plSqlStatement: assignTarget COLONEQUALS . simpleExpr ';'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 204


state 128

   65 plSqlStatement: insert ';' .

    $default  reduce using rule 65 (plSqlStatement)


state 129

   62 plSqlStatement: selectInto ';' .

    $default  reduce using rule 62 (plSqlStatement)


state 130

   84 selectInto: basicSelectInto where . byClauses
   94 groupBy: . GROUP BY simExList having
   99 orderBy: . ORDER BY directionList
  102 byClauses: . orderBy optGroupBy
  103          | . groupBy optOrderBy
  104          | .  [';']

    ORDER  shift, and go to state 142
    GROUP  shift, and go to state 143

    $default  reduce using rule 104 (byClauses)

    groupBy    go to state 144
    orderBy    go to state 145
    byClauses  go to state 205


state 131

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  191 identRest: '(' . simExList ')'
  194 identRestEx: '(' . namedArgList ')'
  195 namedArgList: . namedArg
  196             | . namedArg ',' namedArgList
  197             | .  [')']
  198 namedArg: . simpleExpr
  199         | . ID EQUALSGT simpleExpr
  205 simExList: .  [')']
  206          | . nonemptySimExList
  207 nonemptySimExList: . simpleExpr
  208                  | . nonemptySimExList ',' simpleExpr

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 206
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    ')'       reduce using rule 197 (namedArgList)
    ')'       [reduce using rule 205 (simExList)]
    $default  reduce using rule 197 (namedArgList)

    id                 go to state 104
    ident              go to state 109
    simpleExpr         go to state 207
    namedArgList       go to state 208
    namedArg           go to state 209
    simExList          go to state 210
    nonemptySimExList  go to state 211


state 132

  193 identRestEx: identRest .

    $default  reduce using rule 193 (identRestEx)


state 133

   61 plSqlStatement: ident identRestEx . ';'

    ';'  shift, and go to state 212


state 134

  213 tableDefinition1: LOCAL TEMPORARY .

    $default  reduce using rule 213 (tableDefinition1)


state 135

  210 tableDefinition: CREATE tableDefinition1 TABLE . tableName tableElementList tableDefinition2
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  226 qualifiedLocalTableName: . MODULE period localTableName

    UNKNOWN_LEX  shift, and go to state 213
    MODULE       shift, and go to state 214

    $default  reduce using rule 220 (qualifiedName1)

    tableName                go to state 215
    qualifiedName            go to state 216
    qualifiedName1           go to state 217
    schemaName               go to state 218
    qualifiedLocalTableName  go to state 219


state 136

   80 bracketedSelect: '(' select ')' .

    $default  reduce using rule 80 (bracketedSelect)


state 137

   48 callStatement: '{' CALL ident . identRest '}'
  191 identRest: . '(' simExList ')'
  192          | .  ['}']

    '('  shift, and go to state 220

    $default  reduce using rule 192 (identRest)

    identRest  go to state 221


state 138

   82 select: select . UNION select
   82       | select UNION select .  [$end, UNION, ')', ';']

    $default  reduce using rule 82 (select)


state 139

   90 where: WHERE whereCond .

    $default  reduce using rule 90 (where)


state 140

  142 whereCond: condition .  [$end, ORDER, GROUP, UNION, FOR, ')', ';']
  143 condition: condition . AND condition
  144          | condition . OR condition
  145          | condition . XOR condition

    OR   shift, and go to state 170
    AND  shift, and go to state 171
    XOR  shift, and go to state 172

    $default  reduce using rule 142 (whereCond)


state 141

  149 condition: simpleExpr . inExpr '(' simExList ')'
  150          | simpleExpr . inExpr '(' select ')'
  153          | simpleExpr . IS optNot NULL
  154          | simpleExpr . optNot LIKE simpleExpr escape
  156          | simpleExpr . optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: simpleExpr . '=' simpleExpr
  160           | simpleExpr . '>' simpleExpr
  161           | simpleExpr . '<' simpleExpr
  162           | simpleExpr . LE simpleExpr
  163           | simpleExpr . NE simpleExpr
  164           | simpleExpr . GE simpleExpr
  167 inExpr: . optNot IN
  168 optNot: . NOT
  169       | .  [BETWEEN, LIKE, IN]
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    NOT     shift, and go to state 174
    IS      shift, and go to state 175
    OUTERJ  shift, and go to state 176
    NE      shift, and go to state 177
    LE      shift, and go to state 178
    GE      shift, and go to state 179
    CONCAT  shift, and go to state 180
    '='     shift, and go to state 181
    '>'     shift, and go to state 182
    '<'     shift, and go to state 183
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 169 (optNot)

    inExpr  go to state 188
    optNot  go to state 189


state 142

   99 orderBy: ORDER . BY directionList

    BY  shift, and go to state 222


state 143

   94 groupBy: GROUP . BY simExList having

    BY  shift, and go to state 223


state 144

   99 orderBy: . ORDER BY directionList
  100 optOrderBy: . orderBy
  101           | .  [$end, UNION, FOR, ')', ';']
  103 byClauses: groupBy . optOrderBy

    ORDER  shift, and go to state 142

    $default  reduce using rule 101 (optOrderBy)

    orderBy     go to state 224
    optOrderBy  go to state 225


state 145

   94 groupBy: . GROUP BY simExList having
   95 optGroupBy: . groupBy
   96           | .  [$end, UNION, FOR, ')', ';']
  102 byClauses: orderBy . optGroupBy

    GROUP  shift, and go to state 143

    $default  reduce using rule 96 (optGroupBy)

    groupBy     go to state 226
    optGroupBy  go to state 227


state 146

   81 select: basicSelect where byClauses . forUpdate
   92 forUpdate: . FOR UPDATE
   93          | .  [$end, UNION, ')', ';']

    FOR  shift, and go to state 228

    $default  reduce using rule 93 (forUpdate)

    forUpdate  go to state 229


state 147

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  141 identEx: ident '%' . id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id  go to state 230


state 148

   50 declaration: ID ident identRestEx . declInitializer ';'
   55 declInitializer: . COLONEQUALS simpleExpr
   56                | .  [';']

    COLONEQUALS  shift, and go to state 149

    $default  reduce using rule 56 (declInitializer)

    declInitializer  go to state 231


state 149

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   55 declInitializer: COLONEQUALS . simpleExpr
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 232


state 150

   51 declaration: ID identEx declInitializer . ';'

    ';'  shift, and go to state 233


state 151

   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList
  155 condition: EXISTS '(' . select ')'

    SELECT  shift, and go to state 2

    select       go to state 234
    basicSelect  go to state 20


state 152

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  202 when: WHEN . condition THEN simpleExpr

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    condition   go to state 235
    comparison  go to state 111
    simpleExpr  go to state 141


state 153

  173 simpleExpr: CASE whenList . else END
  203 else: . ELSE simpleExpr
  204     | .  [END]

    ELSE  shift, and go to state 236

    $default  reduce using rule 204 (else)

    else  go to state 237


state 154

  200 whenList: . when
  200         | when .  [ELSE, END]
  201         | . when whenList
  201         | when . whenList
  202 when: . WHEN condition THEN simpleExpr

    WHEN  shift, and go to state 152

    $default  reduce using rule 200 (whenList)

    whenList  go to state 238
    when      go to state 154


state 155

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  183           | CAST '(' . simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 239


state 156

  143 condition: condition . AND condition
  144          | condition . OR condition
  145          | condition . XOR condition
  146          | NOT condition .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']

    $default  reduce using rule 146 (condition)


state 157

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  176           | '(' . simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  184           | '(' . select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    SELECT            shift, and go to state 2
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id           go to state 104
    select       go to state 160
    basicSelect  go to state 20
    ident        go to state 109
    simpleExpr   go to state 240


state 158

  171 simpleExpr: simpleExpr . OUTERJ
  172           | '-' simpleExpr .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NE, LE, GE, NUMBER, ID, '=', '>', '<', '-', '+', ',', ')', ';']
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 172 (simpleExpr)


state 159

  137 ident: id .  [BETWEEN, OVER, LIKE, NOT, IN, IS, OUTERJ, NE, LE, GE, CONCAT, '=', '>', '<', '-', '+', '/', '*', '(', ')']
  138      | id . '.' id
  139      | id . '.' id '.' id
  157 idList2: id . ',' id
  185 simpleExpr: id . '.' '*'

    ','  shift, and go to state 241
    '.'  shift, and go to state 164

    $default  reduce using rule 137 (ident)


state 160

   82 select: select . UNION select
  184 simpleExpr: '(' select . ')'

    UNION  shift, and go to state 86
    ')'    shift, and go to state 242


state 161

  143 condition: condition . AND condition
  144          | condition . OR condition
  145          | condition . XOR condition
  147          | '(' condition . ')'

    OR   shift, and go to state 170
    AND  shift, and go to state 171
    XOR  shift, and go to state 172
    ')'  shift, and go to state 243


state 162

  151 condition: '(' idList2 . ')' inExpr '(' simExList ')'
  152          | '(' idList2 . ')' inExpr '(' select ')'
  158 idList2: idList2 . ',' id

    ','  shift, and go to state 244
    ')'  shift, and go to state 245


state 163

  149 condition: simpleExpr . inExpr '(' simExList ')'
  150          | simpleExpr . inExpr '(' select ')'
  153          | simpleExpr . IS optNot NULL
  154          | simpleExpr . optNot LIKE simpleExpr escape
  156          | simpleExpr . optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: simpleExpr . '=' simpleExpr
  160           | simpleExpr . '>' simpleExpr
  161           | simpleExpr . '<' simpleExpr
  162           | simpleExpr . LE simpleExpr
  163           | simpleExpr . NE simpleExpr
  164           | simpleExpr . GE simpleExpr
  167 inExpr: . optNot IN
  168 optNot: . NOT
  169       | .  [BETWEEN, LIKE, IN]
  171 simpleExpr: simpleExpr . OUTERJ
  176           | '(' simpleExpr . ')'
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    NOT     shift, and go to state 174
    IS      shift, and go to state 175
    OUTERJ  shift, and go to state 176
    NE      shift, and go to state 177
    LE      shift, and go to state 178
    GE      shift, and go to state 179
    CONCAT  shift, and go to state 180
    '='     shift, and go to state 181
    '>'     shift, and go to state 182
    '<'     shift, and go to state 183
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187
    ')'     shift, and go to state 246

    $default  reduce using rule 169 (optNot)

    inExpr  go to state 188
    optNot  go to state 189


state 164

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  138 ident: id '.' . id
  139      | id '.' . id '.' id
  185 simpleExpr: id '.' . '*'

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '*'               shift, and go to state 247

    id  go to state 195


state 165

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   83 basicSelect: SELECT optDist whatToSelect FROM . tableList
  121 tableList: . table
  122          | . tableList ',' table
  123 table: . alias
  124      | . table join alias ON condition
  132 alias: . tableExpr
  133      | . tableExpr id
  134 tableExpr: . ident
  135          | . TABLE '(' simpleExpr ')'
  136          | . '(' select ')'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    TABLE             shift, and go to state 30
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 63

    id         go to state 64
    tableList  go to state 248
    table      go to state 249
    alias      go to state 250
    tableExpr  go to state 66
    ident      go to state 67


state 166

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  115 selectExpression: selectExpression AS . id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id  go to state 251


state 167

  116 selectExpression: selectExpression id .

    $default  reduce using rule 116 (selectExpression)


state 168

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  114 selectExpression: . expression
  115                 | . selectExpression AS id
  116                 | . selectExpression id
  117 expression: . condition
  118           | . simpleExpr
  120 selectExpressionList: selectExpressionList ',' . selectExpression
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id                go to state 104
    selectExpression  go to state 252
    expression        go to state 107
    ident             go to state 109
    condition         go to state 110
    comparison        go to state 111
    simpleExpr        go to state 112


state 169

  175 simpleExpr: ident identRestEx .

    $default  reduce using rule 175 (simpleExpr)


state 170

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  144          | condition OR . condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    condition   go to state 253
    comparison  go to state 111
    simpleExpr  go to state 141


state 171

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  143          | condition AND . condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    condition   go to state 254
    comparison  go to state 111
    simpleExpr  go to state 141


state 172

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  145          | condition XOR . condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    condition   go to state 255
    comparison  go to state 111
    simpleExpr  go to state 141


state 173

  182 simpleExpr: simpleExpr OVER . partition
  209 partition: . '(' PARTITION BY ident orderBy ')'

    '('  shift, and go to state 256

    partition  go to state 257


state 174

  168 optNot: NOT .

    $default  reduce using rule 168 (optNot)


state 175

  153 condition: simpleExpr IS . optNot NULL
  168 optNot: . NOT
  169       | .  [NULL]

    NOT  shift, and go to state 174

    $default  reduce using rule 169 (optNot)

    optNot  go to state 258


state 176

  171 simpleExpr: simpleExpr OUTERJ .

    $default  reduce using rule 171 (simpleExpr)


state 177

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  163 comparison: simpleExpr NE . simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 259


state 178

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  162 comparison: simpleExpr LE . simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 260


state 179

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  164 comparison: simpleExpr GE . simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 261


state 180

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  181           | simpleExpr CONCAT . simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 262


state 181

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  159 comparison: simpleExpr '=' . simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 263


state 182

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  160 comparison: simpleExpr '>' . simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 264


state 183

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  161 comparison: simpleExpr '<' . simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 265


state 184

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  177           | simpleExpr '-' . simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 266


state 185

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  178           | simpleExpr '+' . simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 267


state 186

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  180           | simpleExpr '/' . simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 268


state 187

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  179           | simpleExpr '*' . simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 269


state 188

  149 condition: simpleExpr inExpr . '(' simExList ')'
  150          | simpleExpr inExpr . '(' select ')'

    '('  shift, and go to state 270


state 189

  154 condition: simpleExpr optNot . LIKE simpleExpr escape
  156          | simpleExpr optNot . BETWEEN simpleExpr AND simpleExpr
  167 inExpr: optNot . IN

    BETWEEN  shift, and go to state 271
    LIKE     shift, and go to state 272
    IN       shift, and go to state 273


state 190

   47 delete: DELETE optFrom alias where .

    $default  reduce using rule 47 (delete)


state 191

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   76 optIdList: '(' . idList ')'
   77 idList: . id
   78       | . idList ',' id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id      go to state 274
    idList  go to state 275


state 192

   72 insert: INSERT INTO alias optIdList . insertRest
   73 insertRest: . VALUES identRest
   74           | . select
   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList

    VALUES  shift, and go to state 276
    SELECT  shift, and go to state 2

    insertRest   go to state 277
    select       go to state 278
    basicSelect  go to state 20


state 193

  135 tableExpr: TABLE '(' simpleExpr . ')'
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187
    ')'     shift, and go to state 279


state 194

  136 tableExpr: '(' select ')' .

    $default  reduce using rule 136 (tableExpr)


state 195

  138 ident: id '.' id .  [$end, BETWEEN, VALUES, SELECT, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, SET, END, ASC, XOR, FOR, NOT, ON, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, OUTERJ, NE, LE, GE, CONCAT, COLONEQUALS, NUMBER, ID, '=', '>', '<', '-', '+', '/', '*', ',', '(', ')', '}', ';', '%']
  139      | id '.' id . '.' id

    '.'  shift, and go to state 280

    $default  reduce using rule 138 (ident)


state 196

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   46 assign: '(' . idList ')' '=' simpleExpr
   77 idList: . id
   78       | . idList ',' id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id      go to state 274
    idList  go to state 281


state 197

   42 update: UPDATE alias SET assignList . where
   44 assignList: assignList . ',' assign
   90 where: . WHERE whereCond
   91      | .  [$end, ';']

    WHERE  shift, and go to state 87
    ','    shift, and go to state 282

    $default  reduce using rule 91 (where)

    where  go to state 283


state 198

   43 assignList: assign .

    $default  reduce using rule 43 (assignList)


state 199

   45 assign: ident . '=' simpleExpr

    '='  shift, and go to state 284


state 200

   67 plSqlStatement: EXECUTE IMMEDIATE STRING_SQ . ';'

    ';'  shift, and go to state 285


state 201

   66 plSqlStatement: EXECUTE STRING_SQ ';' .

    $default  reduce using rule 66 (plSqlStatement)


state 202

   85 basicSelectInto: SELECT optDist whatToSelect . INTO intoList FROM tableList

    INTO  shift, and go to state 286


state 203

   57 beginEndBlock: BEGIN plSqlStatementList END ';' .

    $default  reduce using rule 57 (beginEndBlock)


state 204

   60 plSqlStatement: assignTarget COLONEQUALS simpleExpr . ';'
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187
    ';'     shift, and go to state 287


state 205

   84 selectInto: basicSelectInto where byClauses .

    $default  reduce using rule 84 (selectInto)


state 206

   10 id: ID .  [OVER, OUTERJ, CONCAT, '-', '+', '/', '*', ',', '(', ')', '.']
  199 namedArg: ID . EQUALSGT simpleExpr

    EQUALSGT  shift, and go to state 288

    $default  reduce using rule 10 (id)


state 207

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition
  198 namedArg: simpleExpr .  [',', ')']
  207 nonemptySimExList: simpleExpr .  [',', ')']

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    ','       reduce using rule 198 (namedArg)
    ','       [reduce using rule 207 (nonemptySimExList)]
    ')'       reduce using rule 198 (namedArg)
    ')'       [reduce using rule 207 (nonemptySimExList)]
    $default  reduce using rule 198 (namedArg)


state 208

  194 identRestEx: '(' namedArgList . ')'

    ')'  shift, and go to state 289


state 209

  195 namedArgList: namedArg .  [')']
  196             | namedArg . ',' namedArgList

    ','  shift, and go to state 290

    $default  reduce using rule 195 (namedArgList)


state 210

  191 identRest: '(' simExList . ')'

    ')'  shift, and go to state 291


state 211

  206 simExList: nonemptySimExList .  [$end, HAVING, ORDER, UNION, FOR, ')', ';']
  208 nonemptySimExList: nonemptySimExList . ',' simpleExpr

    ','  shift, and go to state 292

    $default  reduce using rule 206 (simExList)


state 212

   61 plSqlStatement: ident identRestEx ';' .

    $default  reduce using rule 61 (plSqlStatement)


state 213

  222 schemaName: UNKNOWN_LEX .

    $default  reduce using rule 222 (schemaName)


state 214

  223 period: . UNKNOWN_LEX
  226 qualifiedLocalTableName: MODULE . period localTableName

    UNKNOWN_LEX  shift, and go to state 293

    period  go to state 294


state 215

  210 tableDefinition: CREATE tableDefinition1 TABLE tableName . tableElementList tableDefinition2
  228 tableElementList: . leftParen tableElement tableElementList1 rightParen
  231 leftParen: . '('

    '('  shift, and go to state 295

    tableElementList  go to state 296
    leftParen         go to state 297


state 216

  217 tableName: qualifiedName .

    $default  reduce using rule 217 (tableName)


state 217

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  219 qualifiedName: qualifiedName1 . qualifiedIdentifier
  224 qualifiedIdentifier: . identifier
  225 identifier: . id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id                   go to state 298
    qualifiedIdentifier  go to state 299
    identifier           go to state 300


state 218

  221 qualifiedName1: schemaName . period
  223 period: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 293

    period  go to state 301


state 219

  218 tableName: qualifiedLocalTableName .

    $default  reduce using rule 218 (tableName)


state 220

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  191 identRest: '(' . simExList ')'
  205 simExList: .  [')']
  206          | . nonemptySimExList
  207 nonemptySimExList: . simpleExpr
  208                  | . nonemptySimExList ',' simpleExpr

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    $default  reduce using rule 205 (simExList)

    id                 go to state 104
    ident              go to state 109
    simpleExpr         go to state 302
    simExList          go to state 210
    nonemptySimExList  go to state 211


state 221

   48 callStatement: '{' CALL ident identRest . '}'

    '}'  shift, and go to state 303


state 222

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   99 orderBy: ORDER BY . directionList
  105 directionList: . direction
  106              | . directionList ',' direction
  107 direction: . simpleExpr orderDirection
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id             go to state 104
    directionList  go to state 304
    direction      go to state 305
    ident          go to state 109
    simpleExpr     go to state 306


state 223

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   94 groupBy: GROUP BY . simExList having
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  205 simExList: .  [$end, HAVING, ORDER, UNION, FOR, ')', ';']
  206          | . nonemptySimExList
  207 nonemptySimExList: . simpleExpr
  208                  | . nonemptySimExList ',' simpleExpr

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    $default  reduce using rule 205 (simExList)

    id                 go to state 104
    ident              go to state 109
    simpleExpr         go to state 302
    simExList          go to state 307
    nonemptySimExList  go to state 211


state 224

  100 optOrderBy: orderBy .

    $default  reduce using rule 100 (optOrderBy)


state 225

  103 byClauses: groupBy optOrderBy .

    $default  reduce using rule 103 (byClauses)


state 226

   95 optGroupBy: groupBy .

    $default  reduce using rule 95 (optGroupBy)


state 227

  102 byClauses: orderBy optGroupBy .

    $default  reduce using rule 102 (byClauses)


state 228

   92 forUpdate: FOR . UPDATE

    UPDATE  shift, and go to state 308


state 229

   81 select: basicSelect where byClauses forUpdate .

    $default  reduce using rule 81 (select)


state 230

  141 identEx: ident '%' id .

    $default  reduce using rule 141 (identEx)


state 231

   50 declaration: ID ident identRestEx declInitializer . ';'

    ';'  shift, and go to state 309


state 232

   55 declInitializer: COLONEQUALS simpleExpr .  [';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 55 (declInitializer)


state 233

   51 declaration: ID identEx declInitializer ';' .

    $default  reduce using rule 51 (declaration)


state 234

   82 select: select . UNION select
  155 condition: EXISTS '(' select . ')'

    UNION  shift, and go to state 86
    ')'    shift, and go to state 310


state 235

  143 condition: condition . AND condition
  144          | condition . OR condition
  145          | condition . XOR condition
  202 when: WHEN condition . THEN simpleExpr

    OR    shift, and go to state 170
    THEN  shift, and go to state 311
    AND   shift, and go to state 171
    XOR   shift, and go to state 172


state 236

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  203 else: ELSE . simpleExpr

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 312


state 237

  173 simpleExpr: CASE whenList else . END

    END  shift, and go to state 313


state 238

  201 whenList: when whenList .

    $default  reduce using rule 201 (whenList)


state 239

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition
  183           | CAST '(' simpleExpr . AS id optSize ')'

    OVER    shift, and go to state 173
    AS      shift, and go to state 314
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187


state 240

  171 simpleExpr: simpleExpr . OUTERJ
  176           | '(' simpleExpr . ')'
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187
    ')'     shift, and go to state 246


state 241

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  157 idList2: id ',' . id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id  go to state 315


state 242

  184 simpleExpr: '(' select ')' .

    $default  reduce using rule 184 (simpleExpr)


state 243

  147 condition: '(' condition ')' .

    $default  reduce using rule 147 (condition)


state 244

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  158 idList2: idList2 ',' . id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id  go to state 316


state 245

  151 condition: '(' idList2 ')' . inExpr '(' simExList ')'
  152          | '(' idList2 ')' . inExpr '(' select ')'
  167 inExpr: . optNot IN
  168 optNot: . NOT
  169       | .  [IN]

    NOT  shift, and go to state 174

    $default  reduce using rule 169 (optNot)

    inExpr  go to state 317
    optNot  go to state 318


state 246

  176 simpleExpr: '(' simpleExpr ')' .

    $default  reduce using rule 176 (simpleExpr)


state 247

  185 simpleExpr: id '.' '*' .

    $default  reduce using rule 185 (simpleExpr)


state 248

   83 basicSelect: SELECT optDist whatToSelect FROM tableList .  [$end, WHERE, ORDER, GROUP, UNION, FOR, ')', ';']
  122 tableList: tableList . ',' table

    ','  shift, and go to state 319

    $default  reduce using rule 83 (basicSelect)


state 249

  121 tableList: table .  [$end, WHERE, ORDER, GROUP, UNION, FOR, ',', ')', ';']
  124 table: table . join alias ON condition
  125 join: . JOIN
  126     | . LEFT JOIN
  127     | . outerType OUTER JOIN
  128     | . INNER JOIN
  129 outerType: . LEFT
  130          | . RIGHT
  131          | . FULL

    RIGHT  shift, and go to state 320
    INNER  shift, and go to state 321
    JOIN   shift, and go to state 322
    LEFT   shift, and go to state 323
    FULL   shift, and go to state 324

    $default  reduce using rule 121 (tableList)

    join       go to state 325
    outerType  go to state 326


state 250

  123 table: alias .

    $default  reduce using rule 123 (table)


state 251

  115 selectExpression: selectExpression AS id .

    $default  reduce using rule 115 (selectExpression)


state 252

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  115 selectExpression: selectExpression . AS id
  116                 | selectExpression . id
  120 selectExpressionList: selectExpressionList ',' selectExpression .  [FROM, INTO, ',']

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    AS                shift, and go to state 166
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    $default  reduce using rule 120 (selectExpressionList)

    id  go to state 167


state 253

  143 condition: condition . AND condition
  144          | condition . OR condition
  144          | condition OR condition .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  145          | condition . XOR condition

    AND  shift, and go to state 171

    $default  reduce using rule 144 (condition)


state 254

  143 condition: condition . AND condition
  143          | condition AND condition .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  144          | condition . OR condition
  145          | condition . XOR condition

    $default  reduce using rule 143 (condition)


state 255

  143 condition: condition . AND condition
  144          | condition . OR condition
  145          | condition . XOR condition
  145          | condition XOR condition .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']

    AND  shift, and go to state 171

    $default  reduce using rule 145 (condition)


state 256

  209 partition: '(' . PARTITION BY ident orderBy ')'

    PARTITION  shift, and go to state 327


state 257

  182 simpleExpr: simpleExpr OVER partition .

    $default  reduce using rule 182 (simpleExpr)


state 258

  153 condition: simpleExpr IS optNot . NULL

    NULL  shift, and go to state 328


state 259

  163 comparison: simpleExpr NE simpleExpr .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 163 (comparison)


state 260

  162 comparison: simpleExpr LE simpleExpr .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 162 (comparison)


state 261

  164 comparison: simpleExpr GE simpleExpr .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 164 (comparison)


state 262

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  181           | simpleExpr CONCAT simpleExpr .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, OUTERJ, NE, LE, GE, CONCAT, NUMBER, ID, '=', '>', '<', '-', '+', '/', '*', ',', ')', ';']
  182           | simpleExpr . OVER partition

    $default  reduce using rule 181 (simpleExpr)


state 263

  159 comparison: simpleExpr '=' simpleExpr .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 159 (comparison)


state 264

  160 comparison: simpleExpr '>' simpleExpr .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 160 (comparison)


state 265

  161 comparison: simpleExpr '<' simpleExpr .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 161 (comparison)


state 266

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  177           | simpleExpr '-' simpleExpr .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NE, LE, GE, NUMBER, ID, '=', '>', '<', '-', '+', ',', ')', ';']
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 177 (simpleExpr)


state 267

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  178           | simpleExpr '+' simpleExpr .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NE, LE, GE, NUMBER, ID, '=', '>', '<', '-', '+', ',', ')', ';']
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 178 (simpleExpr)


state 268

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  180           | simpleExpr '/' simpleExpr .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, OUTERJ, NE, LE, GE, CONCAT, NUMBER, ID, '=', '>', '<', '-', '+', '/', '*', ',', ')', ';']
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    $default  reduce using rule 180 (simpleExpr)


state 269

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  179           | simpleExpr '*' simpleExpr .  [$end, BETWEEN, ESCAPE, OVER, HAVING, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, INTO, AND, END, ASC, XOR, FOR, NOT, AS, IN, IS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, OUTERJ, NE, LE, GE, CONCAT, NUMBER, ID, '=', '>', '<', '-', '+', '/', '*', ',', ')', ';']
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    $default  reduce using rule 179 (simpleExpr)


state 270

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  149 condition: simpleExpr inExpr '(' . simExList ')'
  150          | simpleExpr inExpr '(' . select ')'
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  205 simExList: .  [')']
  206          | . nonemptySimExList
  207 nonemptySimExList: . simpleExpr
  208                  | . nonemptySimExList ',' simpleExpr

    SELECT            shift, and go to state 2
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    $default  reduce using rule 205 (simExList)

    id                 go to state 104
    select             go to state 329
    basicSelect        go to state 20
    ident              go to state 109
    simpleExpr         go to state 302
    simExList          go to state 330
    nonemptySimExList  go to state 211


state 271

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  156 condition: simpleExpr optNot BETWEEN . simpleExpr AND simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 331


state 272

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  154 condition: simpleExpr optNot LIKE . simpleExpr escape
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 332


state 273

  167 inExpr: optNot IN .

    $default  reduce using rule 167 (inExpr)


state 274

   77 idList: id .

    $default  reduce using rule 77 (idList)


state 275

   76 optIdList: '(' idList . ')'
   78 idList: idList . ',' id

    ','  shift, and go to state 333
    ')'  shift, and go to state 334


state 276

   73 insertRest: VALUES . identRest
  191 identRest: . '(' simExList ')'
  192          | .  [$end, ';']

    '('  shift, and go to state 220

    $default  reduce using rule 192 (identRest)

    identRest  go to state 335


state 277

   72 insert: INSERT INTO alias optIdList insertRest .

    $default  reduce using rule 72 (insert)


state 278

   74 insertRest: select .  [$end, ';']
   82 select: select . UNION select

    UNION  shift, and go to state 86

    $default  reduce using rule 74 (insertRest)


state 279

  135 tableExpr: TABLE '(' simpleExpr ')' .

    $default  reduce using rule 135 (tableExpr)


state 280

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  139 ident: id '.' id '.' . id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id  go to state 336


state 281

   46 assign: '(' idList . ')' '=' simpleExpr
   78 idList: idList . ',' id

    ','  shift, and go to state 333
    ')'  shift, and go to state 337


state 282

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   44 assignList: assignList ',' . assign
   45 assign: . ident '=' simpleExpr
   46       | . '(' idList ')' '=' simpleExpr
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 196

    id      go to state 64
    assign  go to state 338
    ident   go to state 199


state 283

   42 update: UPDATE alias SET assignList where .

    $default  reduce using rule 42 (update)


state 284

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   45 assign: ident '=' . simpleExpr
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 339


state 285

   67 plSqlStatement: EXECUTE IMMEDIATE STRING_SQ ';' .

    $default  reduce using rule 67 (plSqlStatement)


state 286

   85 basicSelectInto: SELECT optDist whatToSelect INTO . intoList FROM tableList
   86 intoList: . intoId
   87         | . intoId ',' intoList
   88 intoId: . ID
   89       | . ':' ID

    ID   shift, and go to state 340
    ':'  shift, and go to state 341

    intoList  go to state 342
    intoId    go to state 343


state 287

   60 plSqlStatement: assignTarget COLONEQUALS simpleExpr ';' .

    $default  reduce using rule 60 (plSqlStatement)


state 288

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  199 namedArg: ID EQUALSGT . simpleExpr

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 344


state 289

  194 identRestEx: '(' namedArgList ')' .

    $default  reduce using rule 194 (identRestEx)


state 290

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  195 namedArgList: . namedArg
  196             | . namedArg ',' namedArgList
  196             | namedArg ',' . namedArgList
  197             | .  [')']
  198 namedArg: . simpleExpr
  199         | . ID EQUALSGT simpleExpr

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 206
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    $default  reduce using rule 197 (namedArgList)

    id            go to state 104
    ident         go to state 109
    simpleExpr    go to state 345
    namedArgList  go to state 346
    namedArg      go to state 209


state 291

  191 identRest: '(' simExList ')' .

    $default  reduce using rule 191 (identRest)


state 292

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  208 nonemptySimExList: nonemptySimExList ',' . simpleExpr

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 347


state 293

  223 period: UNKNOWN_LEX .

    $default  reduce using rule 223 (period)


state 294

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  224 qualifiedIdentifier: . identifier
  225 identifier: . id
  226 qualifiedLocalTableName: MODULE period . localTableName
  227 localTableName: . qualifiedIdentifier

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id                   go to state 298
    qualifiedIdentifier  go to state 348
    identifier           go to state 300
    localTableName       go to state 349


state 295

  231 leftParen: '(' .

    $default  reduce using rule 231 (leftParen)


state 296

  210 tableDefinition: CREATE tableDefinition1 TABLE tableName tableElementList . tableDefinition2
  214 tableDefinition2: .  [$end]
  215                 | . ON COMMIT DELETE
  216                 | . PRESERVE ROWS

    ON        shift, and go to state 350
    PRESERVE  shift, and go to state 351

    $default  reduce using rule 214 (tableDefinition2)

    tableDefinition2  go to state 352


state 297

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  228 tableElementList: leftParen . tableElement tableElementList1 rightParen
  232 tableElement: . columnDefinition
  233             | . tableConstraintDefinition
  234 columnDefinition: . columnName dataType
  235                 | . domainName columnDefinition1 columnDefinition2 columnDefinition3
  242 columnName: . identifier
  361 domainName: . qualifiedName
  415 constraintNameDefinition: . CONSTRAINT constraintName
  884 tableConstraintDefinition: . tableConstraintDefinition1 tableConstraint tableConstraintDefinition2
  885 tableConstraintDefinition1: .  [UNIQUE, PRIMARY, CHECK, FOREIGN]
  886                           | . constraintNameDefinition

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 213
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    CONSTRAINT        shift, and go to state 353
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    DESC              [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    $default          reduce using rule 885 (tableConstraintDefinition1)

    id                          go to state 298
    qualifiedName               go to state 354
    qualifiedName1              go to state 217
    schemaName                  go to state 218
    identifier                  go to state 355
    tableElement                go to state 356
    columnDefinition            go to state 357
    columnName                  go to state 358
    domainName                  go to state 359
    constraintNameDefinition    go to state 360
    tableConstraintDefinition   go to state 361
    tableConstraintDefinition1  go to state 362


state 298

  225 identifier: id .

    $default  reduce using rule 225 (identifier)


state 299

  219 qualifiedName: qualifiedName1 qualifiedIdentifier .

    $default  reduce using rule 219 (qualifiedName)


state 300

  224 qualifiedIdentifier: identifier .

    $default  reduce using rule 224 (qualifiedIdentifier)


state 301

  221 qualifiedName1: schemaName period .

    $default  reduce using rule 221 (qualifiedName1)


state 302

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition
  207 nonemptySimExList: simpleExpr .  [$end, HAVING, ORDER, UNION, FOR, ',', ')', ';']

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 207 (nonemptySimExList)


state 303

   48 callStatement: '{' CALL ident identRest '}' .

    $default  reduce using rule 48 (callStatement)


state 304

   99 orderBy: ORDER BY directionList .  [$end, GROUP, UNION, FOR, ')', ';']
  106 directionList: directionList . ',' direction

    ','  shift, and go to state 363

    $default  reduce using rule 99 (orderBy)


state 305

  105 directionList: direction .

    $default  reduce using rule 105 (directionList)


state 306

  107 direction: simpleExpr . orderDirection
  108 orderDirection: . ASC
  109               | . DESC
  110               | .  [$end, GROUP, UNION, FOR, ',', ')', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    DESC    shift, and go to state 364
    ASC     shift, and go to state 365
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 110 (orderDirection)

    orderDirection  go to state 366


state 307

   94 groupBy: GROUP BY simExList . having
   97 having: . HAVING condition
   98       | .  [$end, ORDER, UNION, FOR, ')', ';']

    HAVING  shift, and go to state 367

    $default  reduce using rule 98 (having)

    having  go to state 368


state 308

   92 forUpdate: FOR UPDATE .

    $default  reduce using rule 92 (forUpdate)


state 309

   50 declaration: ID ident identRestEx declInitializer ';' .

    $default  reduce using rule 50 (declaration)


state 310

  155 condition: EXISTS '(' select ')' .

    $default  reduce using rule 155 (condition)


state 311

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  202 when: WHEN condition THEN . simpleExpr

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 369


state 312

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition
  203 else: ELSE simpleExpr .  [END]

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 203 (else)


state 313

  173 simpleExpr: CASE whenList else END .

    $default  reduce using rule 173 (simpleExpr)


state 314

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  183 simpleExpr: CAST '(' simpleExpr AS . id optSize ')'

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id  go to state 370


state 315

  157 idList2: id ',' id .

    $default  reduce using rule 157 (idList2)


state 316

  158 idList2: idList2 ',' id .

    $default  reduce using rule 158 (idList2)


state 317

  151 condition: '(' idList2 ')' inExpr . '(' simExList ')'
  152          | '(' idList2 ')' inExpr . '(' select ')'

    '('  shift, and go to state 371


state 318

  167 inExpr: optNot . IN

    IN  shift, and go to state 273


state 319

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  122 tableList: tableList ',' . table
  123 table: . alias
  124      | . table join alias ON condition
  132 alias: . tableExpr
  133      | . tableExpr id
  134 tableExpr: . ident
  135          | . TABLE '(' simpleExpr ')'
  136          | . '(' select ')'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    TABLE             shift, and go to state 30
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 63

    id         go to state 64
    table      go to state 372
    alias      go to state 250
    tableExpr  go to state 66
    ident      go to state 67


state 320

  130 outerType: RIGHT .

    $default  reduce using rule 130 (outerType)


state 321

  128 join: INNER . JOIN

    JOIN  shift, and go to state 373


state 322

  125 join: JOIN .

    $default  reduce using rule 125 (join)


state 323

  126 join: LEFT . JOIN
  129 outerType: LEFT .  [OUTER]

    JOIN  shift, and go to state 374

    $default  reduce using rule 129 (outerType)


state 324

  131 outerType: FULL .

    $default  reduce using rule 131 (outerType)


state 325

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  124 table: table join . alias ON condition
  132 alias: . tableExpr
  133      | . tableExpr id
  134 tableExpr: . ident
  135          | . TABLE '(' simpleExpr ')'
  136          | . '(' select ')'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    TABLE             shift, and go to state 30
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 63

    id         go to state 64
    alias      go to state 375
    tableExpr  go to state 66
    ident      go to state 67


state 326

  127 join: outerType . OUTER JOIN

    OUTER  shift, and go to state 376


state 327

  209 partition: '(' PARTITION . BY ident orderBy ')'

    BY  shift, and go to state 377


state 328

  153 condition: simpleExpr IS optNot NULL .

    $default  reduce using rule 153 (condition)


state 329

   82 select: select . UNION select
  150 condition: simpleExpr inExpr '(' select . ')'

    UNION  shift, and go to state 86
    ')'    shift, and go to state 378


state 330

  149 condition: simpleExpr inExpr '(' simExList . ')'

    ')'  shift, and go to state 379


state 331

  156 condition: simpleExpr optNot BETWEEN simpleExpr . AND simpleExpr
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    AND     shift, and go to state 380
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187


state 332

  154 condition: simpleExpr optNot LIKE simpleExpr . escape
  165 escape: . ESCAPE STRING_SQ
  166       | .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    ESCAPE  shift, and go to state 381
    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 166 (escape)

    escape  go to state 382


state 333

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   78 idList: idList ',' . id

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id  go to state 383


state 334

   76 optIdList: '(' idList ')' .

    $default  reduce using rule 76 (optIdList)


state 335

   73 insertRest: VALUES identRest .

    $default  reduce using rule 73 (insertRest)


state 336

  139 ident: id '.' id '.' id .

    $default  reduce using rule 139 (ident)


state 337

   46 assign: '(' idList ')' . '=' simpleExpr

    '='  shift, and go to state 384


state 338

   44 assignList: assignList ',' assign .

    $default  reduce using rule 44 (assignList)


state 339

   45 assign: ident '=' simpleExpr .  [$end, WHERE, ',', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 45 (assign)


state 340

   88 intoId: ID .

    $default  reduce using rule 88 (intoId)


state 341

   89 intoId: ':' . ID

    ID  shift, and go to state 385


state 342

   85 basicSelectInto: SELECT optDist whatToSelect INTO intoList . FROM tableList

    FROM  shift, and go to state 386


state 343

   86 intoList: intoId .  [FROM]
   87         | intoId . ',' intoList

    ','  shift, and go to state 387

    $default  reduce using rule 86 (intoList)


state 344

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition
  199 namedArg: ID EQUALSGT simpleExpr .  [',', ')']

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 199 (namedArg)


state 345

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition
  198 namedArg: simpleExpr .  [',', ')']

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 198 (namedArg)


state 346

  196 namedArgList: namedArg ',' namedArgList .

    $default  reduce using rule 196 (namedArgList)


state 347

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition
  208 nonemptySimExList: nonemptySimExList ',' simpleExpr .  [$end, HAVING, ORDER, UNION, FOR, ',', ')', ';']

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 208 (nonemptySimExList)


state 348

  227 localTableName: qualifiedIdentifier .

    $default  reduce using rule 227 (localTableName)


state 349

  226 qualifiedLocalTableName: MODULE period localTableName .

    $default  reduce using rule 226 (qualifiedLocalTableName)


state 350

  215 tableDefinition2: ON . COMMIT DELETE

    COMMIT  shift, and go to state 388


state 351

  216 tableDefinition2: PRESERVE . ROWS

    ROWS  shift, and go to state 389


state 352

  210 tableDefinition: CREATE tableDefinition1 TABLE tableName tableElementList tableDefinition2 .

    $default  reduce using rule 210 (tableDefinition)


state 353

  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  415 constraintNameDefinition: CONSTRAINT . constraintName
  416 constraintName: . qualifiedName

    UNKNOWN_LEX  shift, and go to state 213

    $default  reduce using rule 220 (qualifiedName1)

    qualifiedName   go to state 390
    qualifiedName1  go to state 217
    schemaName      go to state 218
    constraintName  go to state 391


state 354

  361 domainName: qualifiedName .

    $default  reduce using rule 361 (domainName)


state 355

  242 columnName: identifier .

    $default  reduce using rule 242 (columnName)


state 356

  228 tableElementList: leftParen tableElement . tableElementList1 rightParen
  229 tableElementList1: .
  230                  | . tableElementList1 comma tableElement

    $default  reduce using rule 229 (tableElementList1)

    tableElementList1  go to state 392


state 357

  232 tableElement: columnDefinition .

    $default  reduce using rule 232 (tableElement)


state 358

  234 columnDefinition: columnName . dataType
  243 dataType: . characterStringType dataType1
  244         | . nationalCharacterStringType
  245         | . bitStringType
  246         | . numericType
  247         | . datetimeType
  248         | . intervalType
  251 characterStringType: . CHARACTER characterStringType1
  252                    | . CHAR characterStringType2
  253                    | . CHARACTER VARYING characterStringType3
  254                    | . CHAR VARYING characterStringType4
  255                    | . VARCHAR characterStringType5
  270 nationalCharacterStringType: . NATIONAL CHARACTER nationalCharacterStringType1
  271                            | . NATIONAL CHAR nationalCharacterStringType2
  272                            | . NCHAR nationalCharacterStringType3
  273                            | . NATIONAL CHARACTER VARYING nationalCharacterStringType4
  274                            | . NATIONAL CHAR VARYING nationalCharacterStringType5
  275                            | . NCHAR VARYING nationalCharacterStringType6
  288 bitStringType: . BIT bitStringType1
  289              | . BIT VARYING bitStringType2
  294 numericType: . exactNumericType
  295            | . approximateNumericType
  296 exactNumericType: . NUMERIC exactNumericType2
  297                 | . DECIMAL exactNumericType4
  298                 | . DEC exactNumericType6
  299                 | . INTEGER
  300                 | . INT
  301                 | . SMALLINT
  317 approximateNumericType: . FLOAT approximateNumericType1
  318                       | . REAL
  319                       | . DOUBLE PRECISION
  322 datetimeType: . DATE
  323             | . TIME datetimeType1 datetimeType2
  324             | . TIMESTAMP datetimeType3 datetimeType4
  336 intervalType: . INTERVAL intervalQualifier

    REAL       shift, and go to state 393
    BIT        shift, and go to state 394
    SMALLINT   shift, and go to state 395
    NCHAR      shift, and go to state 396
    DATE       shift, and go to state 397
    DOUBLE     shift, and go to state 398
    TIMESTAMP  shift, and go to state 399
    NUMERIC    shift, and go to state 400
    DECIMAL    shift, and go to state 401
    DEC        shift, and go to state 402
    TIME       shift, and go to state 403
    INTEGER    shift, and go to state 404
    CHARACTER  shift, and go to state 405
    CHAR       shift, and go to state 406
    INT        shift, and go to state 407
    NATIONAL   shift, and go to state 408
    FLOAT      shift, and go to state 409
    INTERVAL   shift, and go to state 410
    VARCHAR    shift, and go to state 411

    dataType                     go to state 412
    characterStringType          go to state 413
    nationalCharacterStringType  go to state 414
    bitStringType                go to state 415
    numericType                  go to state 416
    exactNumericType             go to state 417
    approximateNumericType       go to state 418
    datetimeType                 go to state 419
    intervalType                 go to state 420


state 359

  235 columnDefinition: domainName . columnDefinition1 columnDefinition2 columnDefinition3
  236 columnDefinition1: .  [NOT, UNIQUE, COLLATE, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  237                  | . defaultClause
  362 defaultClause: . DEFAULT defaultOption

    DEFAULT  shift, and go to state 421

    $default  reduce using rule 236 (columnDefinition1)

    columnDefinition1  go to state 422
    defaultClause      go to state 423


state 360

  886 tableConstraintDefinition1: constraintNameDefinition .

    $default  reduce using rule 886 (tableConstraintDefinition1)


state 361

  233 tableElement: tableConstraintDefinition .

    $default  reduce using rule 233 (tableElement)


state 362

  421 uniqueSpecification: . UNIQUE
  422                    | . PRIMARY KEY
  449 checkConstraintDefinition: . CHECK leftParen searchCondition rightParen
  884 tableConstraintDefinition: tableConstraintDefinition1 . tableConstraint tableConstraintDefinition2
  889 tableConstraint: . uniqueConstraintDefinition
  890                | . referentialConstraintDefinition
  891                | . checkConstraintDefinition
  892 uniqueConstraintDefinition: . uniqueSpecification leftParen uniqueColumnList rightParen
  894 referentialConstraintDefinition: . FOREIGN KEY leftParen referencingColumns rightParen referencesSpecification

    UNIQUE   shift, and go to state 424
    PRIMARY  shift, and go to state 425
    CHECK    shift, and go to state 426
    FOREIGN  shift, and go to state 427

    uniqueSpecification              go to state 428
    checkConstraintDefinition        go to state 429
    tableConstraint                  go to state 430
    uniqueConstraintDefinition       go to state 431
    referentialConstraintDefinition  go to state 432


state 363

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  106 directionList: directionList ',' . direction
  107 direction: . simpleExpr orderDirection
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    direction   go to state 433
    ident       go to state 109
    simpleExpr  go to state 306


state 364

  109 orderDirection: DESC .

    $default  reduce using rule 109 (orderDirection)


state 365

  108 orderDirection: ASC .

    $default  reduce using rule 108 (orderDirection)


state 366

  107 direction: simpleExpr orderDirection .

    $default  reduce using rule 107 (direction)


state 367

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   97 having: HAVING . condition
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    condition   go to state 434
    comparison  go to state 111
    simpleExpr  go to state 141


state 368

   94 groupBy: GROUP BY simExList having .

    $default  reduce using rule 94 (groupBy)


state 369

  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition
  202 when: WHEN condition THEN simpleExpr .  [WHEN, ELSE, END]

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 202 (when)


state 370

  183 simpleExpr: CAST '(' simpleExpr AS id . optSize ')'
  189 optSize: .  [')']
  190        | . '(' NUMBER ')'

    '('  shift, and go to state 435

    $default  reduce using rule 189 (optSize)

    optSize  go to state 436


state 371

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   81 select: . basicSelect where byClauses forUpdate
   82       | . select UNION select
   83 basicSelect: . SELECT optDist whatToSelect FROM tableList
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  151 condition: '(' idList2 ')' inExpr '(' . simExList ')'
  152          | '(' idList2 ')' inExpr '(' . select ')'
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL
  205 simExList: .  [')']
  206          | . nonemptySimExList
  207 nonemptySimExList: . simpleExpr
  208                  | . nonemptySimExList ',' simpleExpr

    SELECT            shift, and go to state 2
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    $default  reduce using rule 205 (simExList)

    id                 go to state 104
    select             go to state 437
    basicSelect        go to state 20
    ident              go to state 109
    simpleExpr         go to state 302
    simExList          go to state 438
    nonemptySimExList  go to state 211


state 372

  122 tableList: tableList ',' table .  [$end, WHERE, ORDER, GROUP, UNION, FOR, ',', ')', ';']
  124 table: table . join alias ON condition
  125 join: . JOIN
  126     | . LEFT JOIN
  127     | . outerType OUTER JOIN
  128     | . INNER JOIN
  129 outerType: . LEFT
  130          | . RIGHT
  131          | . FULL

    RIGHT  shift, and go to state 320
    INNER  shift, and go to state 321
    JOIN   shift, and go to state 322
    LEFT   shift, and go to state 323
    FULL   shift, and go to state 324

    $default  reduce using rule 122 (tableList)

    join       go to state 325
    outerType  go to state 326


state 373

  128 join: INNER JOIN .

    $default  reduce using rule 128 (join)


state 374

  126 join: LEFT JOIN .

    $default  reduce using rule 126 (join)


state 375

  124 table: table join alias . ON condition

    ON  shift, and go to state 439


state 376

  127 join: outerType OUTER . JOIN

    JOIN  shift, and go to state 440


state 377

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  209 partition: '(' PARTITION BY . ident orderBy ')'

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id     go to state 64
    ident  go to state 441


state 378

  150 condition: simpleExpr inExpr '(' select ')' .

    $default  reduce using rule 150 (condition)


state 379

  149 condition: simpleExpr inExpr '(' simExList ')' .

    $default  reduce using rule 149 (condition)


state 380

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  156 condition: simpleExpr optNot BETWEEN simpleExpr AND . simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 442


state 381

  165 escape: ESCAPE . STRING_SQ

    STRING_SQ  shift, and go to state 443


state 382

  154 condition: simpleExpr optNot LIKE simpleExpr escape .

    $default  reduce using rule 154 (condition)


state 383

   78 idList: idList ',' id .

    $default  reduce using rule 78 (idList)


state 384

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   46 assign: '(' idList ')' '=' . simpleExpr
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 157
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    simpleExpr  go to state 444


state 385

   89 intoId: ':' ID .

    $default  reduce using rule 89 (intoId)


state 386

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
   85 basicSelectInto: SELECT optDist whatToSelect INTO intoList FROM . tableList
  121 tableList: . table
  122          | . tableList ',' table
  123 table: . alias
  124      | . table join alias ON condition
  132 alias: . tableExpr
  133      | . tableExpr id
  134 tableExpr: . ident
  135          | . TABLE '(' simpleExpr ')'
  136          | . '(' select ')'
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id

    TABLE             shift, and go to state 30
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 63

    id         go to state 64
    tableList  go to state 445
    table      go to state 249
    alias      go to state 250
    tableExpr  go to state 66
    ident      go to state 67


state 387

   86 intoList: . intoId
   87         | . intoId ',' intoList
   87         | intoId ',' . intoList
   88 intoId: . ID
   89       | . ':' ID

    ID   shift, and go to state 340
    ':'  shift, and go to state 341

    intoList  go to state 446
    intoId    go to state 343


state 388

  215 tableDefinition2: ON COMMIT . DELETE

    DELETE  shift, and go to state 447


state 389

  216 tableDefinition2: PRESERVE ROWS .

    $default  reduce using rule 216 (tableDefinition2)


state 390

  416 constraintName: qualifiedName .

    $default  reduce using rule 416 (constraintName)


state 391

  415 constraintNameDefinition: CONSTRAINT constraintName .

    $default  reduce using rule 415 (constraintNameDefinition)


state 392

  228 tableElementList: leftParen tableElement tableElementList1 . rightParen
  230 tableElementList1: tableElementList1 . comma tableElement
  268 rightParen: . ')'
  315 comma: . ','

    ','  shift, and go to state 448
    ')'  shift, and go to state 449

    rightParen  go to state 450
    comma       go to state 451


state 393

  318 approximateNumericType: REAL .

    $default  reduce using rule 318 (approximateNumericType)


state 394

  231 leftParen: . '('
  288 bitStringType: BIT . bitStringType1
  289              | BIT . VARYING bitStringType2
  290 bitStringType1: .  [',', ')']
  291               | . leftParen length rightParen

    VARYING  shift, and go to state 452
    '('      shift, and go to state 295

    $default  reduce using rule 290 (bitStringType1)

    leftParen       go to state 453
    bitStringType1  go to state 454


state 395

  301 exactNumericType: SMALLINT .

    $default  reduce using rule 301 (exactNumericType)


state 396

  231 leftParen: . '('
  272 nationalCharacterStringType: NCHAR . nationalCharacterStringType3
  275                            | NCHAR . VARYING nationalCharacterStringType6
  280 nationalCharacterStringType3: .  [',', ')']
  281                             | . leftParen length rightParen

    VARYING  shift, and go to state 455
    '('      shift, and go to state 295

    $default  reduce using rule 280 (nationalCharacterStringType3)

    leftParen                     go to state 456
    nationalCharacterStringType3  go to state 457


state 397

  322 datetimeType: DATE .

    $default  reduce using rule 322 (datetimeType)


state 398

  319 approximateNumericType: DOUBLE . PRECISION

    PRECISION  shift, and go to state 458


state 399

  231 leftParen: . '('
  324 datetimeType: TIMESTAMP . datetimeType3 datetimeType4
  329 datetimeType3: .  [WITH, ',', ')']
  330              | . leftParen timestampPrecision rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 329 (datetimeType3)

    leftParen      go to state 459
    datetimeType3  go to state 460


state 400

  231 leftParen: . '('
  296 exactNumericType: NUMERIC . exactNumericType2
  302 exactNumericType2: .  [',', ')']
  303                  | . leftParen precision exactNumericType1 rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 302 (exactNumericType2)

    leftParen          go to state 461
    exactNumericType2  go to state 462


state 401

  231 leftParen: . '('
  297 exactNumericType: DECIMAL . exactNumericType4
  306 exactNumericType4: .  [',', ')']
  307                  | . leftParen precision exactNumericType3 rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 306 (exactNumericType4)

    leftParen          go to state 463
    exactNumericType4  go to state 464


state 402

  231 leftParen: . '('
  298 exactNumericType: DEC . exactNumericType6
  310 exactNumericType6: .  [',', ')']
  311                  | . leftParen precision exactNumericType5 rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 310 (exactNumericType6)

    leftParen          go to state 465
    exactNumericType6  go to state 466


state 403

  231 leftParen: . '('
  323 datetimeType: TIME . datetimeType1 datetimeType2
  325 datetimeType1: .  [WITH, ',', ')']
  326              | . leftParen timePrecision rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 325 (datetimeType1)

    leftParen      go to state 467
    datetimeType1  go to state 468


state 404

  299 exactNumericType: INTEGER .

    $default  reduce using rule 299 (exactNumericType)


state 405

  231 leftParen: . '('
  251 characterStringType: CHARACTER . characterStringType1
  253                    | CHARACTER . VARYING characterStringType3
  256 characterStringType1: .  [CHARACTER, ',', ')']
  257                     | . leftParen length rightParen

    VARYING  shift, and go to state 469
    '('      shift, and go to state 295

    $default  reduce using rule 256 (characterStringType1)

    leftParen             go to state 470
    characterStringType1  go to state 471


state 406

  231 leftParen: . '('
  252 characterStringType: CHAR . characterStringType2
  254                    | CHAR . VARYING characterStringType4
  258 characterStringType2: .  [CHARACTER, ',', ')']
  259                     | . leftParen length rightParen

    VARYING  shift, and go to state 472
    '('      shift, and go to state 295

    $default  reduce using rule 258 (characterStringType2)

    leftParen             go to state 473
    characterStringType2  go to state 474


state 407

  300 exactNumericType: INT .

    $default  reduce using rule 300 (exactNumericType)


state 408

  270 nationalCharacterStringType: NATIONAL . CHARACTER nationalCharacterStringType1
  271                            | NATIONAL . CHAR nationalCharacterStringType2
  273                            | NATIONAL . CHARACTER VARYING nationalCharacterStringType4
  274                            | NATIONAL . CHAR VARYING nationalCharacterStringType5

    CHARACTER  shift, and go to state 475
    CHAR       shift, and go to state 476


state 409

  231 leftParen: . '('
  317 approximateNumericType: FLOAT . approximateNumericType1
  320 approximateNumericType1: .  [',', ')']
  321                        | . leftParen precision rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 320 (approximateNumericType1)

    leftParen                go to state 477
    approximateNumericType1  go to state 478


state 410

  336 intervalType: INTERVAL . intervalQualifier
  337 intervalQualifier: . startField TO endField
  338                  | . singleDatetimeField
  339 startField: . nonsecondDatetimeField startField1
  342 nonsecondDatetimeField: . YEAR
  343                       | . MONTH
  344                       | . DAY
  345                       | . HOUR
  346                       | . MINUTE
  353 singleDatetimeField: . nonsecondDatetimeField singleDatetimeField1
  354                    | . SECOND singleDatetimeField3

    SECOND  shift, and go to state 479
    MINUTE  shift, and go to state 480
    MONTH   shift, and go to state 481
    DAY     shift, and go to state 482
    HOUR    shift, and go to state 483
    YEAR    shift, and go to state 484

    intervalQualifier       go to state 485
    startField              go to state 486
    nonsecondDatetimeField  go to state 487
    singleDatetimeField     go to state 488


state 411

  231 leftParen: . '('
  255 characterStringType: VARCHAR . characterStringType5
  264 characterStringType5: .  [CHARACTER, ',', ')']
  265                     | . leftParen length rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 264 (characterStringType5)

    leftParen             go to state 489
    characterStringType5  go to state 490


state 412

  234 columnDefinition: columnName dataType .

    $default  reduce using rule 234 (columnDefinition)


state 413

  243 dataType: characterStringType . dataType1
  249 dataType1: .  [',', ')']
  250          | . CHARACTER SET characterSetSpecification

    CHARACTER  shift, and go to state 491

    $default  reduce using rule 249 (dataType1)

    dataType1  go to state 492


state 414

  244 dataType: nationalCharacterStringType .

    $default  reduce using rule 244 (dataType)


state 415

  245 dataType: bitStringType .

    $default  reduce using rule 245 (dataType)


state 416

  246 dataType: numericType .

    $default  reduce using rule 246 (dataType)


state 417

  294 numericType: exactNumericType .

    $default  reduce using rule 294 (numericType)


state 418

  295 numericType: approximateNumericType .

    $default  reduce using rule 295 (numericType)


state 419

  247 dataType: datetimeType .

    $default  reduce using rule 247 (dataType)


state 420

  248 dataType: intervalType .

    $default  reduce using rule 248 (dataType)


state 421

  362 defaultClause: DEFAULT . defaultOption
  363 defaultOption: . literal
  364              | . datetimeValueFunction
  365              | . USER
  366              | . CURRENT_USER
  367              | . SESSION_USER
  368              | . SYSTEM_USER
  369              | . NULL
  370 literal: . signedNumericLiteral
  371        | . generalLiteral
  372 signedNumericLiteral: . signedNumericLiteral1 unsignedNumericLiteral
  373 signedNumericLiteral1: .  [UNKNOWN_LEX]
  374                      | . sign
  375 sign: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1

    NULL               shift, and go to state 493
    UNKNOWN_LEX        shift, and go to state 494
    SESSION_USER       shift, and go to state 495
    DATE               shift, and go to state 496
    CURRENT_DATE       shift, and go to state 497
    TIMESTAMP          shift, and go to state 498
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 500
    CURRENT_TIME       shift, and go to state 501
    USER               shift, and go to state 502
    CURRENT_TIMESTAMP  shift, and go to state 503
    CURRENT_USER       shift, and go to state 504
    INTERVAL           shift, and go to state 505

    UNKNOWN_LEX  [reduce using rule 373 (signedNumericLiteral1)]

    defaultOption                   go to state 506
    literal                         go to state 507
    signedNumericLiteral            go to state 508
    signedNumericLiteral1           go to state 509
    sign                            go to state 510
    generalLiteral                  go to state 511
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 521
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524


state 422

  235 columnDefinition: domainName columnDefinition1 . columnDefinition2 columnDefinition3
  238 columnDefinition2: .
  239                  | . columnDefinition2 columnConstraintDefinition

    $default  reduce using rule 238 (columnDefinition2)

    columnDefinition2  go to state 525


state 423

  237 columnDefinition1: defaultClause .

    $default  reduce using rule 237 (columnDefinition1)


state 424

  421 uniqueSpecification: UNIQUE .

    $default  reduce using rule 421 (uniqueSpecification)


state 425

  422 uniqueSpecification: PRIMARY . KEY

    KEY  shift, and go to state 526


state 426

  231 leftParen: . '('
  449 checkConstraintDefinition: CHECK . leftParen searchCondition rightParen

    '('  shift, and go to state 295

    leftParen  go to state 527


state 427

  894 referentialConstraintDefinition: FOREIGN . KEY leftParen referencingColumns rightParen referencesSpecification

    KEY  shift, and go to state 528


state 428

  231 leftParen: . '('
  892 uniqueConstraintDefinition: uniqueSpecification . leftParen uniqueColumnList rightParen

    '('  shift, and go to state 295

    leftParen  go to state 529


state 429

  891 tableConstraint: checkConstraintDefinition .

    $default  reduce using rule 891 (tableConstraint)


state 430

  882 constraintCheckTime: . INITIALLY DEFERRED
  883                    | . INITIALLY IMMEDIATE
  884 tableConstraintDefinition: tableConstraintDefinition1 tableConstraint . tableConstraintDefinition2
  887 tableConstraintDefinition2: .  [',', ')']
  888                           | . constraintCheckTime

    INITIALLY  shift, and go to state 530

    $default  reduce using rule 887 (tableConstraintDefinition2)

    constraintCheckTime         go to state 531
    tableConstraintDefinition2  go to state 532


state 431

  889 tableConstraint: uniqueConstraintDefinition .

    $default  reduce using rule 889 (tableConstraint)


state 432

  890 tableConstraint: referentialConstraintDefinition .

    $default  reduce using rule 890 (tableConstraint)


state 433

  106 directionList: directionList ',' direction .

    $default  reduce using rule 106 (directionList)


state 434

   97 having: HAVING condition .  [$end, ORDER, UNION, FOR, ')', ';']
  143 condition: condition . AND condition
  144          | condition . OR condition
  145          | condition . XOR condition

    OR   shift, and go to state 170
    AND  shift, and go to state 171
    XOR  shift, and go to state 172

    $default  reduce using rule 97 (having)


state 435

  190 optSize: '(' . NUMBER ')'

    NUMBER  shift, and go to state 533


state 436

  183 simpleExpr: CAST '(' simpleExpr AS id optSize . ')'

    ')'  shift, and go to state 534


state 437

   82 select: select . UNION select
  152 condition: '(' idList2 ')' inExpr '(' select . ')'

    UNION  shift, and go to state 86
    ')'    shift, and go to state 535


state 438

  151 condition: '(' idList2 ')' inExpr '(' simExList . ')'

    ')'  shift, and go to state 536


state 439

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  124 table: table join alias ON . condition
  137 ident: . id
  138      | . id '.' id
  139      | . id '.' id '.' id
  143 condition: . condition AND condition
  144          | . condition OR condition
  145          | . condition XOR condition
  146          | . NOT condition
  147          | . '(' condition ')'
  148          | . comparison
  149          | . simpleExpr inExpr '(' simExList ')'
  150          | . simpleExpr inExpr '(' select ')'
  151          | . '(' idList2 ')' inExpr '(' simExList ')'
  152          | . '(' idList2 ')' inExpr '(' select ')'
  153          | . simpleExpr IS optNot NULL
  154          | . simpleExpr optNot LIKE simpleExpr escape
  155          | . EXISTS '(' select ')'
  156          | . simpleExpr optNot BETWEEN simpleExpr AND simpleExpr
  159 comparison: . simpleExpr '=' simpleExpr
  160           | . simpleExpr '>' simpleExpr
  161           | . simpleExpr '<' simpleExpr
  162           | . simpleExpr LE simpleExpr
  163           | . simpleExpr NE simpleExpr
  164           | . simpleExpr GE simpleExpr
  170 simpleExpr: . NUMBER
  171           | . simpleExpr OUTERJ
  172           | . '-' simpleExpr
  173           | . CASE whenList else END
  174           | . STRING_SQ
  175           | . ident identRestEx
  176           | . '(' simpleExpr ')'
  177           | . simpleExpr '-' simpleExpr
  178           | . simpleExpr '+' simpleExpr
  179           | . simpleExpr '*' simpleExpr
  180           | . simpleExpr '/' simpleExpr
  181           | . simpleExpr CONCAT simpleExpr
  182           | . simpleExpr OVER partition
  183           | . CAST '(' simpleExpr AS id optSize ')'
  184           | . '(' select ')'
  185           | . id '.' '*'
  186           | . '*'
  187           | . '?'
  188           | . NULL

    EXISTS            shift, and go to state 93
    CASE              shift, and go to state 94
    CAST              shift, and go to state 95
    DESC              shift, and go to state 31
    NULL              shift, and go to state 96
    ASC               shift, and go to state 32
    NOT               shift, and go to state 97
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    STRING_SQ         shift, and go to state 98
    NUMBER            shift, and go to state 99
    ID                shift, and go to state 62
    '-'               shift, and go to state 100
    '*'               shift, and go to state 101
    '('               shift, and go to state 102
    '?'               shift, and go to state 103

    id          go to state 104
    ident       go to state 109
    condition   go to state 537
    comparison  go to state 111
    simpleExpr  go to state 141


state 440

  127 join: outerType OUTER JOIN .

    $default  reduce using rule 127 (join)


state 441

   99 orderBy: . ORDER BY directionList
  209 partition: '(' PARTITION BY ident . orderBy ')'

    ORDER  shift, and go to state 142

    orderBy  go to state 538


state 442

  156 condition: simpleExpr optNot BETWEEN simpleExpr AND simpleExpr .  [$end, WHERE, ORDER, OR, GROUP, RIGHT, INNER, UNION, FROM, THEN, DESC, JOIN, LEFT, FULL, INTO, AND, ASC, XOR, FOR, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 156 (condition)


state 443

  165 escape: ESCAPE STRING_SQ .

    $default  reduce using rule 165 (escape)


state 444

   46 assign: '(' idList ')' '=' simpleExpr .  [$end, WHERE, ',', ';']
  171 simpleExpr: simpleExpr . OUTERJ
  177           | simpleExpr . '-' simpleExpr
  178           | simpleExpr . '+' simpleExpr
  179           | simpleExpr . '*' simpleExpr
  180           | simpleExpr . '/' simpleExpr
  181           | simpleExpr . CONCAT simpleExpr
  182           | simpleExpr . OVER partition

    OVER    shift, and go to state 173
    OUTERJ  shift, and go to state 176
    CONCAT  shift, and go to state 180
    '-'     shift, and go to state 184
    '+'     shift, and go to state 185
    '/'     shift, and go to state 186
    '*'     shift, and go to state 187

    $default  reduce using rule 46 (assign)


state 445

   85 basicSelectInto: SELECT optDist whatToSelect INTO intoList FROM tableList .  [WHERE, ORDER, GROUP, ';']
  122 tableList: tableList . ',' table

    ','  shift, and go to state 319

    $default  reduce using rule 85 (basicSelectInto)


state 446

   87 intoList: intoId ',' intoList .

    $default  reduce using rule 87 (intoList)


state 447

  215 tableDefinition2: ON COMMIT DELETE .

    $default  reduce using rule 215 (tableDefinition2)


state 448

  315 comma: ',' .

    $default  reduce using rule 315 (comma)


state 449

  268 rightParen: ')' .

    $default  reduce using rule 268 (rightParen)


state 450

  228 tableElementList: leftParen tableElement tableElementList1 rightParen .

    $default  reduce using rule 228 (tableElementList)


state 451

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  230 tableElementList1: tableElementList1 comma . tableElement
  232 tableElement: . columnDefinition
  233             | . tableConstraintDefinition
  234 columnDefinition: . columnName dataType
  235                 | . domainName columnDefinition1 columnDefinition2 columnDefinition3
  242 columnName: . identifier
  361 domainName: . qualifiedName
  415 constraintNameDefinition: . CONSTRAINT constraintName
  884 tableConstraintDefinition: . tableConstraintDefinition1 tableConstraint tableConstraintDefinition2
  885 tableConstraintDefinition1: .  [UNIQUE, PRIMARY, CHECK, FOREIGN]
  886                           | . constraintNameDefinition

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 213
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    CONSTRAINT        shift, and go to state 353
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    DESC              [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    $default          reduce using rule 885 (tableConstraintDefinition1)

    id                          go to state 298
    qualifiedName               go to state 354
    qualifiedName1              go to state 217
    schemaName                  go to state 218
    identifier                  go to state 355
    tableElement                go to state 539
    columnDefinition            go to state 357
    columnName                  go to state 358
    domainName                  go to state 359
    constraintNameDefinition    go to state 360
    tableConstraintDefinition   go to state 361
    tableConstraintDefinition1  go to state 362


state 452

  231 leftParen: . '('
  289 bitStringType: BIT VARYING . bitStringType2
  292 bitStringType2: .  [',', ')']
  293               | . leftParen length rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 292 (bitStringType2)

    leftParen       go to state 540
    bitStringType2  go to state 541


state 453

  266 length: . unsignedInteger
  267 unsignedInteger: . NUMBER
  291 bitStringType1: leftParen . length rightParen

    NUMBER  shift, and go to state 542

    length           go to state 543
    unsignedInteger  go to state 544


state 454

  288 bitStringType: BIT bitStringType1 .

    $default  reduce using rule 288 (bitStringType)


state 455

  231 leftParen: . '('
  275 nationalCharacterStringType: NCHAR VARYING . nationalCharacterStringType6
  286 nationalCharacterStringType6: .  [',', ')']
  287                             | . leftParen length rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 286 (nationalCharacterStringType6)

    leftParen                     go to state 545
    nationalCharacterStringType6  go to state 546


state 456

  266 length: . unsignedInteger
  267 unsignedInteger: . NUMBER
  281 nationalCharacterStringType3: leftParen . length rightParen

    NUMBER  shift, and go to state 542

    length           go to state 547
    unsignedInteger  go to state 544


state 457

  272 nationalCharacterStringType: NCHAR nationalCharacterStringType3 .

    $default  reduce using rule 272 (nationalCharacterStringType)


state 458

  319 approximateNumericType: DOUBLE PRECISION .

    $default  reduce using rule 319 (approximateNumericType)


state 459

  267 unsignedInteger: . NUMBER
  330 datetimeType3: leftParen . timestampPrecision rightParen
  334 timeFractionalSecondsPrecision: . unsignedInteger
  335 timestampPrecision: . timeFractionalSecondsPrecision

    NUMBER  shift, and go to state 542

    unsignedInteger                 go to state 548
    timeFractionalSecondsPrecision  go to state 549
    timestampPrecision              go to state 550


state 460

  324 datetimeType: TIMESTAMP datetimeType3 . datetimeType4
  331 datetimeType4: .  [',', ')']
  332              | . WITH TIME ZONE

    WITH  shift, and go to state 551

    $default  reduce using rule 331 (datetimeType4)

    datetimeType4  go to state 552


state 461

  267 unsignedInteger: . NUMBER
  303 exactNumericType2: leftParen . precision exactNumericType1 rightParen
  314 precision: . unsignedInteger

    NUMBER  shift, and go to state 542

    unsignedInteger  go to state 553
    precision        go to state 554


state 462

  296 exactNumericType: NUMERIC exactNumericType2 .

    $default  reduce using rule 296 (exactNumericType)


state 463

  267 unsignedInteger: . NUMBER
  307 exactNumericType4: leftParen . precision exactNumericType3 rightParen
  314 precision: . unsignedInteger

    NUMBER  shift, and go to state 542

    unsignedInteger  go to state 553
    precision        go to state 555


state 464

  297 exactNumericType: DECIMAL exactNumericType4 .

    $default  reduce using rule 297 (exactNumericType)


state 465

  267 unsignedInteger: . NUMBER
  311 exactNumericType6: leftParen . precision exactNumericType5 rightParen
  314 precision: . unsignedInteger

    NUMBER  shift, and go to state 542

    unsignedInteger  go to state 553
    precision        go to state 556


state 466

  298 exactNumericType: DEC exactNumericType6 .

    $default  reduce using rule 298 (exactNumericType)


state 467

  267 unsignedInteger: . NUMBER
  326 datetimeType1: leftParen . timePrecision rightParen
  333 timePrecision: . timeFractionalSecondsPrecision
  334 timeFractionalSecondsPrecision: . unsignedInteger

    NUMBER  shift, and go to state 542

    unsignedInteger                 go to state 548
    timePrecision                   go to state 557
    timeFractionalSecondsPrecision  go to state 558


state 468

  323 datetimeType: TIME datetimeType1 . datetimeType2
  327 datetimeType2: .  [',', ')']
  328              | . WITH TIME ZONE

    WITH  shift, and go to state 559

    $default  reduce using rule 327 (datetimeType2)

    datetimeType2  go to state 560


state 469

  231 leftParen: . '('
  253 characterStringType: CHARACTER VARYING . characterStringType3
  260 characterStringType3: .  [CHARACTER, ',', ')']
  261                     | . leftParen length rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 260 (characterStringType3)

    leftParen             go to state 561
    characterStringType3  go to state 562


state 470

  257 characterStringType1: leftParen . length rightParen
  266 length: . unsignedInteger
  267 unsignedInteger: . NUMBER

    NUMBER  shift, and go to state 542

    length           go to state 563
    unsignedInteger  go to state 544


state 471

  251 characterStringType: CHARACTER characterStringType1 .

    $default  reduce using rule 251 (characterStringType)


state 472

  231 leftParen: . '('
  254 characterStringType: CHAR VARYING . characterStringType4
  262 characterStringType4: .  [CHARACTER, ',', ')']
  263                     | . leftParen length rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 262 (characterStringType4)

    leftParen             go to state 564
    characterStringType4  go to state 565


state 473

  259 characterStringType2: leftParen . length rightParen
  266 length: . unsignedInteger
  267 unsignedInteger: . NUMBER

    NUMBER  shift, and go to state 542

    length           go to state 566
    unsignedInteger  go to state 544


state 474

  252 characterStringType: CHAR characterStringType2 .

    $default  reduce using rule 252 (characterStringType)


state 475

  231 leftParen: . '('
  270 nationalCharacterStringType: NATIONAL CHARACTER . nationalCharacterStringType1
  273                            | NATIONAL CHARACTER . VARYING nationalCharacterStringType4
  276 nationalCharacterStringType1: .  [',', ')']
  277                             | . leftParen length rightParen

    VARYING  shift, and go to state 567
    '('      shift, and go to state 295

    $default  reduce using rule 276 (nationalCharacterStringType1)

    leftParen                     go to state 568
    nationalCharacterStringType1  go to state 569


state 476

  231 leftParen: . '('
  271 nationalCharacterStringType: NATIONAL CHAR . nationalCharacterStringType2
  274                            | NATIONAL CHAR . VARYING nationalCharacterStringType5
  278 nationalCharacterStringType2: .  [',', ')']
  279                             | . leftParen length rightParen

    VARYING  shift, and go to state 570
    '('      shift, and go to state 295

    $default  reduce using rule 278 (nationalCharacterStringType2)

    leftParen                     go to state 571
    nationalCharacterStringType2  go to state 572


state 477

  267 unsignedInteger: . NUMBER
  314 precision: . unsignedInteger
  321 approximateNumericType1: leftParen . precision rightParen

    NUMBER  shift, and go to state 542

    unsignedInteger  go to state 553
    precision        go to state 573


state 478

  317 approximateNumericType: FLOAT approximateNumericType1 .

    $default  reduce using rule 317 (approximateNumericType)


state 479

  231 leftParen: . '('
  354 singleDatetimeField: SECOND . singleDatetimeField3
  357 singleDatetimeField3: .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, UNIQUE, COLLATE, KEY, AVG, INITIALLY, UPPER, CONSTRAINT, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, PRIMARY, CHECK, REFERENCES, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  358                     | . leftParen intervalLeadingFieldPrecision singleDatetimeField2 rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 357 (singleDatetimeField3)

    leftParen             go to state 574
    singleDatetimeField3  go to state 575


state 480

  346 nonsecondDatetimeField: MINUTE .

    $default  reduce using rule 346 (nonsecondDatetimeField)


state 481

  343 nonsecondDatetimeField: MONTH .

    $default  reduce using rule 343 (nonsecondDatetimeField)


state 482

  344 nonsecondDatetimeField: DAY .

    $default  reduce using rule 344 (nonsecondDatetimeField)


state 483

  345 nonsecondDatetimeField: HOUR .

    $default  reduce using rule 345 (nonsecondDatetimeField)


state 484

  342 nonsecondDatetimeField: YEAR .

    $default  reduce using rule 342 (nonsecondDatetimeField)


state 485

  336 intervalType: INTERVAL intervalQualifier .

    $default  reduce using rule 336 (intervalType)


state 486

  337 intervalQualifier: startField . TO endField

    TO  shift, and go to state 576


state 487

  231 leftParen: . '('
  339 startField: nonsecondDatetimeField . startField1
  340 startField1: .  [TO]
  341            | . leftParen intervalLeadingFieldPrecision rightParen
  353 singleDatetimeField: nonsecondDatetimeField . singleDatetimeField1
  355 singleDatetimeField1: .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, UNIQUE, COLLATE, KEY, AVG, INITIALLY, UPPER, CONSTRAINT, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, PRIMARY, CHECK, REFERENCES, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  356                     | . leftParen intervalLeadingFieldPrecision rightParen

    '('  shift, and go to state 295

    TO        reduce using rule 340 (startField1)
    $default  reduce using rule 355 (singleDatetimeField1)

    leftParen             go to state 577
    startField1           go to state 578
    singleDatetimeField1  go to state 579


state 488

  338 intervalQualifier: singleDatetimeField .

    $default  reduce using rule 338 (intervalQualifier)


state 489

  265 characterStringType5: leftParen . length rightParen
  266 length: . unsignedInteger
  267 unsignedInteger: . NUMBER

    NUMBER  shift, and go to state 542

    length           go to state 580
    unsignedInteger  go to state 544


state 490

  255 characterStringType: VARCHAR characterStringType5 .

    $default  reduce using rule 255 (characterStringType)


state 491

  250 dataType1: CHARACTER . SET characterSetSpecification

    SET  shift, and go to state 581


state 492

  243 dataType: characterStringType dataType1 .

    $default  reduce using rule 243 (dataType)


state 493

  369 defaultOption: NULL .

    $default  reduce using rule 369 (defaultOption)


state 494

  375 sign: UNKNOWN_LEX .  [UNKNOWN_LEX]
  383 characterStringLiteral: UNKNOWN_LEX .  [NOT, UNIQUE, COLLATE, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  384 nationalCharacterStringLiteral: UNKNOWN_LEX .  [NOT, UNIQUE, COLLATE, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  385 bitStringLiteral: UNKNOWN_LEX .  [NOT, UNIQUE, COLLATE, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  386 hexStringLiteral: UNKNOWN_LEX .  [NOT, UNIQUE, COLLATE, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']

    NOT          reduce using rule 383 (characterStringLiteral)
    NOT          [reduce using rule 384 (nationalCharacterStringLiteral)]
    NOT          [reduce using rule 385 (bitStringLiteral)]
    NOT          [reduce using rule 386 (hexStringLiteral)]
    UNKNOWN_LEX  reduce using rule 375 (sign)
    UNIQUE       reduce using rule 383 (characterStringLiteral)
    UNIQUE       [reduce using rule 384 (nationalCharacterStringLiteral)]
    UNIQUE       [reduce using rule 385 (bitStringLiteral)]
    UNIQUE       [reduce using rule 386 (hexStringLiteral)]
    COLLATE      reduce using rule 383 (characterStringLiteral)
    COLLATE      [reduce using rule 384 (nationalCharacterStringLiteral)]
    COLLATE      [reduce using rule 385 (bitStringLiteral)]
    COLLATE      [reduce using rule 386 (hexStringLiteral)]
    CONSTRAINT   reduce using rule 383 (characterStringLiteral)
    CONSTRAINT   [reduce using rule 384 (nationalCharacterStringLiteral)]
    CONSTRAINT   [reduce using rule 385 (bitStringLiteral)]
    CONSTRAINT   [reduce using rule 386 (hexStringLiteral)]
    PRIMARY      reduce using rule 383 (characterStringLiteral)
    PRIMARY      [reduce using rule 384 (nationalCharacterStringLiteral)]
    PRIMARY      [reduce using rule 385 (bitStringLiteral)]
    PRIMARY      [reduce using rule 386 (hexStringLiteral)]
    CHECK        reduce using rule 383 (characterStringLiteral)
    CHECK        [reduce using rule 384 (nationalCharacterStringLiteral)]
    CHECK        [reduce using rule 385 (bitStringLiteral)]
    CHECK        [reduce using rule 386 (hexStringLiteral)]
    REFERENCES   reduce using rule 383 (characterStringLiteral)
    REFERENCES   [reduce using rule 384 (nationalCharacterStringLiteral)]
    REFERENCES   [reduce using rule 385 (bitStringLiteral)]
    REFERENCES   [reduce using rule 386 (hexStringLiteral)]
    ','          reduce using rule 383 (characterStringLiteral)
    ','          [reduce using rule 384 (nationalCharacterStringLiteral)]
    ','          [reduce using rule 385 (bitStringLiteral)]
    ','          [reduce using rule 386 (hexStringLiteral)]
    ')'          reduce using rule 383 (characterStringLiteral)
    ')'          [reduce using rule 384 (nationalCharacterStringLiteral)]
    ')'          [reduce using rule 385 (bitStringLiteral)]
    ')'          [reduce using rule 386 (hexStringLiteral)]
    $default     reduce using rule 383 (characterStringLiteral)


state 495

  367 defaultOption: SESSION_USER .

    $default  reduce using rule 367 (defaultOption)


state 496

  390 dateLiteral: DATE . dateString
  391 dateString: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 582

    dateString  go to state 583


state 497

  403 currentDateValueFunction: CURRENT_DATE .

    $default  reduce using rule 403 (currentDateValueFunction)


state 498

  394 timestampLiteral: TIMESTAMP . timestampString
  395 timestampString: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 584

    timestampString  go to state 585


state 499

  392 timeLiteral: TIME . timeString
  393 timeString: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 586

    timeString  go to state 587


state 500

  368 defaultOption: SYSTEM_USER .

    $default  reduce using rule 368 (defaultOption)


state 501

  231 leftParen: . '('
  404 currentTimeValueFunction: CURRENT_TIME . currentTimeValueFunction1
  405 currentTimeValueFunction1: .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, UNIQUE, COLLATE, KEY, AVG, INITIALLY, UPPER, CONSTRAINT, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, PRIMARY, CHECK, REFERENCES, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  406                          | . leftParen timePrecision rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 405 (currentTimeValueFunction1)

    leftParen                  go to state 588
    currentTimeValueFunction1  go to state 589


state 502

  365 defaultOption: USER .

    $default  reduce using rule 365 (defaultOption)


state 503

  231 leftParen: . '('
  407 currentTimestampValueFunction: CURRENT_TIMESTAMP . currentTimestampValueFunction1
  408 currentTimestampValueFunction1: .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, UNIQUE, COLLATE, KEY, AVG, INITIALLY, UPPER, CONSTRAINT, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, PRIMARY, CHECK, REFERENCES, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  409                               | . leftParen timestampPrecision rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 408 (currentTimestampValueFunction1)

    leftParen                       go to state 590
    currentTimestampValueFunction1  go to state 591


state 504

  366 defaultOption: CURRENT_USER .

    $default  reduce using rule 366 (defaultOption)


state 505

  375 sign: . UNKNOWN_LEX
  396 intervalLiteral: INTERVAL . intervalLiteral1 intervalString intervalQualifier
  397 intervalLiteral1: .  [UNKNOWN_LEX]
  398                 | . sign

    UNKNOWN_LEX  shift, and go to state 592

    UNKNOWN_LEX  [reduce using rule 397 (intervalLiteral1)]

    sign              go to state 593
    intervalLiteral1  go to state 594


state 506

  362 defaultClause: DEFAULT defaultOption .

    $default  reduce using rule 362 (defaultClause)


state 507

  363 defaultOption: literal .

    $default  reduce using rule 363 (defaultOption)


state 508

  370 literal: signedNumericLiteral .

    $default  reduce using rule 370 (literal)


state 509

  372 signedNumericLiteral: signedNumericLiteral1 . unsignedNumericLiteral
  376 unsignedNumericLiteral: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 595

    unsignedNumericLiteral  go to state 596


state 510

  374 signedNumericLiteral1: sign .

    $default  reduce using rule 374 (signedNumericLiteral1)


state 511

  371 literal: generalLiteral .

    $default  reduce using rule 371 (literal)


state 512

  377 generalLiteral: characterStringLiteral .

    $default  reduce using rule 377 (generalLiteral)


state 513

  378 generalLiteral: nationalCharacterStringLiteral .

    $default  reduce using rule 378 (generalLiteral)


state 514

  379 generalLiteral: bitStringLiteral .

    $default  reduce using rule 379 (generalLiteral)


state 515

  380 generalLiteral: hexStringLiteral .

    $default  reduce using rule 380 (generalLiteral)


state 516

  381 generalLiteral: datetimeLiteral .

    $default  reduce using rule 381 (generalLiteral)


state 517

  387 datetimeLiteral: dateLiteral .

    $default  reduce using rule 387 (datetimeLiteral)


state 518

  388 datetimeLiteral: timeLiteral .

    $default  reduce using rule 388 (datetimeLiteral)


state 519

  389 datetimeLiteral: timestampLiteral .

    $default  reduce using rule 389 (datetimeLiteral)


state 520

  382 generalLiteral: intervalLiteral .

    $default  reduce using rule 382 (generalLiteral)


state 521

  364 defaultOption: datetimeValueFunction .

    $default  reduce using rule 364 (defaultOption)


state 522

  400 datetimeValueFunction: currentDateValueFunction .

    $default  reduce using rule 400 (datetimeValueFunction)


state 523

  401 datetimeValueFunction: currentTimeValueFunction .

    $default  reduce using rule 401 (datetimeValueFunction)


state 524

  402 datetimeValueFunction: currentTimestampValueFunction .

    $default  reduce using rule 402 (datetimeValueFunction)


state 525

  235 columnDefinition: domainName columnDefinition1 columnDefinition2 . columnDefinition3
  239 columnDefinition2: columnDefinition2 . columnConstraintDefinition
  240 columnDefinition3: .  [',', ')']
  241                  | . collateClause
  410 columnConstraintDefinition: . columnConstraintDefinition1 columnConstraint columnConstraintDefinition2
  411 columnConstraintDefinition1: .  [NOT, UNIQUE, PRIMARY, CHECK, REFERENCES]
  412                            | . constraintNameDefinition
  415 constraintNameDefinition: . CONSTRAINT constraintName
  660 collateClause: . COLLATE collationName

    COLLATE     shift, and go to state 597
    CONSTRAINT  shift, and go to state 353

    ','       reduce using rule 240 (columnDefinition3)
    ')'       reduce using rule 240 (columnDefinition3)
    $default  reduce using rule 411 (columnConstraintDefinition1)

    columnDefinition3            go to state 598
    columnConstraintDefinition   go to state 599
    columnConstraintDefinition1  go to state 600
    constraintNameDefinition     go to state 601
    collateClause                go to state 602


state 526

  422 uniqueSpecification: PRIMARY KEY .

    $default  reduce using rule 422 (uniqueSpecification)


state 527

  449 checkConstraintDefinition: CHECK leftParen . searchCondition rightParen
  450 searchCondition: . booleanTerm
  451                | . searchCondition OR booleanTerm
  452 booleanTerm: . booleanFactor
  453            | . booleanTerm AND booleanFactor
  454 booleanFactor: . booleanFactor1 booleanTest
  455 booleanFactor1: .  [EXISTS, CASE, CAST, DESC, NULL, ASC, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  456               | . NOT

    NOT  shift, and go to state 603

    $default  reduce using rule 455 (booleanFactor1)

    searchCondition  go to state 604
    booleanTerm      go to state 605
    booleanFactor    go to state 606
    booleanFactor1   go to state 607


state 528

  231 leftParen: . '('
  894 referentialConstraintDefinition: FOREIGN KEY . leftParen referencingColumns rightParen referencesSpecification

    '('  shift, and go to state 295

    leftParen  go to state 608


state 529

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  225 identifier: . id
  242 columnName: . identifier
  432 columnNameList: . columnName columnNameList1
  892 uniqueConstraintDefinition: uniqueSpecification leftParen . uniqueColumnList rightParen
  893 uniqueColumnList: . columnNameList

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id                go to state 298
    identifier        go to state 355
    columnName        go to state 609
    columnNameList    go to state 610
    uniqueColumnList  go to state 611


state 530

  882 constraintCheckTime: INITIALLY . DEFERRED
  883                    | INITIALLY . IMMEDIATE

    IMMEDIATE  shift, and go to state 612
    DEFERRED   shift, and go to state 613


state 531

  888 tableConstraintDefinition2: constraintCheckTime .

    $default  reduce using rule 888 (tableConstraintDefinition2)


state 532

  884 tableConstraintDefinition: tableConstraintDefinition1 tableConstraint tableConstraintDefinition2 .

    $default  reduce using rule 884 (tableConstraintDefinition)


state 533

  190 optSize: '(' NUMBER . ')'

    ')'  shift, and go to state 614


state 534

  183 simpleExpr: CAST '(' simpleExpr AS id optSize ')' .

    $default  reduce using rule 183 (simpleExpr)


state 535

  152 condition: '(' idList2 ')' inExpr '(' select ')' .

    $default  reduce using rule 152 (condition)


state 536

  151 condition: '(' idList2 ')' inExpr '(' simExList ')' .

    $default  reduce using rule 151 (condition)


state 537

  124 table: table join alias ON condition .  [$end, WHERE, ORDER, GROUP, RIGHT, INNER, UNION, JOIN, LEFT, FULL, FOR, ',', ')', ';']
  143 condition: condition . AND condition
  144          | condition . OR condition
  145          | condition . XOR condition

    OR   shift, and go to state 170
    AND  shift, and go to state 171
    XOR  shift, and go to state 172

    $default  reduce using rule 124 (table)


state 538

  209 partition: '(' PARTITION BY ident orderBy . ')'

    ')'  shift, and go to state 615


state 539

  230 tableElementList1: tableElementList1 comma tableElement .

    $default  reduce using rule 230 (tableElementList1)


state 540

  266 length: . unsignedInteger
  267 unsignedInteger: . NUMBER
  293 bitStringType2: leftParen . length rightParen

    NUMBER  shift, and go to state 542

    length           go to state 616
    unsignedInteger  go to state 544


state 541

  289 bitStringType: BIT VARYING bitStringType2 .

    $default  reduce using rule 289 (bitStringType)


state 542

  267 unsignedInteger: NUMBER .

    $default  reduce using rule 267 (unsignedInteger)


state 543

  268 rightParen: . ')'
  291 bitStringType1: leftParen length . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 617


state 544

  266 length: unsignedInteger .

    $default  reduce using rule 266 (length)


state 545

  266 length: . unsignedInteger
  267 unsignedInteger: . NUMBER
  287 nationalCharacterStringType6: leftParen . length rightParen

    NUMBER  shift, and go to state 542

    length           go to state 618
    unsignedInteger  go to state 544


state 546

  275 nationalCharacterStringType: NCHAR VARYING nationalCharacterStringType6 .

    $default  reduce using rule 275 (nationalCharacterStringType)


state 547

  268 rightParen: . ')'
  281 nationalCharacterStringType3: leftParen length . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 619


state 548

  334 timeFractionalSecondsPrecision: unsignedInteger .

    $default  reduce using rule 334 (timeFractionalSecondsPrecision)


state 549

  335 timestampPrecision: timeFractionalSecondsPrecision .

    $default  reduce using rule 335 (timestampPrecision)


state 550

  268 rightParen: . ')'
  330 datetimeType3: leftParen timestampPrecision . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 620


state 551

  332 datetimeType4: WITH . TIME ZONE

    TIME  shift, and go to state 621


state 552

  324 datetimeType: TIMESTAMP datetimeType3 datetimeType4 .

    $default  reduce using rule 324 (datetimeType)


state 553

  314 precision: unsignedInteger .

    $default  reduce using rule 314 (precision)


state 554

  303 exactNumericType2: leftParen precision . exactNumericType1 rightParen
  304 exactNumericType1: .  [')']
  305                  | . comma scale
  315 comma: . ','

    ','  shift, and go to state 448

    $default  reduce using rule 304 (exactNumericType1)

    exactNumericType1  go to state 622
    comma              go to state 623


state 555

  307 exactNumericType4: leftParen precision . exactNumericType3 rightParen
  308 exactNumericType3: .  [')']
  309                  | . comma scale
  315 comma: . ','

    ','  shift, and go to state 448

    $default  reduce using rule 308 (exactNumericType3)

    exactNumericType3  go to state 624
    comma              go to state 625


state 556

  311 exactNumericType6: leftParen precision . exactNumericType5 rightParen
  312 exactNumericType5: .  [')']
  313                  | . comma scale
  315 comma: . ','

    ','  shift, and go to state 448

    $default  reduce using rule 312 (exactNumericType5)

    exactNumericType5  go to state 626
    comma              go to state 627


state 557

  268 rightParen: . ')'
  326 datetimeType1: leftParen timePrecision . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 628


state 558

  333 timePrecision: timeFractionalSecondsPrecision .

    $default  reduce using rule 333 (timePrecision)


state 559

  328 datetimeType2: WITH . TIME ZONE

    TIME  shift, and go to state 629


state 560

  323 datetimeType: TIME datetimeType1 datetimeType2 .

    $default  reduce using rule 323 (datetimeType)


state 561

  261 characterStringType3: leftParen . length rightParen
  266 length: . unsignedInteger
  267 unsignedInteger: . NUMBER

    NUMBER  shift, and go to state 542

    length           go to state 630
    unsignedInteger  go to state 544


state 562

  253 characterStringType: CHARACTER VARYING characterStringType3 .

    $default  reduce using rule 253 (characterStringType)


state 563

  257 characterStringType1: leftParen length . rightParen
  268 rightParen: . ')'

    ')'  shift, and go to state 449

    rightParen  go to state 631


state 564

  263 characterStringType4: leftParen . length rightParen
  266 length: . unsignedInteger
  267 unsignedInteger: . NUMBER

    NUMBER  shift, and go to state 542

    length           go to state 632
    unsignedInteger  go to state 544


state 565

  254 characterStringType: CHAR VARYING characterStringType4 .

    $default  reduce using rule 254 (characterStringType)


state 566

  259 characterStringType2: leftParen length . rightParen
  268 rightParen: . ')'

    ')'  shift, and go to state 449

    rightParen  go to state 633


state 567

  231 leftParen: . '('
  273 nationalCharacterStringType: NATIONAL CHARACTER VARYING . nationalCharacterStringType4
  282 nationalCharacterStringType4: .  [',', ')']
  283                             | . leftParen length rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 282 (nationalCharacterStringType4)

    leftParen                     go to state 634
    nationalCharacterStringType4  go to state 635


state 568

  266 length: . unsignedInteger
  267 unsignedInteger: . NUMBER
  277 nationalCharacterStringType1: leftParen . length rightParen

    NUMBER  shift, and go to state 542

    length           go to state 636
    unsignedInteger  go to state 544


state 569

  270 nationalCharacterStringType: NATIONAL CHARACTER nationalCharacterStringType1 .

    $default  reduce using rule 270 (nationalCharacterStringType)


state 570

  231 leftParen: . '('
  274 nationalCharacterStringType: NATIONAL CHAR VARYING . nationalCharacterStringType5
  284 nationalCharacterStringType5: .  [',', ')']
  285                             | . leftParen length rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 284 (nationalCharacterStringType5)

    leftParen                     go to state 637
    nationalCharacterStringType5  go to state 638


state 571

  266 length: . unsignedInteger
  267 unsignedInteger: . NUMBER
  279 nationalCharacterStringType2: leftParen . length rightParen

    NUMBER  shift, and go to state 542

    length           go to state 639
    unsignedInteger  go to state 544


state 572

  271 nationalCharacterStringType: NATIONAL CHAR nationalCharacterStringType2 .

    $default  reduce using rule 271 (nationalCharacterStringType)


state 573

  268 rightParen: . ')'
  321 approximateNumericType1: leftParen precision . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 640


state 574

  267 unsignedInteger: . NUMBER
  347 intervalLeadingFieldPrecision: . unsignedInteger
  358 singleDatetimeField3: leftParen . intervalLeadingFieldPrecision singleDatetimeField2 rightParen

    NUMBER  shift, and go to state 542

    unsignedInteger                go to state 641
    intervalLeadingFieldPrecision  go to state 642


state 575

  354 singleDatetimeField: SECOND singleDatetimeField3 .

    $default  reduce using rule 354 (singleDatetimeField)


state 576

  337 intervalQualifier: startField TO . endField
  342 nonsecondDatetimeField: . YEAR
  343                       | . MONTH
  344                       | . DAY
  345                       | . HOUR
  346                       | . MINUTE
  348 endField: . nonsecondDatetimeField
  349         | . SECOND endField1

    SECOND  shift, and go to state 643
    MINUTE  shift, and go to state 480
    MONTH   shift, and go to state 481
    DAY     shift, and go to state 482
    HOUR    shift, and go to state 483
    YEAR    shift, and go to state 484

    nonsecondDatetimeField  go to state 644
    endField                go to state 645


state 577

  267 unsignedInteger: . NUMBER
  341 startField1: leftParen . intervalLeadingFieldPrecision rightParen
  347 intervalLeadingFieldPrecision: . unsignedInteger
  356 singleDatetimeField1: leftParen . intervalLeadingFieldPrecision rightParen

    NUMBER  shift, and go to state 542

    unsignedInteger                go to state 641
    intervalLeadingFieldPrecision  go to state 646


state 578

  339 startField: nonsecondDatetimeField startField1 .

    $default  reduce using rule 339 (startField)


state 579

  353 singleDatetimeField: nonsecondDatetimeField singleDatetimeField1 .

    $default  reduce using rule 353 (singleDatetimeField)


state 580

  265 characterStringType5: leftParen length . rightParen
  268 rightParen: . ')'

    ')'  shift, and go to state 449

    rightParen  go to state 647


state 581

  250 dataType1: CHARACTER SET . characterSetSpecification
  269 characterSetSpecification: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 648

    characterSetSpecification  go to state 649


state 582

  391 dateString: UNKNOWN_LEX .

    $default  reduce using rule 391 (dateString)


state 583

  390 dateLiteral: DATE dateString .

    $default  reduce using rule 390 (dateLiteral)


state 584

  395 timestampString: UNKNOWN_LEX .

    $default  reduce using rule 395 (timestampString)


state 585

  394 timestampLiteral: TIMESTAMP timestampString .

    $default  reduce using rule 394 (timestampLiteral)


state 586

  393 timeString: UNKNOWN_LEX .

    $default  reduce using rule 393 (timeString)


state 587

  392 timeLiteral: TIME timeString .

    $default  reduce using rule 392 (timeLiteral)


state 588

  267 unsignedInteger: . NUMBER
  333 timePrecision: . timeFractionalSecondsPrecision
  334 timeFractionalSecondsPrecision: . unsignedInteger
  406 currentTimeValueFunction1: leftParen . timePrecision rightParen

    NUMBER  shift, and go to state 542

    unsignedInteger                 go to state 548
    timePrecision                   go to state 650
    timeFractionalSecondsPrecision  go to state 558


state 589

  404 currentTimeValueFunction: CURRENT_TIME currentTimeValueFunction1 .

    $default  reduce using rule 404 (currentTimeValueFunction)


state 590

  267 unsignedInteger: . NUMBER
  334 timeFractionalSecondsPrecision: . unsignedInteger
  335 timestampPrecision: . timeFractionalSecondsPrecision
  409 currentTimestampValueFunction1: leftParen . timestampPrecision rightParen

    NUMBER  shift, and go to state 542

    unsignedInteger                 go to state 548
    timeFractionalSecondsPrecision  go to state 549
    timestampPrecision              go to state 651


state 591

  407 currentTimestampValueFunction: CURRENT_TIMESTAMP currentTimestampValueFunction1 .

    $default  reduce using rule 407 (currentTimestampValueFunction)


state 592

  375 sign: UNKNOWN_LEX .

    $default  reduce using rule 375 (sign)


state 593

  398 intervalLiteral1: sign .

    $default  reduce using rule 398 (intervalLiteral1)


state 594

  396 intervalLiteral: INTERVAL intervalLiteral1 . intervalString intervalQualifier
  399 intervalString: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 652

    intervalString  go to state 653


state 595

  376 unsignedNumericLiteral: UNKNOWN_LEX .

    $default  reduce using rule 376 (unsignedNumericLiteral)


state 596

  372 signedNumericLiteral: signedNumericLiteral1 unsignedNumericLiteral .

    $default  reduce using rule 372 (signedNumericLiteral)


state 597

  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  660 collateClause: COLLATE . collationName
  661 collationName: . qualifiedName

    UNKNOWN_LEX  shift, and go to state 213

    $default  reduce using rule 220 (qualifiedName1)

    qualifiedName   go to state 654
    qualifiedName1  go to state 217
    schemaName      go to state 218
    collationName   go to state 655


state 598

  235 columnDefinition: domainName columnDefinition1 columnDefinition2 columnDefinition3 .

    $default  reduce using rule 235 (columnDefinition)


state 599

  239 columnDefinition2: columnDefinition2 columnConstraintDefinition .

    $default  reduce using rule 239 (columnDefinition2)


state 600

  410 columnConstraintDefinition: columnConstraintDefinition1 . columnConstraint columnConstraintDefinition2
  417 columnConstraint: . NOT NULL
  418                 | . uniqueSpecification
  419                 | . referencesSpecification
  420                 | . checkConstraintDefinition
  421 uniqueSpecification: . UNIQUE
  422                    | . PRIMARY KEY
  423 referencesSpecification: . REFERENCES referencedTableAndColumns referencesSpecification1 referencesSpecification2
  449 checkConstraintDefinition: . CHECK leftParen searchCondition rightParen

    NOT         shift, and go to state 656
    UNIQUE      shift, and go to state 424
    PRIMARY     shift, and go to state 425
    CHECK       shift, and go to state 426
    REFERENCES  shift, and go to state 657

    columnConstraint           go to state 658
    uniqueSpecification        go to state 659
    referencesSpecification    go to state 660
    checkConstraintDefinition  go to state 661


state 601

  412 columnConstraintDefinition1: constraintNameDefinition .

    $default  reduce using rule 412 (columnConstraintDefinition1)


state 602

  241 columnDefinition3: collateClause .

    $default  reduce using rule 241 (columnDefinition3)


state 603

  456 booleanFactor1: NOT .

    $default  reduce using rule 456 (booleanFactor1)


state 604

  268 rightParen: . ')'
  449 checkConstraintDefinition: CHECK leftParen searchCondition . rightParen
  451 searchCondition: searchCondition . OR booleanTerm

    OR   shift, and go to state 662
    ')'  shift, and go to state 449

    rightParen  go to state 663


state 605

  450 searchCondition: booleanTerm .  [HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, THEN, JOIN, LEFT, FULL, ON, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']
  453 booleanTerm: booleanTerm . AND booleanFactor

    AND  shift, and go to state 664

    $default  reduce using rule 450 (searchCondition)


state 606

  452 booleanTerm: booleanFactor .

    $default  reduce using rule 452 (booleanTerm)


state 607

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  454 booleanFactor: booleanFactor1 . booleanTest
  457 booleanTest: . booleanPrimary booleanTest2
  462 booleanPrimary: . predicate
  463               | . leftParen searchCondition rightParen
  464 predicate: . comparisonPredicate
  465          | . betweenPredicate
  466          | . inPredicate
  467          | . likePredicate
  468          | . nullPredicate
  469          | . quantifiedComparisonPredicate
  470          | . existsPredicate
  471          | . matchPredicate
  472          | . overlapsPredicate
  473 comparisonPredicate: . rowValueConstructor compOp rowValueConstructor
  474 rowValueConstructor: . rowValueConstructorElement
  475                    | . leftParen rowValueConstructorList rightParen
  476                    | . rowSubquery
  477 rowValueConstructorElement: . valueExpression
  478                           | . nullSpecification
  479                           | . defaultSpecification
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression
  813 nullSpecification: . NULL
  814 defaultSpecification: . DEFAULT
  818 rowSubquery: . subquery
  831 betweenPredicate: . rowValueConstructor betweenPredicate1 BETWEEN rowValueConstructor AND rowValueConstructor
  834 inPredicate: . rowValueConstructor inPredicate1 IN inPredicateValue
  842 likePredicate: . matchValue likePredicate1 LIKE pattern likePredicate2
  847 matchValue: . characterValueExpression
  850 nullPredicate: . IS nullPredicate1 NULL
  853 quantifiedComparisonPredicate: . rowValueConstructor compOp quantifier tableSubquery
  859 existsPredicate: . EXISTS tableSubquery
  860 matchPredicate: . rowValueConstructor MATCH matchPredicate1 matchPredicate2 tableSubquery
  866 overlapsPredicate: . rowValueConstructor1 OVERLAPS rowValueConstructor2
  867 rowValueConstructor1: . rowValueConstructor

    EXISTS             shift, and go to state 665
    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    NULL               shift, and go to state 668
    ASC                shift, and go to state 32
    IS                 shift, and go to state 669
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    DEFAULT            shift, and go to state 687
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 692
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    booleanTest                     go to state 697
    booleanPrimary                  go to state 698
    predicate                       go to state 699
    comparisonPredicate             go to state 700
    rowValueConstructor             go to state 701
    rowValueConstructorElement      go to state 702
    valueExpression                 go to state 703
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 727
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 734
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761
    nullSpecification               go to state 762
    defaultSpecification            go to state 763
    rowSubquery                     go to state 764
    betweenPredicate                go to state 765
    inPredicate                     go to state 766
    likePredicate                   go to state 767
    matchValue                      go to state 768
    nullPredicate                   go to state 769
    quantifiedComparisonPredicate   go to state 770
    existsPredicate                 go to state 771
    matchPredicate                  go to state 772
    overlapsPredicate               go to state 773
    rowValueConstructor1            go to state 774


state 608

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  225 identifier: . id
  242 columnName: . identifier
  431 referenceColumnList: . columnNameList
  432 columnNameList: . columnName columnNameList1
  894 referentialConstraintDefinition: FOREIGN KEY leftParen . referencingColumns rightParen referencesSpecification
  895 referencingColumns: . referenceColumnList

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id                   go to state 298
    identifier           go to state 355
    columnName           go to state 609
    referenceColumnList  go to state 775
    columnNameList       go to state 776
    referencingColumns   go to state 777


state 609

  432 columnNameList: columnName . columnNameList1
  433 columnNameList1: .
  434                | . columnNameList1 comma columnName

    $default  reduce using rule 433 (columnNameList1)

    columnNameList1  go to state 778


state 610

  893 uniqueColumnList: columnNameList .

    $default  reduce using rule 893 (uniqueColumnList)


state 611

  268 rightParen: . ')'
  892 uniqueConstraintDefinition: uniqueSpecification leftParen uniqueColumnList . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 779


state 612

  883 constraintCheckTime: INITIALLY IMMEDIATE .

    $default  reduce using rule 883 (constraintCheckTime)


state 613

  882 constraintCheckTime: INITIALLY DEFERRED .

    $default  reduce using rule 882 (constraintCheckTime)


state 614

  190 optSize: '(' NUMBER ')' .

    $default  reduce using rule 190 (optSize)


state 615

  209 partition: '(' PARTITION BY ident orderBy ')' .

    $default  reduce using rule 209 (partition)


state 616

  268 rightParen: . ')'
  293 bitStringType2: leftParen length . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 780


state 617

  291 bitStringType1: leftParen length rightParen .

    $default  reduce using rule 291 (bitStringType1)


state 618

  268 rightParen: . ')'
  287 nationalCharacterStringType6: leftParen length . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 781


state 619

  281 nationalCharacterStringType3: leftParen length rightParen .

    $default  reduce using rule 281 (nationalCharacterStringType3)


state 620

  330 datetimeType3: leftParen timestampPrecision rightParen .

    $default  reduce using rule 330 (datetimeType3)


state 621

  332 datetimeType4: WITH TIME . ZONE

    ZONE  shift, and go to state 782


state 622

  268 rightParen: . ')'
  303 exactNumericType2: leftParen precision exactNumericType1 . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 783


state 623

  267 unsignedInteger: . NUMBER
  305 exactNumericType1: comma . scale
  316 scale: . unsignedInteger

    NUMBER  shift, and go to state 542

    unsignedInteger  go to state 784
    scale            go to state 785


state 624

  268 rightParen: . ')'
  307 exactNumericType4: leftParen precision exactNumericType3 . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 786


state 625

  267 unsignedInteger: . NUMBER
  309 exactNumericType3: comma . scale
  316 scale: . unsignedInteger

    NUMBER  shift, and go to state 542

    unsignedInteger  go to state 784
    scale            go to state 787


state 626

  268 rightParen: . ')'
  311 exactNumericType6: leftParen precision exactNumericType5 . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 788


state 627

  267 unsignedInteger: . NUMBER
  313 exactNumericType5: comma . scale
  316 scale: . unsignedInteger

    NUMBER  shift, and go to state 542

    unsignedInteger  go to state 784
    scale            go to state 789


state 628

  326 datetimeType1: leftParen timePrecision rightParen .

    $default  reduce using rule 326 (datetimeType1)


state 629

  328 datetimeType2: WITH TIME . ZONE

    ZONE  shift, and go to state 790


state 630

  261 characterStringType3: leftParen length . rightParen
  268 rightParen: . ')'

    ')'  shift, and go to state 449

    rightParen  go to state 791


state 631

  257 characterStringType1: leftParen length rightParen .

    $default  reduce using rule 257 (characterStringType1)


state 632

  263 characterStringType4: leftParen length . rightParen
  268 rightParen: . ')'

    ')'  shift, and go to state 449

    rightParen  go to state 792


state 633

  259 characterStringType2: leftParen length rightParen .

    $default  reduce using rule 259 (characterStringType2)


state 634

  266 length: . unsignedInteger
  267 unsignedInteger: . NUMBER
  283 nationalCharacterStringType4: leftParen . length rightParen

    NUMBER  shift, and go to state 542

    length           go to state 793
    unsignedInteger  go to state 544


state 635

  273 nationalCharacterStringType: NATIONAL CHARACTER VARYING nationalCharacterStringType4 .

    $default  reduce using rule 273 (nationalCharacterStringType)


state 636

  268 rightParen: . ')'
  277 nationalCharacterStringType1: leftParen length . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 794


state 637

  266 length: . unsignedInteger
  267 unsignedInteger: . NUMBER
  285 nationalCharacterStringType5: leftParen . length rightParen

    NUMBER  shift, and go to state 542

    length           go to state 795
    unsignedInteger  go to state 544


state 638

  274 nationalCharacterStringType: NATIONAL CHAR VARYING nationalCharacterStringType5 .

    $default  reduce using rule 274 (nationalCharacterStringType)


state 639

  268 rightParen: . ')'
  279 nationalCharacterStringType2: leftParen length . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 796


state 640

  321 approximateNumericType1: leftParen precision rightParen .

    $default  reduce using rule 321 (approximateNumericType1)


state 641

  347 intervalLeadingFieldPrecision: unsignedInteger .

    $default  reduce using rule 347 (intervalLeadingFieldPrecision)


state 642

  315 comma: . ','
  358 singleDatetimeField3: leftParen intervalLeadingFieldPrecision . singleDatetimeField2 rightParen
  359 singleDatetimeField2: .  [')']
  360                     | . comma leftParen intervalFractionalSecondsPrecision

    ','  shift, and go to state 448

    $default  reduce using rule 359 (singleDatetimeField2)

    comma                 go to state 797
    singleDatetimeField2  go to state 798


state 643

  231 leftParen: . '('
  349 endField: SECOND . endField1
  350 endField1: .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, UNIQUE, COLLATE, KEY, AVG, INITIALLY, UPPER, CONSTRAINT, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, PRIMARY, CHECK, REFERENCES, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  351          | . leftParen intervalFractionalSecondsPrecision rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 350 (endField1)

    leftParen  go to state 799
    endField1  go to state 800


state 644

  348 endField: nonsecondDatetimeField .

    $default  reduce using rule 348 (endField)


state 645

  337 intervalQualifier: startField TO endField .

    $default  reduce using rule 337 (intervalQualifier)


state 646

  268 rightParen: . ')'
  341 startField1: leftParen intervalLeadingFieldPrecision . rightParen
  356 singleDatetimeField1: leftParen intervalLeadingFieldPrecision . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 801


state 647

  265 characterStringType5: leftParen length rightParen .

    $default  reduce using rule 265 (characterStringType5)


state 648

  269 characterSetSpecification: UNKNOWN_LEX .

    $default  reduce using rule 269 (characterSetSpecification)


state 649

  250 dataType1: CHARACTER SET characterSetSpecification .

    $default  reduce using rule 250 (dataType1)


state 650

  268 rightParen: . ')'
  406 currentTimeValueFunction1: leftParen timePrecision . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 802


state 651

  268 rightParen: . ')'
  409 currentTimestampValueFunction1: leftParen timestampPrecision . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 803


state 652

  399 intervalString: UNKNOWN_LEX .

    $default  reduce using rule 399 (intervalString)


state 653

  337 intervalQualifier: . startField TO endField
  338                  | . singleDatetimeField
  339 startField: . nonsecondDatetimeField startField1
  342 nonsecondDatetimeField: . YEAR
  343                       | . MONTH
  344                       | . DAY
  345                       | . HOUR
  346                       | . MINUTE
  353 singleDatetimeField: . nonsecondDatetimeField singleDatetimeField1
  354                    | . SECOND singleDatetimeField3
  396 intervalLiteral: INTERVAL intervalLiteral1 intervalString . intervalQualifier

    SECOND  shift, and go to state 479
    MINUTE  shift, and go to state 480
    MONTH   shift, and go to state 481
    DAY     shift, and go to state 482
    HOUR    shift, and go to state 483
    YEAR    shift, and go to state 484

    intervalQualifier       go to state 804
    startField              go to state 486
    nonsecondDatetimeField  go to state 487
    singleDatetimeField     go to state 488


state 654

  661 collationName: qualifiedName .

    $default  reduce using rule 661 (collationName)


state 655

  660 collateClause: COLLATE collationName .

    $default  reduce using rule 660 (collateClause)


state 656

  417 columnConstraint: NOT . NULL

    NULL  shift, and go to state 805


state 657

  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  226 qualifiedLocalTableName: . MODULE period localTableName
  423 referencesSpecification: REFERENCES . referencedTableAndColumns referencesSpecification1 referencesSpecification2
  428 referencedTableAndColumns: . tableName referencedTableAndColumns1

    UNKNOWN_LEX  shift, and go to state 213
    MODULE       shift, and go to state 214

    $default  reduce using rule 220 (qualifiedName1)

    tableName                  go to state 806
    qualifiedName              go to state 216
    qualifiedName1             go to state 217
    schemaName                 go to state 218
    qualifiedLocalTableName    go to state 219
    referencedTableAndColumns  go to state 807


state 658

  410 columnConstraintDefinition: columnConstraintDefinition1 columnConstraint . columnConstraintDefinition2
  413 columnConstraintDefinition2: .  [NOT, UNIQUE, COLLATE, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  414                            | . constraintAttributes
  872 constraintAttributes: . constraintCheckTime constraintAttributes2
  873                     | . constraintAttributes3 DEFERRABLE constraintAttributes4
  878 constraintAttributes3: .  [DEFERRABLE]
  879                      | . NOT
  882 constraintCheckTime: . INITIALLY DEFERRED
  883                    | . INITIALLY IMMEDIATE

    NOT        shift, and go to state 808
    INITIALLY  shift, and go to state 530

    NOT         [reduce using rule 413 (columnConstraintDefinition2)]
    DEFERRABLE  reduce using rule 878 (constraintAttributes3)
    $default    reduce using rule 413 (columnConstraintDefinition2)

    columnConstraintDefinition2  go to state 809
    constraintAttributes         go to state 810
    constraintAttributes3        go to state 811
    constraintCheckTime          go to state 812


state 659

  418 columnConstraint: uniqueSpecification .

    $default  reduce using rule 418 (columnConstraint)


state 660

  419 columnConstraint: referencesSpecification .

    $default  reduce using rule 419 (columnConstraint)


state 661

  420 columnConstraint: checkConstraintDefinition .

    $default  reduce using rule 420 (columnConstraint)


state 662

  451 searchCondition: searchCondition OR . booleanTerm
  452 booleanTerm: . booleanFactor
  453            | . booleanTerm AND booleanFactor
  454 booleanFactor: . booleanFactor1 booleanTest
  455 booleanFactor1: .  [EXISTS, CASE, CAST, DESC, NULL, ASC, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  456               | . NOT

    NOT  shift, and go to state 603

    $default  reduce using rule 455 (booleanFactor1)

    booleanTerm     go to state 813
    booleanFactor   go to state 606
    booleanFactor1  go to state 607


state 663

  449 checkConstraintDefinition: CHECK leftParen searchCondition rightParen .

    $default  reduce using rule 449 (checkConstraintDefinition)


state 664

  453 booleanTerm: booleanTerm AND . booleanFactor
  454 booleanFactor: . booleanFactor1 booleanTest
  455 booleanFactor1: .  [EXISTS, CASE, CAST, DESC, NULL, ASC, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  456               | . NOT

    NOT  shift, and go to state 603

    $default  reduce using rule 455 (booleanFactor1)

    booleanFactor   go to state 814
    booleanFactor1  go to state 607


state 665

  231 leftParen: . '('
  565 subquery: . leftParen queryExpression rightParen
  627 tableSubquery: . subquery
  859 existsPredicate: EXISTS . tableSubquery

    '('  shift, and go to state 295

    leftParen      go to state 815
    subquery       go to state 816
    tableSubquery  go to state 817


state 666

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  684           | CASE . caseOperand simpleCase1 simpleCase2 END
  689 caseOperand: . valueExpression
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  696             | CASE . searchedCase1 searchedCase2 END
  697 searchedCase1: . searchedWhenClause
  698              | . searchedCase1 searchedWhenClause
  701 searchedWhenClause: . WHEN searchCondition THEN result
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression

    WHEN               shift, and go to state 818
    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 819
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 820
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    caseOperand                     go to state 822
    searchedCase                    go to state 732
    searchedCase1                   go to state 823
    searchedWhenClause              go to state 824
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761


state 667

  231 leftParen: . '('
  702 castSpecification: CAST . leftParen castOperand AS castTarget rightParen

    '('  shift, and go to state 295

    leftParen  go to state 826


state 668

  813 nullSpecification: NULL .

    $default  reduce using rule 813 (nullSpecification)


state 669

  850 nullPredicate: IS . nullPredicate1 NULL
  851 nullPredicate1: .  [NULL]
  852               | . NOT

    NOT  shift, and go to state 827

    $default  reduce using rule 851 (nullPredicate1)

    nullPredicate1  go to state 828


state 670

  222 schemaName: UNKNOWN_LEX .  [UNKNOWN_LEX]
  375 sign: UNKNOWN_LEX .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  376 unsignedNumericLiteral: UNKNOWN_LEX .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  383 characterStringLiteral: UNKNOWN_LEX .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  384 nationalCharacterStringLiteral: UNKNOWN_LEX .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  385 bitStringLiteral: UNKNOWN_LEX .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  386 hexStringLiteral: UNKNOWN_LEX .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  518 colon: UNKNOWN_LEX .  [DESC, ASC, UNKNOWN_BODY, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  523 questionMark: UNKNOWN_LEX .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']

    BETWEEN           reduce using rule 376 (unsignedNumericLiteral)
    BETWEEN           [reduce using rule 383 (characterStringLiteral)]
    BETWEEN           [reduce using rule 384 (nationalCharacterStringLiteral)]
    BETWEEN           [reduce using rule 385 (bitStringLiteral)]
    BETWEEN           [reduce using rule 386 (hexStringLiteral)]
    BETWEEN           [reduce using rule 523 (questionMark)]
    HAVING            reduce using rule 376 (unsignedNumericLiteral)
    HAVING            [reduce using rule 383 (characterStringLiteral)]
    HAVING            [reduce using rule 384 (nationalCharacterStringLiteral)]
    HAVING            [reduce using rule 385 (bitStringLiteral)]
    HAVING            [reduce using rule 386 (hexStringLiteral)]
    HAVING            [reduce using rule 523 (questionMark)]
    WHERE             reduce using rule 376 (unsignedNumericLiteral)
    WHERE             [reduce using rule 383 (characterStringLiteral)]
    WHERE             [reduce using rule 384 (nationalCharacterStringLiteral)]
    WHERE             [reduce using rule 385 (bitStringLiteral)]
    WHERE             [reduce using rule 386 (hexStringLiteral)]
    WHERE             [reduce using rule 523 (questionMark)]
    OR                reduce using rule 376 (unsignedNumericLiteral)
    OR                [reduce using rule 383 (characterStringLiteral)]
    OR                [reduce using rule 384 (nationalCharacterStringLiteral)]
    OR                [reduce using rule 385 (bitStringLiteral)]
    OR                [reduce using rule 386 (hexStringLiteral)]
    OR                [reduce using rule 523 (questionMark)]
    GROUP             reduce using rule 376 (unsignedNumericLiteral)
    GROUP             [reduce using rule 383 (characterStringLiteral)]
    GROUP             [reduce using rule 384 (nationalCharacterStringLiteral)]
    GROUP             [reduce using rule 385 (bitStringLiteral)]
    GROUP             [reduce using rule 386 (hexStringLiteral)]
    GROUP             [reduce using rule 523 (questionMark)]
    RIGHT             reduce using rule 376 (unsignedNumericLiteral)
    RIGHT             [reduce using rule 383 (characterStringLiteral)]
    RIGHT             [reduce using rule 384 (nationalCharacterStringLiteral)]
    RIGHT             [reduce using rule 385 (bitStringLiteral)]
    RIGHT             [reduce using rule 386 (hexStringLiteral)]
    RIGHT             [reduce using rule 523 (questionMark)]
    INNER             reduce using rule 376 (unsignedNumericLiteral)
    INNER             [reduce using rule 383 (characterStringLiteral)]
    INNER             [reduce using rule 384 (nationalCharacterStringLiteral)]
    INNER             [reduce using rule 385 (bitStringLiteral)]
    INNER             [reduce using rule 386 (hexStringLiteral)]
    INNER             [reduce using rule 523 (questionMark)]
    UNION             reduce using rule 376 (unsignedNumericLiteral)
    UNION             [reduce using rule 383 (characterStringLiteral)]
    UNION             [reduce using rule 384 (nationalCharacterStringLiteral)]
    UNION             [reduce using rule 385 (bitStringLiteral)]
    UNION             [reduce using rule 386 (hexStringLiteral)]
    UNION             [reduce using rule 523 (questionMark)]
    FROM              reduce using rule 376 (unsignedNumericLiteral)
    FROM              [reduce using rule 383 (characterStringLiteral)]
    FROM              [reduce using rule 384 (nationalCharacterStringLiteral)]
    FROM              [reduce using rule 385 (bitStringLiteral)]
    FROM              [reduce using rule 386 (hexStringLiteral)]
    FROM              [reduce using rule 523 (questionMark)]
    WHEN              reduce using rule 376 (unsignedNumericLiteral)
    WHEN              [reduce using rule 383 (characterStringLiteral)]
    WHEN              [reduce using rule 384 (nationalCharacterStringLiteral)]
    WHEN              [reduce using rule 385 (bitStringLiteral)]
    WHEN              [reduce using rule 386 (hexStringLiteral)]
    WHEN              [reduce using rule 523 (questionMark)]
    THEN              reduce using rule 376 (unsignedNumericLiteral)
    THEN              [reduce using rule 383 (characterStringLiteral)]
    THEN              [reduce using rule 384 (nationalCharacterStringLiteral)]
    THEN              [reduce using rule 385 (bitStringLiteral)]
    THEN              [reduce using rule 386 (hexStringLiteral)]
    THEN              [reduce using rule 523 (questionMark)]
    ELSE              reduce using rule 376 (unsignedNumericLiteral)
    ELSE              [reduce using rule 383 (characterStringLiteral)]
    ELSE              [reduce using rule 384 (nationalCharacterStringLiteral)]
    ELSE              [reduce using rule 385 (bitStringLiteral)]
    ELSE              [reduce using rule 386 (hexStringLiteral)]
    ELSE              [reduce using rule 523 (questionMark)]
    DESC              reduce using rule 375 (sign)
    DESC              [reduce using rule 376 (unsignedNumericLiteral)]
    DESC              [reduce using rule 383 (characterStringLiteral)]
    DESC              [reduce using rule 384 (nationalCharacterStringLiteral)]
    DESC              [reduce using rule 385 (bitStringLiteral)]
    DESC              [reduce using rule 386 (hexStringLiteral)]
    DESC              [reduce using rule 518 (colon)]
    DESC              [reduce using rule 523 (questionMark)]
    LIKE              reduce using rule 376 (unsignedNumericLiteral)
    LIKE              [reduce using rule 383 (characterStringLiteral)]
    LIKE              [reduce using rule 384 (nationalCharacterStringLiteral)]
    LIKE              [reduce using rule 385 (bitStringLiteral)]
    LIKE              [reduce using rule 386 (hexStringLiteral)]
    LIKE              [reduce using rule 523 (questionMark)]
    JOIN              reduce using rule 376 (unsignedNumericLiteral)
    JOIN              [reduce using rule 383 (characterStringLiteral)]
    JOIN              [reduce using rule 384 (nationalCharacterStringLiteral)]
    JOIN              [reduce using rule 385 (bitStringLiteral)]
    JOIN              [reduce using rule 386 (hexStringLiteral)]
    JOIN              [reduce using rule 523 (questionMark)]
    LEFT              reduce using rule 376 (unsignedNumericLiteral)
    LEFT              [reduce using rule 383 (characterStringLiteral)]
    LEFT              [reduce using rule 384 (nationalCharacterStringLiteral)]
    LEFT              [reduce using rule 385 (bitStringLiteral)]
    LEFT              [reduce using rule 386 (hexStringLiteral)]
    LEFT              [reduce using rule 523 (questionMark)]
    FULL              reduce using rule 376 (unsignedNumericLiteral)
    FULL              [reduce using rule 383 (characterStringLiteral)]
    FULL              [reduce using rule 384 (nationalCharacterStringLiteral)]
    FULL              [reduce using rule 385 (bitStringLiteral)]
    FULL              [reduce using rule 386 (hexStringLiteral)]
    FULL              [reduce using rule 523 (questionMark)]
    AND               reduce using rule 376 (unsignedNumericLiteral)
    AND               [reduce using rule 383 (characterStringLiteral)]
    AND               [reduce using rule 384 (nationalCharacterStringLiteral)]
    AND               [reduce using rule 385 (bitStringLiteral)]
    AND               [reduce using rule 386 (hexStringLiteral)]
    AND               [reduce using rule 523 (questionMark)]
    END               reduce using rule 376 (unsignedNumericLiteral)
    END               [reduce using rule 383 (characterStringLiteral)]
    END               [reduce using rule 384 (nationalCharacterStringLiteral)]
    END               [reduce using rule 385 (bitStringLiteral)]
    END               [reduce using rule 386 (hexStringLiteral)]
    END               [reduce using rule 523 (questionMark)]
    ASC               reduce using rule 375 (sign)
    ASC               [reduce using rule 376 (unsignedNumericLiteral)]
    ASC               [reduce using rule 383 (characterStringLiteral)]
    ASC               [reduce using rule 384 (nationalCharacterStringLiteral)]
    ASC               [reduce using rule 385 (bitStringLiteral)]
    ASC               [reduce using rule 386 (hexStringLiteral)]
    ASC               [reduce using rule 518 (colon)]
    ASC               [reduce using rule 523 (questionMark)]
    NOT               reduce using rule 376 (unsignedNumericLiteral)
    NOT               [reduce using rule 383 (characterStringLiteral)]
    NOT               [reduce using rule 384 (nationalCharacterStringLiteral)]
    NOT               [reduce using rule 385 (bitStringLiteral)]
    NOT               [reduce using rule 386 (hexStringLiteral)]
    NOT               [reduce using rule 523 (questionMark)]
    ON                reduce using rule 376 (unsignedNumericLiteral)
    ON                [reduce using rule 383 (characterStringLiteral)]
    ON                [reduce using rule 384 (nationalCharacterStringLiteral)]
    ON                [reduce using rule 385 (bitStringLiteral)]
    ON                [reduce using rule 386 (hexStringLiteral)]
    ON                [reduce using rule 523 (questionMark)]
    AS                reduce using rule 376 (unsignedNumericLiteral)
    AS                [reduce using rule 383 (characterStringLiteral)]
    AS                [reduce using rule 384 (nationalCharacterStringLiteral)]
    AS                [reduce using rule 385 (bitStringLiteral)]
    AS                [reduce using rule 386 (hexStringLiteral)]
    AS                [reduce using rule 523 (questionMark)]
    IN                reduce using rule 376 (unsignedNumericLiteral)
    IN                [reduce using rule 383 (characterStringLiteral)]
    IN                [reduce using rule 384 (nationalCharacterStringLiteral)]
    IN                [reduce using rule 385 (bitStringLiteral)]
    IN                [reduce using rule 386 (hexStringLiteral)]
    IN                [reduce using rule 523 (questionMark)]
    IS                reduce using rule 376 (unsignedNumericLiteral)
    IS                [reduce using rule 383 (characterStringLiteral)]
    IS                [reduce using rule 384 (nationalCharacterStringLiteral)]
    IS                [reduce using rule 385 (bitStringLiteral)]
    IS                [reduce using rule 386 (hexStringLiteral)]
    IS                [reduce using rule 523 (questionMark)]
    UNKNOWN_BODY      reduce using rule 518 (colon)
    UNKNOWN_LEX       reduce using rule 222 (schemaName)
    UNKNOWN_LEX       [reduce using rule 375 (sign)]
    UNKNOWN_LEX       [reduce using rule 376 (unsignedNumericLiteral)]
    UNKNOWN_LEX       [reduce using rule 383 (characterStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 384 (nationalCharacterStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 385 (bitStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 386 (hexStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 523 (questionMark)]
    ACTION            reduce using rule 375 (sign)
    ACTION            [reduce using rule 376 (unsignedNumericLiteral)]
    ACTION            [reduce using rule 383 (characterStringLiteral)]
    ACTION            [reduce using rule 384 (nationalCharacterStringLiteral)]
    ACTION            [reduce using rule 385 (bitStringLiteral)]
    ACTION            [reduce using rule 386 (hexStringLiteral)]
    ACTION            [reduce using rule 518 (colon)]
    ACTION            [reduce using rule 523 (questionMark)]
    MIN               reduce using rule 375 (sign)
    MIN               [reduce using rule 376 (unsignedNumericLiteral)]
    MIN               [reduce using rule 383 (characterStringLiteral)]
    MIN               [reduce using rule 384 (nationalCharacterStringLiteral)]
    MIN               [reduce using rule 385 (bitStringLiteral)]
    MIN               [reduce using rule 386 (hexStringLiteral)]
    MIN               [reduce using rule 518 (colon)]
    MIN               [reduce using rule 523 (questionMark)]
    OCTET_LENGTH      reduce using rule 375 (sign)
    OCTET_LENGTH      [reduce using rule 376 (unsignedNumericLiteral)]
    OCTET_LENGTH      [reduce using rule 383 (characterStringLiteral)]
    OCTET_LENGTH      [reduce using rule 384 (nationalCharacterStringLiteral)]
    OCTET_LENGTH      [reduce using rule 385 (bitStringLiteral)]
    OCTET_LENGTH      [reduce using rule 386 (hexStringLiteral)]
    OCTET_LENGTH      [reduce using rule 518 (colon)]
    OCTET_LENGTH      [reduce using rule 523 (questionMark)]
    CROSS             reduce using rule 376 (unsignedNumericLiteral)
    CROSS             [reduce using rule 383 (characterStringLiteral)]
    CROSS             [reduce using rule 384 (nationalCharacterStringLiteral)]
    CROSS             [reduce using rule 385 (bitStringLiteral)]
    CROSS             [reduce using rule 386 (hexStringLiteral)]
    CROSS             [reduce using rule 523 (questionMark)]
    DEFERRED          reduce using rule 375 (sign)
    DEFERRED          [reduce using rule 376 (unsignedNumericLiteral)]
    DEFERRED          [reduce using rule 383 (characterStringLiteral)]
    DEFERRED          [reduce using rule 384 (nationalCharacterStringLiteral)]
    DEFERRED          [reduce using rule 385 (bitStringLiteral)]
    DEFERRED          [reduce using rule 386 (hexStringLiteral)]
    DEFERRED          [reduce using rule 518 (colon)]
    DEFERRED          [reduce using rule 523 (questionMark)]
    DEFERRABLE        reduce using rule 375 (sign)
    DEFERRABLE        [reduce using rule 376 (unsignedNumericLiteral)]
    DEFERRABLE        [reduce using rule 383 (characterStringLiteral)]
    DEFERRABLE        [reduce using rule 384 (nationalCharacterStringLiteral)]
    DEFERRABLE        [reduce using rule 385 (bitStringLiteral)]
    DEFERRABLE        [reduce using rule 386 (hexStringLiteral)]
    DEFERRABLE        [reduce using rule 518 (colon)]
    DEFERRABLE        [reduce using rule 523 (questionMark)]
    ZONE              reduce using rule 375 (sign)
    ZONE              [reduce using rule 376 (unsignedNumericLiteral)]
    ZONE              [reduce using rule 383 (characterStringLiteral)]
    ZONE              [reduce using rule 384 (nationalCharacterStringLiteral)]
    ZONE              [reduce using rule 385 (bitStringLiteral)]
    ZONE              [reduce using rule 386 (hexStringLiteral)]
    ZONE              [reduce using rule 518 (colon)]
    ZONE              [reduce using rule 523 (questionMark)]
    INTERSECT         reduce using rule 376 (unsignedNumericLiteral)
    INTERSECT         [reduce using rule 383 (characterStringLiteral)]
    INTERSECT         [reduce using rule 384 (nationalCharacterStringLiteral)]
    INTERSECT         [reduce using rule 385 (bitStringLiteral)]
    INTERSECT         [reduce using rule 386 (hexStringLiteral)]
    INTERSECT         [reduce using rule 523 (questionMark)]
    COUNT             reduce using rule 375 (sign)
    COUNT             [reduce using rule 376 (unsignedNumericLiteral)]
    COUNT             [reduce using rule 383 (characterStringLiteral)]
    COUNT             [reduce using rule 384 (nationalCharacterStringLiteral)]
    COUNT             [reduce using rule 385 (bitStringLiteral)]
    COUNT             [reduce using rule 386 (hexStringLiteral)]
    COUNT             [reduce using rule 518 (colon)]
    COUNT             [reduce using rule 523 (questionMark)]
    NATURAL           reduce using rule 376 (unsignedNumericLiteral)
    NATURAL           [reduce using rule 383 (characterStringLiteral)]
    NATURAL           [reduce using rule 384 (nationalCharacterStringLiteral)]
    NATURAL           [reduce using rule 385 (bitStringLiteral)]
    NATURAL           [reduce using rule 386 (hexStringLiteral)]
    NATURAL           [reduce using rule 523 (questionMark)]
    NULLIF            reduce using rule 375 (sign)
    NULLIF            [reduce using rule 376 (unsignedNumericLiteral)]
    NULLIF            [reduce using rule 383 (characterStringLiteral)]
    NULLIF            [reduce using rule 384 (nationalCharacterStringLiteral)]
    NULLIF            [reduce using rule 385 (bitStringLiteral)]
    NULLIF            [reduce using rule 386 (hexStringLiteral)]
    NULLIF            [reduce using rule 518 (colon)]
    NULLIF            [reduce using rule 523 (questionMark)]
    SUM               reduce using rule 375 (sign)
    SUM               [reduce using rule 376 (unsignedNumericLiteral)]
    SUM               [reduce using rule 383 (characterStringLiteral)]
    SUM               [reduce using rule 384 (nationalCharacterStringLiteral)]
    SUM               [reduce using rule 385 (bitStringLiteral)]
    SUM               [reduce using rule 386 (hexStringLiteral)]
    SUM               [reduce using rule 518 (colon)]
    SUM               [reduce using rule 523 (questionMark)]
    COLLATE           reduce using rule 376 (unsignedNumericLiteral)
    COLLATE           [reduce using rule 383 (characterStringLiteral)]
    COLLATE           [reduce using rule 384 (nationalCharacterStringLiteral)]
    COLLATE           [reduce using rule 385 (bitStringLiteral)]
    COLLATE           [reduce using rule 386 (hexStringLiteral)]
    COLLATE           [reduce using rule 523 (questionMark)]
    KEY               reduce using rule 375 (sign)
    KEY               [reduce using rule 376 (unsignedNumericLiteral)]
    KEY               [reduce using rule 383 (characterStringLiteral)]
    KEY               [reduce using rule 384 (nationalCharacterStringLiteral)]
    KEY               [reduce using rule 385 (bitStringLiteral)]
    KEY               [reduce using rule 386 (hexStringLiteral)]
    KEY               [reduce using rule 518 (colon)]
    KEY               [reduce using rule 523 (questionMark)]
    AVG               reduce using rule 375 (sign)
    AVG               [reduce using rule 376 (unsignedNumericLiteral)]
    AVG               [reduce using rule 383 (characterStringLiteral)]
    AVG               [reduce using rule 384 (nationalCharacterStringLiteral)]
    AVG               [reduce using rule 385 (bitStringLiteral)]
    AVG               [reduce using rule 386 (hexStringLiteral)]
    AVG               [reduce using rule 518 (colon)]
    AVG               [reduce using rule 523 (questionMark)]
    INITIALLY         reduce using rule 375 (sign)
    INITIALLY         [reduce using rule 376 (unsignedNumericLiteral)]
    INITIALLY         [reduce using rule 383 (characterStringLiteral)]
    INITIALLY         [reduce using rule 384 (nationalCharacterStringLiteral)]
    INITIALLY         [reduce using rule 385 (bitStringLiteral)]
    INITIALLY         [reduce using rule 386 (hexStringLiteral)]
    INITIALLY         [reduce using rule 518 (colon)]
    INITIALLY         [reduce using rule 523 (questionMark)]
    UPPER             reduce using rule 375 (sign)
    UPPER             [reduce using rule 376 (unsignedNumericLiteral)]
    UPPER             [reduce using rule 383 (characterStringLiteral)]
    UPPER             [reduce using rule 384 (nationalCharacterStringLiteral)]
    UPPER             [reduce using rule 385 (bitStringLiteral)]
    UPPER             [reduce using rule 386 (hexStringLiteral)]
    UPPER             [reduce using rule 518 (colon)]
    UPPER             [reduce using rule 523 (questionMark)]
    EXCEPT            reduce using rule 376 (unsignedNumericLiteral)
    EXCEPT            [reduce using rule 383 (characterStringLiteral)]
    EXCEPT            [reduce using rule 384 (nationalCharacterStringLiteral)]
    EXCEPT            [reduce using rule 385 (bitStringLiteral)]
    EXCEPT            [reduce using rule 386 (hexStringLiteral)]
    EXCEPT            [reduce using rule 523 (questionMark)]
    EXTRACT           reduce using rule 375 (sign)
    EXTRACT           [reduce using rule 376 (unsignedNumericLiteral)]
    EXTRACT           [reduce using rule 383 (characterStringLiteral)]
    EXTRACT           [reduce using rule 384 (nationalCharacterStringLiteral)]
    EXTRACT           [reduce using rule 385 (bitStringLiteral)]
    EXTRACT           [reduce using rule 386 (hexStringLiteral)]
    EXTRACT           [reduce using rule 518 (colon)]
    EXTRACT           [reduce using rule 523 (questionMark)]
    CHAR_LENGTH       reduce using rule 375 (sign)
    CHAR_LENGTH       [reduce using rule 376 (unsignedNumericLiteral)]
    CHAR_LENGTH       [reduce using rule 383 (characterStringLiteral)]
    CHAR_LENGTH       [reduce using rule 384 (nationalCharacterStringLiteral)]
    CHAR_LENGTH       [reduce using rule 385 (bitStringLiteral)]
    CHAR_LENGTH       [reduce using rule 386 (hexStringLiteral)]
    CHAR_LENGTH       [reduce using rule 518 (colon)]
    CHAR_LENGTH       [reduce using rule 523 (questionMark)]
    SUBSTRING         reduce using rule 375 (sign)
    SUBSTRING         [reduce using rule 376 (unsignedNumericLiteral)]
    SUBSTRING         [reduce using rule 383 (characterStringLiteral)]
    SUBSTRING         [reduce using rule 384 (nationalCharacterStringLiteral)]
    SUBSTRING         [reduce using rule 385 (bitStringLiteral)]
    SUBSTRING         [reduce using rule 386 (hexStringLiteral)]
    SUBSTRING         [reduce using rule 518 (colon)]
    SUBSTRING         [reduce using rule 523 (questionMark)]
    PARTIAL           reduce using rule 375 (sign)
    PARTIAL           [reduce using rule 376 (unsignedNumericLiteral)]
    PARTIAL           [reduce using rule 383 (characterStringLiteral)]
    PARTIAL           [reduce using rule 384 (nationalCharacterStringLiteral)]
    PARTIAL           [reduce using rule 385 (bitStringLiteral)]
    PARTIAL           [reduce using rule 386 (hexStringLiteral)]
    PARTIAL           [reduce using rule 518 (colon)]
    PARTIAL           [reduce using rule 523 (questionMark)]
    MAX               reduce using rule 375 (sign)
    MAX               [reduce using rule 376 (unsignedNumericLiteral)]
    MAX               [reduce using rule 383 (characterStringLiteral)]
    MAX               [reduce using rule 384 (nationalCharacterStringLiteral)]
    MAX               [reduce using rule 385 (bitStringLiteral)]
    MAX               [reduce using rule 386 (hexStringLiteral)]
    MAX               [reduce using rule 518 (colon)]
    MAX               [reduce using rule 523 (questionMark)]
    LOWER             reduce using rule 375 (sign)
    LOWER             [reduce using rule 376 (unsignedNumericLiteral)]
    LOWER             [reduce using rule 383 (characterStringLiteral)]
    LOWER             [reduce using rule 384 (nationalCharacterStringLiteral)]
    LOWER             [reduce using rule 385 (bitStringLiteral)]
    LOWER             [reduce using rule 386 (hexStringLiteral)]
    LOWER             [reduce using rule 518 (colon)]
    LOWER             [reduce using rule 523 (questionMark)]
    USING             reduce using rule 376 (unsignedNumericLiteral)
    USING             [reduce using rule 383 (characterStringLiteral)]
    USING             [reduce using rule 384 (nationalCharacterStringLiteral)]
    USING             [reduce using rule 385 (bitStringLiteral)]
    USING             [reduce using rule 386 (hexStringLiteral)]
    USING             [reduce using rule 523 (questionMark)]
    CASCADE           reduce using rule 375 (sign)
    CASCADE           [reduce using rule 376 (unsignedNumericLiteral)]
    CASCADE           [reduce using rule 383 (characterStringLiteral)]
    CASCADE           [reduce using rule 384 (nationalCharacterStringLiteral)]
    CASCADE           [reduce using rule 385 (bitStringLiteral)]
    CASCADE           [reduce using rule 386 (hexStringLiteral)]
    CASCADE           [reduce using rule 518 (colon)]
    CASCADE           [reduce using rule 523 (questionMark)]
    TEMPORARY         reduce using rule 375 (sign)
    TEMPORARY         [reduce using rule 376 (unsignedNumericLiteral)]
    TEMPORARY         [reduce using rule 383 (characterStringLiteral)]
    TEMPORARY         [reduce using rule 384 (nationalCharacterStringLiteral)]
    TEMPORARY         [reduce using rule 385 (bitStringLiteral)]
    TEMPORARY         [reduce using rule 386 (hexStringLiteral)]
    TEMPORARY         [reduce using rule 518 (colon)]
    TEMPORARY         [reduce using rule 523 (questionMark)]
    OVERLAPS          reduce using rule 376 (unsignedNumericLiteral)
    OVERLAPS          [reduce using rule 383 (characterStringLiteral)]
    OVERLAPS          [reduce using rule 384 (nationalCharacterStringLiteral)]
    OVERLAPS          [reduce using rule 385 (bitStringLiteral)]
    OVERLAPS          [reduce using rule 386 (hexStringLiteral)]
    OVERLAPS          [reduce using rule 523 (questionMark)]
    CHARACTER_LENGTH  reduce using rule 375 (sign)
    CHARACTER_LENGTH  [reduce using rule 376 (unsignedNumericLiteral)]
    CHARACTER_LENGTH  [reduce using rule 383 (characterStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 384 (nationalCharacterStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 385 (bitStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 386 (hexStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 518 (colon)]
    CHARACTER_LENGTH  [reduce using rule 523 (questionMark)]
    MATCH             reduce using rule 376 (unsignedNumericLiteral)
    MATCH             [reduce using rule 383 (characterStringLiteral)]
    MATCH             [reduce using rule 384 (nationalCharacterStringLiteral)]
    MATCH             [reduce using rule 385 (bitStringLiteral)]
    MATCH             [reduce using rule 386 (hexStringLiteral)]
    MATCH             [reduce using rule 523 (questionMark)]
    CONVERT           reduce using rule 375 (sign)
    CONVERT           [reduce using rule 376 (unsignedNumericLiteral)]
    CONVERT           [reduce using rule 383 (characterStringLiteral)]
    CONVERT           [reduce using rule 384 (nationalCharacterStringLiteral)]
    CONVERT           [reduce using rule 385 (bitStringLiteral)]
    CONVERT           [reduce using rule 386 (hexStringLiteral)]
    CONVERT           [reduce using rule 518 (colon)]
    CONVERT           [reduce using rule 523 (questionMark)]
    TRANSLATE         reduce using rule 375 (sign)
    TRANSLATE         [reduce using rule 376 (unsignedNumericLiteral)]
    TRANSLATE         [reduce using rule 383 (characterStringLiteral)]
    TRANSLATE         [reduce using rule 384 (nationalCharacterStringLiteral)]
    TRANSLATE         [reduce using rule 385 (bitStringLiteral)]
    TRANSLATE         [reduce using rule 386 (hexStringLiteral)]
    TRANSLATE         [reduce using rule 518 (colon)]
    TRANSLATE         [reduce using rule 523 (questionMark)]
    PRESERVE          reduce using rule 375 (sign)
    PRESERVE          [reduce using rule 376 (unsignedNumericLiteral)]
    PRESERVE          [reduce using rule 383 (characterStringLiteral)]
    PRESERVE          [reduce using rule 384 (nationalCharacterStringLiteral)]
    PRESERVE          [reduce using rule 385 (bitStringLiteral)]
    PRESERVE          [reduce using rule 386 (hexStringLiteral)]
    PRESERVE          [reduce using rule 518 (colon)]
    PRESERVE          [reduce using rule 523 (questionMark)]
    POSITION          reduce using rule 375 (sign)
    POSITION          [reduce using rule 376 (unsignedNumericLiteral)]
    POSITION          [reduce using rule 383 (characterStringLiteral)]
    POSITION          [reduce using rule 384 (nationalCharacterStringLiteral)]
    POSITION          [reduce using rule 385 (bitStringLiteral)]
    POSITION          [reduce using rule 386 (hexStringLiteral)]
    POSITION          [reduce using rule 518 (colon)]
    POSITION          [reduce using rule 523 (questionMark)]
    COALESCE          reduce using rule 375 (sign)
    COALESCE          [reduce using rule 376 (unsignedNumericLiteral)]
    COALESCE          [reduce using rule 383 (characterStringLiteral)]
    COALESCE          [reduce using rule 384 (nationalCharacterStringLiteral)]
    COALESCE          [reduce using rule 385 (bitStringLiteral)]
    COALESCE          [reduce using rule 386 (hexStringLiteral)]
    COALESCE          [reduce using rule 518 (colon)]
    COALESCE          [reduce using rule 523 (questionMark)]
    TRIM              reduce using rule 375 (sign)
    TRIM              [reduce using rule 376 (unsignedNumericLiteral)]
    TRIM              [reduce using rule 383 (characterStringLiteral)]
    TRIM              [reduce using rule 384 (nationalCharacterStringLiteral)]
    TRIM              [reduce using rule 385 (bitStringLiteral)]
    TRIM              [reduce using rule 386 (hexStringLiteral)]
    TRIM              [reduce using rule 518 (colon)]
    TRIM              [reduce using rule 523 (questionMark)]
    AT                reduce using rule 376 (unsignedNumericLiteral)
    AT                [reduce using rule 383 (characterStringLiteral)]
    AT                [reduce using rule 384 (nationalCharacterStringLiteral)]
    AT                [reduce using rule 385 (bitStringLiteral)]
    AT                [reduce using rule 386 (hexStringLiteral)]
    AT                [reduce using rule 523 (questionMark)]
    NUMBER            reduce using rule 375 (sign)
    NUMBER            [reduce using rule 376 (unsignedNumericLiteral)]
    NUMBER            [reduce using rule 383 (characterStringLiteral)]
    NUMBER            [reduce using rule 384 (nationalCharacterStringLiteral)]
    NUMBER            [reduce using rule 385 (bitStringLiteral)]
    NUMBER            [reduce using rule 386 (hexStringLiteral)]
    NUMBER            [reduce using rule 518 (colon)]
    NUMBER            [reduce using rule 523 (questionMark)]
    ID                reduce using rule 375 (sign)
    ID                [reduce using rule 376 (unsignedNumericLiteral)]
    ID                [reduce using rule 383 (characterStringLiteral)]
    ID                [reduce using rule 384 (nationalCharacterStringLiteral)]
    ID                [reduce using rule 385 (bitStringLiteral)]
    ID                [reduce using rule 386 (hexStringLiteral)]
    ID                [reduce using rule 518 (colon)]
    ID                [reduce using rule 523 (questionMark)]
    ','               reduce using rule 376 (unsignedNumericLiteral)
    ','               [reduce using rule 383 (characterStringLiteral)]
    ','               [reduce using rule 384 (nationalCharacterStringLiteral)]
    ','               [reduce using rule 385 (bitStringLiteral)]
    ','               [reduce using rule 386 (hexStringLiteral)]
    ','               [reduce using rule 523 (questionMark)]
    ')'               reduce using rule 376 (unsignedNumericLiteral)
    ')'               [reduce using rule 383 (characterStringLiteral)]
    ')'               [reduce using rule 384 (nationalCharacterStringLiteral)]
    ')'               [reduce using rule 385 (bitStringLiteral)]
    ')'               [reduce using rule 386 (hexStringLiteral)]
    ')'               [reduce using rule 523 (questionMark)]
    $default          reduce using rule 375 (sign)


state 671

   26 id: MIN .  [UNKNOWN_LEX]
  559 setFunctionType: MIN .  ['(']

    '('       reduce using rule 559 (setFunctionType)
    $default  reduce using rule 26 (id)


state 672

   27 id: COUNT .  [UNKNOWN_LEX]
  231 leftParen: . '('
  551 setFunctionSpecification: COUNT . leftParen asterisk rightParen
  561 setFunctionType: COUNT .  ['(']

    '('  shift, and go to state 295

    '('       [reduce using rule 561 (setFunctionType)]
    $default  reduce using rule 27 (id)

    leftParen  go to state 829


state 673

  511 generalValueSpecification: SESSION_USER .

    $default  reduce using rule 511 (generalValueSpecification)


state 674

   32 id: NULLIF .  [UNKNOWN_LEX]
  231 leftParen: . '('
  678 caseAbbreviation: NULLIF . leftParen valueExpression comma valueExpression rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 32 (id)

    leftParen  go to state 830


state 675

   19 id: SUM .  [UNKNOWN_LEX]
  560 setFunctionType: SUM .  ['(']

    '('       reduce using rule 560 (setFunctionType)
    $default  reduce using rule 19 (id)


state 676

   23 id: AVG .  [UNKNOWN_LEX]
  557 setFunctionType: AVG .  ['(']

    '('       reduce using rule 557 (setFunctionType)
    $default  reduce using rule 23 (id)


state 677

   31 id: UPPER .  [UNKNOWN_LEX]
  733 fold: UPPER .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']

    UNKNOWN_LEX  reduce using rule 31 (id)
    UNKNOWN_LEX  [reduce using rule 733 (fold)]
    $default     reduce using rule 733 (fold)


state 678

  512 generalValueSpecification: SYSTEM_USER .

    $default  reduce using rule 512 (generalValueSpecification)


state 679

   40 id: SUBSTRING .  [UNKNOWN_LEX]
  231 leftParen: . '('
  728 characterSubstringFunction: SUBSTRING . leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  753 bitSubstringFunction: SUBSTRING . leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 40 (id)

    leftParen  go to state 831


state 680

  509 generalValueSpecification: USER .

    $default  reduce using rule 509 (generalValueSpecification)


state 681

   33 id: MAX .  [UNKNOWN_LEX]
  558 setFunctionType: MAX .  ['(']

    '('       reduce using rule 558 (setFunctionType)
    $default  reduce using rule 33 (id)


state 682

   18 id: LOWER .  [UNKNOWN_LEX]
  231 leftParen: . '('
  734 fold: LOWER . leftParen characterValueExpression rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 18 (id)

    leftParen  go to state 832


state 683

  513 generalValueSpecification: VALUE .

    $default  reduce using rule 513 (generalValueSpecification)


state 684

   39 id: CONVERT .  [UNKNOWN_LEX]
  231 leftParen: . '('
  735 formofuseConversion: CONVERT . leftParen characterValueExpression USING formofuseConversionName rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 39 (id)

    leftParen  go to state 833


state 685

  510 generalValueSpecification: CURRENT_USER .

    $default  reduce using rule 510 (generalValueSpecification)


state 686

   16 id: TRANSLATE .  [UNKNOWN_LEX]
  231 leftParen: . '('
  737 characterTranslation: TRANSLATE . leftParen characterValueExpression USING translationName rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 16 (id)

    leftParen  go to state 834


state 687

  814 defaultSpecification: DEFAULT .

    $default  reduce using rule 814 (defaultSpecification)


state 688

   29 id: COALESCE .  [UNKNOWN_LEX]
  231 leftParen: . '('
  679 caseAbbreviation: COALESCE . leftParen valueExpression caseAbbreviation1 rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 29 (id)

    leftParen  go to state 835


state 689

   17 id: TRIM .  [UNKNOWN_LEX]
  231 leftParen: . '('
  739 trimFunction: TRIM . leftParen trimOperands rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 17 (id)

    leftParen  go to state 836


state 690

  548 qualifier: tableName .

    $default  reduce using rule 548 (qualifier)


state 691

  550 correlationName: identifier .

    $default  reduce using rule 550 (correlationName)


state 692

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  450 searchCondition: . booleanTerm
  451                | . searchCondition OR booleanTerm
  452 booleanTerm: . booleanFactor
  453            | . booleanTerm AND booleanFactor
  454 booleanFactor: . booleanFactor1 booleanTest
  455 booleanFactor1: .  [EXISTS, CASE, CAST, DESC, NULL, ASC, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  456               | . NOT
  463 booleanPrimary: leftParen . searchCondition rightParen
  475 rowValueConstructor: leftParen . rowValueConstructorList rightParen
  477 rowValueConstructorElement: . valueExpression
  478                           | . nullSpecification
  479                           | . defaultSpecification
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  500                       | leftParen . valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  565         | leftParen . queryExpression rightParen
  566 queryExpression: . nonjoinQueryExpression
  567                | . joinedTable
  568 nonjoinQueryExpression: . nonjoinQueryTerm
  569                       | . queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  570                       | . queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  579 nonjoinQueryTerm: . nonjoinQueryPrimary
  580                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  585 nonjoinQueryPrimary: . simpleTable
  586                    | . leftParen nonjoinQueryExpression rightParen
  587 simpleTable: . querySpecification
  588            | . tableValueConstructor
  589            | . explicitTable
  590 querySpecification: . SELECT querySpecification1 selectList tableExpression
  615 tableReference: . tableName tableReference1
  616               | . derivedTable correlationSpecification
  617               | . joinedTable
  626 derivedTable: . tableSubquery
  627 tableSubquery: . subquery
  628 joinedTable: . crossJoin
  629            | . qualifiedJoin
  630            | . leftParen joinedTable rightParen
  631 crossJoin: . tableReference CROSS JOIN tableReference
  632 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  663 tableValueConstructor: . VALUES tableValueConstructorList
  667 explicitTable: . TABLE tableName
  668 queryTerm: . nonjoinQueryTerm
  669          | . joinedTable
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787                        | leftParen . datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression
  813 nullSpecification: . NULL
  814 defaultSpecification: . DEFAULT
  815 rowValueConstructorList: . rowValueConstructorElement rowValueConstructorList1

    VALUES             shift, and go to state 837
    SELECT             shift, and go to state 838
    TABLE              shift, and go to state 839
    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    NULL               shift, and go to state 668
    ASC                shift, and go to state 32
    NOT                shift, and go to state 603
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    DEFAULT            shift, and go to state 687
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE               [reduce using rule 455 (booleanFactor1)]
    CASE               [reduce using rule 491 (factor1)]
    CASE               [reduce using rule 793 (intervalFactor1)]
    CAST               [reduce using rule 455 (booleanFactor1)]
    CAST               [reduce using rule 491 (factor1)]
    CAST               [reduce using rule 793 (intervalFactor1)]
    DESC               [reduce using rule 220 (qualifiedName1)]
    DESC               [reduce using rule 455 (booleanFactor1)]
    DESC               [reduce using rule 491 (factor1)]
    DESC               [reduce using rule 546 (columnReference1)]
    DESC               [reduce using rule 793 (intervalFactor1)]
    NULL               [reduce using rule 455 (booleanFactor1)]
    ASC                [reduce using rule 220 (qualifiedName1)]
    ASC                [reduce using rule 455 (booleanFactor1)]
    ASC                [reduce using rule 491 (factor1)]
    ASC                [reduce using rule 546 (columnReference1)]
    ASC                [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX        [reduce using rule 455 (booleanFactor1)]
    UNKNOWN_LEX        [reduce using rule 491 (factor1)]
    UNKNOWN_LEX        [reduce using rule 793 (intervalFactor1)]
    ACTION             [reduce using rule 220 (qualifiedName1)]
    ACTION             [reduce using rule 455 (booleanFactor1)]
    ACTION             [reduce using rule 491 (factor1)]
    ACTION             [reduce using rule 546 (columnReference1)]
    ACTION             [reduce using rule 793 (intervalFactor1)]
    MIN                [reduce using rule 220 (qualifiedName1)]
    MIN                [reduce using rule 455 (booleanFactor1)]
    MIN                [reduce using rule 491 (factor1)]
    MIN                [reduce using rule 546 (columnReference1)]
    MIN                [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH       [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH       [reduce using rule 455 (booleanFactor1)]
    OCTET_LENGTH       [reduce using rule 491 (factor1)]
    OCTET_LENGTH       [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH       [reduce using rule 793 (intervalFactor1)]
    DEFERRED           [reduce using rule 220 (qualifiedName1)]
    DEFERRED           [reduce using rule 455 (booleanFactor1)]
    DEFERRED           [reduce using rule 491 (factor1)]
    DEFERRED           [reduce using rule 546 (columnReference1)]
    DEFERRED           [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE         [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE         [reduce using rule 455 (booleanFactor1)]
    DEFERRABLE         [reduce using rule 491 (factor1)]
    DEFERRABLE         [reduce using rule 546 (columnReference1)]
    DEFERRABLE         [reduce using rule 793 (intervalFactor1)]
    ZONE               [reduce using rule 220 (qualifiedName1)]
    ZONE               [reduce using rule 455 (booleanFactor1)]
    ZONE               [reduce using rule 491 (factor1)]
    ZONE               [reduce using rule 546 (columnReference1)]
    ZONE               [reduce using rule 793 (intervalFactor1)]
    COUNT              [reduce using rule 220 (qualifiedName1)]
    COUNT              [reduce using rule 455 (booleanFactor1)]
    COUNT              [reduce using rule 491 (factor1)]
    COUNT              [reduce using rule 546 (columnReference1)]
    COUNT              [reduce using rule 793 (intervalFactor1)]
    SESSION_USER       [reduce using rule 455 (booleanFactor1)]
    SESSION_USER       [reduce using rule 491 (factor1)]
    SESSION_USER       [reduce using rule 793 (intervalFactor1)]
    DATE               [reduce using rule 455 (booleanFactor1)]
    DATE               [reduce using rule 491 (factor1)]
    DATE               [reduce using rule 793 (intervalFactor1)]
    NULLIF             [reduce using rule 220 (qualifiedName1)]
    NULLIF             [reduce using rule 455 (booleanFactor1)]
    NULLIF             [reduce using rule 491 (factor1)]
    NULLIF             [reduce using rule 546 (columnReference1)]
    NULLIF             [reduce using rule 793 (intervalFactor1)]
    CURRENT_DATE       [reduce using rule 455 (booleanFactor1)]
    SUM                [reduce using rule 220 (qualifiedName1)]
    SUM                [reduce using rule 455 (booleanFactor1)]
    SUM                [reduce using rule 491 (factor1)]
    SUM                [reduce using rule 546 (columnReference1)]
    SUM                [reduce using rule 793 (intervalFactor1)]
    KEY                [reduce using rule 220 (qualifiedName1)]
    KEY                [reduce using rule 455 (booleanFactor1)]
    KEY                [reduce using rule 491 (factor1)]
    KEY                [reduce using rule 546 (columnReference1)]
    KEY                [reduce using rule 793 (intervalFactor1)]
    AVG                [reduce using rule 220 (qualifiedName1)]
    AVG                [reduce using rule 455 (booleanFactor1)]
    AVG                [reduce using rule 491 (factor1)]
    AVG                [reduce using rule 546 (columnReference1)]
    AVG                [reduce using rule 793 (intervalFactor1)]
    INITIALLY          [reduce using rule 220 (qualifiedName1)]
    INITIALLY          [reduce using rule 455 (booleanFactor1)]
    INITIALLY          [reduce using rule 491 (factor1)]
    INITIALLY          [reduce using rule 546 (columnReference1)]
    INITIALLY          [reduce using rule 793 (intervalFactor1)]
    UPPER              [reduce using rule 220 (qualifiedName1)]
    UPPER              [reduce using rule 455 (booleanFactor1)]
    UPPER              [reduce using rule 491 (factor1)]
    UPPER              [reduce using rule 546 (columnReference1)]
    UPPER              [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP          [reduce using rule 455 (booleanFactor1)]
    TIMESTAMP          [reduce using rule 491 (factor1)]
    TIMESTAMP          [reduce using rule 793 (intervalFactor1)]
    MODULE             [reduce using rule 455 (booleanFactor1)]
    MODULE             [reduce using rule 491 (factor1)]
    MODULE             [reduce using rule 793 (intervalFactor1)]
    EXTRACT            [reduce using rule 220 (qualifiedName1)]
    EXTRACT            [reduce using rule 455 (booleanFactor1)]
    EXTRACT            [reduce using rule 491 (factor1)]
    EXTRACT            [reduce using rule 546 (columnReference1)]
    EXTRACT            [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH        [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH        [reduce using rule 455 (booleanFactor1)]
    CHAR_LENGTH        [reduce using rule 491 (factor1)]
    CHAR_LENGTH        [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH        [reduce using rule 793 (intervalFactor1)]
    TIME               [reduce using rule 455 (booleanFactor1)]
    TIME               [reduce using rule 491 (factor1)]
    TIME               [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER        [reduce using rule 455 (booleanFactor1)]
    SYSTEM_USER        [reduce using rule 491 (factor1)]
    SYSTEM_USER        [reduce using rule 793 (intervalFactor1)]
    SUBSTRING          [reduce using rule 220 (qualifiedName1)]
    SUBSTRING          [reduce using rule 455 (booleanFactor1)]
    SUBSTRING          [reduce using rule 491 (factor1)]
    SUBSTRING          [reduce using rule 546 (columnReference1)]
    SUBSTRING          [reduce using rule 793 (intervalFactor1)]
    CURRENT_TIME       [reduce using rule 455 (booleanFactor1)]
    PARTIAL            [reduce using rule 220 (qualifiedName1)]
    PARTIAL            [reduce using rule 455 (booleanFactor1)]
    PARTIAL            [reduce using rule 491 (factor1)]
    PARTIAL            [reduce using rule 546 (columnReference1)]
    PARTIAL            [reduce using rule 793 (intervalFactor1)]
    USER               [reduce using rule 455 (booleanFactor1)]
    USER               [reduce using rule 491 (factor1)]
    USER               [reduce using rule 793 (intervalFactor1)]
    MAX                [reduce using rule 220 (qualifiedName1)]
    MAX                [reduce using rule 455 (booleanFactor1)]
    MAX                [reduce using rule 491 (factor1)]
    MAX                [reduce using rule 546 (columnReference1)]
    MAX                [reduce using rule 793 (intervalFactor1)]
    CURRENT_TIMESTAMP  [reduce using rule 455 (booleanFactor1)]
    LOWER              [reduce using rule 220 (qualifiedName1)]
    LOWER              [reduce using rule 455 (booleanFactor1)]
    LOWER              [reduce using rule 491 (factor1)]
    LOWER              [reduce using rule 546 (columnReference1)]
    LOWER              [reduce using rule 793 (intervalFactor1)]
    CASCADE            [reduce using rule 220 (qualifiedName1)]
    CASCADE            [reduce using rule 455 (booleanFactor1)]
    CASCADE            [reduce using rule 491 (factor1)]
    CASCADE            [reduce using rule 546 (columnReference1)]
    CASCADE            [reduce using rule 793 (intervalFactor1)]
    TEMPORARY          [reduce using rule 220 (qualifiedName1)]
    TEMPORARY          [reduce using rule 455 (booleanFactor1)]
    TEMPORARY          [reduce using rule 491 (factor1)]
    TEMPORARY          [reduce using rule 546 (columnReference1)]
    TEMPORARY          [reduce using rule 793 (intervalFactor1)]
    BIT_LENGTH         reduce using rule 455 (booleanFactor1)
    BIT_LENGTH         [reduce using rule 491 (factor1)]
    VALUE              [reduce using rule 455 (booleanFactor1)]
    VALUE              [reduce using rule 491 (factor1)]
    VALUE              [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH   [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH   [reduce using rule 455 (booleanFactor1)]
    CHARACTER_LENGTH   [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH   [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH   [reduce using rule 793 (intervalFactor1)]
    CONVERT            [reduce using rule 220 (qualifiedName1)]
    CONVERT            [reduce using rule 455 (booleanFactor1)]
    CONVERT            [reduce using rule 491 (factor1)]
    CONVERT            [reduce using rule 546 (columnReference1)]
    CONVERT            [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER       [reduce using rule 455 (booleanFactor1)]
    CURRENT_USER       [reduce using rule 491 (factor1)]
    CURRENT_USER       [reduce using rule 793 (intervalFactor1)]
    TRANSLATE          [reduce using rule 220 (qualifiedName1)]
    TRANSLATE          [reduce using rule 455 (booleanFactor1)]
    TRANSLATE          [reduce using rule 491 (factor1)]
    TRANSLATE          [reduce using rule 546 (columnReference1)]
    TRANSLATE          [reduce using rule 793 (intervalFactor1)]
    INTERVAL           [reduce using rule 455 (booleanFactor1)]
    INTERVAL           [reduce using rule 491 (factor1)]
    INTERVAL           [reduce using rule 793 (intervalFactor1)]
    DEFAULT            [reduce using rule 455 (booleanFactor1)]
    PRESERVE           [reduce using rule 220 (qualifiedName1)]
    PRESERVE           [reduce using rule 455 (booleanFactor1)]
    PRESERVE           [reduce using rule 491 (factor1)]
    PRESERVE           [reduce using rule 546 (columnReference1)]
    PRESERVE           [reduce using rule 793 (intervalFactor1)]
    POSITION           [reduce using rule 220 (qualifiedName1)]
    POSITION           [reduce using rule 455 (booleanFactor1)]
    POSITION           [reduce using rule 491 (factor1)]
    POSITION           [reduce using rule 546 (columnReference1)]
    POSITION           [reduce using rule 793 (intervalFactor1)]
    COALESCE           [reduce using rule 220 (qualifiedName1)]
    COALESCE           [reduce using rule 455 (booleanFactor1)]
    COALESCE           [reduce using rule 491 (factor1)]
    COALESCE           [reduce using rule 546 (columnReference1)]
    COALESCE           [reduce using rule 793 (intervalFactor1)]
    TRIM               [reduce using rule 220 (qualifiedName1)]
    TRIM               [reduce using rule 455 (booleanFactor1)]
    TRIM               [reduce using rule 491 (factor1)]
    TRIM               [reduce using rule 546 (columnReference1)]
    TRIM               [reduce using rule 793 (intervalFactor1)]
    NUMBER             [reduce using rule 220 (qualifiedName1)]
    NUMBER             [reduce using rule 455 (booleanFactor1)]
    NUMBER             [reduce using rule 491 (factor1)]
    NUMBER             [reduce using rule 546 (columnReference1)]
    NUMBER             [reduce using rule 793 (intervalFactor1)]
    ID                 [reduce using rule 220 (qualifiedName1)]
    ID                 [reduce using rule 455 (booleanFactor1)]
    ID                 [reduce using rule 491 (factor1)]
    ID                 [reduce using rule 546 (columnReference1)]
    ID                 [reduce using rule 793 (intervalFactor1)]
    '('                [reduce using rule 455 (booleanFactor1)]
    '('                [reduce using rule 491 (factor1)]
    '('                [reduce using rule 793 (intervalFactor1)]
    $default           reduce using rule 455 (booleanFactor1)

    id                              go to state 298
    tableName                       go to state 840
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 841
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    searchCondition                 go to state 842
    booleanTerm                     go to state 605
    booleanFactor                   go to state 606
    booleanFactor1                  go to state 607
    rowValueConstructorElement      go to state 843
    valueExpression                 go to state 844
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 845
    queryExpression                 go to state 846
    nonjoinQueryExpression          go to state 847
    nonjoinQueryTerm                go to state 848
    nonjoinQueryPrimary             go to state 849
    simpleTable                     go to state 850
    querySpecification              go to state 851
    tableReference                  go to state 852
    derivedTable                    go to state 853
    tableSubquery                   go to state 854
    joinedTable                     go to state 855
    crossJoin                       go to state 856
    qualifiedJoin                   go to state 857
    tableValueConstructor           go to state 858
    explicitTable                   go to state 859
    queryTerm                       go to state 860
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 861
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761
    nullSpecification               go to state 762
    defaultSpecification            go to state 763
    rowValueConstructorList         go to state 862


state 693

  492 factor1: sign .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794 intervalFactor1: sign .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']

    CASE              reduce using rule 492 (factor1)
    CASE              [reduce using rule 794 (intervalFactor1)]
    CAST              reduce using rule 492 (factor1)
    CAST              [reduce using rule 794 (intervalFactor1)]
    DESC              reduce using rule 492 (factor1)
    DESC              [reduce using rule 794 (intervalFactor1)]
    ASC               reduce using rule 492 (factor1)
    ASC               [reduce using rule 794 (intervalFactor1)]
    UNKNOWN_LEX       reduce using rule 492 (factor1)
    UNKNOWN_LEX       [reduce using rule 794 (intervalFactor1)]
    ACTION            reduce using rule 492 (factor1)
    ACTION            [reduce using rule 794 (intervalFactor1)]
    MIN               reduce using rule 492 (factor1)
    MIN               [reduce using rule 794 (intervalFactor1)]
    OCTET_LENGTH      reduce using rule 492 (factor1)
    OCTET_LENGTH      [reduce using rule 794 (intervalFactor1)]
    DEFERRED          reduce using rule 492 (factor1)
    DEFERRED          [reduce using rule 794 (intervalFactor1)]
    DEFERRABLE        reduce using rule 492 (factor1)
    DEFERRABLE        [reduce using rule 794 (intervalFactor1)]
    ZONE              reduce using rule 492 (factor1)
    ZONE              [reduce using rule 794 (intervalFactor1)]
    COUNT             reduce using rule 492 (factor1)
    COUNT             [reduce using rule 794 (intervalFactor1)]
    SESSION_USER      reduce using rule 492 (factor1)
    SESSION_USER      [reduce using rule 794 (intervalFactor1)]
    DATE              reduce using rule 492 (factor1)
    DATE              [reduce using rule 794 (intervalFactor1)]
    NULLIF            reduce using rule 492 (factor1)
    NULLIF            [reduce using rule 794 (intervalFactor1)]
    SUM               reduce using rule 492 (factor1)
    SUM               [reduce using rule 794 (intervalFactor1)]
    KEY               reduce using rule 492 (factor1)
    KEY               [reduce using rule 794 (intervalFactor1)]
    AVG               reduce using rule 492 (factor1)
    AVG               [reduce using rule 794 (intervalFactor1)]
    INITIALLY         reduce using rule 492 (factor1)
    INITIALLY         [reduce using rule 794 (intervalFactor1)]
    UPPER             reduce using rule 492 (factor1)
    UPPER             [reduce using rule 794 (intervalFactor1)]
    TIMESTAMP         reduce using rule 492 (factor1)
    TIMESTAMP         [reduce using rule 794 (intervalFactor1)]
    MODULE            reduce using rule 492 (factor1)
    MODULE            [reduce using rule 794 (intervalFactor1)]
    EXTRACT           reduce using rule 492 (factor1)
    EXTRACT           [reduce using rule 794 (intervalFactor1)]
    CHAR_LENGTH       reduce using rule 492 (factor1)
    CHAR_LENGTH       [reduce using rule 794 (intervalFactor1)]
    TIME              reduce using rule 492 (factor1)
    TIME              [reduce using rule 794 (intervalFactor1)]
    SYSTEM_USER       reduce using rule 492 (factor1)
    SYSTEM_USER       [reduce using rule 794 (intervalFactor1)]
    SUBSTRING         reduce using rule 492 (factor1)
    SUBSTRING         [reduce using rule 794 (intervalFactor1)]
    PARTIAL           reduce using rule 492 (factor1)
    PARTIAL           [reduce using rule 794 (intervalFactor1)]
    USER              reduce using rule 492 (factor1)
    USER              [reduce using rule 794 (intervalFactor1)]
    MAX               reduce using rule 492 (factor1)
    MAX               [reduce using rule 794 (intervalFactor1)]
    LOWER             reduce using rule 492 (factor1)
    LOWER             [reduce using rule 794 (intervalFactor1)]
    CASCADE           reduce using rule 492 (factor1)
    CASCADE           [reduce using rule 794 (intervalFactor1)]
    TEMPORARY         reduce using rule 492 (factor1)
    TEMPORARY         [reduce using rule 794 (intervalFactor1)]
    VALUE             reduce using rule 492 (factor1)
    VALUE             [reduce using rule 794 (intervalFactor1)]
    CHARACTER_LENGTH  reduce using rule 492 (factor1)
    CHARACTER_LENGTH  [reduce using rule 794 (intervalFactor1)]
    CONVERT           reduce using rule 492 (factor1)
    CONVERT           [reduce using rule 794 (intervalFactor1)]
    CURRENT_USER      reduce using rule 492 (factor1)
    CURRENT_USER      [reduce using rule 794 (intervalFactor1)]
    TRANSLATE         reduce using rule 492 (factor1)
    TRANSLATE         [reduce using rule 794 (intervalFactor1)]
    INTERVAL          reduce using rule 492 (factor1)
    INTERVAL          [reduce using rule 794 (intervalFactor1)]
    PRESERVE          reduce using rule 492 (factor1)
    PRESERVE          [reduce using rule 794 (intervalFactor1)]
    POSITION          reduce using rule 492 (factor1)
    POSITION          [reduce using rule 794 (intervalFactor1)]
    COALESCE          reduce using rule 492 (factor1)
    COALESCE          [reduce using rule 794 (intervalFactor1)]
    TRIM              reduce using rule 492 (factor1)
    TRIM              [reduce using rule 794 (intervalFactor1)]
    NUMBER            reduce using rule 492 (factor1)
    NUMBER            [reduce using rule 794 (intervalFactor1)]
    ID                reduce using rule 492 (factor1)
    ID                [reduce using rule 794 (intervalFactor1)]
    '('               reduce using rule 492 (factor1)
    '('               [reduce using rule 794 (intervalFactor1)]
    $default          reduce using rule 492 (factor1)


state 694

  504 unsignedLiteral: unsignedNumericLiteral .

    $default  reduce using rule 504 (unsignedLiteral)


state 695

  505 unsignedLiteral: generalLiteral .

    $default  reduce using rule 505 (unsignedLiteral)


state 696

  780 datetimePrimary: datetimeValueFunction .

    $default  reduce using rule 780 (datetimePrimary)


state 697

  454 booleanFactor: booleanFactor1 booleanTest .

    $default  reduce using rule 454 (booleanFactor)


state 698

  457 booleanTest: booleanPrimary . booleanTest2
  458 booleanTest2: .  [HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, THEN, JOIN, LEFT, FULL, AND, ON, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']
  459             | . IS booleanTest1 truthValue

    IS  shift, and go to state 863

    $default  reduce using rule 458 (booleanTest2)

    booleanTest2  go to state 864


state 699

  462 booleanPrimary: predicate .

    $default  reduce using rule 462 (booleanPrimary)


state 700

  464 predicate: comparisonPredicate .

    $default  reduce using rule 464 (predicate)


state 701

  473 comparisonPredicate: rowValueConstructor . compOp rowValueConstructor
  819 compOp: . equalsOperator
  820       | . notEqualsOperator
  821       | . lessThanOperator
  822       | . greaterThanOperator
  823       | . lessThanOrEqualsOperator
  824       | . greaterThanOrEqualsOperator
  825 equalsOperator: . UNKNOWN_LEX
  826 notEqualsOperator: . UNKNOWN_LEX
  827 lessThanOperator: . UNKNOWN_LEX
  828 greaterThanOperator: . UNKNOWN_LEX
  829 lessThanOrEqualsOperator: . UNKNOWN_LEX
  830 greaterThanOrEqualsOperator: . UNKNOWN_LEX
  831 betweenPredicate: rowValueConstructor . betweenPredicate1 BETWEEN rowValueConstructor AND rowValueConstructor
  832 betweenPredicate1: .  [BETWEEN]
  833                  | . NOT
  834 inPredicate: rowValueConstructor . inPredicate1 IN inPredicateValue
  835 inPredicate1: .  [IN]
  836             | . NOT
  853 quantifiedComparisonPredicate: rowValueConstructor . compOp quantifier tableSubquery
  860 matchPredicate: rowValueConstructor . MATCH matchPredicate1 matchPredicate2 tableSubquery
  867 rowValueConstructor1: rowValueConstructor .  [OVERLAPS]

    NOT          shift, and go to state 865
    UNKNOWN_LEX  shift, and go to state 866
    MATCH        shift, and go to state 867

    IN        reduce using rule 835 (inPredicate1)
    OVERLAPS  reduce using rule 867 (rowValueConstructor1)
    $default  reduce using rule 832 (betweenPredicate1)

    compOp                       go to state 868
    equalsOperator               go to state 869
    notEqualsOperator            go to state 870
    lessThanOperator             go to state 871
    greaterThanOperator          go to state 872
    lessThanOrEqualsOperator     go to state 873
    greaterThanOrEqualsOperator  go to state 874
    betweenPredicate1            go to state 875
    inPredicate1                 go to state 876


state 702

  474 rowValueConstructor: rowValueConstructorElement .

    $default  reduce using rule 474 (rowValueConstructor)


state 703

  477 rowValueConstructorElement: valueExpression .

    $default  reduce using rule 477 (rowValueConstructorElement)


state 704

  480 valueExpression: numericValueExpression .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  485 numericValueExpression: numericValueExpression . plusSign term
  486                       | numericValueExpression . minusSign term
  801 plusSign: . UNKNOWN_LEX
  803 minusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 877

    UNKNOWN_LEX  [reduce using rule 480 (valueExpression)]
    $default     reduce using rule 480 (valueExpression)

    plusSign   go to state 878
    minusSign  go to state 879


state 705

  484 numericValueExpression: term .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  488 term: term . asterisk factor
  489     | term . solidus factor
  553 asterisk: . UNKNOWN_LEX
  791 intervalTerm: term . asterisk intervalFactor
  799 solidus: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 880

    UNKNOWN_LEX  [reduce using rule 484 (numericValueExpression)]
    $default     reduce using rule 484 (numericValueExpression)

    asterisk  go to state 881
    solidus   go to state 882


state 706

  487 term: factor .

    $default  reduce using rule 487 (term)


state 707

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  490 factor: factor1 . numericPrimary
  493 numericPrimary: . valueExpressionPrimary
  494               | . numericValueFunction
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  708 numericValueFunction: . positionExpression
  709                     | . extractExpression
  710                     | . lengthExpression
  711 positionExpression: . POSITION leftParen characterValueExpression IN characterValueExpression rightParen
  762 extractExpression: . EXTRACT leftParen extractField FROM extractSource rightParen
  804 lengthExpression: . charLengthExpression
  805                 | . octetLengthExpression
  806                 | . bitLengthExpression
  807 charLengthExpression: . CHAR_LENGTH
  808                     | . CHARACTER_LENGTH leftParen stringValueExpression rightParen
  811 octetLengthExpression: . OCTET_LENGTH leftParen stringValueExpression rightParen
  812 bitLengthExpression: . BIT_LENGTH leftParen stringValueExpression rightParen

    CASE              shift, and go to state 666
    CAST              shift, and go to state 667
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 883
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 671
    OCTET_LENGTH      shift, and go to state 884
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 672
    SESSION_USER      shift, and go to state 673
    DATE              shift, and go to state 496
    NULLIF            shift, and go to state 674
    SUM               shift, and go to state 675
    KEY               shift, and go to state 42
    AVG               shift, and go to state 676
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    TIMESTAMP         shift, and go to state 498
    MODULE            shift, and go to state 214
    EXTRACT           shift, and go to state 885
    CHAR_LENGTH       shift, and go to state 886
    TIME              shift, and go to state 499
    SYSTEM_USER       shift, and go to state 678
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 680
    MAX               shift, and go to state 681
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    BIT_LENGTH        shift, and go to state 887
    VALUE             shift, and go to state 683
    CHARACTER_LENGTH  shift, and go to state 888
    CONVERT           shift, and go to state 55
    CURRENT_USER      shift, and go to state 685
    TRANSLATE         shift, and go to state 56
    INTERVAL          shift, and go to state 505
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 889
    COALESCE          shift, and go to state 688
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 295

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 890
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    numericPrimary                  go to state 891
    valueExpressionPrimary          go to state 892
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    numericValueFunction            go to state 893
    positionExpression              go to state 894
    extractExpression               go to state 895
    lengthExpression                go to state 896
    charLengthExpression            go to state 897
    octetLengthExpression           go to state 898
    bitLengthExpression             go to state 899


state 708

  719 characterPrimary: valueExpressionPrimary .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  760 bitPrimary: valueExpressionPrimary .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  779 datetimePrimary: valueExpressionPrimary .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']

    BETWEEN           reduce using rule 719 (characterPrimary)
    BETWEEN           [reduce using rule 760 (bitPrimary)]
    BETWEEN           [reduce using rule 779 (datetimePrimary)]
    HAVING            reduce using rule 719 (characterPrimary)
    HAVING            [reduce using rule 760 (bitPrimary)]
    HAVING            [reduce using rule 779 (datetimePrimary)]
    WHERE             reduce using rule 719 (characterPrimary)
    WHERE             [reduce using rule 760 (bitPrimary)]
    WHERE             [reduce using rule 779 (datetimePrimary)]
    OR                reduce using rule 719 (characterPrimary)
    OR                [reduce using rule 760 (bitPrimary)]
    OR                [reduce using rule 779 (datetimePrimary)]
    GROUP             reduce using rule 719 (characterPrimary)
    GROUP             [reduce using rule 760 (bitPrimary)]
    GROUP             [reduce using rule 779 (datetimePrimary)]
    RIGHT             reduce using rule 719 (characterPrimary)
    RIGHT             [reduce using rule 760 (bitPrimary)]
    RIGHT             [reduce using rule 779 (datetimePrimary)]
    INNER             reduce using rule 719 (characterPrimary)
    INNER             [reduce using rule 760 (bitPrimary)]
    INNER             [reduce using rule 779 (datetimePrimary)]
    UNION             reduce using rule 719 (characterPrimary)
    UNION             [reduce using rule 760 (bitPrimary)]
    UNION             [reduce using rule 779 (datetimePrimary)]
    FROM              reduce using rule 719 (characterPrimary)
    FROM              [reduce using rule 760 (bitPrimary)]
    FROM              [reduce using rule 779 (datetimePrimary)]
    WHEN              reduce using rule 719 (characterPrimary)
    WHEN              [reduce using rule 760 (bitPrimary)]
    WHEN              [reduce using rule 779 (datetimePrimary)]
    THEN              reduce using rule 719 (characterPrimary)
    THEN              [reduce using rule 760 (bitPrimary)]
    THEN              [reduce using rule 779 (datetimePrimary)]
    ELSE              reduce using rule 719 (characterPrimary)
    ELSE              [reduce using rule 760 (bitPrimary)]
    ELSE              [reduce using rule 779 (datetimePrimary)]
    DESC              reduce using rule 719 (characterPrimary)
    DESC              [reduce using rule 760 (bitPrimary)]
    DESC              [reduce using rule 779 (datetimePrimary)]
    JOIN              reduce using rule 719 (characterPrimary)
    JOIN              [reduce using rule 760 (bitPrimary)]
    JOIN              [reduce using rule 779 (datetimePrimary)]
    LEFT              reduce using rule 719 (characterPrimary)
    LEFT              [reduce using rule 760 (bitPrimary)]
    LEFT              [reduce using rule 779 (datetimePrimary)]
    FULL              reduce using rule 719 (characterPrimary)
    FULL              [reduce using rule 760 (bitPrimary)]
    FULL              [reduce using rule 779 (datetimePrimary)]
    AND               reduce using rule 719 (characterPrimary)
    AND               [reduce using rule 760 (bitPrimary)]
    AND               [reduce using rule 779 (datetimePrimary)]
    END               reduce using rule 719 (characterPrimary)
    END               [reduce using rule 760 (bitPrimary)]
    END               [reduce using rule 779 (datetimePrimary)]
    ASC               reduce using rule 719 (characterPrimary)
    ASC               [reduce using rule 760 (bitPrimary)]
    ASC               [reduce using rule 779 (datetimePrimary)]
    NOT               reduce using rule 719 (characterPrimary)
    NOT               [reduce using rule 760 (bitPrimary)]
    NOT               [reduce using rule 779 (datetimePrimary)]
    ON                reduce using rule 719 (characterPrimary)
    ON                [reduce using rule 760 (bitPrimary)]
    ON                [reduce using rule 779 (datetimePrimary)]
    AS                reduce using rule 719 (characterPrimary)
    AS                [reduce using rule 760 (bitPrimary)]
    AS                [reduce using rule 779 (datetimePrimary)]
    IN                reduce using rule 719 (characterPrimary)
    IN                [reduce using rule 760 (bitPrimary)]
    IN                [reduce using rule 779 (datetimePrimary)]
    IS                reduce using rule 719 (characterPrimary)
    IS                [reduce using rule 760 (bitPrimary)]
    IS                [reduce using rule 779 (datetimePrimary)]
    UNKNOWN_LEX       reduce using rule 719 (characterPrimary)
    UNKNOWN_LEX       [reduce using rule 760 (bitPrimary)]
    UNKNOWN_LEX       [reduce using rule 779 (datetimePrimary)]
    ACTION            reduce using rule 719 (characterPrimary)
    ACTION            [reduce using rule 760 (bitPrimary)]
    ACTION            [reduce using rule 779 (datetimePrimary)]
    MIN               reduce using rule 719 (characterPrimary)
    MIN               [reduce using rule 760 (bitPrimary)]
    MIN               [reduce using rule 779 (datetimePrimary)]
    OCTET_LENGTH      reduce using rule 719 (characterPrimary)
    OCTET_LENGTH      [reduce using rule 760 (bitPrimary)]
    OCTET_LENGTH      [reduce using rule 779 (datetimePrimary)]
    CROSS             reduce using rule 719 (characterPrimary)
    CROSS             [reduce using rule 760 (bitPrimary)]
    CROSS             [reduce using rule 779 (datetimePrimary)]
    DEFERRED          reduce using rule 719 (characterPrimary)
    DEFERRED          [reduce using rule 760 (bitPrimary)]
    DEFERRED          [reduce using rule 779 (datetimePrimary)]
    DEFERRABLE        reduce using rule 719 (characterPrimary)
    DEFERRABLE        [reduce using rule 760 (bitPrimary)]
    DEFERRABLE        [reduce using rule 779 (datetimePrimary)]
    ZONE              reduce using rule 719 (characterPrimary)
    ZONE              [reduce using rule 760 (bitPrimary)]
    ZONE              [reduce using rule 779 (datetimePrimary)]
    INTERSECT         reduce using rule 719 (characterPrimary)
    INTERSECT         [reduce using rule 760 (bitPrimary)]
    INTERSECT         [reduce using rule 779 (datetimePrimary)]
    COUNT             reduce using rule 719 (characterPrimary)
    COUNT             [reduce using rule 760 (bitPrimary)]
    COUNT             [reduce using rule 779 (datetimePrimary)]
    NATURAL           reduce using rule 719 (characterPrimary)
    NATURAL           [reduce using rule 760 (bitPrimary)]
    NATURAL           [reduce using rule 779 (datetimePrimary)]
    NULLIF            reduce using rule 719 (characterPrimary)
    NULLIF            [reduce using rule 760 (bitPrimary)]
    NULLIF            [reduce using rule 779 (datetimePrimary)]
    SUM               reduce using rule 719 (characterPrimary)
    SUM               [reduce using rule 760 (bitPrimary)]
    SUM               [reduce using rule 779 (datetimePrimary)]
    KEY               reduce using rule 719 (characterPrimary)
    KEY               [reduce using rule 760 (bitPrimary)]
    KEY               [reduce using rule 779 (datetimePrimary)]
    AVG               reduce using rule 719 (characterPrimary)
    AVG               [reduce using rule 760 (bitPrimary)]
    AVG               [reduce using rule 779 (datetimePrimary)]
    INITIALLY         reduce using rule 719 (characterPrimary)
    INITIALLY         [reduce using rule 760 (bitPrimary)]
    INITIALLY         [reduce using rule 779 (datetimePrimary)]
    UPPER             reduce using rule 719 (characterPrimary)
    UPPER             [reduce using rule 760 (bitPrimary)]
    UPPER             [reduce using rule 779 (datetimePrimary)]
    EXCEPT            reduce using rule 719 (characterPrimary)
    EXCEPT            [reduce using rule 760 (bitPrimary)]
    EXCEPT            [reduce using rule 779 (datetimePrimary)]
    EXTRACT           reduce using rule 719 (characterPrimary)
    EXTRACT           [reduce using rule 760 (bitPrimary)]
    EXTRACT           [reduce using rule 779 (datetimePrimary)]
    CHAR_LENGTH       reduce using rule 719 (characterPrimary)
    CHAR_LENGTH       [reduce using rule 760 (bitPrimary)]
    CHAR_LENGTH       [reduce using rule 779 (datetimePrimary)]
    SUBSTRING         reduce using rule 719 (characterPrimary)
    SUBSTRING         [reduce using rule 760 (bitPrimary)]
    SUBSTRING         [reduce using rule 779 (datetimePrimary)]
    PARTIAL           reduce using rule 719 (characterPrimary)
    PARTIAL           [reduce using rule 760 (bitPrimary)]
    PARTIAL           [reduce using rule 779 (datetimePrimary)]
    MAX               reduce using rule 719 (characterPrimary)
    MAX               [reduce using rule 760 (bitPrimary)]
    MAX               [reduce using rule 779 (datetimePrimary)]
    LOWER             reduce using rule 719 (characterPrimary)
    LOWER             [reduce using rule 760 (bitPrimary)]
    LOWER             [reduce using rule 779 (datetimePrimary)]
    USING             reduce using rule 719 (characterPrimary)
    USING             [reduce using rule 760 (bitPrimary)]
    USING             [reduce using rule 779 (datetimePrimary)]
    CASCADE           reduce using rule 719 (characterPrimary)
    CASCADE           [reduce using rule 760 (bitPrimary)]
    CASCADE           [reduce using rule 779 (datetimePrimary)]
    TEMPORARY         reduce using rule 719 (characterPrimary)
    TEMPORARY         [reduce using rule 760 (bitPrimary)]
    TEMPORARY         [reduce using rule 779 (datetimePrimary)]
    OVERLAPS          reduce using rule 719 (characterPrimary)
    OVERLAPS          [reduce using rule 760 (bitPrimary)]
    OVERLAPS          [reduce using rule 779 (datetimePrimary)]
    CHARACTER_LENGTH  reduce using rule 719 (characterPrimary)
    CHARACTER_LENGTH  [reduce using rule 760 (bitPrimary)]
    CHARACTER_LENGTH  [reduce using rule 779 (datetimePrimary)]
    MATCH             reduce using rule 719 (characterPrimary)
    MATCH             [reduce using rule 760 (bitPrimary)]
    MATCH             [reduce using rule 779 (datetimePrimary)]
    CONVERT           reduce using rule 719 (characterPrimary)
    CONVERT           [reduce using rule 760 (bitPrimary)]
    CONVERT           [reduce using rule 779 (datetimePrimary)]
    TRANSLATE         reduce using rule 719 (characterPrimary)
    TRANSLATE         [reduce using rule 760 (bitPrimary)]
    TRANSLATE         [reduce using rule 779 (datetimePrimary)]
    PRESERVE          reduce using rule 719 (characterPrimary)
    PRESERVE          [reduce using rule 760 (bitPrimary)]
    PRESERVE          [reduce using rule 779 (datetimePrimary)]
    POSITION          reduce using rule 719 (characterPrimary)
    POSITION          [reduce using rule 760 (bitPrimary)]
    POSITION          [reduce using rule 779 (datetimePrimary)]
    COALESCE          reduce using rule 719 (characterPrimary)
    COALESCE          [reduce using rule 760 (bitPrimary)]
    COALESCE          [reduce using rule 779 (datetimePrimary)]
    TRIM              reduce using rule 719 (characterPrimary)
    TRIM              [reduce using rule 760 (bitPrimary)]
    TRIM              [reduce using rule 779 (datetimePrimary)]
    AT                reduce using rule 779 (datetimePrimary)
    NUMBER            reduce using rule 719 (characterPrimary)
    NUMBER            [reduce using rule 760 (bitPrimary)]
    NUMBER            [reduce using rule 779 (datetimePrimary)]
    ID                reduce using rule 719 (characterPrimary)
    ID                [reduce using rule 760 (bitPrimary)]
    ID                [reduce using rule 779 (datetimePrimary)]
    ','               reduce using rule 719 (characterPrimary)
    ','               [reduce using rule 760 (bitPrimary)]
    ','               [reduce using rule 779 (datetimePrimary)]
    ')'               reduce using rule 719 (characterPrimary)
    ')'               [reduce using rule 760 (bitPrimary)]
    ')'               [reduce using rule 779 (datetimePrimary)]
    $default          reduce using rule 719 (characterPrimary)


state 709

  495 valueExpressionPrimary: unsignedValueSpecification .

    $default  reduce using rule 495 (valueExpressionPrimary)


state 710

  502 unsignedValueSpecification: unsignedLiteral .

    $default  reduce using rule 502 (unsignedValueSpecification)


state 711

  503 unsignedValueSpecification: generalValueSpecification .

    $default  reduce using rule 503 (unsignedValueSpecification)


state 712

  506 generalValueSpecification: parameterSpecification .

    $default  reduce using rule 506 (generalValueSpecification)


state 713

  514 parameterSpecification: parameterName . parameterSpecification1
  515 parameterSpecification1: .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  516                        | . indicatorParameter
  519 indicatorParameter: . indicatorParameter1 parameterName
  520 indicatorParameter1: .  [UNKNOWN_LEX]
  521                    | . INDICATOR

    INDICATOR  shift, and go to state 900

    UNKNOWN_LEX  reduce using rule 515 (parameterSpecification1)
    UNKNOWN_LEX  [reduce using rule 520 (indicatorParameter1)]
    $default     reduce using rule 515 (parameterSpecification1)

    parameterSpecification1  go to state 901
    indicatorParameter       go to state 902
    indicatorParameter1      go to state 903


state 714

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  225 identifier: . id
  517 parameterName: colon . identifier
  527 embeddedVariableName: colon . hostIdentifier
  528 hostIdentifier: . AdaHostIdentifier
  529               | . CHostIdentifier
  530               | . CobolHostIdentifier
  531               | . FortranHostIdentifier
  532               | . MUMPSHostIdentifier
  533               | . PascalHostIdentifier
  534               | . PLIHostIdentifier
  535 AdaHostIdentifier: . UNKNOWN_BODY
  536 CHostIdentifier: . UNKNOWN_BODY
  537 CobolHostIdentifier: . UNKNOWN_BODY
  538 FortranHostIdentifier: . UNKNOWN_BODY
  539 MUMPSHostIdentifier: . UNKNOWN_BODY
  540 PascalHostIdentifier: . UNKNOWN_BODY
  541 PLIHostIdentifier: . UNKNOWN_BODY

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_BODY      shift, and go to state 904
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id                     go to state 298
    identifier             go to state 905
    hostIdentifier         go to state 906
    AdaHostIdentifier      go to state 907
    CHostIdentifier        go to state 908
    CobolHostIdentifier    go to state 909
    FortranHostIdentifier  go to state 910
    MUMPSHostIdentifier    go to state 911
    PascalHostIdentifier   go to state 912
    PLIHostIdentifier      go to state 913


state 715

  507 generalValueSpecification: dynamicParameterSpecification .

    $default  reduce using rule 507 (generalValueSpecification)


state 716

  522 dynamicParameterSpecification: questionMark .

    $default  reduce using rule 522 (dynamicParameterSpecification)


state 717

  508 generalValueSpecification: variableSpecification .

    $default  reduce using rule 508 (generalValueSpecification)


state 718

  524 variableSpecification: embeddedVariableName . variableSpecification1
  525 variableSpecification1: .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  526                       | . indicatorVariable
  542 indicatorVariable: . indicatorVariable1 embeddedVariableName
  543 indicatorVariable1: .  [UNKNOWN_LEX]
  544                   | . INDICATOR

    INDICATOR  shift, and go to state 914

    UNKNOWN_LEX  reduce using rule 525 (variableSpecification1)
    UNKNOWN_LEX  [reduce using rule 543 (indicatorVariable1)]
    $default     reduce using rule 525 (variableSpecification1)

    variableSpecification1  go to state 915
    indicatorVariable       go to state 916
    indicatorVariable1      go to state 917


state 719

  496 valueExpressionPrimary: columnReference .

    $default  reduce using rule 496 (valueExpressionPrimary)


state 720

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  225 identifier: . id
  242 columnName: . identifier
  545 columnReference: columnReference1 . columnName

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id          go to state 298
    identifier  go to state 355
    columnName  go to state 918


state 721

  223 period: . UNKNOWN_LEX
  547 columnReference1: qualifier . period

    UNKNOWN_LEX  shift, and go to state 293

    period  go to state 919


state 722

  549 qualifier: correlationName .

    $default  reduce using rule 549 (qualifier)


state 723

  497 valueExpressionPrimary: setFunctionSpecification .

    $default  reduce using rule 497 (valueExpressionPrimary)


state 724

  552 setFunctionSpecification: generalSetFunction .

    $default  reduce using rule 552 (setFunctionSpecification)


state 725

  231 leftParen: . '('
  554 generalSetFunction: setFunctionType . leftParen generalSetFunction1 valueExpression rightParen

    '('  shift, and go to state 295

    leftParen  go to state 920


state 726

  498 valueExpressionPrimary: scalarSubquery .

    $default  reduce using rule 498 (valueExpressionPrimary)


state 727

  564 scalarSubquery: subquery .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, THEN, LIKE, JOIN, LEFT, FULL, AND, NOT, ON, IN, IS, UNKNOWN_LEX, CROSS, INTERSECT, NATURAL, COLLATE, EXCEPT, USING, OVERLAPS, MATCH, AT, ',', ')']
  818 rowSubquery: subquery .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, THEN, JOIN, LEFT, FULL, AND, NOT, ON, IN, IS, UNKNOWN_LEX, CROSS, INTERSECT, NATURAL, EXCEPT, USING, OVERLAPS, MATCH, ',', ')']

    BETWEEN      reduce using rule 564 (scalarSubquery)
    BETWEEN      [reduce using rule 818 (rowSubquery)]
    HAVING       reduce using rule 564 (scalarSubquery)
    HAVING       [reduce using rule 818 (rowSubquery)]
    WHERE        reduce using rule 564 (scalarSubquery)
    WHERE        [reduce using rule 818 (rowSubquery)]
    OR           reduce using rule 564 (scalarSubquery)
    OR           [reduce using rule 818 (rowSubquery)]
    GROUP        reduce using rule 564 (scalarSubquery)
    GROUP        [reduce using rule 818 (rowSubquery)]
    RIGHT        reduce using rule 564 (scalarSubquery)
    RIGHT        [reduce using rule 818 (rowSubquery)]
    INNER        reduce using rule 564 (scalarSubquery)
    INNER        [reduce using rule 818 (rowSubquery)]
    UNION        reduce using rule 564 (scalarSubquery)
    UNION        [reduce using rule 818 (rowSubquery)]
    THEN         reduce using rule 564 (scalarSubquery)
    THEN         [reduce using rule 818 (rowSubquery)]
    JOIN         reduce using rule 564 (scalarSubquery)
    JOIN         [reduce using rule 818 (rowSubquery)]
    LEFT         reduce using rule 564 (scalarSubquery)
    LEFT         [reduce using rule 818 (rowSubquery)]
    FULL         reduce using rule 564 (scalarSubquery)
    FULL         [reduce using rule 818 (rowSubquery)]
    AND          reduce using rule 564 (scalarSubquery)
    AND          [reduce using rule 818 (rowSubquery)]
    NOT          reduce using rule 564 (scalarSubquery)
    NOT          [reduce using rule 818 (rowSubquery)]
    ON           reduce using rule 564 (scalarSubquery)
    ON           [reduce using rule 818 (rowSubquery)]
    IN           reduce using rule 564 (scalarSubquery)
    IN           [reduce using rule 818 (rowSubquery)]
    IS           reduce using rule 564 (scalarSubquery)
    IS           [reduce using rule 818 (rowSubquery)]
    UNKNOWN_LEX  reduce using rule 564 (scalarSubquery)
    UNKNOWN_LEX  [reduce using rule 818 (rowSubquery)]
    CROSS        reduce using rule 564 (scalarSubquery)
    CROSS        [reduce using rule 818 (rowSubquery)]
    INTERSECT    reduce using rule 564 (scalarSubquery)
    INTERSECT    [reduce using rule 818 (rowSubquery)]
    NATURAL      reduce using rule 564 (scalarSubquery)
    NATURAL      [reduce using rule 818 (rowSubquery)]
    EXCEPT       reduce using rule 564 (scalarSubquery)
    EXCEPT       [reduce using rule 818 (rowSubquery)]
    USING        reduce using rule 564 (scalarSubquery)
    USING        [reduce using rule 818 (rowSubquery)]
    OVERLAPS     reduce using rule 564 (scalarSubquery)
    OVERLAPS     [reduce using rule 818 (rowSubquery)]
    MATCH        reduce using rule 564 (scalarSubquery)
    MATCH        [reduce using rule 818 (rowSubquery)]
    ','          reduce using rule 564 (scalarSubquery)
    ','          [reduce using rule 818 (rowSubquery)]
    ')'          reduce using rule 564 (scalarSubquery)
    ')'          [reduce using rule 818 (rowSubquery)]
    $default     reduce using rule 564 (scalarSubquery)


state 728

  499 valueExpressionPrimary: caseExpression .

    $default  reduce using rule 499 (valueExpressionPrimary)


state 729

  676 caseExpression: caseAbbreviation .

    $default  reduce using rule 676 (caseExpression)


state 730

  677 caseExpression: caseSpecification .

    $default  reduce using rule 677 (caseExpression)


state 731

  682 caseSpecification: simpleCase .

    $default  reduce using rule 682 (caseSpecification)


state 732

  683 caseSpecification: searchedCase .

    $default  reduce using rule 683 (caseSpecification)


state 733

  501 valueExpressionPrimary: castSpecification .

    $default  reduce using rule 501 (valueExpressionPrimary)


state 734

  714 concatenation: characterValueExpression . concatenationOperator characterFactor
  715 concatenationOperator: . UNKNOWN_LEX
  809 stringValueExpression: characterValueExpression .  [BETWEEN, NOT, IN, UNKNOWN_LEX, OVERLAPS, MATCH]
  847 matchValue: characterValueExpression .  [LIKE, NOT]

    UNKNOWN_LEX  shift, and go to state 921

    LIKE         reduce using rule 847 (matchValue)
    NOT          reduce using rule 809 (stringValueExpression)
    NOT          [reduce using rule 847 (matchValue)]
    UNKNOWN_LEX  [reduce using rule 809 (stringValueExpression)]
    $default     reduce using rule 809 (stringValueExpression)

    concatenationOperator  go to state 922


state 735

  712 characterValueExpression: concatenation .

    $default  reduce using rule 712 (characterValueExpression)


state 736

  713 characterValueExpression: characterFactor .

    $default  reduce using rule 713 (characterValueExpression)


state 737

  660 collateClause: . COLLATE collationName
  716 characterFactor: characterPrimary . characterFactor1
  717 characterFactor1: .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  718                 | . collateClause

    COLLATE  shift, and go to state 597

    $default  reduce using rule 717 (characterFactor1)

    collateClause     go to state 923
    characterFactor1  go to state 924


state 738

  720 characterPrimary: stringValueFunction .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  761 bitPrimary: stringValueFunction .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']

    BETWEEN           reduce using rule 720 (characterPrimary)
    BETWEEN           [reduce using rule 761 (bitPrimary)]
    HAVING            reduce using rule 720 (characterPrimary)
    HAVING            [reduce using rule 761 (bitPrimary)]
    WHERE             reduce using rule 720 (characterPrimary)
    WHERE             [reduce using rule 761 (bitPrimary)]
    OR                reduce using rule 720 (characterPrimary)
    OR                [reduce using rule 761 (bitPrimary)]
    GROUP             reduce using rule 720 (characterPrimary)
    GROUP             [reduce using rule 761 (bitPrimary)]
    RIGHT             reduce using rule 720 (characterPrimary)
    RIGHT             [reduce using rule 761 (bitPrimary)]
    INNER             reduce using rule 720 (characterPrimary)
    INNER             [reduce using rule 761 (bitPrimary)]
    UNION             reduce using rule 720 (characterPrimary)
    UNION             [reduce using rule 761 (bitPrimary)]
    FROM              reduce using rule 720 (characterPrimary)
    FROM              [reduce using rule 761 (bitPrimary)]
    WHEN              reduce using rule 720 (characterPrimary)
    WHEN              [reduce using rule 761 (bitPrimary)]
    THEN              reduce using rule 720 (characterPrimary)
    THEN              [reduce using rule 761 (bitPrimary)]
    ELSE              reduce using rule 720 (characterPrimary)
    ELSE              [reduce using rule 761 (bitPrimary)]
    DESC              reduce using rule 720 (characterPrimary)
    DESC              [reduce using rule 761 (bitPrimary)]
    JOIN              reduce using rule 720 (characterPrimary)
    JOIN              [reduce using rule 761 (bitPrimary)]
    LEFT              reduce using rule 720 (characterPrimary)
    LEFT              [reduce using rule 761 (bitPrimary)]
    FULL              reduce using rule 720 (characterPrimary)
    FULL              [reduce using rule 761 (bitPrimary)]
    AND               reduce using rule 720 (characterPrimary)
    AND               [reduce using rule 761 (bitPrimary)]
    END               reduce using rule 720 (characterPrimary)
    END               [reduce using rule 761 (bitPrimary)]
    ASC               reduce using rule 720 (characterPrimary)
    ASC               [reduce using rule 761 (bitPrimary)]
    NOT               reduce using rule 720 (characterPrimary)
    NOT               [reduce using rule 761 (bitPrimary)]
    ON                reduce using rule 720 (characterPrimary)
    ON                [reduce using rule 761 (bitPrimary)]
    AS                reduce using rule 720 (characterPrimary)
    AS                [reduce using rule 761 (bitPrimary)]
    IN                reduce using rule 720 (characterPrimary)
    IN                [reduce using rule 761 (bitPrimary)]
    IS                reduce using rule 720 (characterPrimary)
    IS                [reduce using rule 761 (bitPrimary)]
    UNKNOWN_LEX       reduce using rule 720 (characterPrimary)
    UNKNOWN_LEX       [reduce using rule 761 (bitPrimary)]
    ACTION            reduce using rule 720 (characterPrimary)
    ACTION            [reduce using rule 761 (bitPrimary)]
    MIN               reduce using rule 720 (characterPrimary)
    MIN               [reduce using rule 761 (bitPrimary)]
    OCTET_LENGTH      reduce using rule 720 (characterPrimary)
    OCTET_LENGTH      [reduce using rule 761 (bitPrimary)]
    CROSS             reduce using rule 720 (characterPrimary)
    CROSS             [reduce using rule 761 (bitPrimary)]
    DEFERRED          reduce using rule 720 (characterPrimary)
    DEFERRED          [reduce using rule 761 (bitPrimary)]
    DEFERRABLE        reduce using rule 720 (characterPrimary)
    DEFERRABLE        [reduce using rule 761 (bitPrimary)]
    ZONE              reduce using rule 720 (characterPrimary)
    ZONE              [reduce using rule 761 (bitPrimary)]
    INTERSECT         reduce using rule 720 (characterPrimary)
    INTERSECT         [reduce using rule 761 (bitPrimary)]
    COUNT             reduce using rule 720 (characterPrimary)
    COUNT             [reduce using rule 761 (bitPrimary)]
    NATURAL           reduce using rule 720 (characterPrimary)
    NATURAL           [reduce using rule 761 (bitPrimary)]
    NULLIF            reduce using rule 720 (characterPrimary)
    NULLIF            [reduce using rule 761 (bitPrimary)]
    SUM               reduce using rule 720 (characterPrimary)
    SUM               [reduce using rule 761 (bitPrimary)]
    KEY               reduce using rule 720 (characterPrimary)
    KEY               [reduce using rule 761 (bitPrimary)]
    AVG               reduce using rule 720 (characterPrimary)
    AVG               [reduce using rule 761 (bitPrimary)]
    INITIALLY         reduce using rule 720 (characterPrimary)
    INITIALLY         [reduce using rule 761 (bitPrimary)]
    UPPER             reduce using rule 720 (characterPrimary)
    UPPER             [reduce using rule 761 (bitPrimary)]
    EXCEPT            reduce using rule 720 (characterPrimary)
    EXCEPT            [reduce using rule 761 (bitPrimary)]
    EXTRACT           reduce using rule 720 (characterPrimary)
    EXTRACT           [reduce using rule 761 (bitPrimary)]
    CHAR_LENGTH       reduce using rule 720 (characterPrimary)
    CHAR_LENGTH       [reduce using rule 761 (bitPrimary)]
    SUBSTRING         reduce using rule 720 (characterPrimary)
    SUBSTRING         [reduce using rule 761 (bitPrimary)]
    PARTIAL           reduce using rule 720 (characterPrimary)
    PARTIAL           [reduce using rule 761 (bitPrimary)]
    MAX               reduce using rule 720 (characterPrimary)
    MAX               [reduce using rule 761 (bitPrimary)]
    LOWER             reduce using rule 720 (characterPrimary)
    LOWER             [reduce using rule 761 (bitPrimary)]
    USING             reduce using rule 720 (characterPrimary)
    USING             [reduce using rule 761 (bitPrimary)]
    CASCADE           reduce using rule 720 (characterPrimary)
    CASCADE           [reduce using rule 761 (bitPrimary)]
    TEMPORARY         reduce using rule 720 (characterPrimary)
    TEMPORARY         [reduce using rule 761 (bitPrimary)]
    OVERLAPS          reduce using rule 720 (characterPrimary)
    OVERLAPS          [reduce using rule 761 (bitPrimary)]
    CHARACTER_LENGTH  reduce using rule 720 (characterPrimary)
    CHARACTER_LENGTH  [reduce using rule 761 (bitPrimary)]
    MATCH             reduce using rule 720 (characterPrimary)
    MATCH             [reduce using rule 761 (bitPrimary)]
    CONVERT           reduce using rule 720 (characterPrimary)
    CONVERT           [reduce using rule 761 (bitPrimary)]
    TRANSLATE         reduce using rule 720 (characterPrimary)
    TRANSLATE         [reduce using rule 761 (bitPrimary)]
    PRESERVE          reduce using rule 720 (characterPrimary)
    PRESERVE          [reduce using rule 761 (bitPrimary)]
    POSITION          reduce using rule 720 (characterPrimary)
    POSITION          [reduce using rule 761 (bitPrimary)]
    COALESCE          reduce using rule 720 (characterPrimary)
    COALESCE          [reduce using rule 761 (bitPrimary)]
    TRIM              reduce using rule 720 (characterPrimary)
    TRIM              [reduce using rule 761 (bitPrimary)]
    NUMBER            reduce using rule 720 (characterPrimary)
    NUMBER            [reduce using rule 761 (bitPrimary)]
    ID                reduce using rule 720 (characterPrimary)
    ID                [reduce using rule 761 (bitPrimary)]
    ','               reduce using rule 720 (characterPrimary)
    ','               [reduce using rule 761 (bitPrimary)]
    ')'               reduce using rule 720 (characterPrimary)
    ')'               [reduce using rule 761 (bitPrimary)]
    $default          reduce using rule 720 (characterPrimary)


state 739

  721 stringValueFunction: characterValueFunction .

    $default  reduce using rule 721 (stringValueFunction)


state 740

  723 characterValueFunction: characterSubstringFunction .

    $default  reduce using rule 723 (characterValueFunction)


state 741

  724 characterValueFunction: fold .

    $default  reduce using rule 724 (characterValueFunction)


state 742

  725 characterValueFunction: formofuseConversion .

    $default  reduce using rule 725 (characterValueFunction)


state 743

  726 characterValueFunction: characterTranslation .

    $default  reduce using rule 726 (characterValueFunction)


state 744

  727 characterValueFunction: trimFunction .

    $default  reduce using rule 727 (characterValueFunction)


state 745

  722 stringValueFunction: bitValueFunction .

    $default  reduce using rule 722 (stringValueFunction)


state 746

  752 bitValueFunction: bitSubstringFunction .

    $default  reduce using rule 752 (bitValueFunction)


state 747

  715 concatenationOperator: . UNKNOWN_LEX
  758 bitConcatenation: bitValueExpression . concatenationOperator bitFactor
  810 stringValueExpression: bitValueExpression .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']

    UNKNOWN_LEX  shift, and go to state 921

    UNKNOWN_LEX  [reduce using rule 810 (stringValueExpression)]
    $default     reduce using rule 810 (stringValueExpression)

    concatenationOperator  go to state 925


state 748

  756 bitValueExpression: bitConcatenation .

    $default  reduce using rule 756 (bitValueExpression)


state 749

  757 bitValueExpression: bitFactor .

    $default  reduce using rule 757 (bitValueExpression)


state 750

  759 bitFactor: bitPrimary .

    $default  reduce using rule 759 (bitFactor)


state 751

  482 valueExpression: datetimeValueExpression .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  773 datetimeValueExpression: datetimeValueExpression . plusSign intervalTerm
  774                        | datetimeValueExpression . minusSign intervalTerm
  801 plusSign: . UNKNOWN_LEX
  803 minusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 877

    UNKNOWN_LEX  [reduce using rule 482 (valueExpression)]
    $default     reduce using rule 482 (valueExpression)

    plusSign   go to state 926
    minusSign  go to state 927


state 752

  771 datetimeValueExpression: datetimeTerm .

    $default  reduce using rule 771 (datetimeValueExpression)


state 753

  775 datetimeTerm: datetimeFactor .

    $default  reduce using rule 775 (datetimeTerm)


state 754

  776 datetimeFactor: datetimePrimary . datetimeFactor1
  777 datetimeFactor1: .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  778                | . timeZone
  781 timeZone: . AT timeZoneSpecifier

    AT  shift, and go to state 928

    $default  reduce using rule 777 (datetimeFactor1)

    datetimeFactor1  go to state 929
    timeZone         go to state 930


state 755

  483 valueExpression: intervalValueExpression .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  772 datetimeValueExpression: intervalValueExpression . plusSign datetimeTerm
  800 intervalValueExpression1: intervalValueExpression .  [UNKNOWN_LEX]
  801 plusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 931

    UNKNOWN_LEX  [reduce using rule 483 (valueExpression)]
    UNKNOWN_LEX  [reduce using rule 800 (intervalValueExpression1)]
    $default     reduce using rule 483 (valueExpression)

    plusSign  go to state 932


state 756

  784 intervalValueExpression: intervalTerm .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  798 intervalTerm2: intervalTerm .  [UNKNOWN_LEX]

    UNKNOWN_LEX  reduce using rule 784 (intervalValueExpression)
    UNKNOWN_LEX  [reduce using rule 798 (intervalTerm2)]
    $default     reduce using rule 784 (intervalValueExpression)


state 757

  788 intervalTerm: intervalFactor .

    $default  reduce using rule 788 (intervalTerm)


state 758

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  792 intervalFactor: intervalFactor1 . intervalPrimary
  795 intervalPrimary: . valueExpressionPrimary intervalPrimary1

    CASE              shift, and go to state 666
    CAST              shift, and go to state 667
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 883
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 671
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 672
    SESSION_USER      shift, and go to state 673
    DATE              shift, and go to state 496
    NULLIF            shift, and go to state 674
    SUM               shift, and go to state 675
    KEY               shift, and go to state 42
    AVG               shift, and go to state 676
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    TIMESTAMP         shift, and go to state 498
    MODULE            shift, and go to state 214
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 499
    SYSTEM_USER       shift, and go to state 678
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 680
    MAX               shift, and go to state 681
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 683
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    CURRENT_USER      shift, and go to state 685
    TRANSLATE         shift, and go to state 56
    INTERVAL          shift, and go to state 505
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 688
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 295

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 890
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    valueExpressionPrimary          go to state 933
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    intervalPrimary                 go to state 934


state 759

  553 asterisk: . UNKNOWN_LEX
  789 intervalTerm: intervalTerm2 . asterisk factor
  790             | intervalTerm2 . solidus factor
  799 solidus: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 880

    asterisk  go to state 935
    solidus   go to state 936


state 760

  785 intervalValueExpression: intervalValueExpression1 . plusSign intervalTerm1
  786                        | intervalValueExpression1 . minusSign intervalTerm1
  801 plusSign: . UNKNOWN_LEX
  803 minusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 877

    plusSign   go to state 937
    minusSign  go to state 938


state 761

  481 valueExpression: stringValueExpression .

    $default  reduce using rule 481 (valueExpression)


state 762

  478 rowValueConstructorElement: nullSpecification .

    $default  reduce using rule 478 (rowValueConstructorElement)


state 763

  479 rowValueConstructorElement: defaultSpecification .

    $default  reduce using rule 479 (rowValueConstructorElement)


state 764

  476 rowValueConstructor: rowSubquery .

    $default  reduce using rule 476 (rowValueConstructor)


state 765

  465 predicate: betweenPredicate .

    $default  reduce using rule 465 (predicate)


state 766

  466 predicate: inPredicate .

    $default  reduce using rule 466 (predicate)


state 767

  467 predicate: likePredicate .

    $default  reduce using rule 467 (predicate)


state 768

  842 likePredicate: matchValue . likePredicate1 LIKE pattern likePredicate2
  843 likePredicate1: .  [LIKE]
  844               | . NOT

    NOT  shift, and go to state 939

    $default  reduce using rule 843 (likePredicate1)

    likePredicate1  go to state 940


state 769

  468 predicate: nullPredicate .

    $default  reduce using rule 468 (predicate)


state 770

  469 predicate: quantifiedComparisonPredicate .

    $default  reduce using rule 469 (predicate)


state 771

  470 predicate: existsPredicate .

    $default  reduce using rule 470 (predicate)


state 772

  471 predicate: matchPredicate .

    $default  reduce using rule 471 (predicate)


state 773

  472 predicate: overlapsPredicate .

    $default  reduce using rule 472 (predicate)


state 774

  866 overlapsPredicate: rowValueConstructor1 . OVERLAPS rowValueConstructor2

    OVERLAPS  shift, and go to state 941


state 775

  895 referencingColumns: referenceColumnList .

    $default  reduce using rule 895 (referencingColumns)


state 776

  431 referenceColumnList: columnNameList .

    $default  reduce using rule 431 (referenceColumnList)


state 777

  268 rightParen: . ')'
  894 referentialConstraintDefinition: FOREIGN KEY leftParen referencingColumns . rightParen referencesSpecification

    ')'  shift, and go to state 449

    rightParen  go to state 942


state 778

  315 comma: . ','
  432 columnNameList: columnName columnNameList1 .  [')']
  434 columnNameList1: columnNameList1 . comma columnName

    ','  shift, and go to state 448

    $default  reduce using rule 432 (columnNameList)

    comma  go to state 943


state 779

  892 uniqueConstraintDefinition: uniqueSpecification leftParen uniqueColumnList rightParen .

    $default  reduce using rule 892 (uniqueConstraintDefinition)


state 780

  293 bitStringType2: leftParen length rightParen .

    $default  reduce using rule 293 (bitStringType2)


state 781

  287 nationalCharacterStringType6: leftParen length rightParen .

    $default  reduce using rule 287 (nationalCharacterStringType6)


state 782

  332 datetimeType4: WITH TIME ZONE .

    $default  reduce using rule 332 (datetimeType4)


state 783

  303 exactNumericType2: leftParen precision exactNumericType1 rightParen .

    $default  reduce using rule 303 (exactNumericType2)


state 784

  316 scale: unsignedInteger .

    $default  reduce using rule 316 (scale)


state 785

  305 exactNumericType1: comma scale .

    $default  reduce using rule 305 (exactNumericType1)


state 786

  307 exactNumericType4: leftParen precision exactNumericType3 rightParen .

    $default  reduce using rule 307 (exactNumericType4)


state 787

  309 exactNumericType3: comma scale .

    $default  reduce using rule 309 (exactNumericType3)


state 788

  311 exactNumericType6: leftParen precision exactNumericType5 rightParen .

    $default  reduce using rule 311 (exactNumericType6)


state 789

  313 exactNumericType5: comma scale .

    $default  reduce using rule 313 (exactNumericType5)


state 790

  328 datetimeType2: WITH TIME ZONE .

    $default  reduce using rule 328 (datetimeType2)


state 791

  261 characterStringType3: leftParen length rightParen .

    $default  reduce using rule 261 (characterStringType3)


state 792

  263 characterStringType4: leftParen length rightParen .

    $default  reduce using rule 263 (characterStringType4)


state 793

  268 rightParen: . ')'
  283 nationalCharacterStringType4: leftParen length . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 944


state 794

  277 nationalCharacterStringType1: leftParen length rightParen .

    $default  reduce using rule 277 (nationalCharacterStringType1)


state 795

  268 rightParen: . ')'
  285 nationalCharacterStringType5: leftParen length . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 945


state 796

  279 nationalCharacterStringType2: leftParen length rightParen .

    $default  reduce using rule 279 (nationalCharacterStringType2)


state 797

  231 leftParen: . '('
  360 singleDatetimeField2: comma . leftParen intervalFractionalSecondsPrecision

    '('  shift, and go to state 295

    leftParen  go to state 946


state 798

  268 rightParen: . ')'
  358 singleDatetimeField3: leftParen intervalLeadingFieldPrecision singleDatetimeField2 . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 947


state 799

  267 unsignedInteger: . NUMBER
  351 endField1: leftParen . intervalFractionalSecondsPrecision rightParen
  352 intervalFractionalSecondsPrecision: . unsignedInteger

    NUMBER  shift, and go to state 542

    unsignedInteger                     go to state 948
    intervalFractionalSecondsPrecision  go to state 949


state 800

  349 endField: SECOND endField1 .

    $default  reduce using rule 349 (endField)


state 801

  341 startField1: leftParen intervalLeadingFieldPrecision rightParen .  [TO]
  356 singleDatetimeField1: leftParen intervalLeadingFieldPrecision rightParen .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, UNIQUE, COLLATE, KEY, AVG, INITIALLY, UPPER, CONSTRAINT, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, PRIMARY, CHECK, REFERENCES, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']

    TO        reduce using rule 341 (startField1)
    $default  reduce using rule 356 (singleDatetimeField1)


state 802

  406 currentTimeValueFunction1: leftParen timePrecision rightParen .

    $default  reduce using rule 406 (currentTimeValueFunction1)


state 803

  409 currentTimestampValueFunction1: leftParen timestampPrecision rightParen .

    $default  reduce using rule 409 (currentTimestampValueFunction1)


state 804

  396 intervalLiteral: INTERVAL intervalLiteral1 intervalString intervalQualifier .

    $default  reduce using rule 396 (intervalLiteral)


state 805

  417 columnConstraint: NOT NULL .

    $default  reduce using rule 417 (columnConstraint)


state 806

  231 leftParen: . '('
  428 referencedTableAndColumns: tableName . referencedTableAndColumns1
  429 referencedTableAndColumns1: .  [NOT, ON, DEFERRABLE, UNIQUE, COLLATE, INITIALLY, CONSTRAINT, PRIMARY, CHECK, REFERENCES, MATCH, ',', ')']
  430                           | . leftParen referenceColumnList rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 429 (referencedTableAndColumns1)

    leftParen                   go to state 950
    referencedTableAndColumns1  go to state 951


state 807

  423 referencesSpecification: REFERENCES referencedTableAndColumns . referencesSpecification1 referencesSpecification2
  424 referencesSpecification1: .  [NOT, ON, DEFERRABLE, UNIQUE, COLLATE, INITIALLY, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  425                         | . MATCH matchType

    MATCH  shift, and go to state 952

    $default  reduce using rule 424 (referencesSpecification1)

    referencesSpecification1  go to state 953


state 808

  879 constraintAttributes3: NOT .

    $default  reduce using rule 879 (constraintAttributes3)


state 809

  410 columnConstraintDefinition: columnConstraintDefinition1 columnConstraint columnConstraintDefinition2 .

    $default  reduce using rule 410 (columnConstraintDefinition)


state 810

  414 columnConstraintDefinition2: constraintAttributes .

    $default  reduce using rule 414 (columnConstraintDefinition2)


state 811

  873 constraintAttributes: constraintAttributes3 . DEFERRABLE constraintAttributes4

    DEFERRABLE  shift, and go to state 954


state 812

  872 constraintAttributes: constraintCheckTime . constraintAttributes2
  874 constraintAttributes2: .  [NOT, UNIQUE, COLLATE, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  875                      | . constraintAttributes1 DEFERRABLE
  876 constraintAttributes1: .  [DEFERRABLE]
  877                      | . NOT

    NOT  shift, and go to state 955

    NOT         [reduce using rule 874 (constraintAttributes2)]
    DEFERRABLE  reduce using rule 876 (constraintAttributes1)
    $default    reduce using rule 874 (constraintAttributes2)

    constraintAttributes2  go to state 956
    constraintAttributes1  go to state 957


state 813

  451 searchCondition: searchCondition OR booleanTerm .  [HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, THEN, JOIN, LEFT, FULL, ON, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']
  453 booleanTerm: booleanTerm . AND booleanFactor

    AND  shift, and go to state 664

    $default  reduce using rule 451 (searchCondition)


state 814

  453 booleanTerm: booleanTerm AND booleanFactor .

    $default  reduce using rule 453 (booleanTerm)


state 815

  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  565 subquery: . leftParen queryExpression rightParen
  565         | leftParen . queryExpression rightParen
  566 queryExpression: . nonjoinQueryExpression
  567                | . joinedTable
  568 nonjoinQueryExpression: . nonjoinQueryTerm
  569                       | . queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  570                       | . queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  579 nonjoinQueryTerm: . nonjoinQueryPrimary
  580                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  585 nonjoinQueryPrimary: . simpleTable
  586                    | . leftParen nonjoinQueryExpression rightParen
  587 simpleTable: . querySpecification
  588            | . tableValueConstructor
  589            | . explicitTable
  590 querySpecification: . SELECT querySpecification1 selectList tableExpression
  615 tableReference: . tableName tableReference1
  616               | . derivedTable correlationSpecification
  617               | . joinedTable
  626 derivedTable: . tableSubquery
  627 tableSubquery: . subquery
  628 joinedTable: . crossJoin
  629            | . qualifiedJoin
  630            | . leftParen joinedTable rightParen
  631 crossJoin: . tableReference CROSS JOIN tableReference
  632 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  663 tableValueConstructor: . VALUES tableValueConstructorList
  667 explicitTable: . TABLE tableName
  668 queryTerm: . nonjoinQueryTerm
  669          | . joinedTable

    VALUES       shift, and go to state 837
    SELECT       shift, and go to state 838
    TABLE        shift, and go to state 839
    UNKNOWN_LEX  shift, and go to state 213
    MODULE       shift, and go to state 214
    '('          shift, and go to state 295

    $default  reduce using rule 220 (qualifiedName1)

    tableName                go to state 958
    qualifiedName            go to state 216
    qualifiedName1           go to state 217
    schemaName               go to state 218
    qualifiedLocalTableName  go to state 219
    leftParen                go to state 959
    subquery                 go to state 816
    queryExpression          go to state 846
    nonjoinQueryExpression   go to state 847
    nonjoinQueryTerm         go to state 848
    nonjoinQueryPrimary      go to state 849
    simpleTable              go to state 850
    querySpecification       go to state 851
    tableReference           go to state 852
    derivedTable             go to state 853
    tableSubquery            go to state 854
    joinedTable              go to state 855
    crossJoin                go to state 856
    qualifiedJoin            go to state 857
    tableValueConstructor    go to state 858
    explicitTable            go to state 859
    queryTerm                go to state 860


state 816

  627 tableSubquery: subquery .

    $default  reduce using rule 627 (tableSubquery)


state 817

  859 existsPredicate: EXISTS tableSubquery .

    $default  reduce using rule 859 (existsPredicate)


state 818

  450 searchCondition: . booleanTerm
  451                | . searchCondition OR booleanTerm
  452 booleanTerm: . booleanFactor
  453            | . booleanTerm AND booleanFactor
  454 booleanFactor: . booleanFactor1 booleanTest
  455 booleanFactor1: .  [EXISTS, CASE, CAST, DESC, NULL, ASC, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  456               | . NOT
  701 searchedWhenClause: WHEN . searchCondition THEN result

    NOT  shift, and go to state 603

    $default  reduce using rule 455 (booleanFactor1)

    searchCondition  go to state 960
    booleanTerm      go to state 605
    booleanFactor    go to state 606
    booleanFactor1   go to state 607


state 819

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  500                       | leftParen . valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  565         | leftParen . queryExpression rightParen
  566 queryExpression: . nonjoinQueryExpression
  567                | . joinedTable
  568 nonjoinQueryExpression: . nonjoinQueryTerm
  569                       | . queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  570                       | . queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  579 nonjoinQueryTerm: . nonjoinQueryPrimary
  580                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  585 nonjoinQueryPrimary: . simpleTable
  586                    | . leftParen nonjoinQueryExpression rightParen
  587 simpleTable: . querySpecification
  588            | . tableValueConstructor
  589            | . explicitTable
  590 querySpecification: . SELECT querySpecification1 selectList tableExpression
  615 tableReference: . tableName tableReference1
  616               | . derivedTable correlationSpecification
  617               | . joinedTable
  626 derivedTable: . tableSubquery
  627 tableSubquery: . subquery
  628 joinedTable: . crossJoin
  629            | . qualifiedJoin
  630            | . leftParen joinedTable rightParen
  631 crossJoin: . tableReference CROSS JOIN tableReference
  632 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  663 tableValueConstructor: . VALUES tableValueConstructorList
  667 explicitTable: . TABLE tableName
  668 queryTerm: . nonjoinQueryTerm
  669          | . joinedTable
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787                        | leftParen . datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression

    VALUES             shift, and go to state 837
    SELECT             shift, and go to state 838
    TABLE              shift, and go to state 839
    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 840
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 841
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 961
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 845
    queryExpression                 go to state 846
    nonjoinQueryExpression          go to state 847
    nonjoinQueryTerm                go to state 848
    nonjoinQueryPrimary             go to state 849
    simpleTable                     go to state 850
    querySpecification              go to state 851
    tableReference                  go to state 852
    derivedTable                    go to state 853
    tableSubquery                   go to state 854
    joinedTable                     go to state 855
    crossJoin                       go to state 856
    qualifiedJoin                   go to state 857
    tableValueConstructor           go to state 858
    explicitTable                   go to state 859
    queryTerm                       go to state 860
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 861
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761


state 820

  689 caseOperand: valueExpression .

    $default  reduce using rule 689 (caseOperand)


state 821

  564 scalarSubquery: subquery .

    $default  reduce using rule 564 (scalarSubquery)


state 822

  684 simpleCase: CASE caseOperand . simpleCase1 simpleCase2 END
  685 simpleCase1: . simpleWhenClause
  686            | . simpleCase1 simpleWhenClause
  690 simpleWhenClause: . WHEN whenOperand THEN result

    WHEN  shift, and go to state 962

    simpleCase1       go to state 963
    simpleWhenClause  go to state 964


state 823

  695 elseClause: . ELSE result
  696 searchedCase: CASE searchedCase1 . searchedCase2 END
  698 searchedCase1: searchedCase1 . searchedWhenClause
  699 searchedCase2: .  [END]
  700              | . elseClause
  701 searchedWhenClause: . WHEN searchCondition THEN result

    WHEN  shift, and go to state 818
    ELSE  shift, and go to state 965

    $default  reduce using rule 699 (searchedCase2)

    elseClause          go to state 966
    searchedCase2       go to state 967
    searchedWhenClause  go to state 968


state 824

  697 searchedCase1: searchedWhenClause .

    $default  reduce using rule 697 (searchedCase1)


state 825

  714 concatenation: characterValueExpression . concatenationOperator characterFactor
  715 concatenationOperator: . UNKNOWN_LEX
  809 stringValueExpression: characterValueExpression .  [HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, ON, AS, IS, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']

    UNKNOWN_LEX  shift, and go to state 921

    $default  reduce using rule 809 (stringValueExpression)

    concatenationOperator  go to state 922


state 826

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  702                  | CAST leftParen . castOperand AS castTarget rightParen
  703 castOperand: . valueExpression
  704            | . NULL
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    NULL               shift, and go to state 969
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 819
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 970
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    castOperand                     go to state 971
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761


state 827

  852 nullPredicate1: NOT .

    $default  reduce using rule 852 (nullPredicate1)


state 828

  850 nullPredicate: IS nullPredicate1 . NULL

    NULL  shift, and go to state 972


state 829

  551 setFunctionSpecification: COUNT leftParen . asterisk rightParen
  553 asterisk: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 973

    asterisk  go to state 974


state 830

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | NULLIF leftParen . valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 819
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 975
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761


state 831

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  728                           | SUBSTRING leftParen . characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  753                     | SUBSTRING leftParen . bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction

    CASE              shift, and go to state 666
    CAST              shift, and go to state 667
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 883
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 671
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 672
    SESSION_USER      shift, and go to state 673
    DATE              shift, and go to state 496
    NULLIF            shift, and go to state 674
    SUM               shift, and go to state 675
    KEY               shift, and go to state 42
    AVG               shift, and go to state 676
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 677
    TIMESTAMP         shift, and go to state 498
    MODULE            shift, and go to state 214
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 499
    SYSTEM_USER       shift, and go to state 678
    SUBSTRING         shift, and go to state 679
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 680
    MAX               shift, and go to state 681
    LOWER             shift, and go to state 682
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 683
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 684
    CURRENT_USER      shift, and go to state 685
    TRANSLATE         shift, and go to state 686
    INTERVAL          shift, and go to state 505
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 688
    TRIM              shift, and go to state 689
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 295

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 890
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    valueExpressionPrimary          go to state 976
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 977
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 978
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750


state 832

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  734     | LOWER leftParen . characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

    CASE              shift, and go to state 666
    CAST              shift, and go to state 667
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 883
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 671
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 672
    SESSION_USER      shift, and go to state 673
    DATE              shift, and go to state 496
    NULLIF            shift, and go to state 674
    SUM               shift, and go to state 675
    KEY               shift, and go to state 42
    AVG               shift, and go to state 676
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 677
    TIMESTAMP         shift, and go to state 498
    MODULE            shift, and go to state 214
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 499
    SYSTEM_USER       shift, and go to state 678
    SUBSTRING         shift, and go to state 679
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 680
    MAX               shift, and go to state 681
    LOWER             shift, and go to state 682
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 683
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 684
    CURRENT_USER      shift, and go to state 685
    TRANSLATE         shift, and go to state 686
    INTERVAL          shift, and go to state 505
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 688
    TRIM              shift, and go to state 689
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 295

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 890
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    valueExpressionPrimary          go to state 979
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 980
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 981
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746


state 833

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  735                    | CONVERT leftParen . characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

    CASE              shift, and go to state 666
    CAST              shift, and go to state 667
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 883
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 671
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 672
    SESSION_USER      shift, and go to state 673
    DATE              shift, and go to state 496
    NULLIF            shift, and go to state 674
    SUM               shift, and go to state 675
    KEY               shift, and go to state 42
    AVG               shift, and go to state 676
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 677
    TIMESTAMP         shift, and go to state 498
    MODULE            shift, and go to state 214
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 499
    SYSTEM_USER       shift, and go to state 678
    SUBSTRING         shift, and go to state 679
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 680
    MAX               shift, and go to state 681
    LOWER             shift, and go to state 682
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 683
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 684
    CURRENT_USER      shift, and go to state 685
    TRANSLATE         shift, and go to state 686
    INTERVAL          shift, and go to state 505
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 688
    TRIM              shift, and go to state 689
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 295

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 890
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    valueExpressionPrimary          go to state 979
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 982
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 981
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746


state 834

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  737                     | TRANSLATE leftParen . characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

    CASE              shift, and go to state 666
    CAST              shift, and go to state 667
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 883
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 671
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 672
    SESSION_USER      shift, and go to state 673
    DATE              shift, and go to state 496
    NULLIF            shift, and go to state 674
    SUM               shift, and go to state 675
    KEY               shift, and go to state 42
    AVG               shift, and go to state 676
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 677
    TIMESTAMP         shift, and go to state 498
    MODULE            shift, and go to state 214
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 499
    SYSTEM_USER       shift, and go to state 678
    SUBSTRING         shift, and go to state 679
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 680
    MAX               shift, and go to state 681
    LOWER             shift, and go to state 682
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 683
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 684
    CURRENT_USER      shift, and go to state 685
    TRANSLATE         shift, and go to state 686
    INTERVAL          shift, and go to state 505
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 688
    TRIM              shift, and go to state 689
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 295

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 890
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    valueExpressionPrimary          go to state 979
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 983
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 981
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746


state 835

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  679                 | COALESCE leftParen . valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 819
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 984
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761


state 836

  739 trimFunction: TRIM leftParen . trimOperands rightParen
  740 trimOperands: . trimOperands3 trimSource
  741 trimOperands3: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  742              | . trimOperands1 trimOperands2 FROM
  743 trimOperands1: .  [FROM, CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  744              | . trimSpecification
  747 trimSpecification: . LEADING
  748                  | . TRAILING
  749                  | . BOTH

    BOTH      shift, and go to state 985
    LEADING   shift, and go to state 986
    TRAILING  shift, and go to state 987

    FROM              reduce using rule 743 (trimOperands1)
    CASE              reduce using rule 741 (trimOperands3)
    CASE              [reduce using rule 743 (trimOperands1)]
    CAST              reduce using rule 741 (trimOperands3)
    CAST              [reduce using rule 743 (trimOperands1)]
    DESC              reduce using rule 741 (trimOperands3)
    DESC              [reduce using rule 743 (trimOperands1)]
    ASC               reduce using rule 741 (trimOperands3)
    ASC               [reduce using rule 743 (trimOperands1)]
    UNKNOWN_LEX       reduce using rule 741 (trimOperands3)
    UNKNOWN_LEX       [reduce using rule 743 (trimOperands1)]
    ACTION            reduce using rule 741 (trimOperands3)
    ACTION            [reduce using rule 743 (trimOperands1)]
    MIN               reduce using rule 741 (trimOperands3)
    MIN               [reduce using rule 743 (trimOperands1)]
    OCTET_LENGTH      reduce using rule 741 (trimOperands3)
    OCTET_LENGTH      [reduce using rule 743 (trimOperands1)]
    DEFERRED          reduce using rule 741 (trimOperands3)
    DEFERRED          [reduce using rule 743 (trimOperands1)]
    DEFERRABLE        reduce using rule 741 (trimOperands3)
    DEFERRABLE        [reduce using rule 743 (trimOperands1)]
    ZONE              reduce using rule 741 (trimOperands3)
    ZONE              [reduce using rule 743 (trimOperands1)]
    COUNT             reduce using rule 741 (trimOperands3)
    COUNT             [reduce using rule 743 (trimOperands1)]
    SESSION_USER      reduce using rule 741 (trimOperands3)
    SESSION_USER      [reduce using rule 743 (trimOperands1)]
    DATE              reduce using rule 741 (trimOperands3)
    DATE              [reduce using rule 743 (trimOperands1)]
    NULLIF            reduce using rule 741 (trimOperands3)
    NULLIF            [reduce using rule 743 (trimOperands1)]
    SUM               reduce using rule 741 (trimOperands3)
    SUM               [reduce using rule 743 (trimOperands1)]
    KEY               reduce using rule 741 (trimOperands3)
    KEY               [reduce using rule 743 (trimOperands1)]
    AVG               reduce using rule 741 (trimOperands3)
    AVG               [reduce using rule 743 (trimOperands1)]
    INITIALLY         reduce using rule 741 (trimOperands3)
    INITIALLY         [reduce using rule 743 (trimOperands1)]
    UPPER             reduce using rule 741 (trimOperands3)
    UPPER             [reduce using rule 743 (trimOperands1)]
    TIMESTAMP         reduce using rule 741 (trimOperands3)
    TIMESTAMP         [reduce using rule 743 (trimOperands1)]
    MODULE            reduce using rule 741 (trimOperands3)
    MODULE            [reduce using rule 743 (trimOperands1)]
    EXTRACT           reduce using rule 741 (trimOperands3)
    EXTRACT           [reduce using rule 743 (trimOperands1)]
    CHAR_LENGTH       reduce using rule 741 (trimOperands3)
    CHAR_LENGTH       [reduce using rule 743 (trimOperands1)]
    TIME              reduce using rule 741 (trimOperands3)
    TIME              [reduce using rule 743 (trimOperands1)]
    SYSTEM_USER       reduce using rule 741 (trimOperands3)
    SYSTEM_USER       [reduce using rule 743 (trimOperands1)]
    SUBSTRING         reduce using rule 741 (trimOperands3)
    SUBSTRING         [reduce using rule 743 (trimOperands1)]
    PARTIAL           reduce using rule 741 (trimOperands3)
    PARTIAL           [reduce using rule 743 (trimOperands1)]
    USER              reduce using rule 741 (trimOperands3)
    USER              [reduce using rule 743 (trimOperands1)]
    MAX               reduce using rule 741 (trimOperands3)
    MAX               [reduce using rule 743 (trimOperands1)]
    LOWER             reduce using rule 741 (trimOperands3)
    LOWER             [reduce using rule 743 (trimOperands1)]
    CASCADE           reduce using rule 741 (trimOperands3)
    CASCADE           [reduce using rule 743 (trimOperands1)]
    TEMPORARY         reduce using rule 741 (trimOperands3)
    TEMPORARY         [reduce using rule 743 (trimOperands1)]
    VALUE             reduce using rule 741 (trimOperands3)
    VALUE             [reduce using rule 743 (trimOperands1)]
    CHARACTER_LENGTH  reduce using rule 741 (trimOperands3)
    CHARACTER_LENGTH  [reduce using rule 743 (trimOperands1)]
    CONVERT           reduce using rule 741 (trimOperands3)
    CONVERT           [reduce using rule 743 (trimOperands1)]
    CURRENT_USER      reduce using rule 741 (trimOperands3)
    CURRENT_USER      [reduce using rule 743 (trimOperands1)]
    TRANSLATE         reduce using rule 741 (trimOperands3)
    TRANSLATE         [reduce using rule 743 (trimOperands1)]
    INTERVAL          reduce using rule 741 (trimOperands3)
    INTERVAL          [reduce using rule 743 (trimOperands1)]
    PRESERVE          reduce using rule 741 (trimOperands3)
    PRESERVE          [reduce using rule 743 (trimOperands1)]
    POSITION          reduce using rule 741 (trimOperands3)
    POSITION          [reduce using rule 743 (trimOperands1)]
    COALESCE          reduce using rule 741 (trimOperands3)
    COALESCE          [reduce using rule 743 (trimOperands1)]
    TRIM              reduce using rule 741 (trimOperands3)
    TRIM              [reduce using rule 743 (trimOperands1)]
    NUMBER            reduce using rule 741 (trimOperands3)
    NUMBER            [reduce using rule 743 (trimOperands1)]
    ID                reduce using rule 741 (trimOperands3)
    ID                [reduce using rule 743 (trimOperands1)]
    '('               reduce using rule 741 (trimOperands3)
    '('               [reduce using rule 743 (trimOperands1)]
    $default          reduce using rule 741 (trimOperands3)

    trimOperands       go to state 988
    trimOperands3      go to state 989
    trimOperands1      go to state 990
    trimSpecification  go to state 991


state 837

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  474 rowValueConstructor: . rowValueConstructorElement
  475                    | . leftParen rowValueConstructorList rightParen
  476                    | . rowSubquery
  477 rowValueConstructorElement: . valueExpression
  478                           | . nullSpecification
  479                           | . defaultSpecification
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  663 tableValueConstructor: VALUES . tableValueConstructorList
  664 tableValueConstructorList: . rowValueConstructor tableValueConstructorList1
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression
  813 nullSpecification: . NULL
  814 defaultSpecification: . DEFAULT
  818 rowSubquery: . subquery

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    NULL               shift, and go to state 668
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    DEFAULT            shift, and go to state 687
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 992
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    rowValueConstructor             go to state 993
    rowValueConstructorElement      go to state 702
    valueExpression                 go to state 703
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 727
    tableValueConstructorList       go to state 994
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761
    nullSpecification               go to state 762
    defaultSpecification            go to state 763
    rowSubquery                     go to state 764


state 838

  562 setQuantifier: . DISTINCT
  563              | . ALL
  590 querySpecification: SELECT . querySpecification1 selectList tableExpression
  591 querySpecification1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  592                    | . setQuantifier

    DISTINCT  shift, and go to state 995
    ALL       shift, and go to state 996

    $default  reduce using rule 591 (querySpecification1)

    setQuantifier        go to state 997
    querySpecification1  go to state 998


state 839

  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  226 qualifiedLocalTableName: . MODULE period localTableName
  667 explicitTable: TABLE . tableName

    UNKNOWN_LEX  shift, and go to state 213
    MODULE       shift, and go to state 214

    $default  reduce using rule 220 (qualifiedName1)

    tableName                go to state 999
    qualifiedName            go to state 216
    qualifiedName1           go to state 217
    schemaName               go to state 218
    qualifiedLocalTableName  go to state 219


state 840

  548 qualifier: tableName .  [UNKNOWN_LEX]
  615 tableReference: tableName . tableReference1
  618 tableReference1: .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL, CROSS, NATURAL]
  619                | . correlationSpecification
  620 correlationSpecification: . correlationSpecification1 correlationName correlationSpecification2
  621 correlationSpecification1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  622                          | . AS

    AS  shift, and go to state 1000

    RIGHT        reduce using rule 618 (tableReference1)
    INNER        reduce using rule 618 (tableReference1)
    UNION        reduce using rule 618 (tableReference1)
    JOIN         reduce using rule 618 (tableReference1)
    LEFT         reduce using rule 618 (tableReference1)
    FULL         reduce using rule 618 (tableReference1)
    UNKNOWN_LEX  reduce using rule 548 (qualifier)
    CROSS        reduce using rule 618 (tableReference1)
    NATURAL      reduce using rule 618 (tableReference1)
    $default     reduce using rule 621 (correlationSpecification1)

    tableReference1            go to state 1001
    correlationSpecification   go to state 1002
    correlationSpecification1  go to state 1003


state 841

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  500                       | leftParen . valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  565         | leftParen . queryExpression rightParen
  566 queryExpression: . nonjoinQueryExpression
  567                | . joinedTable
  568 nonjoinQueryExpression: . nonjoinQueryTerm
  569                       | . queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  570                       | . queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  579 nonjoinQueryTerm: . nonjoinQueryPrimary
  580                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  585 nonjoinQueryPrimary: . simpleTable
  586                    | . leftParen nonjoinQueryExpression rightParen
  586                    | leftParen . nonjoinQueryExpression rightParen
  587 simpleTable: . querySpecification
  588            | . tableValueConstructor
  589            | . explicitTable
  590 querySpecification: . SELECT querySpecification1 selectList tableExpression
  615 tableReference: . tableName tableReference1
  616               | . derivedTable correlationSpecification
  617               | . joinedTable
  626 derivedTable: . tableSubquery
  627 tableSubquery: . subquery
  628 joinedTable: . crossJoin
  629            | . qualifiedJoin
  630            | . leftParen joinedTable rightParen
  630            | leftParen . joinedTable rightParen
  631 crossJoin: . tableReference CROSS JOIN tableReference
  632 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  663 tableValueConstructor: . VALUES tableValueConstructorList
  667 explicitTable: . TABLE tableName
  668 queryTerm: . nonjoinQueryTerm
  669          | . joinedTable
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787                        | leftParen . datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression

    VALUES             shift, and go to state 837
    SELECT             shift, and go to state 838
    TABLE              shift, and go to state 839
    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 840
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 841
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 961
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 845
    queryExpression                 go to state 846
    nonjoinQueryExpression          go to state 1004
    nonjoinQueryTerm                go to state 848
    nonjoinQueryPrimary             go to state 849
    simpleTable                     go to state 850
    querySpecification              go to state 851
    tableReference                  go to state 852
    derivedTable                    go to state 853
    tableSubquery                   go to state 854
    joinedTable                     go to state 1005
    crossJoin                       go to state 856
    qualifiedJoin                   go to state 857
    tableValueConstructor           go to state 858
    explicitTable                   go to state 859
    queryTerm                       go to state 860
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 861
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761


state 842

  268 rightParen: . ')'
  451 searchCondition: searchCondition . OR booleanTerm
  463 booleanPrimary: leftParen searchCondition . rightParen

    OR   shift, and go to state 662
    ')'  shift, and go to state 449

    rightParen  go to state 1006


state 843

  815 rowValueConstructorList: rowValueConstructorElement . rowValueConstructorList1
  816 rowValueConstructorList1: .
  817                         | . rowValueConstructorList1 comma rowValueConstructorElement

    $default  reduce using rule 816 (rowValueConstructorList1)

    rowValueConstructorList1  go to state 1007


state 844

  268 rightParen: . ')'
  477 rowValueConstructorElement: valueExpression .  [',', ')']
  500 valueExpressionPrimary: leftParen valueExpression . rightParen

    ')'  shift, and go to state 449

    ')'       [reduce using rule 477 (rowValueConstructorElement)]
    $default  reduce using rule 477 (rowValueConstructorElement)

    rightParen  go to state 1008


state 845

  564 scalarSubquery: subquery .  [UNKNOWN_LEX, COLLATE, AT, ',', ')']
  627 tableSubquery: subquery .  [DESC, ASC, AS, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]

    UNKNOWN_LEX  reduce using rule 564 (scalarSubquery)
    COLLATE      reduce using rule 564 (scalarSubquery)
    AT           reduce using rule 564 (scalarSubquery)
    ','          reduce using rule 564 (scalarSubquery)
    ')'          reduce using rule 564 (scalarSubquery)
    $default     reduce using rule 627 (tableSubquery)


state 846

  268 rightParen: . ')'
  565 subquery: leftParen queryExpression . rightParen
  569 nonjoinQueryExpression: queryExpression . UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  570                       | queryExpression . EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm

    UNION   shift, and go to state 1009
    EXCEPT  shift, and go to state 1010
    ')'     shift, and go to state 449

    rightParen  go to state 1011


state 847

  566 queryExpression: nonjoinQueryExpression .

    $default  reduce using rule 566 (queryExpression)


state 848

  568 nonjoinQueryExpression: nonjoinQueryTerm .  [UNION, EXCEPT, ')']
  668 queryTerm: nonjoinQueryTerm .  [INTERSECT]

    INTERSECT  reduce using rule 668 (queryTerm)
    $default   reduce using rule 568 (nonjoinQueryExpression)


state 849

  579 nonjoinQueryTerm: nonjoinQueryPrimary .

    $default  reduce using rule 579 (nonjoinQueryTerm)


state 850

  585 nonjoinQueryPrimary: simpleTable .

    $default  reduce using rule 585 (nonjoinQueryPrimary)


state 851

  587 simpleTable: querySpecification .

    $default  reduce using rule 587 (simpleTable)


state 852

  631 crossJoin: tableReference . CROSS JOIN tableReference
  632 qualifiedJoin: tableReference . qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  633 qualifiedJoin1: .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL]
  634               | . NATURAL

    CROSS    shift, and go to state 1012
    NATURAL  shift, and go to state 1013

    $default  reduce using rule 633 (qualifiedJoin1)

    qualifiedJoin1  go to state 1014


state 853

  616 tableReference: derivedTable . correlationSpecification
  620 correlationSpecification: . correlationSpecification1 correlationName correlationSpecification2
  621 correlationSpecification1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  622                          | . AS

    AS  shift, and go to state 1000

    $default  reduce using rule 621 (correlationSpecification1)

    correlationSpecification   go to state 1015
    correlationSpecification1  go to state 1003


state 854

  626 derivedTable: tableSubquery .

    $default  reduce using rule 626 (derivedTable)


state 855

  567 queryExpression: joinedTable .  [UNION, EXCEPT, ')']
  617 tableReference: joinedTable .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL, CROSS, NATURAL]
  669 queryTerm: joinedTable .  [INTERSECT]

    UNION      reduce using rule 567 (queryExpression)
    UNION      [reduce using rule 617 (tableReference)]
    INTERSECT  reduce using rule 669 (queryTerm)
    EXCEPT     reduce using rule 567 (queryExpression)
    ')'        reduce using rule 567 (queryExpression)
    $default   reduce using rule 617 (tableReference)


state 856

  628 joinedTable: crossJoin .

    $default  reduce using rule 628 (joinedTable)


state 857

  629 joinedTable: qualifiedJoin .

    $default  reduce using rule 629 (joinedTable)


state 858

  588 simpleTable: tableValueConstructor .

    $default  reduce using rule 588 (simpleTable)


state 859

  589 simpleTable: explicitTable .

    $default  reduce using rule 589 (simpleTable)


state 860

  580 nonjoinQueryTerm: queryTerm . INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary

    INTERSECT  shift, and go to state 1016


state 861

  482 valueExpression: datetimeValueExpression .  [',', ')']
  773 datetimeValueExpression: datetimeValueExpression . plusSign intervalTerm
  774                        | datetimeValueExpression . minusSign intervalTerm
  787 intervalValueExpression: leftParen datetimeValueExpression . minusSign datetimeTerm rightParen intervalQualifier
  801 plusSign: . UNKNOWN_LEX
  803 minusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 877

    $default  reduce using rule 482 (valueExpression)

    plusSign   go to state 926
    minusSign  go to state 1017


state 862

  268 rightParen: . ')'
  475 rowValueConstructor: leftParen rowValueConstructorList . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1018


state 863

  459 booleanTest2: IS . booleanTest1 truthValue
  460 booleanTest1: .  [UNKNOWN, TRUE, FALSE]
  461             | . NOT

    NOT  shift, and go to state 1019

    $default  reduce using rule 460 (booleanTest1)

    booleanTest1  go to state 1020


state 864

  457 booleanTest: booleanPrimary booleanTest2 .

    $default  reduce using rule 457 (booleanTest)


state 865

  833 betweenPredicate1: NOT .  [BETWEEN]
  836 inPredicate1: NOT .  [IN]

    IN        reduce using rule 836 (inPredicate1)
    $default  reduce using rule 833 (betweenPredicate1)


state 866

  825 equalsOperator: UNKNOWN_LEX .  [CASE, CAST, DESC, NULL, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, SOME, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, ALL, NULLIF, CURRENT_DATE, SUM, ANY, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  826 notEqualsOperator: UNKNOWN_LEX .  [CASE, CAST, DESC, NULL, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, SOME, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, ALL, NULLIF, CURRENT_DATE, SUM, ANY, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  827 lessThanOperator: UNKNOWN_LEX .  [CASE, CAST, DESC, NULL, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, SOME, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, ALL, NULLIF, CURRENT_DATE, SUM, ANY, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  828 greaterThanOperator: UNKNOWN_LEX .  [CASE, CAST, DESC, NULL, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, SOME, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, ALL, NULLIF, CURRENT_DATE, SUM, ANY, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  829 lessThanOrEqualsOperator: UNKNOWN_LEX .  [CASE, CAST, DESC, NULL, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, SOME, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, ALL, NULLIF, CURRENT_DATE, SUM, ANY, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  830 greaterThanOrEqualsOperator: UNKNOWN_LEX .  [CASE, CAST, DESC, NULL, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, SOME, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, ALL, NULLIF, CURRENT_DATE, SUM, ANY, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']

    CASE               reduce using rule 825 (equalsOperator)
    CASE               [reduce using rule 826 (notEqualsOperator)]
    CASE               [reduce using rule 827 (lessThanOperator)]
    CASE               [reduce using rule 828 (greaterThanOperator)]
    CASE               [reduce using rule 829 (lessThanOrEqualsOperator)]
    CASE               [reduce using rule 830 (greaterThanOrEqualsOperator)]
    CAST               reduce using rule 825 (equalsOperator)
    CAST               [reduce using rule 826 (notEqualsOperator)]
    CAST               [reduce using rule 827 (lessThanOperator)]
    CAST               [reduce using rule 828 (greaterThanOperator)]
    CAST               [reduce using rule 829 (lessThanOrEqualsOperator)]
    CAST               [reduce using rule 830 (greaterThanOrEqualsOperator)]
    DESC               reduce using rule 825 (equalsOperator)
    DESC               [reduce using rule 826 (notEqualsOperator)]
    DESC               [reduce using rule 827 (lessThanOperator)]
    DESC               [reduce using rule 828 (greaterThanOperator)]
    DESC               [reduce using rule 829 (lessThanOrEqualsOperator)]
    DESC               [reduce using rule 830 (greaterThanOrEqualsOperator)]
    NULL               reduce using rule 825 (equalsOperator)
    NULL               [reduce using rule 826 (notEqualsOperator)]
    NULL               [reduce using rule 827 (lessThanOperator)]
    NULL               [reduce using rule 828 (greaterThanOperator)]
    NULL               [reduce using rule 829 (lessThanOrEqualsOperator)]
    NULL               [reduce using rule 830 (greaterThanOrEqualsOperator)]
    ASC                reduce using rule 825 (equalsOperator)
    ASC                [reduce using rule 826 (notEqualsOperator)]
    ASC                [reduce using rule 827 (lessThanOperator)]
    ASC                [reduce using rule 828 (greaterThanOperator)]
    ASC                [reduce using rule 829 (lessThanOrEqualsOperator)]
    ASC                [reduce using rule 830 (greaterThanOrEqualsOperator)]
    UNKNOWN_LEX        reduce using rule 825 (equalsOperator)
    UNKNOWN_LEX        [reduce using rule 826 (notEqualsOperator)]
    UNKNOWN_LEX        [reduce using rule 827 (lessThanOperator)]
    UNKNOWN_LEX        [reduce using rule 828 (greaterThanOperator)]
    UNKNOWN_LEX        [reduce using rule 829 (lessThanOrEqualsOperator)]
    UNKNOWN_LEX        [reduce using rule 830 (greaterThanOrEqualsOperator)]
    ACTION             reduce using rule 825 (equalsOperator)
    ACTION             [reduce using rule 826 (notEqualsOperator)]
    ACTION             [reduce using rule 827 (lessThanOperator)]
    ACTION             [reduce using rule 828 (greaterThanOperator)]
    ACTION             [reduce using rule 829 (lessThanOrEqualsOperator)]
    ACTION             [reduce using rule 830 (greaterThanOrEqualsOperator)]
    MIN                reduce using rule 825 (equalsOperator)
    MIN                [reduce using rule 826 (notEqualsOperator)]
    MIN                [reduce using rule 827 (lessThanOperator)]
    MIN                [reduce using rule 828 (greaterThanOperator)]
    MIN                [reduce using rule 829 (lessThanOrEqualsOperator)]
    MIN                [reduce using rule 830 (greaterThanOrEqualsOperator)]
    OCTET_LENGTH       reduce using rule 825 (equalsOperator)
    OCTET_LENGTH       [reduce using rule 826 (notEqualsOperator)]
    OCTET_LENGTH       [reduce using rule 827 (lessThanOperator)]
    OCTET_LENGTH       [reduce using rule 828 (greaterThanOperator)]
    OCTET_LENGTH       [reduce using rule 829 (lessThanOrEqualsOperator)]
    OCTET_LENGTH       [reduce using rule 830 (greaterThanOrEqualsOperator)]
    SOME               reduce using rule 825 (equalsOperator)
    SOME               [reduce using rule 826 (notEqualsOperator)]
    SOME               [reduce using rule 827 (lessThanOperator)]
    SOME               [reduce using rule 828 (greaterThanOperator)]
    SOME               [reduce using rule 829 (lessThanOrEqualsOperator)]
    SOME               [reduce using rule 830 (greaterThanOrEqualsOperator)]
    DEFERRED           reduce using rule 825 (equalsOperator)
    DEFERRED           [reduce using rule 826 (notEqualsOperator)]
    DEFERRED           [reduce using rule 827 (lessThanOperator)]
    DEFERRED           [reduce using rule 828 (greaterThanOperator)]
    DEFERRED           [reduce using rule 829 (lessThanOrEqualsOperator)]
    DEFERRED           [reduce using rule 830 (greaterThanOrEqualsOperator)]
    DEFERRABLE         reduce using rule 825 (equalsOperator)
    DEFERRABLE         [reduce using rule 826 (notEqualsOperator)]
    DEFERRABLE         [reduce using rule 827 (lessThanOperator)]
    DEFERRABLE         [reduce using rule 828 (greaterThanOperator)]
    DEFERRABLE         [reduce using rule 829 (lessThanOrEqualsOperator)]
    DEFERRABLE         [reduce using rule 830 (greaterThanOrEqualsOperator)]
    ZONE               reduce using rule 825 (equalsOperator)
    ZONE               [reduce using rule 826 (notEqualsOperator)]
    ZONE               [reduce using rule 827 (lessThanOperator)]
    ZONE               [reduce using rule 828 (greaterThanOperator)]
    ZONE               [reduce using rule 829 (lessThanOrEqualsOperator)]
    ZONE               [reduce using rule 830 (greaterThanOrEqualsOperator)]
    COUNT              reduce using rule 825 (equalsOperator)
    COUNT              [reduce using rule 826 (notEqualsOperator)]
    COUNT              [reduce using rule 827 (lessThanOperator)]
    COUNT              [reduce using rule 828 (greaterThanOperator)]
    COUNT              [reduce using rule 829 (lessThanOrEqualsOperator)]
    COUNT              [reduce using rule 830 (greaterThanOrEqualsOperator)]
    SESSION_USER       reduce using rule 825 (equalsOperator)
    SESSION_USER       [reduce using rule 826 (notEqualsOperator)]
    SESSION_USER       [reduce using rule 827 (lessThanOperator)]
    SESSION_USER       [reduce using rule 828 (greaterThanOperator)]
    SESSION_USER       [reduce using rule 829 (lessThanOrEqualsOperator)]
    SESSION_USER       [reduce using rule 830 (greaterThanOrEqualsOperator)]
    DATE               reduce using rule 825 (equalsOperator)
    DATE               [reduce using rule 826 (notEqualsOperator)]
    DATE               [reduce using rule 827 (lessThanOperator)]
    DATE               [reduce using rule 828 (greaterThanOperator)]
    DATE               [reduce using rule 829 (lessThanOrEqualsOperator)]
    DATE               [reduce using rule 830 (greaterThanOrEqualsOperator)]
    ALL                reduce using rule 825 (equalsOperator)
    ALL                [reduce using rule 826 (notEqualsOperator)]
    ALL                [reduce using rule 827 (lessThanOperator)]
    ALL                [reduce using rule 828 (greaterThanOperator)]
    ALL                [reduce using rule 829 (lessThanOrEqualsOperator)]
    ALL                [reduce using rule 830 (greaterThanOrEqualsOperator)]
    NULLIF             reduce using rule 825 (equalsOperator)
    NULLIF             [reduce using rule 826 (notEqualsOperator)]
    NULLIF             [reduce using rule 827 (lessThanOperator)]
    NULLIF             [reduce using rule 828 (greaterThanOperator)]
    NULLIF             [reduce using rule 829 (lessThanOrEqualsOperator)]
    NULLIF             [reduce using rule 830 (greaterThanOrEqualsOperator)]
    CURRENT_DATE       reduce using rule 825 (equalsOperator)
    CURRENT_DATE       [reduce using rule 826 (notEqualsOperator)]
    CURRENT_DATE       [reduce using rule 827 (lessThanOperator)]
    CURRENT_DATE       [reduce using rule 828 (greaterThanOperator)]
    CURRENT_DATE       [reduce using rule 829 (lessThanOrEqualsOperator)]
    CURRENT_DATE       [reduce using rule 830 (greaterThanOrEqualsOperator)]
    SUM                reduce using rule 825 (equalsOperator)
    SUM                [reduce using rule 826 (notEqualsOperator)]
    SUM                [reduce using rule 827 (lessThanOperator)]
    SUM                [reduce using rule 828 (greaterThanOperator)]
    SUM                [reduce using rule 829 (lessThanOrEqualsOperator)]
    SUM                [reduce using rule 830 (greaterThanOrEqualsOperator)]
    ANY                reduce using rule 825 (equalsOperator)
    ANY                [reduce using rule 826 (notEqualsOperator)]
    ANY                [reduce using rule 827 (lessThanOperator)]
    ANY                [reduce using rule 828 (greaterThanOperator)]
    ANY                [reduce using rule 829 (lessThanOrEqualsOperator)]
    ANY                [reduce using rule 830 (greaterThanOrEqualsOperator)]
    KEY                reduce using rule 825 (equalsOperator)
    KEY                [reduce using rule 826 (notEqualsOperator)]
    KEY                [reduce using rule 827 (lessThanOperator)]
    KEY                [reduce using rule 828 (greaterThanOperator)]
    KEY                [reduce using rule 829 (lessThanOrEqualsOperator)]
    KEY                [reduce using rule 830 (greaterThanOrEqualsOperator)]
    AVG                reduce using rule 825 (equalsOperator)
    AVG                [reduce using rule 826 (notEqualsOperator)]
    AVG                [reduce using rule 827 (lessThanOperator)]
    AVG                [reduce using rule 828 (greaterThanOperator)]
    AVG                [reduce using rule 829 (lessThanOrEqualsOperator)]
    AVG                [reduce using rule 830 (greaterThanOrEqualsOperator)]
    INITIALLY          reduce using rule 825 (equalsOperator)
    INITIALLY          [reduce using rule 826 (notEqualsOperator)]
    INITIALLY          [reduce using rule 827 (lessThanOperator)]
    INITIALLY          [reduce using rule 828 (greaterThanOperator)]
    INITIALLY          [reduce using rule 829 (lessThanOrEqualsOperator)]
    INITIALLY          [reduce using rule 830 (greaterThanOrEqualsOperator)]
    UPPER              reduce using rule 825 (equalsOperator)
    UPPER              [reduce using rule 826 (notEqualsOperator)]
    UPPER              [reduce using rule 827 (lessThanOperator)]
    UPPER              [reduce using rule 828 (greaterThanOperator)]
    UPPER              [reduce using rule 829 (lessThanOrEqualsOperator)]
    UPPER              [reduce using rule 830 (greaterThanOrEqualsOperator)]
    TIMESTAMP          reduce using rule 825 (equalsOperator)
    TIMESTAMP          [reduce using rule 826 (notEqualsOperator)]
    TIMESTAMP          [reduce using rule 827 (lessThanOperator)]
    TIMESTAMP          [reduce using rule 828 (greaterThanOperator)]
    TIMESTAMP          [reduce using rule 829 (lessThanOrEqualsOperator)]
    TIMESTAMP          [reduce using rule 830 (greaterThanOrEqualsOperator)]
    MODULE             reduce using rule 825 (equalsOperator)
    MODULE             [reduce using rule 826 (notEqualsOperator)]
    MODULE             [reduce using rule 827 (lessThanOperator)]
    MODULE             [reduce using rule 828 (greaterThanOperator)]
    MODULE             [reduce using rule 829 (lessThanOrEqualsOperator)]
    MODULE             [reduce using rule 830 (greaterThanOrEqualsOperator)]
    EXTRACT            reduce using rule 825 (equalsOperator)
    EXTRACT            [reduce using rule 826 (notEqualsOperator)]
    EXTRACT            [reduce using rule 827 (lessThanOperator)]
    EXTRACT            [reduce using rule 828 (greaterThanOperator)]
    EXTRACT            [reduce using rule 829 (lessThanOrEqualsOperator)]
    EXTRACT            [reduce using rule 830 (greaterThanOrEqualsOperator)]
    CHAR_LENGTH        reduce using rule 825 (equalsOperator)
    CHAR_LENGTH        [reduce using rule 826 (notEqualsOperator)]
    CHAR_LENGTH        [reduce using rule 827 (lessThanOperator)]
    CHAR_LENGTH        [reduce using rule 828 (greaterThanOperator)]
    CHAR_LENGTH        [reduce using rule 829 (lessThanOrEqualsOperator)]
    CHAR_LENGTH        [reduce using rule 830 (greaterThanOrEqualsOperator)]
    TIME               reduce using rule 825 (equalsOperator)
    TIME               [reduce using rule 826 (notEqualsOperator)]
    TIME               [reduce using rule 827 (lessThanOperator)]
    TIME               [reduce using rule 828 (greaterThanOperator)]
    TIME               [reduce using rule 829 (lessThanOrEqualsOperator)]
    TIME               [reduce using rule 830 (greaterThanOrEqualsOperator)]
    SYSTEM_USER        reduce using rule 825 (equalsOperator)
    SYSTEM_USER        [reduce using rule 826 (notEqualsOperator)]
    SYSTEM_USER        [reduce using rule 827 (lessThanOperator)]
    SYSTEM_USER        [reduce using rule 828 (greaterThanOperator)]
    SYSTEM_USER        [reduce using rule 829 (lessThanOrEqualsOperator)]
    SYSTEM_USER        [reduce using rule 830 (greaterThanOrEqualsOperator)]
    SUBSTRING          reduce using rule 825 (equalsOperator)
    SUBSTRING          [reduce using rule 826 (notEqualsOperator)]
    SUBSTRING          [reduce using rule 827 (lessThanOperator)]
    SUBSTRING          [reduce using rule 828 (greaterThanOperator)]
    SUBSTRING          [reduce using rule 829 (lessThanOrEqualsOperator)]
    SUBSTRING          [reduce using rule 830 (greaterThanOrEqualsOperator)]
    CURRENT_TIME       reduce using rule 825 (equalsOperator)
    CURRENT_TIME       [reduce using rule 826 (notEqualsOperator)]
    CURRENT_TIME       [reduce using rule 827 (lessThanOperator)]
    CURRENT_TIME       [reduce using rule 828 (greaterThanOperator)]
    CURRENT_TIME       [reduce using rule 829 (lessThanOrEqualsOperator)]
    CURRENT_TIME       [reduce using rule 830 (greaterThanOrEqualsOperator)]
    PARTIAL            reduce using rule 825 (equalsOperator)
    PARTIAL            [reduce using rule 826 (notEqualsOperator)]
    PARTIAL            [reduce using rule 827 (lessThanOperator)]
    PARTIAL            [reduce using rule 828 (greaterThanOperator)]
    PARTIAL            [reduce using rule 829 (lessThanOrEqualsOperator)]
    PARTIAL            [reduce using rule 830 (greaterThanOrEqualsOperator)]
    USER               reduce using rule 825 (equalsOperator)
    USER               [reduce using rule 826 (notEqualsOperator)]
    USER               [reduce using rule 827 (lessThanOperator)]
    USER               [reduce using rule 828 (greaterThanOperator)]
    USER               [reduce using rule 829 (lessThanOrEqualsOperator)]
    USER               [reduce using rule 830 (greaterThanOrEqualsOperator)]
    MAX                reduce using rule 825 (equalsOperator)
    MAX                [reduce using rule 826 (notEqualsOperator)]
    MAX                [reduce using rule 827 (lessThanOperator)]
    MAX                [reduce using rule 828 (greaterThanOperator)]
    MAX                [reduce using rule 829 (lessThanOrEqualsOperator)]
    MAX                [reduce using rule 830 (greaterThanOrEqualsOperator)]
    CURRENT_TIMESTAMP  reduce using rule 825 (equalsOperator)
    CURRENT_TIMESTAMP  [reduce using rule 826 (notEqualsOperator)]
    CURRENT_TIMESTAMP  [reduce using rule 827 (lessThanOperator)]
    CURRENT_TIMESTAMP  [reduce using rule 828 (greaterThanOperator)]
    CURRENT_TIMESTAMP  [reduce using rule 829 (lessThanOrEqualsOperator)]
    CURRENT_TIMESTAMP  [reduce using rule 830 (greaterThanOrEqualsOperator)]
    LOWER              reduce using rule 825 (equalsOperator)
    LOWER              [reduce using rule 826 (notEqualsOperator)]
    LOWER              [reduce using rule 827 (lessThanOperator)]
    LOWER              [reduce using rule 828 (greaterThanOperator)]
    LOWER              [reduce using rule 829 (lessThanOrEqualsOperator)]
    LOWER              [reduce using rule 830 (greaterThanOrEqualsOperator)]
    CASCADE            reduce using rule 825 (equalsOperator)
    CASCADE            [reduce using rule 826 (notEqualsOperator)]
    CASCADE            [reduce using rule 827 (lessThanOperator)]
    CASCADE            [reduce using rule 828 (greaterThanOperator)]
    CASCADE            [reduce using rule 829 (lessThanOrEqualsOperator)]
    CASCADE            [reduce using rule 830 (greaterThanOrEqualsOperator)]
    TEMPORARY          reduce using rule 825 (equalsOperator)
    TEMPORARY          [reduce using rule 826 (notEqualsOperator)]
    TEMPORARY          [reduce using rule 827 (lessThanOperator)]
    TEMPORARY          [reduce using rule 828 (greaterThanOperator)]
    TEMPORARY          [reduce using rule 829 (lessThanOrEqualsOperator)]
    TEMPORARY          [reduce using rule 830 (greaterThanOrEqualsOperator)]
    BIT_LENGTH         reduce using rule 825 (equalsOperator)
    BIT_LENGTH         [reduce using rule 826 (notEqualsOperator)]
    BIT_LENGTH         [reduce using rule 827 (lessThanOperator)]
    BIT_LENGTH         [reduce using rule 828 (greaterThanOperator)]
    BIT_LENGTH         [reduce using rule 829 (lessThanOrEqualsOperator)]
    BIT_LENGTH         [reduce using rule 830 (greaterThanOrEqualsOperator)]
    VALUE              reduce using rule 825 (equalsOperator)
    VALUE              [reduce using rule 826 (notEqualsOperator)]
    VALUE              [reduce using rule 827 (lessThanOperator)]
    VALUE              [reduce using rule 828 (greaterThanOperator)]
    VALUE              [reduce using rule 829 (lessThanOrEqualsOperator)]
    VALUE              [reduce using rule 830 (greaterThanOrEqualsOperator)]
    CHARACTER_LENGTH   reduce using rule 825 (equalsOperator)
    CHARACTER_LENGTH   [reduce using rule 826 (notEqualsOperator)]
    CHARACTER_LENGTH   [reduce using rule 827 (lessThanOperator)]
    CHARACTER_LENGTH   [reduce using rule 828 (greaterThanOperator)]
    CHARACTER_LENGTH   [reduce using rule 829 (lessThanOrEqualsOperator)]
    CHARACTER_LENGTH   [reduce using rule 830 (greaterThanOrEqualsOperator)]
    CONVERT            reduce using rule 825 (equalsOperator)
    CONVERT            [reduce using rule 826 (notEqualsOperator)]
    CONVERT            [reduce using rule 827 (lessThanOperator)]
    CONVERT            [reduce using rule 828 (greaterThanOperator)]
    CONVERT            [reduce using rule 829 (lessThanOrEqualsOperator)]
    CONVERT            [reduce using rule 830 (greaterThanOrEqualsOperator)]
    CURRENT_USER       reduce using rule 825 (equalsOperator)
    CURRENT_USER       [reduce using rule 826 (notEqualsOperator)]
    CURRENT_USER       [reduce using rule 827 (lessThanOperator)]
    CURRENT_USER       [reduce using rule 828 (greaterThanOperator)]
    CURRENT_USER       [reduce using rule 829 (lessThanOrEqualsOperator)]
    CURRENT_USER       [reduce using rule 830 (greaterThanOrEqualsOperator)]
    TRANSLATE          reduce using rule 825 (equalsOperator)
    TRANSLATE          [reduce using rule 826 (notEqualsOperator)]
    TRANSLATE          [reduce using rule 827 (lessThanOperator)]
    TRANSLATE          [reduce using rule 828 (greaterThanOperator)]
    TRANSLATE          [reduce using rule 829 (lessThanOrEqualsOperator)]
    TRANSLATE          [reduce using rule 830 (greaterThanOrEqualsOperator)]
    INTERVAL           reduce using rule 825 (equalsOperator)
    INTERVAL           [reduce using rule 826 (notEqualsOperator)]
    INTERVAL           [reduce using rule 827 (lessThanOperator)]
    INTERVAL           [reduce using rule 828 (greaterThanOperator)]
    INTERVAL           [reduce using rule 829 (lessThanOrEqualsOperator)]
    INTERVAL           [reduce using rule 830 (greaterThanOrEqualsOperator)]
    DEFAULT            reduce using rule 825 (equalsOperator)
    DEFAULT            [reduce using rule 826 (notEqualsOperator)]
    DEFAULT            [reduce using rule 827 (lessThanOperator)]
    DEFAULT            [reduce using rule 828 (greaterThanOperator)]
    DEFAULT            [reduce using rule 829 (lessThanOrEqualsOperator)]
    DEFAULT            [reduce using rule 830 (greaterThanOrEqualsOperator)]
    PRESERVE           reduce using rule 825 (equalsOperator)
    PRESERVE           [reduce using rule 826 (notEqualsOperator)]
    PRESERVE           [reduce using rule 827 (lessThanOperator)]
    PRESERVE           [reduce using rule 828 (greaterThanOperator)]
    PRESERVE           [reduce using rule 829 (lessThanOrEqualsOperator)]
    PRESERVE           [reduce using rule 830 (greaterThanOrEqualsOperator)]
    POSITION           reduce using rule 825 (equalsOperator)
    POSITION           [reduce using rule 826 (notEqualsOperator)]
    POSITION           [reduce using rule 827 (lessThanOperator)]
    POSITION           [reduce using rule 828 (greaterThanOperator)]
    POSITION           [reduce using rule 829 (lessThanOrEqualsOperator)]
    POSITION           [reduce using rule 830 (greaterThanOrEqualsOperator)]
    COALESCE           reduce using rule 825 (equalsOperator)
    COALESCE           [reduce using rule 826 (notEqualsOperator)]
    COALESCE           [reduce using rule 827 (lessThanOperator)]
    COALESCE           [reduce using rule 828 (greaterThanOperator)]
    COALESCE           [reduce using rule 829 (lessThanOrEqualsOperator)]
    COALESCE           [reduce using rule 830 (greaterThanOrEqualsOperator)]
    TRIM               reduce using rule 825 (equalsOperator)
    TRIM               [reduce using rule 826 (notEqualsOperator)]
    TRIM               [reduce using rule 827 (lessThanOperator)]
    TRIM               [reduce using rule 828 (greaterThanOperator)]
    TRIM               [reduce using rule 829 (lessThanOrEqualsOperator)]
    TRIM               [reduce using rule 830 (greaterThanOrEqualsOperator)]
    NUMBER             reduce using rule 825 (equalsOperator)
    NUMBER             [reduce using rule 826 (notEqualsOperator)]
    NUMBER             [reduce using rule 827 (lessThanOperator)]
    NUMBER             [reduce using rule 828 (greaterThanOperator)]
    NUMBER             [reduce using rule 829 (lessThanOrEqualsOperator)]
    NUMBER             [reduce using rule 830 (greaterThanOrEqualsOperator)]
    ID                 reduce using rule 825 (equalsOperator)
    ID                 [reduce using rule 826 (notEqualsOperator)]
    ID                 [reduce using rule 827 (lessThanOperator)]
    ID                 [reduce using rule 828 (greaterThanOperator)]
    ID                 [reduce using rule 829 (lessThanOrEqualsOperator)]
    ID                 [reduce using rule 830 (greaterThanOrEqualsOperator)]
    '('                reduce using rule 825 (equalsOperator)
    '('                [reduce using rule 826 (notEqualsOperator)]
    '('                [reduce using rule 827 (lessThanOperator)]
    '('                [reduce using rule 828 (greaterThanOperator)]
    '('                [reduce using rule 829 (lessThanOrEqualsOperator)]
    '('                [reduce using rule 830 (greaterThanOrEqualsOperator)]
    $default           reduce using rule 825 (equalsOperator)


state 867

  860 matchPredicate: rowValueConstructor MATCH . matchPredicate1 matchPredicate2 tableSubquery
  861 matchPredicate1: .  [FULL, PARTIAL, '(']
  862                | . UNIQUE

    UNIQUE  shift, and go to state 1021

    $default  reduce using rule 861 (matchPredicate1)

    matchPredicate1  go to state 1022


state 868

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  473 comparisonPredicate: rowValueConstructor compOp . rowValueConstructor
  474 rowValueConstructor: . rowValueConstructorElement
  475                    | . leftParen rowValueConstructorList rightParen
  476                    | . rowSubquery
  477 rowValueConstructorElement: . valueExpression
  478                           | . nullSpecification
  479                           | . defaultSpecification
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression
  813 nullSpecification: . NULL
  814 defaultSpecification: . DEFAULT
  818 rowSubquery: . subquery
  853 quantifiedComparisonPredicate: rowValueConstructor compOp . quantifier tableSubquery
  854 quantifier: . all
  855           | . some
  856 all: . ALL
  857 some: . SOME
  858     | . ANY

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    NULL               shift, and go to state 668
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    SOME               shift, and go to state 1023
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    ALL                shift, and go to state 1024
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    ANY                shift, and go to state 1025
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    DEFAULT            shift, and go to state 687
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 992
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    rowValueConstructor             go to state 1026
    rowValueConstructorElement      go to state 702
    valueExpression                 go to state 703
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 727
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761
    nullSpecification               go to state 762
    defaultSpecification            go to state 763
    rowSubquery                     go to state 764
    quantifier                      go to state 1027
    all                             go to state 1028
    some                            go to state 1029


state 869

  819 compOp: equalsOperator .

    $default  reduce using rule 819 (compOp)


state 870

  820 compOp: notEqualsOperator .

    $default  reduce using rule 820 (compOp)


state 871

  821 compOp: lessThanOperator .

    $default  reduce using rule 821 (compOp)


state 872

  822 compOp: greaterThanOperator .

    $default  reduce using rule 822 (compOp)


state 873

  823 compOp: lessThanOrEqualsOperator .

    $default  reduce using rule 823 (compOp)


state 874

  824 compOp: greaterThanOrEqualsOperator .

    $default  reduce using rule 824 (compOp)


state 875

  831 betweenPredicate: rowValueConstructor betweenPredicate1 . BETWEEN rowValueConstructor AND rowValueConstructor

    BETWEEN  shift, and go to state 1030


state 876

  834 inPredicate: rowValueConstructor inPredicate1 . IN inPredicateValue

    IN  shift, and go to state 1031


state 877

  801 plusSign: UNKNOWN_LEX .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  803 minusSign: UNKNOWN_LEX .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']

    CASE               reduce using rule 801 (plusSign)
    CASE               [reduce using rule 803 (minusSign)]
    CAST               reduce using rule 801 (plusSign)
    CAST               [reduce using rule 803 (minusSign)]
    DESC               reduce using rule 801 (plusSign)
    DESC               [reduce using rule 803 (minusSign)]
    ASC                reduce using rule 801 (plusSign)
    ASC                [reduce using rule 803 (minusSign)]
    UNKNOWN_LEX        reduce using rule 801 (plusSign)
    UNKNOWN_LEX        [reduce using rule 803 (minusSign)]
    ACTION             reduce using rule 801 (plusSign)
    ACTION             [reduce using rule 803 (minusSign)]
    MIN                reduce using rule 801 (plusSign)
    MIN                [reduce using rule 803 (minusSign)]
    OCTET_LENGTH       reduce using rule 801 (plusSign)
    OCTET_LENGTH       [reduce using rule 803 (minusSign)]
    DEFERRED           reduce using rule 801 (plusSign)
    DEFERRED           [reduce using rule 803 (minusSign)]
    DEFERRABLE         reduce using rule 801 (plusSign)
    DEFERRABLE         [reduce using rule 803 (minusSign)]
    ZONE               reduce using rule 801 (plusSign)
    ZONE               [reduce using rule 803 (minusSign)]
    COUNT              reduce using rule 801 (plusSign)
    COUNT              [reduce using rule 803 (minusSign)]
    SESSION_USER       reduce using rule 801 (plusSign)
    SESSION_USER       [reduce using rule 803 (minusSign)]
    DATE               reduce using rule 801 (plusSign)
    DATE               [reduce using rule 803 (minusSign)]
    NULLIF             reduce using rule 801 (plusSign)
    NULLIF             [reduce using rule 803 (minusSign)]
    CURRENT_DATE       reduce using rule 803 (minusSign)
    SUM                reduce using rule 801 (plusSign)
    SUM                [reduce using rule 803 (minusSign)]
    KEY                reduce using rule 801 (plusSign)
    KEY                [reduce using rule 803 (minusSign)]
    AVG                reduce using rule 801 (plusSign)
    AVG                [reduce using rule 803 (minusSign)]
    INITIALLY          reduce using rule 801 (plusSign)
    INITIALLY          [reduce using rule 803 (minusSign)]
    UPPER              reduce using rule 801 (plusSign)
    UPPER              [reduce using rule 803 (minusSign)]
    TIMESTAMP          reduce using rule 801 (plusSign)
    TIMESTAMP          [reduce using rule 803 (minusSign)]
    MODULE             reduce using rule 801 (plusSign)
    MODULE             [reduce using rule 803 (minusSign)]
    EXTRACT            reduce using rule 801 (plusSign)
    EXTRACT            [reduce using rule 803 (minusSign)]
    CHAR_LENGTH        reduce using rule 801 (plusSign)
    CHAR_LENGTH        [reduce using rule 803 (minusSign)]
    TIME               reduce using rule 801 (plusSign)
    TIME               [reduce using rule 803 (minusSign)]
    SYSTEM_USER        reduce using rule 801 (plusSign)
    SYSTEM_USER        [reduce using rule 803 (minusSign)]
    SUBSTRING          reduce using rule 801 (plusSign)
    SUBSTRING          [reduce using rule 803 (minusSign)]
    CURRENT_TIME       reduce using rule 803 (minusSign)
    PARTIAL            reduce using rule 801 (plusSign)
    PARTIAL            [reduce using rule 803 (minusSign)]
    USER               reduce using rule 801 (plusSign)
    USER               [reduce using rule 803 (minusSign)]
    MAX                reduce using rule 801 (plusSign)
    MAX                [reduce using rule 803 (minusSign)]
    CURRENT_TIMESTAMP  reduce using rule 803 (minusSign)
    LOWER              reduce using rule 801 (plusSign)
    LOWER              [reduce using rule 803 (minusSign)]
    CASCADE            reduce using rule 801 (plusSign)
    CASCADE            [reduce using rule 803 (minusSign)]
    TEMPORARY          reduce using rule 801 (plusSign)
    TEMPORARY          [reduce using rule 803 (minusSign)]
    BIT_LENGTH         reduce using rule 801 (plusSign)
    BIT_LENGTH         [reduce using rule 803 (minusSign)]
    VALUE              reduce using rule 801 (plusSign)
    VALUE              [reduce using rule 803 (minusSign)]
    CHARACTER_LENGTH   reduce using rule 801 (plusSign)
    CHARACTER_LENGTH   [reduce using rule 803 (minusSign)]
    CONVERT            reduce using rule 801 (plusSign)
    CONVERT            [reduce using rule 803 (minusSign)]
    CURRENT_USER       reduce using rule 801 (plusSign)
    CURRENT_USER       [reduce using rule 803 (minusSign)]
    TRANSLATE          reduce using rule 801 (plusSign)
    TRANSLATE          [reduce using rule 803 (minusSign)]
    INTERVAL           reduce using rule 801 (plusSign)
    INTERVAL           [reduce using rule 803 (minusSign)]
    PRESERVE           reduce using rule 801 (plusSign)
    PRESERVE           [reduce using rule 803 (minusSign)]
    POSITION           reduce using rule 801 (plusSign)
    POSITION           [reduce using rule 803 (minusSign)]
    COALESCE           reduce using rule 801 (plusSign)
    COALESCE           [reduce using rule 803 (minusSign)]
    TRIM               reduce using rule 801 (plusSign)
    TRIM               [reduce using rule 803 (minusSign)]
    NUMBER             reduce using rule 801 (plusSign)
    NUMBER             [reduce using rule 803 (minusSign)]
    ID                 reduce using rule 801 (plusSign)
    ID                 [reduce using rule 803 (minusSign)]
    '('                reduce using rule 801 (plusSign)
    '('                [reduce using rule 803 (minusSign)]
    $default           reduce using rule 801 (plusSign)


state 878

  375 sign: . UNKNOWN_LEX
  485 numericValueExpression: numericValueExpression plusSign . term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign

    UNKNOWN_LEX  shift, and go to state 592

    UNKNOWN_LEX  [reduce using rule 491 (factor1)]
    $default     reduce using rule 491 (factor1)

    sign     go to state 1032
    term     go to state 1033
    factor   go to state 706
    factor1  go to state 707


state 879

  375 sign: . UNKNOWN_LEX
  486 numericValueExpression: numericValueExpression minusSign . term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign

    UNKNOWN_LEX  shift, and go to state 592

    UNKNOWN_LEX  [reduce using rule 491 (factor1)]
    $default     reduce using rule 491 (factor1)

    sign     go to state 1032
    term     go to state 1034
    factor   go to state 706
    factor1  go to state 707


state 880

  553 asterisk: UNKNOWN_LEX .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  799 solidus: UNKNOWN_LEX .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']

    CASE              reduce using rule 553 (asterisk)
    CASE              [reduce using rule 799 (solidus)]
    CAST              reduce using rule 553 (asterisk)
    CAST              [reduce using rule 799 (solidus)]
    DESC              reduce using rule 553 (asterisk)
    DESC              [reduce using rule 799 (solidus)]
    ASC               reduce using rule 553 (asterisk)
    ASC               [reduce using rule 799 (solidus)]
    UNKNOWN_LEX       reduce using rule 553 (asterisk)
    UNKNOWN_LEX       [reduce using rule 799 (solidus)]
    ACTION            reduce using rule 553 (asterisk)
    ACTION            [reduce using rule 799 (solidus)]
    MIN               reduce using rule 553 (asterisk)
    MIN               [reduce using rule 799 (solidus)]
    OCTET_LENGTH      reduce using rule 553 (asterisk)
    OCTET_LENGTH      [reduce using rule 799 (solidus)]
    DEFERRED          reduce using rule 553 (asterisk)
    DEFERRED          [reduce using rule 799 (solidus)]
    DEFERRABLE        reduce using rule 553 (asterisk)
    DEFERRABLE        [reduce using rule 799 (solidus)]
    ZONE              reduce using rule 553 (asterisk)
    ZONE              [reduce using rule 799 (solidus)]
    COUNT             reduce using rule 553 (asterisk)
    COUNT             [reduce using rule 799 (solidus)]
    SESSION_USER      reduce using rule 553 (asterisk)
    SESSION_USER      [reduce using rule 799 (solidus)]
    DATE              reduce using rule 553 (asterisk)
    DATE              [reduce using rule 799 (solidus)]
    NULLIF            reduce using rule 553 (asterisk)
    NULLIF            [reduce using rule 799 (solidus)]
    SUM               reduce using rule 553 (asterisk)
    SUM               [reduce using rule 799 (solidus)]
    KEY               reduce using rule 553 (asterisk)
    KEY               [reduce using rule 799 (solidus)]
    AVG               reduce using rule 553 (asterisk)
    AVG               [reduce using rule 799 (solidus)]
    INITIALLY         reduce using rule 553 (asterisk)
    INITIALLY         [reduce using rule 799 (solidus)]
    UPPER             reduce using rule 553 (asterisk)
    UPPER             [reduce using rule 799 (solidus)]
    TIMESTAMP         reduce using rule 553 (asterisk)
    TIMESTAMP         [reduce using rule 799 (solidus)]
    MODULE            reduce using rule 553 (asterisk)
    MODULE            [reduce using rule 799 (solidus)]
    EXTRACT           reduce using rule 553 (asterisk)
    EXTRACT           [reduce using rule 799 (solidus)]
    CHAR_LENGTH       reduce using rule 553 (asterisk)
    CHAR_LENGTH       [reduce using rule 799 (solidus)]
    TIME              reduce using rule 553 (asterisk)
    TIME              [reduce using rule 799 (solidus)]
    SYSTEM_USER       reduce using rule 553 (asterisk)
    SYSTEM_USER       [reduce using rule 799 (solidus)]
    SUBSTRING         reduce using rule 553 (asterisk)
    SUBSTRING         [reduce using rule 799 (solidus)]
    PARTIAL           reduce using rule 553 (asterisk)
    PARTIAL           [reduce using rule 799 (solidus)]
    USER              reduce using rule 553 (asterisk)
    USER              [reduce using rule 799 (solidus)]
    MAX               reduce using rule 553 (asterisk)
    MAX               [reduce using rule 799 (solidus)]
    LOWER             reduce using rule 553 (asterisk)
    LOWER             [reduce using rule 799 (solidus)]
    CASCADE           reduce using rule 553 (asterisk)
    CASCADE           [reduce using rule 799 (solidus)]
    TEMPORARY         reduce using rule 553 (asterisk)
    TEMPORARY         [reduce using rule 799 (solidus)]
    BIT_LENGTH        reduce using rule 553 (asterisk)
    BIT_LENGTH        [reduce using rule 799 (solidus)]
    VALUE             reduce using rule 553 (asterisk)
    VALUE             [reduce using rule 799 (solidus)]
    CHARACTER_LENGTH  reduce using rule 553 (asterisk)
    CHARACTER_LENGTH  [reduce using rule 799 (solidus)]
    CONVERT           reduce using rule 553 (asterisk)
    CONVERT           [reduce using rule 799 (solidus)]
    CURRENT_USER      reduce using rule 553 (asterisk)
    CURRENT_USER      [reduce using rule 799 (solidus)]
    TRANSLATE         reduce using rule 553 (asterisk)
    TRANSLATE         [reduce using rule 799 (solidus)]
    INTERVAL          reduce using rule 553 (asterisk)
    INTERVAL          [reduce using rule 799 (solidus)]
    PRESERVE          reduce using rule 553 (asterisk)
    PRESERVE          [reduce using rule 799 (solidus)]
    POSITION          reduce using rule 553 (asterisk)
    POSITION          [reduce using rule 799 (solidus)]
    COALESCE          reduce using rule 553 (asterisk)
    COALESCE          [reduce using rule 799 (solidus)]
    TRIM              reduce using rule 553 (asterisk)
    TRIM              [reduce using rule 799 (solidus)]
    NUMBER            reduce using rule 553 (asterisk)
    NUMBER            [reduce using rule 799 (solidus)]
    ID                reduce using rule 553 (asterisk)
    ID                [reduce using rule 799 (solidus)]
    '('               reduce using rule 553 (asterisk)
    '('               [reduce using rule 799 (solidus)]
    $default          reduce using rule 553 (asterisk)


state 881

  375 sign: . UNKNOWN_LEX
  488 term: term asterisk . factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  791 intervalTerm: term asterisk . intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign

    UNKNOWN_LEX  shift, and go to state 592

    CASE              reduce using rule 491 (factor1)
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              reduce using rule 491 (factor1)
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              reduce using rule 491 (factor1)
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               reduce using rule 491 (factor1)
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            reduce using rule 491 (factor1)
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               reduce using rule 491 (factor1)
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      reduce using rule 491 (factor1)
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          reduce using rule 491 (factor1)
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        reduce using rule 491 (factor1)
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              reduce using rule 491 (factor1)
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             reduce using rule 491 (factor1)
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      reduce using rule 491 (factor1)
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              reduce using rule 491 (factor1)
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            reduce using rule 491 (factor1)
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               reduce using rule 491 (factor1)
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               reduce using rule 491 (factor1)
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               reduce using rule 491 (factor1)
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         reduce using rule 491 (factor1)
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             reduce using rule 491 (factor1)
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         reduce using rule 491 (factor1)
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            reduce using rule 491 (factor1)
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           reduce using rule 491 (factor1)
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       reduce using rule 491 (factor1)
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              reduce using rule 491 (factor1)
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       reduce using rule 491 (factor1)
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         reduce using rule 491 (factor1)
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           reduce using rule 491 (factor1)
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              reduce using rule 491 (factor1)
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               reduce using rule 491 (factor1)
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             reduce using rule 491 (factor1)
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           reduce using rule 491 (factor1)
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         reduce using rule 491 (factor1)
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             reduce using rule 491 (factor1)
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  reduce using rule 491 (factor1)
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           reduce using rule 491 (factor1)
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      reduce using rule 491 (factor1)
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         reduce using rule 491 (factor1)
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          reduce using rule 491 (factor1)
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          reduce using rule 491 (factor1)
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          reduce using rule 491 (factor1)
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          reduce using rule 491 (factor1)
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              reduce using rule 491 (factor1)
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            reduce using rule 491 (factor1)
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                reduce using rule 491 (factor1)
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               reduce using rule 491 (factor1)
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    sign             go to state 693
    factor           go to state 1035
    factor1          go to state 707
    intervalFactor   go to state 1036
    intervalFactor1  go to state 758


state 882

  375 sign: . UNKNOWN_LEX
  489 term: term solidus . factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign

    UNKNOWN_LEX  shift, and go to state 592

    UNKNOWN_LEX  [reduce using rule 491 (factor1)]
    $default     reduce using rule 491 (factor1)

    sign     go to state 1032
    factor   go to state 1037
    factor1  go to state 707


state 883

  222 schemaName: UNKNOWN_LEX .  [UNKNOWN_LEX]
  376 unsignedNumericLiteral: UNKNOWN_LEX .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  383 characterStringLiteral: UNKNOWN_LEX .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  384 nationalCharacterStringLiteral: UNKNOWN_LEX .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  385 bitStringLiteral: UNKNOWN_LEX .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  386 hexStringLiteral: UNKNOWN_LEX .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  518 colon: UNKNOWN_LEX .  [DESC, ASC, UNKNOWN_BODY, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  523 questionMark: UNKNOWN_LEX .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']

    BETWEEN           reduce using rule 376 (unsignedNumericLiteral)
    BETWEEN           [reduce using rule 383 (characterStringLiteral)]
    BETWEEN           [reduce using rule 384 (nationalCharacterStringLiteral)]
    BETWEEN           [reduce using rule 385 (bitStringLiteral)]
    BETWEEN           [reduce using rule 386 (hexStringLiteral)]
    BETWEEN           [reduce using rule 523 (questionMark)]
    ESCAPE            reduce using rule 376 (unsignedNumericLiteral)
    ESCAPE            [reduce using rule 383 (characterStringLiteral)]
    ESCAPE            [reduce using rule 384 (nationalCharacterStringLiteral)]
    ESCAPE            [reduce using rule 385 (bitStringLiteral)]
    ESCAPE            [reduce using rule 386 (hexStringLiteral)]
    ESCAPE            [reduce using rule 523 (questionMark)]
    HAVING            reduce using rule 376 (unsignedNumericLiteral)
    HAVING            [reduce using rule 383 (characterStringLiteral)]
    HAVING            [reduce using rule 384 (nationalCharacterStringLiteral)]
    HAVING            [reduce using rule 385 (bitStringLiteral)]
    HAVING            [reduce using rule 386 (hexStringLiteral)]
    HAVING            [reduce using rule 523 (questionMark)]
    WHERE             reduce using rule 376 (unsignedNumericLiteral)
    WHERE             [reduce using rule 383 (characterStringLiteral)]
    WHERE             [reduce using rule 384 (nationalCharacterStringLiteral)]
    WHERE             [reduce using rule 385 (bitStringLiteral)]
    WHERE             [reduce using rule 386 (hexStringLiteral)]
    WHERE             [reduce using rule 523 (questionMark)]
    OR                reduce using rule 376 (unsignedNumericLiteral)
    OR                [reduce using rule 383 (characterStringLiteral)]
    OR                [reduce using rule 384 (nationalCharacterStringLiteral)]
    OR                [reduce using rule 385 (bitStringLiteral)]
    OR                [reduce using rule 386 (hexStringLiteral)]
    OR                [reduce using rule 523 (questionMark)]
    GROUP             reduce using rule 376 (unsignedNumericLiteral)
    GROUP             [reduce using rule 383 (characterStringLiteral)]
    GROUP             [reduce using rule 384 (nationalCharacterStringLiteral)]
    GROUP             [reduce using rule 385 (bitStringLiteral)]
    GROUP             [reduce using rule 386 (hexStringLiteral)]
    GROUP             [reduce using rule 523 (questionMark)]
    RIGHT             reduce using rule 376 (unsignedNumericLiteral)
    RIGHT             [reduce using rule 383 (characterStringLiteral)]
    RIGHT             [reduce using rule 384 (nationalCharacterStringLiteral)]
    RIGHT             [reduce using rule 385 (bitStringLiteral)]
    RIGHT             [reduce using rule 386 (hexStringLiteral)]
    RIGHT             [reduce using rule 523 (questionMark)]
    INNER             reduce using rule 376 (unsignedNumericLiteral)
    INNER             [reduce using rule 383 (characterStringLiteral)]
    INNER             [reduce using rule 384 (nationalCharacterStringLiteral)]
    INNER             [reduce using rule 385 (bitStringLiteral)]
    INNER             [reduce using rule 386 (hexStringLiteral)]
    INNER             [reduce using rule 523 (questionMark)]
    UNION             reduce using rule 376 (unsignedNumericLiteral)
    UNION             [reduce using rule 383 (characterStringLiteral)]
    UNION             [reduce using rule 384 (nationalCharacterStringLiteral)]
    UNION             [reduce using rule 385 (bitStringLiteral)]
    UNION             [reduce using rule 386 (hexStringLiteral)]
    UNION             [reduce using rule 523 (questionMark)]
    FROM              reduce using rule 376 (unsignedNumericLiteral)
    FROM              [reduce using rule 383 (characterStringLiteral)]
    FROM              [reduce using rule 384 (nationalCharacterStringLiteral)]
    FROM              [reduce using rule 385 (bitStringLiteral)]
    FROM              [reduce using rule 386 (hexStringLiteral)]
    FROM              [reduce using rule 523 (questionMark)]
    WHEN              reduce using rule 376 (unsignedNumericLiteral)
    WHEN              [reduce using rule 383 (characterStringLiteral)]
    WHEN              [reduce using rule 384 (nationalCharacterStringLiteral)]
    WHEN              [reduce using rule 385 (bitStringLiteral)]
    WHEN              [reduce using rule 386 (hexStringLiteral)]
    WHEN              [reduce using rule 523 (questionMark)]
    THEN              reduce using rule 376 (unsignedNumericLiteral)
    THEN              [reduce using rule 383 (characterStringLiteral)]
    THEN              [reduce using rule 384 (nationalCharacterStringLiteral)]
    THEN              [reduce using rule 385 (bitStringLiteral)]
    THEN              [reduce using rule 386 (hexStringLiteral)]
    THEN              [reduce using rule 523 (questionMark)]
    ELSE              reduce using rule 376 (unsignedNumericLiteral)
    ELSE              [reduce using rule 383 (characterStringLiteral)]
    ELSE              [reduce using rule 384 (nationalCharacterStringLiteral)]
    ELSE              [reduce using rule 385 (bitStringLiteral)]
    ELSE              [reduce using rule 386 (hexStringLiteral)]
    ELSE              [reduce using rule 523 (questionMark)]
    DESC              reduce using rule 376 (unsignedNumericLiteral)
    DESC              [reduce using rule 383 (characterStringLiteral)]
    DESC              [reduce using rule 384 (nationalCharacterStringLiteral)]
    DESC              [reduce using rule 385 (bitStringLiteral)]
    DESC              [reduce using rule 386 (hexStringLiteral)]
    DESC              [reduce using rule 518 (colon)]
    DESC              [reduce using rule 523 (questionMark)]
    LIKE              reduce using rule 376 (unsignedNumericLiteral)
    LIKE              [reduce using rule 383 (characterStringLiteral)]
    LIKE              [reduce using rule 384 (nationalCharacterStringLiteral)]
    LIKE              [reduce using rule 385 (bitStringLiteral)]
    LIKE              [reduce using rule 386 (hexStringLiteral)]
    LIKE              [reduce using rule 523 (questionMark)]
    JOIN              reduce using rule 376 (unsignedNumericLiteral)
    JOIN              [reduce using rule 383 (characterStringLiteral)]
    JOIN              [reduce using rule 384 (nationalCharacterStringLiteral)]
    JOIN              [reduce using rule 385 (bitStringLiteral)]
    JOIN              [reduce using rule 386 (hexStringLiteral)]
    JOIN              [reduce using rule 523 (questionMark)]
    LEFT              reduce using rule 376 (unsignedNumericLiteral)
    LEFT              [reduce using rule 383 (characterStringLiteral)]
    LEFT              [reduce using rule 384 (nationalCharacterStringLiteral)]
    LEFT              [reduce using rule 385 (bitStringLiteral)]
    LEFT              [reduce using rule 386 (hexStringLiteral)]
    LEFT              [reduce using rule 523 (questionMark)]
    FULL              reduce using rule 376 (unsignedNumericLiteral)
    FULL              [reduce using rule 383 (characterStringLiteral)]
    FULL              [reduce using rule 384 (nationalCharacterStringLiteral)]
    FULL              [reduce using rule 385 (bitStringLiteral)]
    FULL              [reduce using rule 386 (hexStringLiteral)]
    FULL              [reduce using rule 523 (questionMark)]
    AND               reduce using rule 376 (unsignedNumericLiteral)
    AND               [reduce using rule 383 (characterStringLiteral)]
    AND               [reduce using rule 384 (nationalCharacterStringLiteral)]
    AND               [reduce using rule 385 (bitStringLiteral)]
    AND               [reduce using rule 386 (hexStringLiteral)]
    AND               [reduce using rule 523 (questionMark)]
    END               reduce using rule 376 (unsignedNumericLiteral)
    END               [reduce using rule 383 (characterStringLiteral)]
    END               [reduce using rule 384 (nationalCharacterStringLiteral)]
    END               [reduce using rule 385 (bitStringLiteral)]
    END               [reduce using rule 386 (hexStringLiteral)]
    END               [reduce using rule 523 (questionMark)]
    ASC               reduce using rule 376 (unsignedNumericLiteral)
    ASC               [reduce using rule 383 (characterStringLiteral)]
    ASC               [reduce using rule 384 (nationalCharacterStringLiteral)]
    ASC               [reduce using rule 385 (bitStringLiteral)]
    ASC               [reduce using rule 386 (hexStringLiteral)]
    ASC               [reduce using rule 518 (colon)]
    ASC               [reduce using rule 523 (questionMark)]
    FOR               reduce using rule 376 (unsignedNumericLiteral)
    FOR               [reduce using rule 383 (characterStringLiteral)]
    FOR               [reduce using rule 384 (nationalCharacterStringLiteral)]
    FOR               [reduce using rule 385 (bitStringLiteral)]
    FOR               [reduce using rule 386 (hexStringLiteral)]
    FOR               [reduce using rule 523 (questionMark)]
    NOT               reduce using rule 376 (unsignedNumericLiteral)
    NOT               [reduce using rule 383 (characterStringLiteral)]
    NOT               [reduce using rule 384 (nationalCharacterStringLiteral)]
    NOT               [reduce using rule 385 (bitStringLiteral)]
    NOT               [reduce using rule 386 (hexStringLiteral)]
    NOT               [reduce using rule 523 (questionMark)]
    ON                reduce using rule 376 (unsignedNumericLiteral)
    ON                [reduce using rule 383 (characterStringLiteral)]
    ON                [reduce using rule 384 (nationalCharacterStringLiteral)]
    ON                [reduce using rule 385 (bitStringLiteral)]
    ON                [reduce using rule 386 (hexStringLiteral)]
    ON                [reduce using rule 523 (questionMark)]
    AS                reduce using rule 376 (unsignedNumericLiteral)
    AS                [reduce using rule 383 (characterStringLiteral)]
    AS                [reduce using rule 384 (nationalCharacterStringLiteral)]
    AS                [reduce using rule 385 (bitStringLiteral)]
    AS                [reduce using rule 386 (hexStringLiteral)]
    AS                [reduce using rule 523 (questionMark)]
    IN                reduce using rule 376 (unsignedNumericLiteral)
    IN                [reduce using rule 383 (characterStringLiteral)]
    IN                [reduce using rule 384 (nationalCharacterStringLiteral)]
    IN                [reduce using rule 385 (bitStringLiteral)]
    IN                [reduce using rule 386 (hexStringLiteral)]
    IN                [reduce using rule 523 (questionMark)]
    IS                reduce using rule 376 (unsignedNumericLiteral)
    IS                [reduce using rule 383 (characterStringLiteral)]
    IS                [reduce using rule 384 (nationalCharacterStringLiteral)]
    IS                [reduce using rule 385 (bitStringLiteral)]
    IS                [reduce using rule 386 (hexStringLiteral)]
    IS                [reduce using rule 523 (questionMark)]
    UNKNOWN_BODY      reduce using rule 518 (colon)
    UNKNOWN_LEX       reduce using rule 222 (schemaName)
    UNKNOWN_LEX       [reduce using rule 376 (unsignedNumericLiteral)]
    UNKNOWN_LEX       [reduce using rule 383 (characterStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 384 (nationalCharacterStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 385 (bitStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 386 (hexStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 523 (questionMark)]
    ACTION            reduce using rule 376 (unsignedNumericLiteral)
    ACTION            [reduce using rule 383 (characterStringLiteral)]
    ACTION            [reduce using rule 384 (nationalCharacterStringLiteral)]
    ACTION            [reduce using rule 385 (bitStringLiteral)]
    ACTION            [reduce using rule 386 (hexStringLiteral)]
    ACTION            [reduce using rule 518 (colon)]
    ACTION            [reduce using rule 523 (questionMark)]
    MIN               reduce using rule 376 (unsignedNumericLiteral)
    MIN               [reduce using rule 383 (characterStringLiteral)]
    MIN               [reduce using rule 384 (nationalCharacterStringLiteral)]
    MIN               [reduce using rule 385 (bitStringLiteral)]
    MIN               [reduce using rule 386 (hexStringLiteral)]
    MIN               [reduce using rule 518 (colon)]
    MIN               [reduce using rule 523 (questionMark)]
    SECOND            reduce using rule 376 (unsignedNumericLiteral)
    SECOND            [reduce using rule 383 (characterStringLiteral)]
    SECOND            [reduce using rule 384 (nationalCharacterStringLiteral)]
    SECOND            [reduce using rule 385 (bitStringLiteral)]
    SECOND            [reduce using rule 386 (hexStringLiteral)]
    SECOND            [reduce using rule 523 (questionMark)]
    OCTET_LENGTH      reduce using rule 376 (unsignedNumericLiteral)
    OCTET_LENGTH      [reduce using rule 383 (characterStringLiteral)]
    OCTET_LENGTH      [reduce using rule 384 (nationalCharacterStringLiteral)]
    OCTET_LENGTH      [reduce using rule 385 (bitStringLiteral)]
    OCTET_LENGTH      [reduce using rule 386 (hexStringLiteral)]
    OCTET_LENGTH      [reduce using rule 518 (colon)]
    OCTET_LENGTH      [reduce using rule 523 (questionMark)]
    MINUTE            reduce using rule 376 (unsignedNumericLiteral)
    MINUTE            [reduce using rule 383 (characterStringLiteral)]
    MINUTE            [reduce using rule 384 (nationalCharacterStringLiteral)]
    MINUTE            [reduce using rule 385 (bitStringLiteral)]
    MINUTE            [reduce using rule 386 (hexStringLiteral)]
    MINUTE            [reduce using rule 523 (questionMark)]
    CROSS             reduce using rule 376 (unsignedNumericLiteral)
    CROSS             [reduce using rule 383 (characterStringLiteral)]
    CROSS             [reduce using rule 384 (nationalCharacterStringLiteral)]
    CROSS             [reduce using rule 385 (bitStringLiteral)]
    CROSS             [reduce using rule 386 (hexStringLiteral)]
    CROSS             [reduce using rule 523 (questionMark)]
    DEFERRED          reduce using rule 376 (unsignedNumericLiteral)
    DEFERRED          [reduce using rule 383 (characterStringLiteral)]
    DEFERRED          [reduce using rule 384 (nationalCharacterStringLiteral)]
    DEFERRED          [reduce using rule 385 (bitStringLiteral)]
    DEFERRED          [reduce using rule 386 (hexStringLiteral)]
    DEFERRED          [reduce using rule 518 (colon)]
    DEFERRED          [reduce using rule 523 (questionMark)]
    DEFERRABLE        reduce using rule 376 (unsignedNumericLiteral)
    DEFERRABLE        [reduce using rule 383 (characterStringLiteral)]
    DEFERRABLE        [reduce using rule 384 (nationalCharacterStringLiteral)]
    DEFERRABLE        [reduce using rule 385 (bitStringLiteral)]
    DEFERRABLE        [reduce using rule 386 (hexStringLiteral)]
    DEFERRABLE        [reduce using rule 518 (colon)]
    DEFERRABLE        [reduce using rule 523 (questionMark)]
    MONTH             reduce using rule 376 (unsignedNumericLiteral)
    MONTH             [reduce using rule 383 (characterStringLiteral)]
    MONTH             [reduce using rule 384 (nationalCharacterStringLiteral)]
    MONTH             [reduce using rule 385 (bitStringLiteral)]
    MONTH             [reduce using rule 386 (hexStringLiteral)]
    MONTH             [reduce using rule 523 (questionMark)]
    ZONE              reduce using rule 376 (unsignedNumericLiteral)
    ZONE              [reduce using rule 383 (characterStringLiteral)]
    ZONE              [reduce using rule 384 (nationalCharacterStringLiteral)]
    ZONE              [reduce using rule 385 (bitStringLiteral)]
    ZONE              [reduce using rule 386 (hexStringLiteral)]
    ZONE              [reduce using rule 518 (colon)]
    ZONE              [reduce using rule 523 (questionMark)]
    INTERSECT         reduce using rule 376 (unsignedNumericLiteral)
    INTERSECT         [reduce using rule 383 (characterStringLiteral)]
    INTERSECT         [reduce using rule 384 (nationalCharacterStringLiteral)]
    INTERSECT         [reduce using rule 385 (bitStringLiteral)]
    INTERSECT         [reduce using rule 386 (hexStringLiteral)]
    INTERSECT         [reduce using rule 523 (questionMark)]
    COUNT             reduce using rule 376 (unsignedNumericLiteral)
    COUNT             [reduce using rule 383 (characterStringLiteral)]
    COUNT             [reduce using rule 384 (nationalCharacterStringLiteral)]
    COUNT             [reduce using rule 385 (bitStringLiteral)]
    COUNT             [reduce using rule 386 (hexStringLiteral)]
    COUNT             [reduce using rule 518 (colon)]
    COUNT             [reduce using rule 523 (questionMark)]
    NATURAL           reduce using rule 376 (unsignedNumericLiteral)
    NATURAL           [reduce using rule 383 (characterStringLiteral)]
    NATURAL           [reduce using rule 384 (nationalCharacterStringLiteral)]
    NATURAL           [reduce using rule 385 (bitStringLiteral)]
    NATURAL           [reduce using rule 386 (hexStringLiteral)]
    NATURAL           [reduce using rule 523 (questionMark)]
    NULLIF            reduce using rule 376 (unsignedNumericLiteral)
    NULLIF            [reduce using rule 383 (characterStringLiteral)]
    NULLIF            [reduce using rule 384 (nationalCharacterStringLiteral)]
    NULLIF            [reduce using rule 385 (bitStringLiteral)]
    NULLIF            [reduce using rule 386 (hexStringLiteral)]
    NULLIF            [reduce using rule 518 (colon)]
    NULLIF            [reduce using rule 523 (questionMark)]
    SUM               reduce using rule 376 (unsignedNumericLiteral)
    SUM               [reduce using rule 383 (characterStringLiteral)]
    SUM               [reduce using rule 384 (nationalCharacterStringLiteral)]
    SUM               [reduce using rule 385 (bitStringLiteral)]
    SUM               [reduce using rule 386 (hexStringLiteral)]
    SUM               [reduce using rule 518 (colon)]
    SUM               [reduce using rule 523 (questionMark)]
    COLLATE           reduce using rule 376 (unsignedNumericLiteral)
    COLLATE           [reduce using rule 383 (characterStringLiteral)]
    COLLATE           [reduce using rule 384 (nationalCharacterStringLiteral)]
    COLLATE           [reduce using rule 385 (bitStringLiteral)]
    COLLATE           [reduce using rule 386 (hexStringLiteral)]
    COLLATE           [reduce using rule 523 (questionMark)]
    KEY               reduce using rule 376 (unsignedNumericLiteral)
    KEY               [reduce using rule 383 (characterStringLiteral)]
    KEY               [reduce using rule 384 (nationalCharacterStringLiteral)]
    KEY               [reduce using rule 385 (bitStringLiteral)]
    KEY               [reduce using rule 386 (hexStringLiteral)]
    KEY               [reduce using rule 518 (colon)]
    KEY               [reduce using rule 523 (questionMark)]
    AVG               reduce using rule 376 (unsignedNumericLiteral)
    AVG               [reduce using rule 383 (characterStringLiteral)]
    AVG               [reduce using rule 384 (nationalCharacterStringLiteral)]
    AVG               [reduce using rule 385 (bitStringLiteral)]
    AVG               [reduce using rule 386 (hexStringLiteral)]
    AVG               [reduce using rule 518 (colon)]
    AVG               [reduce using rule 523 (questionMark)]
    INITIALLY         reduce using rule 376 (unsignedNumericLiteral)
    INITIALLY         [reduce using rule 383 (characterStringLiteral)]
    INITIALLY         [reduce using rule 384 (nationalCharacterStringLiteral)]
    INITIALLY         [reduce using rule 385 (bitStringLiteral)]
    INITIALLY         [reduce using rule 386 (hexStringLiteral)]
    INITIALLY         [reduce using rule 518 (colon)]
    INITIALLY         [reduce using rule 523 (questionMark)]
    UPPER             reduce using rule 376 (unsignedNumericLiteral)
    UPPER             [reduce using rule 383 (characterStringLiteral)]
    UPPER             [reduce using rule 384 (nationalCharacterStringLiteral)]
    UPPER             [reduce using rule 385 (bitStringLiteral)]
    UPPER             [reduce using rule 386 (hexStringLiteral)]
    UPPER             [reduce using rule 518 (colon)]
    UPPER             [reduce using rule 523 (questionMark)]
    DAY               reduce using rule 376 (unsignedNumericLiteral)
    DAY               [reduce using rule 383 (characterStringLiteral)]
    DAY               [reduce using rule 384 (nationalCharacterStringLiteral)]
    DAY               [reduce using rule 385 (bitStringLiteral)]
    DAY               [reduce using rule 386 (hexStringLiteral)]
    DAY               [reduce using rule 523 (questionMark)]
    EXCEPT            reduce using rule 376 (unsignedNumericLiteral)
    EXCEPT            [reduce using rule 383 (characterStringLiteral)]
    EXCEPT            [reduce using rule 384 (nationalCharacterStringLiteral)]
    EXCEPT            [reduce using rule 385 (bitStringLiteral)]
    EXCEPT            [reduce using rule 386 (hexStringLiteral)]
    EXCEPT            [reduce using rule 523 (questionMark)]
    EXTRACT           reduce using rule 376 (unsignedNumericLiteral)
    EXTRACT           [reduce using rule 383 (characterStringLiteral)]
    EXTRACT           [reduce using rule 384 (nationalCharacterStringLiteral)]
    EXTRACT           [reduce using rule 385 (bitStringLiteral)]
    EXTRACT           [reduce using rule 386 (hexStringLiteral)]
    EXTRACT           [reduce using rule 518 (colon)]
    EXTRACT           [reduce using rule 523 (questionMark)]
    CHAR_LENGTH       reduce using rule 376 (unsignedNumericLiteral)
    CHAR_LENGTH       [reduce using rule 383 (characterStringLiteral)]
    CHAR_LENGTH       [reduce using rule 384 (nationalCharacterStringLiteral)]
    CHAR_LENGTH       [reduce using rule 385 (bitStringLiteral)]
    CHAR_LENGTH       [reduce using rule 386 (hexStringLiteral)]
    CHAR_LENGTH       [reduce using rule 518 (colon)]
    CHAR_LENGTH       [reduce using rule 523 (questionMark)]
    SUBSTRING         reduce using rule 376 (unsignedNumericLiteral)
    SUBSTRING         [reduce using rule 383 (characterStringLiteral)]
    SUBSTRING         [reduce using rule 384 (nationalCharacterStringLiteral)]
    SUBSTRING         [reduce using rule 385 (bitStringLiteral)]
    SUBSTRING         [reduce using rule 386 (hexStringLiteral)]
    SUBSTRING         [reduce using rule 518 (colon)]
    SUBSTRING         [reduce using rule 523 (questionMark)]
    PARTIAL           reduce using rule 376 (unsignedNumericLiteral)
    PARTIAL           [reduce using rule 383 (characterStringLiteral)]
    PARTIAL           [reduce using rule 384 (nationalCharacterStringLiteral)]
    PARTIAL           [reduce using rule 385 (bitStringLiteral)]
    PARTIAL           [reduce using rule 386 (hexStringLiteral)]
    PARTIAL           [reduce using rule 518 (colon)]
    PARTIAL           [reduce using rule 523 (questionMark)]
    MAX               reduce using rule 376 (unsignedNumericLiteral)
    MAX               [reduce using rule 383 (characterStringLiteral)]
    MAX               [reduce using rule 384 (nationalCharacterStringLiteral)]
    MAX               [reduce using rule 385 (bitStringLiteral)]
    MAX               [reduce using rule 386 (hexStringLiteral)]
    MAX               [reduce using rule 518 (colon)]
    MAX               [reduce using rule 523 (questionMark)]
    LOWER             reduce using rule 376 (unsignedNumericLiteral)
    LOWER             [reduce using rule 383 (characterStringLiteral)]
    LOWER             [reduce using rule 384 (nationalCharacterStringLiteral)]
    LOWER             [reduce using rule 385 (bitStringLiteral)]
    LOWER             [reduce using rule 386 (hexStringLiteral)]
    LOWER             [reduce using rule 518 (colon)]
    LOWER             [reduce using rule 523 (questionMark)]
    USING             reduce using rule 376 (unsignedNumericLiteral)
    USING             [reduce using rule 383 (characterStringLiteral)]
    USING             [reduce using rule 384 (nationalCharacterStringLiteral)]
    USING             [reduce using rule 385 (bitStringLiteral)]
    USING             [reduce using rule 386 (hexStringLiteral)]
    USING             [reduce using rule 523 (questionMark)]
    CASCADE           reduce using rule 376 (unsignedNumericLiteral)
    CASCADE           [reduce using rule 383 (characterStringLiteral)]
    CASCADE           [reduce using rule 384 (nationalCharacterStringLiteral)]
    CASCADE           [reduce using rule 385 (bitStringLiteral)]
    CASCADE           [reduce using rule 386 (hexStringLiteral)]
    CASCADE           [reduce using rule 518 (colon)]
    CASCADE           [reduce using rule 523 (questionMark)]
    TEMPORARY         reduce using rule 376 (unsignedNumericLiteral)
    TEMPORARY         [reduce using rule 383 (characterStringLiteral)]
    TEMPORARY         [reduce using rule 384 (nationalCharacterStringLiteral)]
    TEMPORARY         [reduce using rule 385 (bitStringLiteral)]
    TEMPORARY         [reduce using rule 386 (hexStringLiteral)]
    TEMPORARY         [reduce using rule 518 (colon)]
    TEMPORARY         [reduce using rule 523 (questionMark)]
    HOUR              reduce using rule 376 (unsignedNumericLiteral)
    HOUR              [reduce using rule 383 (characterStringLiteral)]
    HOUR              [reduce using rule 384 (nationalCharacterStringLiteral)]
    HOUR              [reduce using rule 385 (bitStringLiteral)]
    HOUR              [reduce using rule 386 (hexStringLiteral)]
    HOUR              [reduce using rule 523 (questionMark)]
    YEAR              reduce using rule 376 (unsignedNumericLiteral)
    YEAR              [reduce using rule 383 (characterStringLiteral)]
    YEAR              [reduce using rule 384 (nationalCharacterStringLiteral)]
    YEAR              [reduce using rule 385 (bitStringLiteral)]
    YEAR              [reduce using rule 386 (hexStringLiteral)]
    YEAR              [reduce using rule 523 (questionMark)]
    OVERLAPS          reduce using rule 376 (unsignedNumericLiteral)
    OVERLAPS          [reduce using rule 383 (characterStringLiteral)]
    OVERLAPS          [reduce using rule 384 (nationalCharacterStringLiteral)]
    OVERLAPS          [reduce using rule 385 (bitStringLiteral)]
    OVERLAPS          [reduce using rule 386 (hexStringLiteral)]
    OVERLAPS          [reduce using rule 523 (questionMark)]
    CHARACTER_LENGTH  reduce using rule 376 (unsignedNumericLiteral)
    CHARACTER_LENGTH  [reduce using rule 383 (characterStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 384 (nationalCharacterStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 385 (bitStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 386 (hexStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 518 (colon)]
    CHARACTER_LENGTH  [reduce using rule 523 (questionMark)]
    MATCH             reduce using rule 376 (unsignedNumericLiteral)
    MATCH             [reduce using rule 383 (characterStringLiteral)]
    MATCH             [reduce using rule 384 (nationalCharacterStringLiteral)]
    MATCH             [reduce using rule 385 (bitStringLiteral)]
    MATCH             [reduce using rule 386 (hexStringLiteral)]
    MATCH             [reduce using rule 523 (questionMark)]
    CONVERT           reduce using rule 376 (unsignedNumericLiteral)
    CONVERT           [reduce using rule 383 (characterStringLiteral)]
    CONVERT           [reduce using rule 384 (nationalCharacterStringLiteral)]
    CONVERT           [reduce using rule 385 (bitStringLiteral)]
    CONVERT           [reduce using rule 386 (hexStringLiteral)]
    CONVERT           [reduce using rule 518 (colon)]
    CONVERT           [reduce using rule 523 (questionMark)]
    TRANSLATE         reduce using rule 376 (unsignedNumericLiteral)
    TRANSLATE         [reduce using rule 383 (characterStringLiteral)]
    TRANSLATE         [reduce using rule 384 (nationalCharacterStringLiteral)]
    TRANSLATE         [reduce using rule 385 (bitStringLiteral)]
    TRANSLATE         [reduce using rule 386 (hexStringLiteral)]
    TRANSLATE         [reduce using rule 518 (colon)]
    TRANSLATE         [reduce using rule 523 (questionMark)]
    PRESERVE          reduce using rule 376 (unsignedNumericLiteral)
    PRESERVE          [reduce using rule 383 (characterStringLiteral)]
    PRESERVE          [reduce using rule 384 (nationalCharacterStringLiteral)]
    PRESERVE          [reduce using rule 385 (bitStringLiteral)]
    PRESERVE          [reduce using rule 386 (hexStringLiteral)]
    PRESERVE          [reduce using rule 518 (colon)]
    PRESERVE          [reduce using rule 523 (questionMark)]
    POSITION          reduce using rule 376 (unsignedNumericLiteral)
    POSITION          [reduce using rule 383 (characterStringLiteral)]
    POSITION          [reduce using rule 384 (nationalCharacterStringLiteral)]
    POSITION          [reduce using rule 385 (bitStringLiteral)]
    POSITION          [reduce using rule 386 (hexStringLiteral)]
    POSITION          [reduce using rule 518 (colon)]
    POSITION          [reduce using rule 523 (questionMark)]
    COALESCE          reduce using rule 376 (unsignedNumericLiteral)
    COALESCE          [reduce using rule 383 (characterStringLiteral)]
    COALESCE          [reduce using rule 384 (nationalCharacterStringLiteral)]
    COALESCE          [reduce using rule 385 (bitStringLiteral)]
    COALESCE          [reduce using rule 386 (hexStringLiteral)]
    COALESCE          [reduce using rule 518 (colon)]
    COALESCE          [reduce using rule 523 (questionMark)]
    TRIM              reduce using rule 376 (unsignedNumericLiteral)
    TRIM              [reduce using rule 383 (characterStringLiteral)]
    TRIM              [reduce using rule 384 (nationalCharacterStringLiteral)]
    TRIM              [reduce using rule 385 (bitStringLiteral)]
    TRIM              [reduce using rule 386 (hexStringLiteral)]
    TRIM              [reduce using rule 518 (colon)]
    TRIM              [reduce using rule 523 (questionMark)]
    AT                reduce using rule 376 (unsignedNumericLiteral)
    AT                [reduce using rule 383 (characterStringLiteral)]
    AT                [reduce using rule 384 (nationalCharacterStringLiteral)]
    AT                [reduce using rule 385 (bitStringLiteral)]
    AT                [reduce using rule 386 (hexStringLiteral)]
    AT                [reduce using rule 523 (questionMark)]
    NUMBER            reduce using rule 376 (unsignedNumericLiteral)
    NUMBER            [reduce using rule 383 (characterStringLiteral)]
    NUMBER            [reduce using rule 384 (nationalCharacterStringLiteral)]
    NUMBER            [reduce using rule 385 (bitStringLiteral)]
    NUMBER            [reduce using rule 386 (hexStringLiteral)]
    NUMBER            [reduce using rule 518 (colon)]
    NUMBER            [reduce using rule 523 (questionMark)]
    ID                reduce using rule 376 (unsignedNumericLiteral)
    ID                [reduce using rule 383 (characterStringLiteral)]
    ID                [reduce using rule 384 (nationalCharacterStringLiteral)]
    ID                [reduce using rule 385 (bitStringLiteral)]
    ID                [reduce using rule 386 (hexStringLiteral)]
    ID                [reduce using rule 518 (colon)]
    ID                [reduce using rule 523 (questionMark)]
    ','               reduce using rule 376 (unsignedNumericLiteral)
    ','               [reduce using rule 383 (characterStringLiteral)]
    ','               [reduce using rule 384 (nationalCharacterStringLiteral)]
    ','               [reduce using rule 385 (bitStringLiteral)]
    ','               [reduce using rule 386 (hexStringLiteral)]
    ','               [reduce using rule 523 (questionMark)]
    ')'               reduce using rule 376 (unsignedNumericLiteral)
    ')'               [reduce using rule 383 (characterStringLiteral)]
    ')'               [reduce using rule 384 (nationalCharacterStringLiteral)]
    ')'               [reduce using rule 385 (bitStringLiteral)]
    ')'               [reduce using rule 386 (hexStringLiteral)]
    ')'               [reduce using rule 523 (questionMark)]
    $default          reduce using rule 376 (unsignedNumericLiteral)


state 884

   35 id: OCTET_LENGTH .  [UNKNOWN_LEX]
  231 leftParen: . '('
  811 octetLengthExpression: OCTET_LENGTH . leftParen stringValueExpression rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 35 (id)

    leftParen  go to state 1038


state 885

   36 id: EXTRACT .  [UNKNOWN_LEX]
  231 leftParen: . '('
  762 extractExpression: EXTRACT . leftParen extractField FROM extractSource rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 36 (id)

    leftParen  go to state 1039


state 886

   20 id: CHAR_LENGTH .  [UNKNOWN_LEX]
  807 charLengthExpression: CHAR_LENGTH .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']

    UNKNOWN_LEX  reduce using rule 20 (id)
    UNKNOWN_LEX  [reduce using rule 807 (charLengthExpression)]
    $default     reduce using rule 807 (charLengthExpression)


state 887

  231 leftParen: . '('
  812 bitLengthExpression: BIT_LENGTH . leftParen stringValueExpression rightParen

    '('  shift, and go to state 295

    leftParen  go to state 1040


state 888

   25 id: CHARACTER_LENGTH .  [UNKNOWN_LEX]
  231 leftParen: . '('
  808 charLengthExpression: CHARACTER_LENGTH . leftParen stringValueExpression rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 25 (id)

    leftParen  go to state 1041


state 889

   21 id: POSITION .  [UNKNOWN_LEX]
  231 leftParen: . '('
  711 positionExpression: POSITION . leftParen characterValueExpression IN characterValueExpression rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 21 (id)

    leftParen  go to state 1042


state 890

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  500                       | leftParen . valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  565         | leftParen . queryExpression rightParen
  566 queryExpression: . nonjoinQueryExpression
  567                | . joinedTable
  568 nonjoinQueryExpression: . nonjoinQueryTerm
  569                       | . queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  570                       | . queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  579 nonjoinQueryTerm: . nonjoinQueryPrimary
  580                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  585 nonjoinQueryPrimary: . simpleTable
  586                    | . leftParen nonjoinQueryExpression rightParen
  587 simpleTable: . querySpecification
  588            | . tableValueConstructor
  589            | . explicitTable
  590 querySpecification: . SELECT querySpecification1 selectList tableExpression
  615 tableReference: . tableName tableReference1
  616               | . derivedTable correlationSpecification
  617               | . joinedTable
  626 derivedTable: . tableSubquery
  627 tableSubquery: . subquery
  628 joinedTable: . crossJoin
  629            | . qualifiedJoin
  630            | . leftParen joinedTable rightParen
  631 crossJoin: . tableReference CROSS JOIN tableReference
  632 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  663 tableValueConstructor: . VALUES tableValueConstructorList
  667 explicitTable: . TABLE tableName
  668 queryTerm: . nonjoinQueryTerm
  669          | . joinedTable
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression

    VALUES             shift, and go to state 837
    SELECT             shift, and go to state 838
    TABLE              shift, and go to state 839
    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 840
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 841
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 961
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 845
    queryExpression                 go to state 846
    nonjoinQueryExpression          go to state 847
    nonjoinQueryTerm                go to state 848
    nonjoinQueryPrimary             go to state 849
    simpleTable                     go to state 850
    querySpecification              go to state 851
    tableReference                  go to state 852
    derivedTable                    go to state 853
    tableSubquery                   go to state 854
    joinedTable                     go to state 855
    crossJoin                       go to state 856
    qualifiedJoin                   go to state 857
    tableValueConstructor           go to state 858
    explicitTable                   go to state 859
    queryTerm                       go to state 860
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761


state 891

  490 factor: factor1 numericPrimary .

    $default  reduce using rule 490 (factor)


state 892

  493 numericPrimary: valueExpressionPrimary .

    $default  reduce using rule 493 (numericPrimary)


state 893

  494 numericPrimary: numericValueFunction .

    $default  reduce using rule 494 (numericPrimary)


state 894

  708 numericValueFunction: positionExpression .

    $default  reduce using rule 708 (numericValueFunction)


state 895

  709 numericValueFunction: extractExpression .

    $default  reduce using rule 709 (numericValueFunction)


state 896

  710 numericValueFunction: lengthExpression .

    $default  reduce using rule 710 (numericValueFunction)


state 897

  804 lengthExpression: charLengthExpression .

    $default  reduce using rule 804 (lengthExpression)


state 898

  805 lengthExpression: octetLengthExpression .

    $default  reduce using rule 805 (lengthExpression)


state 899

  806 lengthExpression: bitLengthExpression .

    $default  reduce using rule 806 (lengthExpression)


state 900

  521 indicatorParameter1: INDICATOR .

    $default  reduce using rule 521 (indicatorParameter1)


state 901

  514 parameterSpecification: parameterName parameterSpecification1 .

    $default  reduce using rule 514 (parameterSpecification)


state 902

  516 parameterSpecification1: indicatorParameter .

    $default  reduce using rule 516 (parameterSpecification1)


state 903

  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  519 indicatorParameter: indicatorParameter1 . parameterName

    UNKNOWN_LEX  shift, and go to state 1043

    parameterName  go to state 1044
    colon          go to state 1045


state 904

  535 AdaHostIdentifier: UNKNOWN_BODY .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, INDICATOR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  536 CHostIdentifier: UNKNOWN_BODY .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, INDICATOR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  537 CobolHostIdentifier: UNKNOWN_BODY .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, INDICATOR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  538 FortranHostIdentifier: UNKNOWN_BODY .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, INDICATOR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  539 MUMPSHostIdentifier: UNKNOWN_BODY .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, INDICATOR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  540 PascalHostIdentifier: UNKNOWN_BODY .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, INDICATOR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']
  541 PLIHostIdentifier: UNKNOWN_BODY .  [BETWEEN, ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, LIKE, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, SECOND, OCTET_LENGTH, MINUTE, CROSS, DEFERRED, DEFERRABLE, MONTH, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, DAY, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, HOUR, INDICATOR, YEAR, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',', ')']

    BETWEEN           reduce using rule 535 (AdaHostIdentifier)
    BETWEEN           [reduce using rule 536 (CHostIdentifier)]
    BETWEEN           [reduce using rule 537 (CobolHostIdentifier)]
    BETWEEN           [reduce using rule 538 (FortranHostIdentifier)]
    BETWEEN           [reduce using rule 539 (MUMPSHostIdentifier)]
    BETWEEN           [reduce using rule 540 (PascalHostIdentifier)]
    BETWEEN           [reduce using rule 541 (PLIHostIdentifier)]
    ESCAPE            reduce using rule 535 (AdaHostIdentifier)
    ESCAPE            [reduce using rule 536 (CHostIdentifier)]
    ESCAPE            [reduce using rule 537 (CobolHostIdentifier)]
    ESCAPE            [reduce using rule 538 (FortranHostIdentifier)]
    ESCAPE            [reduce using rule 539 (MUMPSHostIdentifier)]
    ESCAPE            [reduce using rule 540 (PascalHostIdentifier)]
    ESCAPE            [reduce using rule 541 (PLIHostIdentifier)]
    HAVING            reduce using rule 535 (AdaHostIdentifier)
    HAVING            [reduce using rule 536 (CHostIdentifier)]
    HAVING            [reduce using rule 537 (CobolHostIdentifier)]
    HAVING            [reduce using rule 538 (FortranHostIdentifier)]
    HAVING            [reduce using rule 539 (MUMPSHostIdentifier)]
    HAVING            [reduce using rule 540 (PascalHostIdentifier)]
    HAVING            [reduce using rule 541 (PLIHostIdentifier)]
    WHERE             reduce using rule 535 (AdaHostIdentifier)
    WHERE             [reduce using rule 536 (CHostIdentifier)]
    WHERE             [reduce using rule 537 (CobolHostIdentifier)]
    WHERE             [reduce using rule 538 (FortranHostIdentifier)]
    WHERE             [reduce using rule 539 (MUMPSHostIdentifier)]
    WHERE             [reduce using rule 540 (PascalHostIdentifier)]
    WHERE             [reduce using rule 541 (PLIHostIdentifier)]
    OR                reduce using rule 535 (AdaHostIdentifier)
    OR                [reduce using rule 536 (CHostIdentifier)]
    OR                [reduce using rule 537 (CobolHostIdentifier)]
    OR                [reduce using rule 538 (FortranHostIdentifier)]
    OR                [reduce using rule 539 (MUMPSHostIdentifier)]
    OR                [reduce using rule 540 (PascalHostIdentifier)]
    OR                [reduce using rule 541 (PLIHostIdentifier)]
    GROUP             reduce using rule 535 (AdaHostIdentifier)
    GROUP             [reduce using rule 536 (CHostIdentifier)]
    GROUP             [reduce using rule 537 (CobolHostIdentifier)]
    GROUP             [reduce using rule 538 (FortranHostIdentifier)]
    GROUP             [reduce using rule 539 (MUMPSHostIdentifier)]
    GROUP             [reduce using rule 540 (PascalHostIdentifier)]
    GROUP             [reduce using rule 541 (PLIHostIdentifier)]
    RIGHT             reduce using rule 535 (AdaHostIdentifier)
    RIGHT             [reduce using rule 536 (CHostIdentifier)]
    RIGHT             [reduce using rule 537 (CobolHostIdentifier)]
    RIGHT             [reduce using rule 538 (FortranHostIdentifier)]
    RIGHT             [reduce using rule 539 (MUMPSHostIdentifier)]
    RIGHT             [reduce using rule 540 (PascalHostIdentifier)]
    RIGHT             [reduce using rule 541 (PLIHostIdentifier)]
    INNER             reduce using rule 535 (AdaHostIdentifier)
    INNER             [reduce using rule 536 (CHostIdentifier)]
    INNER             [reduce using rule 537 (CobolHostIdentifier)]
    INNER             [reduce using rule 538 (FortranHostIdentifier)]
    INNER             [reduce using rule 539 (MUMPSHostIdentifier)]
    INNER             [reduce using rule 540 (PascalHostIdentifier)]
    INNER             [reduce using rule 541 (PLIHostIdentifier)]
    UNION             reduce using rule 535 (AdaHostIdentifier)
    UNION             [reduce using rule 536 (CHostIdentifier)]
    UNION             [reduce using rule 537 (CobolHostIdentifier)]
    UNION             [reduce using rule 538 (FortranHostIdentifier)]
    UNION             [reduce using rule 539 (MUMPSHostIdentifier)]
    UNION             [reduce using rule 540 (PascalHostIdentifier)]
    UNION             [reduce using rule 541 (PLIHostIdentifier)]
    FROM              reduce using rule 535 (AdaHostIdentifier)
    FROM              [reduce using rule 536 (CHostIdentifier)]
    FROM              [reduce using rule 537 (CobolHostIdentifier)]
    FROM              [reduce using rule 538 (FortranHostIdentifier)]
    FROM              [reduce using rule 539 (MUMPSHostIdentifier)]
    FROM              [reduce using rule 540 (PascalHostIdentifier)]
    FROM              [reduce using rule 541 (PLIHostIdentifier)]
    WHEN              reduce using rule 535 (AdaHostIdentifier)
    WHEN              [reduce using rule 536 (CHostIdentifier)]
    WHEN              [reduce using rule 537 (CobolHostIdentifier)]
    WHEN              [reduce using rule 538 (FortranHostIdentifier)]
    WHEN              [reduce using rule 539 (MUMPSHostIdentifier)]
    WHEN              [reduce using rule 540 (PascalHostIdentifier)]
    WHEN              [reduce using rule 541 (PLIHostIdentifier)]
    THEN              reduce using rule 535 (AdaHostIdentifier)
    THEN              [reduce using rule 536 (CHostIdentifier)]
    THEN              [reduce using rule 537 (CobolHostIdentifier)]
    THEN              [reduce using rule 538 (FortranHostIdentifier)]
    THEN              [reduce using rule 539 (MUMPSHostIdentifier)]
    THEN              [reduce using rule 540 (PascalHostIdentifier)]
    THEN              [reduce using rule 541 (PLIHostIdentifier)]
    ELSE              reduce using rule 535 (AdaHostIdentifier)
    ELSE              [reduce using rule 536 (CHostIdentifier)]
    ELSE              [reduce using rule 537 (CobolHostIdentifier)]
    ELSE              [reduce using rule 538 (FortranHostIdentifier)]
    ELSE              [reduce using rule 539 (MUMPSHostIdentifier)]
    ELSE              [reduce using rule 540 (PascalHostIdentifier)]
    ELSE              [reduce using rule 541 (PLIHostIdentifier)]
    DESC              reduce using rule 535 (AdaHostIdentifier)
    DESC              [reduce using rule 536 (CHostIdentifier)]
    DESC              [reduce using rule 537 (CobolHostIdentifier)]
    DESC              [reduce using rule 538 (FortranHostIdentifier)]
    DESC              [reduce using rule 539 (MUMPSHostIdentifier)]
    DESC              [reduce using rule 540 (PascalHostIdentifier)]
    DESC              [reduce using rule 541 (PLIHostIdentifier)]
    LIKE              reduce using rule 535 (AdaHostIdentifier)
    LIKE              [reduce using rule 536 (CHostIdentifier)]
    LIKE              [reduce using rule 537 (CobolHostIdentifier)]
    LIKE              [reduce using rule 538 (FortranHostIdentifier)]
    LIKE              [reduce using rule 539 (MUMPSHostIdentifier)]
    LIKE              [reduce using rule 540 (PascalHostIdentifier)]
    LIKE              [reduce using rule 541 (PLIHostIdentifier)]
    JOIN              reduce using rule 535 (AdaHostIdentifier)
    JOIN              [reduce using rule 536 (CHostIdentifier)]
    JOIN              [reduce using rule 537 (CobolHostIdentifier)]
    JOIN              [reduce using rule 538 (FortranHostIdentifier)]
    JOIN              [reduce using rule 539 (MUMPSHostIdentifier)]
    JOIN              [reduce using rule 540 (PascalHostIdentifier)]
    JOIN              [reduce using rule 541 (PLIHostIdentifier)]
    LEFT              reduce using rule 535 (AdaHostIdentifier)
    LEFT              [reduce using rule 536 (CHostIdentifier)]
    LEFT              [reduce using rule 537 (CobolHostIdentifier)]
    LEFT              [reduce using rule 538 (FortranHostIdentifier)]
    LEFT              [reduce using rule 539 (MUMPSHostIdentifier)]
    LEFT              [reduce using rule 540 (PascalHostIdentifier)]
    LEFT              [reduce using rule 541 (PLIHostIdentifier)]
    FULL              reduce using rule 535 (AdaHostIdentifier)
    FULL              [reduce using rule 536 (CHostIdentifier)]
    FULL              [reduce using rule 537 (CobolHostIdentifier)]
    FULL              [reduce using rule 538 (FortranHostIdentifier)]
    FULL              [reduce using rule 539 (MUMPSHostIdentifier)]
    FULL              [reduce using rule 540 (PascalHostIdentifier)]
    FULL              [reduce using rule 541 (PLIHostIdentifier)]
    AND               reduce using rule 535 (AdaHostIdentifier)
    AND               [reduce using rule 536 (CHostIdentifier)]
    AND               [reduce using rule 537 (CobolHostIdentifier)]
    AND               [reduce using rule 538 (FortranHostIdentifier)]
    AND               [reduce using rule 539 (MUMPSHostIdentifier)]
    AND               [reduce using rule 540 (PascalHostIdentifier)]
    AND               [reduce using rule 541 (PLIHostIdentifier)]
    END               reduce using rule 535 (AdaHostIdentifier)
    END               [reduce using rule 536 (CHostIdentifier)]
    END               [reduce using rule 537 (CobolHostIdentifier)]
    END               [reduce using rule 538 (FortranHostIdentifier)]
    END               [reduce using rule 539 (MUMPSHostIdentifier)]
    END               [reduce using rule 540 (PascalHostIdentifier)]
    END               [reduce using rule 541 (PLIHostIdentifier)]
    ASC               reduce using rule 535 (AdaHostIdentifier)
    ASC               [reduce using rule 536 (CHostIdentifier)]
    ASC               [reduce using rule 537 (CobolHostIdentifier)]
    ASC               [reduce using rule 538 (FortranHostIdentifier)]
    ASC               [reduce using rule 539 (MUMPSHostIdentifier)]
    ASC               [reduce using rule 540 (PascalHostIdentifier)]
    ASC               [reduce using rule 541 (PLIHostIdentifier)]
    FOR               reduce using rule 535 (AdaHostIdentifier)
    FOR               [reduce using rule 536 (CHostIdentifier)]
    FOR               [reduce using rule 537 (CobolHostIdentifier)]
    FOR               [reduce using rule 538 (FortranHostIdentifier)]
    FOR               [reduce using rule 539 (MUMPSHostIdentifier)]
    FOR               [reduce using rule 540 (PascalHostIdentifier)]
    FOR               [reduce using rule 541 (PLIHostIdentifier)]
    NOT               reduce using rule 535 (AdaHostIdentifier)
    NOT               [reduce using rule 536 (CHostIdentifier)]
    NOT               [reduce using rule 537 (CobolHostIdentifier)]
    NOT               [reduce using rule 538 (FortranHostIdentifier)]
    NOT               [reduce using rule 539 (MUMPSHostIdentifier)]
    NOT               [reduce using rule 540 (PascalHostIdentifier)]
    NOT               [reduce using rule 541 (PLIHostIdentifier)]
    ON                reduce using rule 535 (AdaHostIdentifier)
    ON                [reduce using rule 536 (CHostIdentifier)]
    ON                [reduce using rule 537 (CobolHostIdentifier)]
    ON                [reduce using rule 538 (FortranHostIdentifier)]
    ON                [reduce using rule 539 (MUMPSHostIdentifier)]
    ON                [reduce using rule 540 (PascalHostIdentifier)]
    ON                [reduce using rule 541 (PLIHostIdentifier)]
    AS                reduce using rule 535 (AdaHostIdentifier)
    AS                [reduce using rule 536 (CHostIdentifier)]
    AS                [reduce using rule 537 (CobolHostIdentifier)]
    AS                [reduce using rule 538 (FortranHostIdentifier)]
    AS                [reduce using rule 539 (MUMPSHostIdentifier)]
    AS                [reduce using rule 540 (PascalHostIdentifier)]
    AS                [reduce using rule 541 (PLIHostIdentifier)]
    IN                reduce using rule 535 (AdaHostIdentifier)
    IN                [reduce using rule 536 (CHostIdentifier)]
    IN                [reduce using rule 537 (CobolHostIdentifier)]
    IN                [reduce using rule 538 (FortranHostIdentifier)]
    IN                [reduce using rule 539 (MUMPSHostIdentifier)]
    IN                [reduce using rule 540 (PascalHostIdentifier)]
    IN                [reduce using rule 541 (PLIHostIdentifier)]
    IS                reduce using rule 535 (AdaHostIdentifier)
    IS                [reduce using rule 536 (CHostIdentifier)]
    IS                [reduce using rule 537 (CobolHostIdentifier)]
    IS                [reduce using rule 538 (FortranHostIdentifier)]
    IS                [reduce using rule 539 (MUMPSHostIdentifier)]
    IS                [reduce using rule 540 (PascalHostIdentifier)]
    IS                [reduce using rule 541 (PLIHostIdentifier)]
    UNKNOWN_LEX       reduce using rule 535 (AdaHostIdentifier)
    UNKNOWN_LEX       [reduce using rule 536 (CHostIdentifier)]
    UNKNOWN_LEX       [reduce using rule 537 (CobolHostIdentifier)]
    UNKNOWN_LEX       [reduce using rule 538 (FortranHostIdentifier)]
    UNKNOWN_LEX       [reduce using rule 539 (MUMPSHostIdentifier)]
    UNKNOWN_LEX       [reduce using rule 540 (PascalHostIdentifier)]
    UNKNOWN_LEX       [reduce using rule 541 (PLIHostIdentifier)]
    ACTION            reduce using rule 535 (AdaHostIdentifier)
    ACTION            [reduce using rule 536 (CHostIdentifier)]
    ACTION            [reduce using rule 537 (CobolHostIdentifier)]
    ACTION            [reduce using rule 538 (FortranHostIdentifier)]
    ACTION            [reduce using rule 539 (MUMPSHostIdentifier)]
    ACTION            [reduce using rule 540 (PascalHostIdentifier)]
    ACTION            [reduce using rule 541 (PLIHostIdentifier)]
    MIN               reduce using rule 535 (AdaHostIdentifier)
    MIN               [reduce using rule 536 (CHostIdentifier)]
    MIN               [reduce using rule 537 (CobolHostIdentifier)]
    MIN               [reduce using rule 538 (FortranHostIdentifier)]
    MIN               [reduce using rule 539 (MUMPSHostIdentifier)]
    MIN               [reduce using rule 540 (PascalHostIdentifier)]
    MIN               [reduce using rule 541 (PLIHostIdentifier)]
    SECOND            reduce using rule 535 (AdaHostIdentifier)
    SECOND            [reduce using rule 536 (CHostIdentifier)]
    SECOND            [reduce using rule 537 (CobolHostIdentifier)]
    SECOND            [reduce using rule 538 (FortranHostIdentifier)]
    SECOND            [reduce using rule 539 (MUMPSHostIdentifier)]
    SECOND            [reduce using rule 540 (PascalHostIdentifier)]
    SECOND            [reduce using rule 541 (PLIHostIdentifier)]
    OCTET_LENGTH      reduce using rule 535 (AdaHostIdentifier)
    OCTET_LENGTH      [reduce using rule 536 (CHostIdentifier)]
    OCTET_LENGTH      [reduce using rule 537 (CobolHostIdentifier)]
    OCTET_LENGTH      [reduce using rule 538 (FortranHostIdentifier)]
    OCTET_LENGTH      [reduce using rule 539 (MUMPSHostIdentifier)]
    OCTET_LENGTH      [reduce using rule 540 (PascalHostIdentifier)]
    OCTET_LENGTH      [reduce using rule 541 (PLIHostIdentifier)]
    MINUTE            reduce using rule 535 (AdaHostIdentifier)
    MINUTE            [reduce using rule 536 (CHostIdentifier)]
    MINUTE            [reduce using rule 537 (CobolHostIdentifier)]
    MINUTE            [reduce using rule 538 (FortranHostIdentifier)]
    MINUTE            [reduce using rule 539 (MUMPSHostIdentifier)]
    MINUTE            [reduce using rule 540 (PascalHostIdentifier)]
    MINUTE            [reduce using rule 541 (PLIHostIdentifier)]
    CROSS             reduce using rule 535 (AdaHostIdentifier)
    CROSS             [reduce using rule 536 (CHostIdentifier)]
    CROSS             [reduce using rule 537 (CobolHostIdentifier)]
    CROSS             [reduce using rule 538 (FortranHostIdentifier)]
    CROSS             [reduce using rule 539 (MUMPSHostIdentifier)]
    CROSS             [reduce using rule 540 (PascalHostIdentifier)]
    CROSS             [reduce using rule 541 (PLIHostIdentifier)]
    DEFERRED          reduce using rule 535 (AdaHostIdentifier)
    DEFERRED          [reduce using rule 536 (CHostIdentifier)]
    DEFERRED          [reduce using rule 537 (CobolHostIdentifier)]
    DEFERRED          [reduce using rule 538 (FortranHostIdentifier)]
    DEFERRED          [reduce using rule 539 (MUMPSHostIdentifier)]
    DEFERRED          [reduce using rule 540 (PascalHostIdentifier)]
    DEFERRED          [reduce using rule 541 (PLIHostIdentifier)]
    DEFERRABLE        reduce using rule 535 (AdaHostIdentifier)
    DEFERRABLE        [reduce using rule 536 (CHostIdentifier)]
    DEFERRABLE        [reduce using rule 537 (CobolHostIdentifier)]
    DEFERRABLE        [reduce using rule 538 (FortranHostIdentifier)]
    DEFERRABLE        [reduce using rule 539 (MUMPSHostIdentifier)]
    DEFERRABLE        [reduce using rule 540 (PascalHostIdentifier)]
    DEFERRABLE        [reduce using rule 541 (PLIHostIdentifier)]
    MONTH             reduce using rule 535 (AdaHostIdentifier)
    MONTH             [reduce using rule 536 (CHostIdentifier)]
    MONTH             [reduce using rule 537 (CobolHostIdentifier)]
    MONTH             [reduce using rule 538 (FortranHostIdentifier)]
    MONTH             [reduce using rule 539 (MUMPSHostIdentifier)]
    MONTH             [reduce using rule 540 (PascalHostIdentifier)]
    MONTH             [reduce using rule 541 (PLIHostIdentifier)]
    ZONE              reduce using rule 535 (AdaHostIdentifier)
    ZONE              [reduce using rule 536 (CHostIdentifier)]
    ZONE              [reduce using rule 537 (CobolHostIdentifier)]
    ZONE              [reduce using rule 538 (FortranHostIdentifier)]
    ZONE              [reduce using rule 539 (MUMPSHostIdentifier)]
    ZONE              [reduce using rule 540 (PascalHostIdentifier)]
    ZONE              [reduce using rule 541 (PLIHostIdentifier)]
    INTERSECT         reduce using rule 535 (AdaHostIdentifier)
    INTERSECT         [reduce using rule 536 (CHostIdentifier)]
    INTERSECT         [reduce using rule 537 (CobolHostIdentifier)]
    INTERSECT         [reduce using rule 538 (FortranHostIdentifier)]
    INTERSECT         [reduce using rule 539 (MUMPSHostIdentifier)]
    INTERSECT         [reduce using rule 540 (PascalHostIdentifier)]
    INTERSECT         [reduce using rule 541 (PLIHostIdentifier)]
    COUNT             reduce using rule 535 (AdaHostIdentifier)
    COUNT             [reduce using rule 536 (CHostIdentifier)]
    COUNT             [reduce using rule 537 (CobolHostIdentifier)]
    COUNT             [reduce using rule 538 (FortranHostIdentifier)]
    COUNT             [reduce using rule 539 (MUMPSHostIdentifier)]
    COUNT             [reduce using rule 540 (PascalHostIdentifier)]
    COUNT             [reduce using rule 541 (PLIHostIdentifier)]
    NATURAL           reduce using rule 535 (AdaHostIdentifier)
    NATURAL           [reduce using rule 536 (CHostIdentifier)]
    NATURAL           [reduce using rule 537 (CobolHostIdentifier)]
    NATURAL           [reduce using rule 538 (FortranHostIdentifier)]
    NATURAL           [reduce using rule 539 (MUMPSHostIdentifier)]
    NATURAL           [reduce using rule 540 (PascalHostIdentifier)]
    NATURAL           [reduce using rule 541 (PLIHostIdentifier)]
    NULLIF            reduce using rule 535 (AdaHostIdentifier)
    NULLIF            [reduce using rule 536 (CHostIdentifier)]
    NULLIF            [reduce using rule 537 (CobolHostIdentifier)]
    NULLIF            [reduce using rule 538 (FortranHostIdentifier)]
    NULLIF            [reduce using rule 539 (MUMPSHostIdentifier)]
    NULLIF            [reduce using rule 540 (PascalHostIdentifier)]
    NULLIF            [reduce using rule 541 (PLIHostIdentifier)]
    SUM               reduce using rule 535 (AdaHostIdentifier)
    SUM               [reduce using rule 536 (CHostIdentifier)]
    SUM               [reduce using rule 537 (CobolHostIdentifier)]
    SUM               [reduce using rule 538 (FortranHostIdentifier)]
    SUM               [reduce using rule 539 (MUMPSHostIdentifier)]
    SUM               [reduce using rule 540 (PascalHostIdentifier)]
    SUM               [reduce using rule 541 (PLIHostIdentifier)]
    COLLATE           reduce using rule 535 (AdaHostIdentifier)
    COLLATE           [reduce using rule 536 (CHostIdentifier)]
    COLLATE           [reduce using rule 537 (CobolHostIdentifier)]
    COLLATE           [reduce using rule 538 (FortranHostIdentifier)]
    COLLATE           [reduce using rule 539 (MUMPSHostIdentifier)]
    COLLATE           [reduce using rule 540 (PascalHostIdentifier)]
    COLLATE           [reduce using rule 541 (PLIHostIdentifier)]
    KEY               reduce using rule 535 (AdaHostIdentifier)
    KEY               [reduce using rule 536 (CHostIdentifier)]
    KEY               [reduce using rule 537 (CobolHostIdentifier)]
    KEY               [reduce using rule 538 (FortranHostIdentifier)]
    KEY               [reduce using rule 539 (MUMPSHostIdentifier)]
    KEY               [reduce using rule 540 (PascalHostIdentifier)]
    KEY               [reduce using rule 541 (PLIHostIdentifier)]
    AVG               reduce using rule 535 (AdaHostIdentifier)
    AVG               [reduce using rule 536 (CHostIdentifier)]
    AVG               [reduce using rule 537 (CobolHostIdentifier)]
    AVG               [reduce using rule 538 (FortranHostIdentifier)]
    AVG               [reduce using rule 539 (MUMPSHostIdentifier)]
    AVG               [reduce using rule 540 (PascalHostIdentifier)]
    AVG               [reduce using rule 541 (PLIHostIdentifier)]
    INITIALLY         reduce using rule 535 (AdaHostIdentifier)
    INITIALLY         [reduce using rule 536 (CHostIdentifier)]
    INITIALLY         [reduce using rule 537 (CobolHostIdentifier)]
    INITIALLY         [reduce using rule 538 (FortranHostIdentifier)]
    INITIALLY         [reduce using rule 539 (MUMPSHostIdentifier)]
    INITIALLY         [reduce using rule 540 (PascalHostIdentifier)]
    INITIALLY         [reduce using rule 541 (PLIHostIdentifier)]
    UPPER             reduce using rule 535 (AdaHostIdentifier)
    UPPER             [reduce using rule 536 (CHostIdentifier)]
    UPPER             [reduce using rule 537 (CobolHostIdentifier)]
    UPPER             [reduce using rule 538 (FortranHostIdentifier)]
    UPPER             [reduce using rule 539 (MUMPSHostIdentifier)]
    UPPER             [reduce using rule 540 (PascalHostIdentifier)]
    UPPER             [reduce using rule 541 (PLIHostIdentifier)]
    DAY               reduce using rule 535 (AdaHostIdentifier)
    DAY               [reduce using rule 536 (CHostIdentifier)]
    DAY               [reduce using rule 537 (CobolHostIdentifier)]
    DAY               [reduce using rule 538 (FortranHostIdentifier)]
    DAY               [reduce using rule 539 (MUMPSHostIdentifier)]
    DAY               [reduce using rule 540 (PascalHostIdentifier)]
    DAY               [reduce using rule 541 (PLIHostIdentifier)]
    EXCEPT            reduce using rule 535 (AdaHostIdentifier)
    EXCEPT            [reduce using rule 536 (CHostIdentifier)]
    EXCEPT            [reduce using rule 537 (CobolHostIdentifier)]
    EXCEPT            [reduce using rule 538 (FortranHostIdentifier)]
    EXCEPT            [reduce using rule 539 (MUMPSHostIdentifier)]
    EXCEPT            [reduce using rule 540 (PascalHostIdentifier)]
    EXCEPT            [reduce using rule 541 (PLIHostIdentifier)]
    EXTRACT           reduce using rule 535 (AdaHostIdentifier)
    EXTRACT           [reduce using rule 536 (CHostIdentifier)]
    EXTRACT           [reduce using rule 537 (CobolHostIdentifier)]
    EXTRACT           [reduce using rule 538 (FortranHostIdentifier)]
    EXTRACT           [reduce using rule 539 (MUMPSHostIdentifier)]
    EXTRACT           [reduce using rule 540 (PascalHostIdentifier)]
    EXTRACT           [reduce using rule 541 (PLIHostIdentifier)]
    CHAR_LENGTH       reduce using rule 535 (AdaHostIdentifier)
    CHAR_LENGTH       [reduce using rule 536 (CHostIdentifier)]
    CHAR_LENGTH       [reduce using rule 537 (CobolHostIdentifier)]
    CHAR_LENGTH       [reduce using rule 538 (FortranHostIdentifier)]
    CHAR_LENGTH       [reduce using rule 539 (MUMPSHostIdentifier)]
    CHAR_LENGTH       [reduce using rule 540 (PascalHostIdentifier)]
    CHAR_LENGTH       [reduce using rule 541 (PLIHostIdentifier)]
    SUBSTRING         reduce using rule 535 (AdaHostIdentifier)
    SUBSTRING         [reduce using rule 536 (CHostIdentifier)]
    SUBSTRING         [reduce using rule 537 (CobolHostIdentifier)]
    SUBSTRING         [reduce using rule 538 (FortranHostIdentifier)]
    SUBSTRING         [reduce using rule 539 (MUMPSHostIdentifier)]
    SUBSTRING         [reduce using rule 540 (PascalHostIdentifier)]
    SUBSTRING         [reduce using rule 541 (PLIHostIdentifier)]
    PARTIAL           reduce using rule 535 (AdaHostIdentifier)
    PARTIAL           [reduce using rule 536 (CHostIdentifier)]
    PARTIAL           [reduce using rule 537 (CobolHostIdentifier)]
    PARTIAL           [reduce using rule 538 (FortranHostIdentifier)]
    PARTIAL           [reduce using rule 539 (MUMPSHostIdentifier)]
    PARTIAL           [reduce using rule 540 (PascalHostIdentifier)]
    PARTIAL           [reduce using rule 541 (PLIHostIdentifier)]
    MAX               reduce using rule 535 (AdaHostIdentifier)
    MAX               [reduce using rule 536 (CHostIdentifier)]
    MAX               [reduce using rule 537 (CobolHostIdentifier)]
    MAX               [reduce using rule 538 (FortranHostIdentifier)]
    MAX               [reduce using rule 539 (MUMPSHostIdentifier)]
    MAX               [reduce using rule 540 (PascalHostIdentifier)]
    MAX               [reduce using rule 541 (PLIHostIdentifier)]
    LOWER             reduce using rule 535 (AdaHostIdentifier)
    LOWER             [reduce using rule 536 (CHostIdentifier)]
    LOWER             [reduce using rule 537 (CobolHostIdentifier)]
    LOWER             [reduce using rule 538 (FortranHostIdentifier)]
    LOWER             [reduce using rule 539 (MUMPSHostIdentifier)]
    LOWER             [reduce using rule 540 (PascalHostIdentifier)]
    LOWER             [reduce using rule 541 (PLIHostIdentifier)]
    USING             reduce using rule 535 (AdaHostIdentifier)
    USING             [reduce using rule 536 (CHostIdentifier)]
    USING             [reduce using rule 537 (CobolHostIdentifier)]
    USING             [reduce using rule 538 (FortranHostIdentifier)]
    USING             [reduce using rule 539 (MUMPSHostIdentifier)]
    USING             [reduce using rule 540 (PascalHostIdentifier)]
    USING             [reduce using rule 541 (PLIHostIdentifier)]
    CASCADE           reduce using rule 535 (AdaHostIdentifier)
    CASCADE           [reduce using rule 536 (CHostIdentifier)]
    CASCADE           [reduce using rule 537 (CobolHostIdentifier)]
    CASCADE           [reduce using rule 538 (FortranHostIdentifier)]
    CASCADE           [reduce using rule 539 (MUMPSHostIdentifier)]
    CASCADE           [reduce using rule 540 (PascalHostIdentifier)]
    CASCADE           [reduce using rule 541 (PLIHostIdentifier)]
    TEMPORARY         reduce using rule 535 (AdaHostIdentifier)
    TEMPORARY         [reduce using rule 536 (CHostIdentifier)]
    TEMPORARY         [reduce using rule 537 (CobolHostIdentifier)]
    TEMPORARY         [reduce using rule 538 (FortranHostIdentifier)]
    TEMPORARY         [reduce using rule 539 (MUMPSHostIdentifier)]
    TEMPORARY         [reduce using rule 540 (PascalHostIdentifier)]
    TEMPORARY         [reduce using rule 541 (PLIHostIdentifier)]
    HOUR              reduce using rule 535 (AdaHostIdentifier)
    HOUR              [reduce using rule 536 (CHostIdentifier)]
    HOUR              [reduce using rule 537 (CobolHostIdentifier)]
    HOUR              [reduce using rule 538 (FortranHostIdentifier)]
    HOUR              [reduce using rule 539 (MUMPSHostIdentifier)]
    HOUR              [reduce using rule 540 (PascalHostIdentifier)]
    HOUR              [reduce using rule 541 (PLIHostIdentifier)]
    INDICATOR         reduce using rule 535 (AdaHostIdentifier)
    INDICATOR         [reduce using rule 536 (CHostIdentifier)]
    INDICATOR         [reduce using rule 537 (CobolHostIdentifier)]
    INDICATOR         [reduce using rule 538 (FortranHostIdentifier)]
    INDICATOR         [reduce using rule 539 (MUMPSHostIdentifier)]
    INDICATOR         [reduce using rule 540 (PascalHostIdentifier)]
    INDICATOR         [reduce using rule 541 (PLIHostIdentifier)]
    YEAR              reduce using rule 535 (AdaHostIdentifier)
    YEAR              [reduce using rule 536 (CHostIdentifier)]
    YEAR              [reduce using rule 537 (CobolHostIdentifier)]
    YEAR              [reduce using rule 538 (FortranHostIdentifier)]
    YEAR              [reduce using rule 539 (MUMPSHostIdentifier)]
    YEAR              [reduce using rule 540 (PascalHostIdentifier)]
    YEAR              [reduce using rule 541 (PLIHostIdentifier)]
    OVERLAPS          reduce using rule 535 (AdaHostIdentifier)
    OVERLAPS          [reduce using rule 536 (CHostIdentifier)]
    OVERLAPS          [reduce using rule 537 (CobolHostIdentifier)]
    OVERLAPS          [reduce using rule 538 (FortranHostIdentifier)]
    OVERLAPS          [reduce using rule 539 (MUMPSHostIdentifier)]
    OVERLAPS          [reduce using rule 540 (PascalHostIdentifier)]
    OVERLAPS          [reduce using rule 541 (PLIHostIdentifier)]
    CHARACTER_LENGTH  reduce using rule 535 (AdaHostIdentifier)
    CHARACTER_LENGTH  [reduce using rule 536 (CHostIdentifier)]
    CHARACTER_LENGTH  [reduce using rule 537 (CobolHostIdentifier)]
    CHARACTER_LENGTH  [reduce using rule 538 (FortranHostIdentifier)]
    CHARACTER_LENGTH  [reduce using rule 539 (MUMPSHostIdentifier)]
    CHARACTER_LENGTH  [reduce using rule 540 (PascalHostIdentifier)]
    CHARACTER_LENGTH  [reduce using rule 541 (PLIHostIdentifier)]
    MATCH             reduce using rule 535 (AdaHostIdentifier)
    MATCH             [reduce using rule 536 (CHostIdentifier)]
    MATCH             [reduce using rule 537 (CobolHostIdentifier)]
    MATCH             [reduce using rule 538 (FortranHostIdentifier)]
    MATCH             [reduce using rule 539 (MUMPSHostIdentifier)]
    MATCH             [reduce using rule 540 (PascalHostIdentifier)]
    MATCH             [reduce using rule 541 (PLIHostIdentifier)]
    CONVERT           reduce using rule 535 (AdaHostIdentifier)
    CONVERT           [reduce using rule 536 (CHostIdentifier)]
    CONVERT           [reduce using rule 537 (CobolHostIdentifier)]
    CONVERT           [reduce using rule 538 (FortranHostIdentifier)]
    CONVERT           [reduce using rule 539 (MUMPSHostIdentifier)]
    CONVERT           [reduce using rule 540 (PascalHostIdentifier)]
    CONVERT           [reduce using rule 541 (PLIHostIdentifier)]
    TRANSLATE         reduce using rule 535 (AdaHostIdentifier)
    TRANSLATE         [reduce using rule 536 (CHostIdentifier)]
    TRANSLATE         [reduce using rule 537 (CobolHostIdentifier)]
    TRANSLATE         [reduce using rule 538 (FortranHostIdentifier)]
    TRANSLATE         [reduce using rule 539 (MUMPSHostIdentifier)]
    TRANSLATE         [reduce using rule 540 (PascalHostIdentifier)]
    TRANSLATE         [reduce using rule 541 (PLIHostIdentifier)]
    PRESERVE          reduce using rule 535 (AdaHostIdentifier)
    PRESERVE          [reduce using rule 536 (CHostIdentifier)]
    PRESERVE          [reduce using rule 537 (CobolHostIdentifier)]
    PRESERVE          [reduce using rule 538 (FortranHostIdentifier)]
    PRESERVE          [reduce using rule 539 (MUMPSHostIdentifier)]
    PRESERVE          [reduce using rule 540 (PascalHostIdentifier)]
    PRESERVE          [reduce using rule 541 (PLIHostIdentifier)]
    POSITION          reduce using rule 535 (AdaHostIdentifier)
    POSITION          [reduce using rule 536 (CHostIdentifier)]
    POSITION          [reduce using rule 537 (CobolHostIdentifier)]
    POSITION          [reduce using rule 538 (FortranHostIdentifier)]
    POSITION          [reduce using rule 539 (MUMPSHostIdentifier)]
    POSITION          [reduce using rule 540 (PascalHostIdentifier)]
    POSITION          [reduce using rule 541 (PLIHostIdentifier)]
    COALESCE          reduce using rule 535 (AdaHostIdentifier)
    COALESCE          [reduce using rule 536 (CHostIdentifier)]
    COALESCE          [reduce using rule 537 (CobolHostIdentifier)]
    COALESCE          [reduce using rule 538 (FortranHostIdentifier)]
    COALESCE          [reduce using rule 539 (MUMPSHostIdentifier)]
    COALESCE          [reduce using rule 540 (PascalHostIdentifier)]
    COALESCE          [reduce using rule 541 (PLIHostIdentifier)]
    TRIM              reduce using rule 535 (AdaHostIdentifier)
    TRIM              [reduce using rule 536 (CHostIdentifier)]
    TRIM              [reduce using rule 537 (CobolHostIdentifier)]
    TRIM              [reduce using rule 538 (FortranHostIdentifier)]
    TRIM              [reduce using rule 539 (MUMPSHostIdentifier)]
    TRIM              [reduce using rule 540 (PascalHostIdentifier)]
    TRIM              [reduce using rule 541 (PLIHostIdentifier)]
    AT                reduce using rule 535 (AdaHostIdentifier)
    AT                [reduce using rule 536 (CHostIdentifier)]
    AT                [reduce using rule 537 (CobolHostIdentifier)]
    AT                [reduce using rule 538 (FortranHostIdentifier)]
    AT                [reduce using rule 539 (MUMPSHostIdentifier)]
    AT                [reduce using rule 540 (PascalHostIdentifier)]
    AT                [reduce using rule 541 (PLIHostIdentifier)]
    NUMBER            reduce using rule 535 (AdaHostIdentifier)
    NUMBER            [reduce using rule 536 (CHostIdentifier)]
    NUMBER            [reduce using rule 537 (CobolHostIdentifier)]
    NUMBER            [reduce using rule 538 (FortranHostIdentifier)]
    NUMBER            [reduce using rule 539 (MUMPSHostIdentifier)]
    NUMBER            [reduce using rule 540 (PascalHostIdentifier)]
    NUMBER            [reduce using rule 541 (PLIHostIdentifier)]
    ID                reduce using rule 535 (AdaHostIdentifier)
    ID                [reduce using rule 536 (CHostIdentifier)]
    ID                [reduce using rule 537 (CobolHostIdentifier)]
    ID                [reduce using rule 538 (FortranHostIdentifier)]
    ID                [reduce using rule 539 (MUMPSHostIdentifier)]
    ID                [reduce using rule 540 (PascalHostIdentifier)]
    ID                [reduce using rule 541 (PLIHostIdentifier)]
    ','               reduce using rule 535 (AdaHostIdentifier)
    ','               [reduce using rule 536 (CHostIdentifier)]
    ','               [reduce using rule 537 (CobolHostIdentifier)]
    ','               [reduce using rule 538 (FortranHostIdentifier)]
    ','               [reduce using rule 539 (MUMPSHostIdentifier)]
    ','               [reduce using rule 540 (PascalHostIdentifier)]
    ','               [reduce using rule 541 (PLIHostIdentifier)]
    ')'               reduce using rule 535 (AdaHostIdentifier)
    ')'               [reduce using rule 536 (CHostIdentifier)]
    ')'               [reduce using rule 537 (CobolHostIdentifier)]
    ')'               [reduce using rule 538 (FortranHostIdentifier)]
    ')'               [reduce using rule 539 (MUMPSHostIdentifier)]
    ')'               [reduce using rule 540 (PascalHostIdentifier)]
    ')'               [reduce using rule 541 (PLIHostIdentifier)]
    $default          reduce using rule 535 (AdaHostIdentifier)


state 905

  517 parameterName: colon identifier .

    $default  reduce using rule 517 (parameterName)


state 906

  527 embeddedVariableName: colon hostIdentifier .

    $default  reduce using rule 527 (embeddedVariableName)


state 907

  528 hostIdentifier: AdaHostIdentifier .

    $default  reduce using rule 528 (hostIdentifier)


state 908

  529 hostIdentifier: CHostIdentifier .

    $default  reduce using rule 529 (hostIdentifier)


state 909

  530 hostIdentifier: CobolHostIdentifier .

    $default  reduce using rule 530 (hostIdentifier)


state 910

  531 hostIdentifier: FortranHostIdentifier .

    $default  reduce using rule 531 (hostIdentifier)


state 911

  532 hostIdentifier: MUMPSHostIdentifier .

    $default  reduce using rule 532 (hostIdentifier)


state 912

  533 hostIdentifier: PascalHostIdentifier .

    $default  reduce using rule 533 (hostIdentifier)


state 913

  534 hostIdentifier: PLIHostIdentifier .

    $default  reduce using rule 534 (hostIdentifier)


state 914

  544 indicatorVariable1: INDICATOR .

    $default  reduce using rule 544 (indicatorVariable1)


state 915

  524 variableSpecification: embeddedVariableName variableSpecification1 .

    $default  reduce using rule 524 (variableSpecification)


state 916

  526 variableSpecification1: indicatorVariable .

    $default  reduce using rule 526 (variableSpecification1)


state 917

  518 colon: . UNKNOWN_LEX
  527 embeddedVariableName: . colon hostIdentifier
  542 indicatorVariable: indicatorVariable1 . embeddedVariableName

    UNKNOWN_LEX  shift, and go to state 1043

    colon                 go to state 1046
    embeddedVariableName  go to state 1047


state 918

  545 columnReference: columnReference1 columnName .

    $default  reduce using rule 545 (columnReference)


state 919

  547 columnReference1: qualifier period .

    $default  reduce using rule 547 (columnReference1)


state 920

  554 generalSetFunction: setFunctionType leftParen . generalSetFunction1 valueExpression rightParen
  555 generalSetFunction1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  556                    | . setQuantifier
  562 setQuantifier: . DISTINCT
  563              | . ALL

    DISTINCT  shift, and go to state 995
    ALL       shift, and go to state 996

    $default  reduce using rule 555 (generalSetFunction1)

    generalSetFunction1  go to state 1048
    setQuantifier        go to state 1049


state 921

  715 concatenationOperator: UNKNOWN_LEX .

    $default  reduce using rule 715 (concatenationOperator)


state 922

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  714 concatenation: characterValueExpression concatenationOperator . characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

    CASE              shift, and go to state 666
    CAST              shift, and go to state 667
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 883
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 671
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 672
    SESSION_USER      shift, and go to state 673
    DATE              shift, and go to state 496
    NULLIF            shift, and go to state 674
    SUM               shift, and go to state 675
    KEY               shift, and go to state 42
    AVG               shift, and go to state 676
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 677
    TIMESTAMP         shift, and go to state 498
    MODULE            shift, and go to state 214
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 499
    SYSTEM_USER       shift, and go to state 678
    SUBSTRING         shift, and go to state 679
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 680
    MAX               shift, and go to state 681
    LOWER             shift, and go to state 682
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 683
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 684
    CURRENT_USER      shift, and go to state 685
    TRANSLATE         shift, and go to state 686
    INTERVAL          shift, and go to state 505
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 688
    TRIM              shift, and go to state 689
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 295

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 890
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    valueExpressionPrimary          go to state 979
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterFactor                 go to state 1050
    characterPrimary                go to state 737
    stringValueFunction             go to state 981
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746


state 923

  718 characterFactor1: collateClause .

    $default  reduce using rule 718 (characterFactor1)


state 924

  716 characterFactor: characterPrimary characterFactor1 .

    $default  reduce using rule 716 (characterFactor)


state 925

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  758 bitConcatenation: bitValueExpression concatenationOperator . bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction

    CASE              shift, and go to state 666
    CAST              shift, and go to state 667
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 883
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 671
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 672
    SESSION_USER      shift, and go to state 673
    DATE              shift, and go to state 496
    NULLIF            shift, and go to state 674
    SUM               shift, and go to state 675
    KEY               shift, and go to state 42
    AVG               shift, and go to state 676
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 677
    TIMESTAMP         shift, and go to state 498
    MODULE            shift, and go to state 214
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 499
    SYSTEM_USER       shift, and go to state 678
    SUBSTRING         shift, and go to state 679
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 680
    MAX               shift, and go to state 681
    LOWER             shift, and go to state 682
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 683
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 684
    CURRENT_USER      shift, and go to state 685
    TRANSLATE         shift, and go to state 686
    INTERVAL          shift, and go to state 505
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 688
    TRIM              shift, and go to state 689
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 295

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 890
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    valueExpressionPrimary          go to state 1051
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    stringValueFunction             go to state 1052
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitFactor                       go to state 1053
    bitPrimary                      go to state 750


state 926

  375 sign: . UNKNOWN_LEX
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  773 datetimeValueExpression: datetimeValueExpression plusSign . intervalTerm
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm

    UNKNOWN_LEX  shift, and go to state 592

    CASE              reduce using rule 491 (factor1)
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              reduce using rule 491 (factor1)
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              reduce using rule 491 (factor1)
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               reduce using rule 491 (factor1)
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            reduce using rule 491 (factor1)
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               reduce using rule 491 (factor1)
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      reduce using rule 491 (factor1)
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          reduce using rule 491 (factor1)
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        reduce using rule 491 (factor1)
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              reduce using rule 491 (factor1)
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             reduce using rule 491 (factor1)
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      reduce using rule 491 (factor1)
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              reduce using rule 491 (factor1)
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            reduce using rule 491 (factor1)
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               reduce using rule 491 (factor1)
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               reduce using rule 491 (factor1)
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               reduce using rule 491 (factor1)
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         reduce using rule 491 (factor1)
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             reduce using rule 491 (factor1)
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         reduce using rule 491 (factor1)
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            reduce using rule 491 (factor1)
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           reduce using rule 491 (factor1)
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       reduce using rule 491 (factor1)
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              reduce using rule 491 (factor1)
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       reduce using rule 491 (factor1)
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         reduce using rule 491 (factor1)
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           reduce using rule 491 (factor1)
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              reduce using rule 491 (factor1)
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               reduce using rule 491 (factor1)
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             reduce using rule 491 (factor1)
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           reduce using rule 491 (factor1)
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         reduce using rule 491 (factor1)
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             reduce using rule 491 (factor1)
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  reduce using rule 491 (factor1)
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           reduce using rule 491 (factor1)
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      reduce using rule 491 (factor1)
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         reduce using rule 491 (factor1)
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          reduce using rule 491 (factor1)
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          reduce using rule 491 (factor1)
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          reduce using rule 491 (factor1)
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          reduce using rule 491 (factor1)
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              reduce using rule 491 (factor1)
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            reduce using rule 491 (factor1)
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                reduce using rule 491 (factor1)
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               reduce using rule 491 (factor1)
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    sign             go to state 693
    term             go to state 1054
    factor           go to state 706
    factor1          go to state 707
    intervalTerm     go to state 1055
    intervalFactor   go to state 757
    intervalFactor1  go to state 758
    intervalTerm2    go to state 759


state 927

  375 sign: . UNKNOWN_LEX
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  774 datetimeValueExpression: datetimeValueExpression minusSign . intervalTerm
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm

    UNKNOWN_LEX  shift, and go to state 592

    CASE              reduce using rule 491 (factor1)
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              reduce using rule 491 (factor1)
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              reduce using rule 491 (factor1)
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               reduce using rule 491 (factor1)
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            reduce using rule 491 (factor1)
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               reduce using rule 491 (factor1)
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      reduce using rule 491 (factor1)
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          reduce using rule 491 (factor1)
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        reduce using rule 491 (factor1)
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              reduce using rule 491 (factor1)
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             reduce using rule 491 (factor1)
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      reduce using rule 491 (factor1)
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              reduce using rule 491 (factor1)
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            reduce using rule 491 (factor1)
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               reduce using rule 491 (factor1)
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               reduce using rule 491 (factor1)
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               reduce using rule 491 (factor1)
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         reduce using rule 491 (factor1)
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             reduce using rule 491 (factor1)
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         reduce using rule 491 (factor1)
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            reduce using rule 491 (factor1)
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           reduce using rule 491 (factor1)
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       reduce using rule 491 (factor1)
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              reduce using rule 491 (factor1)
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       reduce using rule 491 (factor1)
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         reduce using rule 491 (factor1)
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           reduce using rule 491 (factor1)
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              reduce using rule 491 (factor1)
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               reduce using rule 491 (factor1)
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             reduce using rule 491 (factor1)
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           reduce using rule 491 (factor1)
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         reduce using rule 491 (factor1)
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             reduce using rule 491 (factor1)
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  reduce using rule 491 (factor1)
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           reduce using rule 491 (factor1)
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      reduce using rule 491 (factor1)
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         reduce using rule 491 (factor1)
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          reduce using rule 491 (factor1)
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          reduce using rule 491 (factor1)
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          reduce using rule 491 (factor1)
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          reduce using rule 491 (factor1)
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              reduce using rule 491 (factor1)
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            reduce using rule 491 (factor1)
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                reduce using rule 491 (factor1)
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               reduce using rule 491 (factor1)
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    sign             go to state 693
    term             go to state 1054
    factor           go to state 706
    factor1          go to state 707
    intervalTerm     go to state 1056
    intervalFactor   go to state 757
    intervalFactor1  go to state 758
    intervalTerm2    go to state 759


state 928

  781 timeZone: AT . timeZoneSpecifier
  782 timeZoneSpecifier: . LOCAL
  783                  | . TIME ZONE intervalValueExpression

    LOCAL  shift, and go to state 1057
    TIME   shift, and go to state 1058

    timeZoneSpecifier  go to state 1059


state 929

  776 datetimeFactor: datetimePrimary datetimeFactor1 .

    $default  reduce using rule 776 (datetimeFactor)


state 930

  778 datetimeFactor1: timeZone .

    $default  reduce using rule 778 (datetimeFactor1)


state 931

  801 plusSign: UNKNOWN_LEX .

    $default  reduce using rule 801 (plusSign)


state 932

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  772 datetimeValueExpression: intervalValueExpression plusSign . datetimeTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 883
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 45
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 48
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 51
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 55
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 56
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 60
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 890
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpressionPrimary          go to state 1060
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    datetimeTerm                    go to state 1061
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754


state 933

  337 intervalQualifier: . startField TO endField
  338                  | . singleDatetimeField
  339 startField: . nonsecondDatetimeField startField1
  342 nonsecondDatetimeField: . YEAR
  343                       | . MONTH
  344                       | . DAY
  345                       | . HOUR
  346                       | . MINUTE
  353 singleDatetimeField: . nonsecondDatetimeField singleDatetimeField1
  354                    | . SECOND singleDatetimeField3
  795 intervalPrimary: valueExpressionPrimary . intervalPrimary1
  796 intervalPrimary1: .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  797                 | . intervalQualifier

    SECOND  shift, and go to state 479
    MINUTE  shift, and go to state 480
    MONTH   shift, and go to state 481
    DAY     shift, and go to state 482
    HOUR    shift, and go to state 483
    YEAR    shift, and go to state 484

    $default  reduce using rule 796 (intervalPrimary1)

    intervalQualifier       go to state 1062
    startField              go to state 486
    nonsecondDatetimeField  go to state 487
    singleDatetimeField     go to state 488
    intervalPrimary1        go to state 1063


state 934

  792 intervalFactor: intervalFactor1 intervalPrimary .

    $default  reduce using rule 792 (intervalFactor)


state 935

  375 sign: . UNKNOWN_LEX
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  789 intervalTerm: intervalTerm2 asterisk . factor

    UNKNOWN_LEX  shift, and go to state 592

    UNKNOWN_LEX  [reduce using rule 491 (factor1)]
    $default     reduce using rule 491 (factor1)

    sign     go to state 1032
    factor   go to state 1064
    factor1  go to state 707


state 936

  375 sign: . UNKNOWN_LEX
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  790 intervalTerm: intervalTerm2 solidus . factor

    UNKNOWN_LEX  shift, and go to state 592

    UNKNOWN_LEX  [reduce using rule 491 (factor1)]
    $default     reduce using rule 491 (factor1)

    sign     go to state 1032
    factor   go to state 1065
    factor1  go to state 707


state 937

  375 sign: . UNKNOWN_LEX
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  785 intervalValueExpression: intervalValueExpression1 plusSign . intervalTerm1
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  802 intervalTerm1: . intervalTerm

    UNKNOWN_LEX  shift, and go to state 592

    CASE              reduce using rule 491 (factor1)
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              reduce using rule 491 (factor1)
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              reduce using rule 491 (factor1)
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               reduce using rule 491 (factor1)
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            reduce using rule 491 (factor1)
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               reduce using rule 491 (factor1)
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      reduce using rule 491 (factor1)
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          reduce using rule 491 (factor1)
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        reduce using rule 491 (factor1)
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              reduce using rule 491 (factor1)
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             reduce using rule 491 (factor1)
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      reduce using rule 491 (factor1)
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              reduce using rule 491 (factor1)
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            reduce using rule 491 (factor1)
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               reduce using rule 491 (factor1)
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               reduce using rule 491 (factor1)
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               reduce using rule 491 (factor1)
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         reduce using rule 491 (factor1)
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             reduce using rule 491 (factor1)
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         reduce using rule 491 (factor1)
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            reduce using rule 491 (factor1)
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           reduce using rule 491 (factor1)
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       reduce using rule 491 (factor1)
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              reduce using rule 491 (factor1)
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       reduce using rule 491 (factor1)
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         reduce using rule 491 (factor1)
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           reduce using rule 491 (factor1)
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              reduce using rule 491 (factor1)
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               reduce using rule 491 (factor1)
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             reduce using rule 491 (factor1)
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           reduce using rule 491 (factor1)
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         reduce using rule 491 (factor1)
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             reduce using rule 491 (factor1)
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  reduce using rule 491 (factor1)
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           reduce using rule 491 (factor1)
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      reduce using rule 491 (factor1)
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         reduce using rule 491 (factor1)
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          reduce using rule 491 (factor1)
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          reduce using rule 491 (factor1)
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          reduce using rule 491 (factor1)
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          reduce using rule 491 (factor1)
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              reduce using rule 491 (factor1)
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            reduce using rule 491 (factor1)
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                reduce using rule 491 (factor1)
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               reduce using rule 491 (factor1)
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    sign             go to state 693
    term             go to state 1054
    factor           go to state 706
    factor1          go to state 707
    intervalTerm     go to state 1066
    intervalFactor   go to state 757
    intervalFactor1  go to state 758
    intervalTerm2    go to state 759
    intervalTerm1    go to state 1067


state 938

  375 sign: . UNKNOWN_LEX
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  786 intervalValueExpression: intervalValueExpression1 minusSign . intervalTerm1
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  802 intervalTerm1: . intervalTerm

    UNKNOWN_LEX  shift, and go to state 592

    CASE              reduce using rule 491 (factor1)
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              reduce using rule 491 (factor1)
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              reduce using rule 491 (factor1)
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               reduce using rule 491 (factor1)
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            reduce using rule 491 (factor1)
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               reduce using rule 491 (factor1)
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      reduce using rule 491 (factor1)
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          reduce using rule 491 (factor1)
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        reduce using rule 491 (factor1)
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              reduce using rule 491 (factor1)
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             reduce using rule 491 (factor1)
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      reduce using rule 491 (factor1)
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              reduce using rule 491 (factor1)
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            reduce using rule 491 (factor1)
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               reduce using rule 491 (factor1)
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               reduce using rule 491 (factor1)
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               reduce using rule 491 (factor1)
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         reduce using rule 491 (factor1)
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             reduce using rule 491 (factor1)
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         reduce using rule 491 (factor1)
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            reduce using rule 491 (factor1)
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           reduce using rule 491 (factor1)
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       reduce using rule 491 (factor1)
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              reduce using rule 491 (factor1)
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       reduce using rule 491 (factor1)
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         reduce using rule 491 (factor1)
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           reduce using rule 491 (factor1)
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              reduce using rule 491 (factor1)
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               reduce using rule 491 (factor1)
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             reduce using rule 491 (factor1)
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           reduce using rule 491 (factor1)
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         reduce using rule 491 (factor1)
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             reduce using rule 491 (factor1)
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  reduce using rule 491 (factor1)
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           reduce using rule 491 (factor1)
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      reduce using rule 491 (factor1)
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         reduce using rule 491 (factor1)
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          reduce using rule 491 (factor1)
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          reduce using rule 491 (factor1)
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          reduce using rule 491 (factor1)
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          reduce using rule 491 (factor1)
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              reduce using rule 491 (factor1)
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            reduce using rule 491 (factor1)
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                reduce using rule 491 (factor1)
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               reduce using rule 491 (factor1)
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    sign             go to state 693
    term             go to state 1054
    factor           go to state 706
    factor1          go to state 707
    intervalTerm     go to state 1066
    intervalFactor   go to state 757
    intervalFactor1  go to state 758
    intervalTerm2    go to state 759
    intervalTerm1    go to state 1068


state 939

  844 likePredicate1: NOT .

    $default  reduce using rule 844 (likePredicate1)


state 940

  842 likePredicate: matchValue likePredicate1 . LIKE pattern likePredicate2

    LIKE  shift, and go to state 1069


state 941

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  474 rowValueConstructor: . rowValueConstructorElement
  475                    | . leftParen rowValueConstructorList rightParen
  476                    | . rowSubquery
  477 rowValueConstructorElement: . valueExpression
  478                           | . nullSpecification
  479                           | . defaultSpecification
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression
  813 nullSpecification: . NULL
  814 defaultSpecification: . DEFAULT
  818 rowSubquery: . subquery
  866 overlapsPredicate: rowValueConstructor1 OVERLAPS . rowValueConstructor2
  868 rowValueConstructor2: . rowValueConstructor

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    NULL               shift, and go to state 668
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    DEFAULT            shift, and go to state 687
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 992
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    rowValueConstructor             go to state 1070
    rowValueConstructorElement      go to state 702
    valueExpression                 go to state 703
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 727
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761
    nullSpecification               go to state 762
    defaultSpecification            go to state 763
    rowSubquery                     go to state 764
    rowValueConstructor2            go to state 1071


state 942

  423 referencesSpecification: . REFERENCES referencedTableAndColumns referencesSpecification1 referencesSpecification2
  894 referentialConstraintDefinition: FOREIGN KEY leftParen referencingColumns rightParen . referencesSpecification

    REFERENCES  shift, and go to state 657

    referencesSpecification  go to state 1072


state 943

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  225 identifier: . id
  242 columnName: . identifier
  434 columnNameList1: columnNameList1 comma . columnName

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id          go to state 298
    identifier  go to state 355
    columnName  go to state 1073


state 944

  283 nationalCharacterStringType4: leftParen length rightParen .

    $default  reduce using rule 283 (nationalCharacterStringType4)


state 945

  285 nationalCharacterStringType5: leftParen length rightParen .

    $default  reduce using rule 285 (nationalCharacterStringType5)


state 946

  267 unsignedInteger: . NUMBER
  352 intervalFractionalSecondsPrecision: . unsignedInteger
  360 singleDatetimeField2: comma leftParen . intervalFractionalSecondsPrecision

    NUMBER  shift, and go to state 542

    unsignedInteger                     go to state 948
    intervalFractionalSecondsPrecision  go to state 1074


state 947

  358 singleDatetimeField3: leftParen intervalLeadingFieldPrecision singleDatetimeField2 rightParen .

    $default  reduce using rule 358 (singleDatetimeField3)


state 948

  352 intervalFractionalSecondsPrecision: unsignedInteger .

    $default  reduce using rule 352 (intervalFractionalSecondsPrecision)


state 949

  268 rightParen: . ')'
  351 endField1: leftParen intervalFractionalSecondsPrecision . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1075


state 950

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  225 identifier: . id
  242 columnName: . identifier
  430 referencedTableAndColumns1: leftParen . referenceColumnList rightParen
  431 referenceColumnList: . columnNameList
  432 columnNameList: . columnName columnNameList1

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id                   go to state 298
    identifier           go to state 355
    columnName           go to state 609
    referenceColumnList  go to state 1076
    columnNameList       go to state 776


state 951

  428 referencedTableAndColumns: tableName referencedTableAndColumns1 .

    $default  reduce using rule 428 (referencedTableAndColumns)


state 952

  425 referencesSpecification1: MATCH . matchType
  435 matchType: . FULL
  436          | . PARTIAL

    FULL     shift, and go to state 1077
    PARTIAL  shift, and go to state 1078

    matchType  go to state 1079


state 953

  423 referencesSpecification: REFERENCES referencedTableAndColumns referencesSpecification1 . referencesSpecification2
  426 referencesSpecification2: .  [NOT, DEFERRABLE, UNIQUE, COLLATE, INITIALLY, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  427                         | . referentialTriggeredAction
  437 referentialTriggeredAction: . updateRule referentialTriggeredAction1
  438                           | . deleteRule referentialTriggeredAction2
  443 updateRule: . ON UPDATE referentialAction
  448 deleteRule: . ON DELETE referentialAction

    ON  shift, and go to state 1080

    $default  reduce using rule 426 (referencesSpecification2)

    referencesSpecification2    go to state 1081
    referentialTriggeredAction  go to state 1082
    updateRule                  go to state 1083
    deleteRule                  go to state 1084


state 954

  873 constraintAttributes: constraintAttributes3 DEFERRABLE . constraintAttributes4
  880 constraintAttributes4: .  [NOT, UNIQUE, COLLATE, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  881                      | . constraintCheckTime
  882 constraintCheckTime: . INITIALLY DEFERRED
  883                    | . INITIALLY IMMEDIATE

    INITIALLY  shift, and go to state 530

    $default  reduce using rule 880 (constraintAttributes4)

    constraintAttributes4  go to state 1085
    constraintCheckTime    go to state 1086


state 955

  877 constraintAttributes1: NOT .

    $default  reduce using rule 877 (constraintAttributes1)


state 956

  872 constraintAttributes: constraintCheckTime constraintAttributes2 .

    $default  reduce using rule 872 (constraintAttributes)


state 957

  875 constraintAttributes2: constraintAttributes1 . DEFERRABLE

    DEFERRABLE  shift, and go to state 1087


state 958

  615 tableReference: tableName . tableReference1
  618 tableReference1: .  [HAVING, WHERE, GROUP, RIGHT, INNER, UNION, JOIN, LEFT, FULL, ON, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']
  619                | . correlationSpecification
  620 correlationSpecification: . correlationSpecification1 correlationName correlationSpecification2
  621 correlationSpecification1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  622                          | . AS

    AS  shift, and go to state 1000

    HAVING     reduce using rule 618 (tableReference1)
    WHERE      reduce using rule 618 (tableReference1)
    GROUP      reduce using rule 618 (tableReference1)
    RIGHT      reduce using rule 618 (tableReference1)
    INNER      reduce using rule 618 (tableReference1)
    UNION      reduce using rule 618 (tableReference1)
    JOIN       reduce using rule 618 (tableReference1)
    LEFT       reduce using rule 618 (tableReference1)
    FULL       reduce using rule 618 (tableReference1)
    ON         reduce using rule 618 (tableReference1)
    CROSS      reduce using rule 618 (tableReference1)
    INTERSECT  reduce using rule 618 (tableReference1)
    NATURAL    reduce using rule 618 (tableReference1)
    EXCEPT     reduce using rule 618 (tableReference1)
    USING      reduce using rule 618 (tableReference1)
    ','        reduce using rule 618 (tableReference1)
    ')'        reduce using rule 618 (tableReference1)
    $default   reduce using rule 621 (correlationSpecification1)

    tableReference1            go to state 1001
    correlationSpecification   go to state 1002
    correlationSpecification1  go to state 1003


state 959

  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  565 subquery: . leftParen queryExpression rightParen
  565         | leftParen . queryExpression rightParen
  566 queryExpression: . nonjoinQueryExpression
  567                | . joinedTable
  568 nonjoinQueryExpression: . nonjoinQueryTerm
  569                       | . queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  570                       | . queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  579 nonjoinQueryTerm: . nonjoinQueryPrimary
  580                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  585 nonjoinQueryPrimary: . simpleTable
  586                    | . leftParen nonjoinQueryExpression rightParen
  586                    | leftParen . nonjoinQueryExpression rightParen
  587 simpleTable: . querySpecification
  588            | . tableValueConstructor
  589            | . explicitTable
  590 querySpecification: . SELECT querySpecification1 selectList tableExpression
  615 tableReference: . tableName tableReference1
  616               | . derivedTable correlationSpecification
  617               | . joinedTable
  626 derivedTable: . tableSubquery
  627 tableSubquery: . subquery
  628 joinedTable: . crossJoin
  629            | . qualifiedJoin
  630            | . leftParen joinedTable rightParen
  630            | leftParen . joinedTable rightParen
  631 crossJoin: . tableReference CROSS JOIN tableReference
  632 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  663 tableValueConstructor: . VALUES tableValueConstructorList
  667 explicitTable: . TABLE tableName
  668 queryTerm: . nonjoinQueryTerm
  669          | . joinedTable

    VALUES       shift, and go to state 837
    SELECT       shift, and go to state 838
    TABLE        shift, and go to state 839
    UNKNOWN_LEX  shift, and go to state 213
    MODULE       shift, and go to state 214
    '('          shift, and go to state 295

    $default  reduce using rule 220 (qualifiedName1)

    tableName                go to state 958
    qualifiedName            go to state 216
    qualifiedName1           go to state 217
    schemaName               go to state 218
    qualifiedLocalTableName  go to state 219
    leftParen                go to state 959
    subquery                 go to state 816
    queryExpression          go to state 846
    nonjoinQueryExpression   go to state 1004
    nonjoinQueryTerm         go to state 848
    nonjoinQueryPrimary      go to state 849
    simpleTable              go to state 850
    querySpecification       go to state 851
    tableReference           go to state 852
    derivedTable             go to state 853
    tableSubquery            go to state 854
    joinedTable              go to state 1005
    crossJoin                go to state 856
    qualifiedJoin            go to state 857
    tableValueConstructor    go to state 858
    explicitTable            go to state 859
    queryTerm                go to state 860


state 960

  451 searchCondition: searchCondition . OR booleanTerm
  701 searchedWhenClause: WHEN searchCondition . THEN result

    OR    shift, and go to state 662
    THEN  shift, and go to state 1088


state 961

  268 rightParen: . ')'
  500 valueExpressionPrimary: leftParen valueExpression . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1008


state 962

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  690 simpleWhenClause: WHEN . whenOperand THEN result
  691 whenOperand: . valueExpression
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 819
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 1089
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    whenOperand                     go to state 1090
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761


state 963

  684 simpleCase: CASE caseOperand simpleCase1 . simpleCase2 END
  686 simpleCase1: simpleCase1 . simpleWhenClause
  687 simpleCase2: .  [END]
  688            | . elseClause
  690 simpleWhenClause: . WHEN whenOperand THEN result
  695 elseClause: . ELSE result

    WHEN  shift, and go to state 962
    ELSE  shift, and go to state 965

    $default  reduce using rule 687 (simpleCase2)

    simpleCase2       go to state 1091
    simpleWhenClause  go to state 1092
    elseClause        go to state 1093


state 964

  685 simpleCase1: simpleWhenClause .

    $default  reduce using rule 685 (simpleCase1)


state 965

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  692 result: . resultExpression
  693       | . NULL
  694 resultExpression: . valueExpression
  695 elseClause: ELSE . result
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    NULL               shift, and go to state 1094
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 819
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 1095
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    result                          go to state 1096
    resultExpression                go to state 1097
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761


state 966

  700 searchedCase2: elseClause .

    $default  reduce using rule 700 (searchedCase2)


state 967

  696 searchedCase: CASE searchedCase1 searchedCase2 . END

    END  shift, and go to state 1098


state 968

  698 searchedCase1: searchedCase1 searchedWhenClause .

    $default  reduce using rule 698 (searchedCase1)


state 969

  704 castOperand: NULL .

    $default  reduce using rule 704 (castOperand)


state 970

  703 castOperand: valueExpression .

    $default  reduce using rule 703 (castOperand)


state 971

  702 castSpecification: CAST leftParen castOperand . AS castTarget rightParen

    AS  shift, and go to state 1099


state 972

  850 nullPredicate: IS nullPredicate1 NULL .

    $default  reduce using rule 850 (nullPredicate)


state 973

  553 asterisk: UNKNOWN_LEX .

    $default  reduce using rule 553 (asterisk)


state 974

  268 rightParen: . ')'
  551 setFunctionSpecification: COUNT leftParen asterisk . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1100


state 975

  315 comma: . ','
  678 caseAbbreviation: NULLIF leftParen valueExpression . comma valueExpression rightParen

    ','  shift, and go to state 448

    comma  go to state 1101


state 976

  719 characterPrimary: valueExpressionPrimary .  [FROM, UNKNOWN_LEX, COLLATE, ')']
  760 bitPrimary: valueExpressionPrimary .  [FROM, UNKNOWN_LEX, ')']

    FROM         reduce using rule 719 (characterPrimary)
    FROM         [reduce using rule 760 (bitPrimary)]
    UNKNOWN_LEX  reduce using rule 719 (characterPrimary)
    UNKNOWN_LEX  [reduce using rule 760 (bitPrimary)]
    ')'          reduce using rule 719 (characterPrimary)
    ')'          [reduce using rule 760 (bitPrimary)]
    $default     reduce using rule 719 (characterPrimary)


state 977

  714 concatenation: characterValueExpression . concatenationOperator characterFactor
  715 concatenationOperator: . UNKNOWN_LEX
  728 characterSubstringFunction: SUBSTRING leftParen characterValueExpression . FROM startPosition characterSubstringFunction1 rightParen

    FROM         shift, and go to state 1102
    UNKNOWN_LEX  shift, and go to state 921

    concatenationOperator  go to state 922


state 978

  715 concatenationOperator: . UNKNOWN_LEX
  753 bitSubstringFunction: SUBSTRING leftParen bitValueExpression . FROM startPosition bitSubstringFunction1 rightParen
  758 bitConcatenation: bitValueExpression . concatenationOperator bitFactor

    FROM         shift, and go to state 1103
    UNKNOWN_LEX  shift, and go to state 921

    concatenationOperator  go to state 925


state 979

  719 characterPrimary: valueExpressionPrimary .

    $default  reduce using rule 719 (characterPrimary)


state 980

  268 rightParen: . ')'
  714 concatenation: characterValueExpression . concatenationOperator characterFactor
  715 concatenationOperator: . UNKNOWN_LEX
  734 fold: LOWER leftParen characterValueExpression . rightParen

    UNKNOWN_LEX  shift, and go to state 921
    ')'          shift, and go to state 449

    rightParen             go to state 1104
    concatenationOperator  go to state 922


state 981

  720 characterPrimary: stringValueFunction .

    $default  reduce using rule 720 (characterPrimary)


state 982

  714 concatenation: characterValueExpression . concatenationOperator characterFactor
  715 concatenationOperator: . UNKNOWN_LEX
  735 formofuseConversion: CONVERT leftParen characterValueExpression . USING formofuseConversionName rightParen

    UNKNOWN_LEX  shift, and go to state 921
    USING        shift, and go to state 1105

    concatenationOperator  go to state 922


state 983

  714 concatenation: characterValueExpression . concatenationOperator characterFactor
  715 concatenationOperator: . UNKNOWN_LEX
  737 characterTranslation: TRANSLATE leftParen characterValueExpression . USING translationName rightParen

    UNKNOWN_LEX  shift, and go to state 921
    USING        shift, and go to state 1106

    concatenationOperator  go to state 922


state 984

  315 comma: . ','
  679 caseAbbreviation: COALESCE leftParen valueExpression . caseAbbreviation1 rightParen
  680 caseAbbreviation1: . comma valueExpression
  681                  | . caseAbbreviation1 comma valueExpression

    ','  shift, and go to state 448

    comma              go to state 1107
    caseAbbreviation1  go to state 1108


state 985

  749 trimSpecification: BOTH .

    $default  reduce using rule 749 (trimSpecification)


state 986

  747 trimSpecification: LEADING .

    $default  reduce using rule 747 (trimSpecification)


state 987

  748 trimSpecification: TRAILING .

    $default  reduce using rule 748 (trimSpecification)


state 988

  268 rightParen: . ')'
  739 trimFunction: TRIM leftParen trimOperands . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1109


state 989

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  740 trimOperands: trimOperands3 . trimSource
  751 trimSource: . characterValueExpression
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

    CASE              shift, and go to state 666
    CAST              shift, and go to state 667
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 883
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 671
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 672
    SESSION_USER      shift, and go to state 673
    DATE              shift, and go to state 496
    NULLIF            shift, and go to state 674
    SUM               shift, and go to state 675
    KEY               shift, and go to state 42
    AVG               shift, and go to state 676
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 677
    TIMESTAMP         shift, and go to state 498
    MODULE            shift, and go to state 214
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 499
    SYSTEM_USER       shift, and go to state 678
    SUBSTRING         shift, and go to state 679
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 680
    MAX               shift, and go to state 681
    LOWER             shift, and go to state 682
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 683
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 684
    CURRENT_USER      shift, and go to state 685
    TRANSLATE         shift, and go to state 686
    INTERVAL          shift, and go to state 505
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 688
    TRIM              shift, and go to state 689
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 295

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 890
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    valueExpressionPrimary          go to state 979
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 1110
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 981
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    trimSource                      go to state 1111
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746


state 990

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  742 trimOperands3: trimOperands1 . trimOperands2 FROM
  745 trimOperands2: .  [FROM]
  746              | . trimCharacter
  750 trimCharacter: . characterValueExpression
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

    CASE              shift, and go to state 666
    CAST              shift, and go to state 667
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 883
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 671
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 672
    SESSION_USER      shift, and go to state 673
    DATE              shift, and go to state 496
    NULLIF            shift, and go to state 674
    SUM               shift, and go to state 675
    KEY               shift, and go to state 42
    AVG               shift, and go to state 676
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 677
    TIMESTAMP         shift, and go to state 498
    MODULE            shift, and go to state 214
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 499
    SYSTEM_USER       shift, and go to state 678
    SUBSTRING         shift, and go to state 679
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 680
    MAX               shift, and go to state 681
    LOWER             shift, and go to state 682
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 683
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 684
    CURRENT_USER      shift, and go to state 685
    TRANSLATE         shift, and go to state 686
    INTERVAL          shift, and go to state 505
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 688
    TRIM              shift, and go to state 689
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 295

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]
    $default          reduce using rule 745 (trimOperands2)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 890
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    valueExpressionPrimary          go to state 979
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 1112
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 981
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    trimOperands2                   go to state 1113
    trimCharacter                   go to state 1114
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746


state 991

  744 trimOperands1: trimSpecification .

    $default  reduce using rule 744 (trimOperands1)


state 992

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  475 rowValueConstructor: leftParen . rowValueConstructorList rightParen
  477 rowValueConstructorElement: . valueExpression
  478                           | . nullSpecification
  479                           | . defaultSpecification
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  500                       | leftParen . valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  565         | leftParen . queryExpression rightParen
  566 queryExpression: . nonjoinQueryExpression
  567                | . joinedTable
  568 nonjoinQueryExpression: . nonjoinQueryTerm
  569                       | . queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  570                       | . queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  579 nonjoinQueryTerm: . nonjoinQueryPrimary
  580                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  585 nonjoinQueryPrimary: . simpleTable
  586                    | . leftParen nonjoinQueryExpression rightParen
  587 simpleTable: . querySpecification
  588            | . tableValueConstructor
  589            | . explicitTable
  590 querySpecification: . SELECT querySpecification1 selectList tableExpression
  615 tableReference: . tableName tableReference1
  616               | . derivedTable correlationSpecification
  617               | . joinedTable
  626 derivedTable: . tableSubquery
  627 tableSubquery: . subquery
  628 joinedTable: . crossJoin
  629            | . qualifiedJoin
  630            | . leftParen joinedTable rightParen
  631 crossJoin: . tableReference CROSS JOIN tableReference
  632 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  663 tableValueConstructor: . VALUES tableValueConstructorList
  667 explicitTable: . TABLE tableName
  668 queryTerm: . nonjoinQueryTerm
  669          | . joinedTable
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787                        | leftParen . datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression
  813 nullSpecification: . NULL
  814 defaultSpecification: . DEFAULT
  815 rowValueConstructorList: . rowValueConstructorElement rowValueConstructorList1

    VALUES             shift, and go to state 837
    SELECT             shift, and go to state 838
    TABLE              shift, and go to state 839
    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    NULL               shift, and go to state 668
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    DEFAULT            shift, and go to state 687
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 840
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 841
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    rowValueConstructorElement      go to state 843
    valueExpression                 go to state 844
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 845
    queryExpression                 go to state 846
    nonjoinQueryExpression          go to state 847
    nonjoinQueryTerm                go to state 848
    nonjoinQueryPrimary             go to state 849
    simpleTable                     go to state 850
    querySpecification              go to state 851
    tableReference                  go to state 852
    derivedTable                    go to state 853
    tableSubquery                   go to state 854
    joinedTable                     go to state 855
    crossJoin                       go to state 856
    qualifiedJoin                   go to state 857
    tableValueConstructor           go to state 858
    explicitTable                   go to state 859
    queryTerm                       go to state 860
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 861
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761
    nullSpecification               go to state 762
    defaultSpecification            go to state 763
    rowValueConstructorList         go to state 862


state 993

  664 tableValueConstructorList: rowValueConstructor . tableValueConstructorList1
  665 tableValueConstructorList1: .
  666                           | . tableValueConstructorList1 comma rowValueConstructor

    $default  reduce using rule 665 (tableValueConstructorList1)

    tableValueConstructorList1  go to state 1115


state 994

  663 tableValueConstructor: VALUES tableValueConstructorList .

    $default  reduce using rule 663 (tableValueConstructor)


state 995

  562 setQuantifier: DISTINCT .

    $default  reduce using rule 562 (setQuantifier)


state 996

  563 setQuantifier: ALL .

    $default  reduce using rule 563 (setQuantifier)


state 997

  592 querySpecification1: setQuantifier .

    $default  reduce using rule 592 (querySpecification1)


state 998

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  553 asterisk: . UNKNOWN_LEX
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  590 querySpecification: SELECT querySpecification1 . selectList tableExpression
  593 selectList: . asterisk
  594           | . selectSublist selectList1
  597 selectSublist: . derivedColumn
  598              | . qualifier period asterisk
  599 derivedColumn: . valueExpression derivedColumn1
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 1116
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 819
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 1117
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 1118
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    asterisk                        go to state 1119
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    selectList                      go to state 1120
    selectSublist                   go to state 1121
    derivedColumn                   go to state 1122
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761


state 999

  667 explicitTable: TABLE tableName .

    $default  reduce using rule 667 (explicitTable)


state 1000

  622 correlationSpecification1: AS .

    $default  reduce using rule 622 (correlationSpecification1)


state 1001

  615 tableReference: tableName tableReference1 .

    $default  reduce using rule 615 (tableReference)


state 1002

  619 tableReference1: correlationSpecification .

    $default  reduce using rule 619 (tableReference1)


state 1003

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  225 identifier: . id
  550 correlationName: . identifier
  620 correlationSpecification: correlationSpecification1 . correlationName correlationSpecification2

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id               go to state 298
    identifier       go to state 691
    correlationName  go to state 1123


state 1004

  268 rightParen: . ')'
  566 queryExpression: nonjoinQueryExpression .  [UNION, EXCEPT, ')']
  586 nonjoinQueryPrimary: leftParen nonjoinQueryExpression . rightParen

    ')'  shift, and go to state 449

    ')'       [reduce using rule 566 (queryExpression)]
    $default  reduce using rule 566 (queryExpression)

    rightParen  go to state 1124


state 1005

  268 rightParen: . ')'
  567 queryExpression: joinedTable .  [UNION, EXCEPT, ')']
  617 tableReference: joinedTable .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL, CROSS, NATURAL]
  630 joinedTable: leftParen joinedTable . rightParen
  669 queryTerm: joinedTable .  [INTERSECT]

    ')'  shift, and go to state 449

    UNION      reduce using rule 567 (queryExpression)
    UNION      [reduce using rule 617 (tableReference)]
    INTERSECT  reduce using rule 669 (queryTerm)
    EXCEPT     reduce using rule 567 (queryExpression)
    ')'        [reduce using rule 567 (queryExpression)]
    $default   reduce using rule 617 (tableReference)

    rightParen  go to state 1125


state 1006

  463 booleanPrimary: leftParen searchCondition rightParen .

    $default  reduce using rule 463 (booleanPrimary)


state 1007

  315 comma: . ','
  815 rowValueConstructorList: rowValueConstructorElement rowValueConstructorList1 .  [')']
  817 rowValueConstructorList1: rowValueConstructorList1 . comma rowValueConstructorElement

    ','  shift, and go to state 448

    $default  reduce using rule 815 (rowValueConstructorList)

    comma  go to state 1126


state 1008

  500 valueExpressionPrimary: leftParen valueExpression rightParen .

    $default  reduce using rule 500 (valueExpressionPrimary)


state 1009

  569 nonjoinQueryExpression: queryExpression UNION . nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  571 nonjoinQueryExpression1: .  [VALUES, SELECT, TABLE, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, CORRESPONDING, KEY, AVG, INITIALLY, UPPER, MODULE, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  572                        | . ALL

    ALL  shift, and go to state 1127

    $default  reduce using rule 571 (nonjoinQueryExpression1)

    nonjoinQueryExpression1  go to state 1128


state 1010

  570 nonjoinQueryExpression: queryExpression EXCEPT . nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  575 nonjoinQueryExpression3: .  [VALUES, SELECT, TABLE, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, CORRESPONDING, KEY, AVG, INITIALLY, UPPER, MODULE, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  576                        | . ALL

    ALL  shift, and go to state 1129

    $default  reduce using rule 575 (nonjoinQueryExpression3)

    nonjoinQueryExpression3  go to state 1130


state 1011

  565 subquery: leftParen queryExpression rightParen .

    $default  reduce using rule 565 (subquery)


state 1012

  631 crossJoin: tableReference CROSS . JOIN tableReference

    JOIN  shift, and go to state 1131


state 1013

  634 qualifiedJoin1: NATURAL .

    $default  reduce using rule 634 (qualifiedJoin1)


state 1014

  632 qualifiedJoin: tableReference qualifiedJoin1 . qualifiedJoin2 JOIN tableReference qualifiedJoin3
  635 qualifiedJoin2: .  [JOIN]
  636               | . joinType
  639 joinType: . INNER
  640         | . outerJoinType joinType1
  641         | . UNION
  644 outerJoinType: . LEFT
  645              | . RIGHT
  646              | . FULL

    RIGHT  shift, and go to state 1132
    INNER  shift, and go to state 1133
    UNION  shift, and go to state 1134
    LEFT   shift, and go to state 1135
    FULL   shift, and go to state 1136

    $default  reduce using rule 635 (qualifiedJoin2)

    qualifiedJoin2  go to state 1137
    joinType        go to state 1138
    outerJoinType   go to state 1139


state 1015

  616 tableReference: derivedTable correlationSpecification .

    $default  reduce using rule 616 (tableReference)


state 1016

  580 nonjoinQueryTerm: queryTerm INTERSECT . nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  581 nonjoinQueryTerm1: .  [VALUES, SELECT, TABLE, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, CORRESPONDING, KEY, AVG, INITIALLY, UPPER, MODULE, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  582                  | . ALL

    ALL  shift, and go to state 1140

    $default  reduce using rule 581 (nonjoinQueryTerm1)

    nonjoinQueryTerm1  go to state 1141


state 1017

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  774 datetimeValueExpression: datetimeValueExpression minusSign . intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  787 intervalValueExpression: leftParen datetimeValueExpression minusSign . datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 45
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 48
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 51
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 55
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 56
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 60
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 890
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    term                            go to state 1054
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 1060
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    datetimeTerm                    go to state 1142
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalTerm                    go to state 1056
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759


state 1018

  475 rowValueConstructor: leftParen rowValueConstructorList rightParen .

    $default  reduce using rule 475 (rowValueConstructor)


state 1019

  461 booleanTest1: NOT .

    $default  reduce using rule 461 (booleanTest1)


state 1020

  459 booleanTest2: IS booleanTest1 . truthValue
  869 truthValue: . TRUE
  870           | . FALSE
  871           | . UNKNOWN

    UNKNOWN  shift, and go to state 1143
    TRUE     shift, and go to state 1144
    FALSE    shift, and go to state 1145

    truthValue  go to state 1146


state 1021

  862 matchPredicate1: UNIQUE .

    $default  reduce using rule 862 (matchPredicate1)


state 1022

  860 matchPredicate: rowValueConstructor MATCH matchPredicate1 . matchPredicate2 tableSubquery
  863 matchPredicate2: .  ['(']
  864                | . PARTIAL
  865                | . FULL

    FULL     shift, and go to state 1147
    PARTIAL  shift, and go to state 1148

    $default  reduce using rule 863 (matchPredicate2)

    matchPredicate2  go to state 1149


state 1023

  857 some: SOME .

    $default  reduce using rule 857 (some)


state 1024

  856 all: ALL .

    $default  reduce using rule 856 (all)


state 1025

  858 some: ANY .

    $default  reduce using rule 858 (some)


state 1026

  473 comparisonPredicate: rowValueConstructor compOp rowValueConstructor .

    $default  reduce using rule 473 (comparisonPredicate)


state 1027

  231 leftParen: . '('
  565 subquery: . leftParen queryExpression rightParen
  627 tableSubquery: . subquery
  853 quantifiedComparisonPredicate: rowValueConstructor compOp quantifier . tableSubquery

    '('  shift, and go to state 295

    leftParen      go to state 815
    subquery       go to state 816
    tableSubquery  go to state 1150


state 1028

  854 quantifier: all .

    $default  reduce using rule 854 (quantifier)


state 1029

  855 quantifier: some .

    $default  reduce using rule 855 (quantifier)


state 1030

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  474 rowValueConstructor: . rowValueConstructorElement
  475                    | . leftParen rowValueConstructorList rightParen
  476                    | . rowSubquery
  477 rowValueConstructorElement: . valueExpression
  478                           | . nullSpecification
  479                           | . defaultSpecification
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression
  813 nullSpecification: . NULL
  814 defaultSpecification: . DEFAULT
  818 rowSubquery: . subquery
  831 betweenPredicate: rowValueConstructor betweenPredicate1 BETWEEN . rowValueConstructor AND rowValueConstructor

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    NULL               shift, and go to state 668
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    DEFAULT            shift, and go to state 687
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 992
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    rowValueConstructor             go to state 1151
    rowValueConstructorElement      go to state 702
    valueExpression                 go to state 703
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 727
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761
    nullSpecification               go to state 762
    defaultSpecification            go to state 763
    rowSubquery                     go to state 764


state 1031

  231 leftParen: . '('
  565 subquery: . leftParen queryExpression rightParen
  627 tableSubquery: . subquery
  834 inPredicate: rowValueConstructor inPredicate1 IN . inPredicateValue
  837 inPredicateValue: . tableSubquery
  838                 | . leftParen inValueList rightParen

    '('  shift, and go to state 295

    leftParen         go to state 1152
    subquery          go to state 816
    tableSubquery     go to state 1153
    inPredicateValue  go to state 1154


state 1032

  492 factor1: sign .

    $default  reduce using rule 492 (factor1)


state 1033

  485 numericValueExpression: numericValueExpression plusSign term .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  488 term: term . asterisk factor
  489     | term . solidus factor
  553 asterisk: . UNKNOWN_LEX
  799 solidus: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 880

    UNKNOWN_LEX  [reduce using rule 485 (numericValueExpression)]
    $default     reduce using rule 485 (numericValueExpression)

    asterisk  go to state 1155
    solidus   go to state 882


state 1034

  486 numericValueExpression: numericValueExpression minusSign term .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, FOR, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  488 term: term . asterisk factor
  489     | term . solidus factor
  553 asterisk: . UNKNOWN_LEX
  799 solidus: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 880

    UNKNOWN_LEX  [reduce using rule 486 (numericValueExpression)]
    $default     reduce using rule 486 (numericValueExpression)

    asterisk  go to state 1155
    solidus   go to state 882


state 1035

  488 term: term asterisk factor .

    $default  reduce using rule 488 (term)


state 1036

  791 intervalTerm: term asterisk intervalFactor .

    $default  reduce using rule 791 (intervalTerm)


state 1037

  489 term: term solidus factor .

    $default  reduce using rule 489 (term)


state 1038

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression
  811 octetLengthExpression: OCTET_LENGTH leftParen . stringValueExpression rightParen

    CASE              shift, and go to state 666
    CAST              shift, and go to state 667
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 883
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 671
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 672
    SESSION_USER      shift, and go to state 673
    DATE              shift, and go to state 496
    NULLIF            shift, and go to state 674
    SUM               shift, and go to state 675
    KEY               shift, and go to state 42
    AVG               shift, and go to state 676
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 677
    TIMESTAMP         shift, and go to state 498
    MODULE            shift, and go to state 214
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 499
    SYSTEM_USER       shift, and go to state 678
    SUBSTRING         shift, and go to state 679
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 680
    MAX               shift, and go to state 681
    LOWER             shift, and go to state 682
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 683
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 684
    CURRENT_USER      shift, and go to state 685
    TRANSLATE         shift, and go to state 686
    INTERVAL          shift, and go to state 505
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 688
    TRIM              shift, and go to state 689
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 295

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 890
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    valueExpressionPrimary          go to state 976
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    stringValueExpression           go to state 1156


state 1039

  342 nonsecondDatetimeField: . YEAR
  343                       | . MONTH
  344                       | . DAY
  345                       | . HOUR
  346                       | . MINUTE
  762 extractExpression: EXTRACT leftParen . extractField FROM extractSource rightParen
  763 extractField: . datetimeField
  764             | . timeZoneField
  765 datetimeField: . nonsecondDatetimeField
  766              | . SECOND
  767 timeZoneField: . TIMEZONE_HOUR
  768              | . TIMEZONE_MINUTE

    SECOND           shift, and go to state 1157
    MINUTE           shift, and go to state 480
    MONTH            shift, and go to state 481
    DAY              shift, and go to state 482
    TIMEZONE_HOUR    shift, and go to state 1158
    HOUR             shift, and go to state 483
    YEAR             shift, and go to state 484
    TIMEZONE_MINUTE  shift, and go to state 1159

    nonsecondDatetimeField  go to state 1160
    extractField            go to state 1161
    datetimeField           go to state 1162
    timeZoneField           go to state 1163


state 1040

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression
  812 bitLengthExpression: BIT_LENGTH leftParen . stringValueExpression rightParen

    CASE              shift, and go to state 666
    CAST              shift, and go to state 667
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 883
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 671
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 672
    SESSION_USER      shift, and go to state 673
    DATE              shift, and go to state 496
    NULLIF            shift, and go to state 674
    SUM               shift, and go to state 675
    KEY               shift, and go to state 42
    AVG               shift, and go to state 676
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 677
    TIMESTAMP         shift, and go to state 498
    MODULE            shift, and go to state 214
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 499
    SYSTEM_USER       shift, and go to state 678
    SUBSTRING         shift, and go to state 679
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 680
    MAX               shift, and go to state 681
    LOWER             shift, and go to state 682
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 683
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 684
    CURRENT_USER      shift, and go to state 685
    TRANSLATE         shift, and go to state 686
    INTERVAL          shift, and go to state 505
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 688
    TRIM              shift, and go to state 689
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 295

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 890
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    valueExpressionPrimary          go to state 976
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    stringValueExpression           go to state 1164


state 1041

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  808 charLengthExpression: CHARACTER_LENGTH leftParen . stringValueExpression rightParen
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression

    CASE              shift, and go to state 666
    CAST              shift, and go to state 667
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 883
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 671
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 672
    SESSION_USER      shift, and go to state 673
    DATE              shift, and go to state 496
    NULLIF            shift, and go to state 674
    SUM               shift, and go to state 675
    KEY               shift, and go to state 42
    AVG               shift, and go to state 676
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 677
    TIMESTAMP         shift, and go to state 498
    MODULE            shift, and go to state 214
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 499
    SYSTEM_USER       shift, and go to state 678
    SUBSTRING         shift, and go to state 679
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 680
    MAX               shift, and go to state 681
    LOWER             shift, and go to state 682
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 683
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 684
    CURRENT_USER      shift, and go to state 685
    TRANSLATE         shift, and go to state 686
    INTERVAL          shift, and go to state 505
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 688
    TRIM              shift, and go to state 689
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 295

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 890
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    valueExpressionPrimary          go to state 976
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    stringValueExpression           go to state 1165


state 1042

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 positionExpression: POSITION leftParen . characterValueExpression IN characterValueExpression rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

    CASE              shift, and go to state 666
    CAST              shift, and go to state 667
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 883
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 671
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 672
    SESSION_USER      shift, and go to state 673
    DATE              shift, and go to state 496
    NULLIF            shift, and go to state 674
    SUM               shift, and go to state 675
    KEY               shift, and go to state 42
    AVG               shift, and go to state 676
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 677
    TIMESTAMP         shift, and go to state 498
    MODULE            shift, and go to state 214
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 499
    SYSTEM_USER       shift, and go to state 678
    SUBSTRING         shift, and go to state 679
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 680
    MAX               shift, and go to state 681
    LOWER             shift, and go to state 682
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 683
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 684
    CURRENT_USER      shift, and go to state 685
    TRANSLATE         shift, and go to state 686
    INTERVAL          shift, and go to state 505
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 688
    TRIM              shift, and go to state 689
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 295

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 890
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    valueExpressionPrimary          go to state 979
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 1166
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 981
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746


state 1043

  518 colon: UNKNOWN_LEX .

    $default  reduce using rule 518 (colon)


state 1044

  519 indicatorParameter: indicatorParameter1 parameterName .

    $default  reduce using rule 519 (indicatorParameter)


state 1045

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  225 identifier: . id
  517 parameterName: colon . identifier

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id          go to state 298
    identifier  go to state 905


state 1046

  527 embeddedVariableName: colon . hostIdentifier
  528 hostIdentifier: . AdaHostIdentifier
  529               | . CHostIdentifier
  530               | . CobolHostIdentifier
  531               | . FortranHostIdentifier
  532               | . MUMPSHostIdentifier
  533               | . PascalHostIdentifier
  534               | . PLIHostIdentifier
  535 AdaHostIdentifier: . UNKNOWN_BODY
  536 CHostIdentifier: . UNKNOWN_BODY
  537 CobolHostIdentifier: . UNKNOWN_BODY
  538 FortranHostIdentifier: . UNKNOWN_BODY
  539 MUMPSHostIdentifier: . UNKNOWN_BODY
  540 PascalHostIdentifier: . UNKNOWN_BODY
  541 PLIHostIdentifier: . UNKNOWN_BODY

    UNKNOWN_BODY  shift, and go to state 904

    hostIdentifier         go to state 906
    AdaHostIdentifier      go to state 907
    CHostIdentifier        go to state 908
    CobolHostIdentifier    go to state 909
    FortranHostIdentifier  go to state 910
    MUMPSHostIdentifier    go to state 911
    PascalHostIdentifier   go to state 912
    PLIHostIdentifier      go to state 913


state 1047

  542 indicatorVariable: indicatorVariable1 embeddedVariableName .

    $default  reduce using rule 542 (indicatorVariable)


state 1048

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  554                   | setFunctionType leftParen generalSetFunction1 . valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 819
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 1167
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761


state 1049

  556 generalSetFunction1: setQuantifier .

    $default  reduce using rule 556 (generalSetFunction1)


state 1050

  714 concatenation: characterValueExpression concatenationOperator characterFactor .

    $default  reduce using rule 714 (concatenation)


state 1051

  760 bitPrimary: valueExpressionPrimary .

    $default  reduce using rule 760 (bitPrimary)


state 1052

  761 bitPrimary: stringValueFunction .

    $default  reduce using rule 761 (bitPrimary)


state 1053

  758 bitConcatenation: bitValueExpression concatenationOperator bitFactor .

    $default  reduce using rule 758 (bitConcatenation)


state 1054

  488 term: term . asterisk factor
  489     | term . solidus factor
  553 asterisk: . UNKNOWN_LEX
  791 intervalTerm: term . asterisk intervalFactor
  799 solidus: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 880

    asterisk  go to state 881
    solidus   go to state 882


state 1055

  773 datetimeValueExpression: datetimeValueExpression plusSign intervalTerm .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  798 intervalTerm2: intervalTerm .  [UNKNOWN_LEX]

    UNKNOWN_LEX  reduce using rule 773 (datetimeValueExpression)
    UNKNOWN_LEX  [reduce using rule 798 (intervalTerm2)]
    $default     reduce using rule 773 (datetimeValueExpression)


state 1056

  774 datetimeValueExpression: datetimeValueExpression minusSign intervalTerm .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  798 intervalTerm2: intervalTerm .  [UNKNOWN_LEX]

    UNKNOWN_LEX  reduce using rule 774 (datetimeValueExpression)
    UNKNOWN_LEX  [reduce using rule 798 (intervalTerm2)]
    $default     reduce using rule 774 (datetimeValueExpression)


state 1057

  782 timeZoneSpecifier: LOCAL .

    $default  reduce using rule 782 (timeZoneSpecifier)


state 1058

  783 timeZoneSpecifier: TIME . ZONE intervalValueExpression

    ZONE  shift, and go to state 1168


state 1059

  781 timeZone: AT timeZoneSpecifier .

    $default  reduce using rule 781 (timeZone)


state 1060

  779 datetimePrimary: valueExpressionPrimary .

    $default  reduce using rule 779 (datetimePrimary)


state 1061

  772 datetimeValueExpression: intervalValueExpression plusSign datetimeTerm .

    $default  reduce using rule 772 (datetimeValueExpression)


state 1062

  797 intervalPrimary1: intervalQualifier .

    $default  reduce using rule 797 (intervalPrimary1)


state 1063

  795 intervalPrimary: valueExpressionPrimary intervalPrimary1 .

    $default  reduce using rule 795 (intervalPrimary)


state 1064

  789 intervalTerm: intervalTerm2 asterisk factor .

    $default  reduce using rule 789 (intervalTerm)


state 1065

  790 intervalTerm: intervalTerm2 solidus factor .

    $default  reduce using rule 790 (intervalTerm)


state 1066

  798 intervalTerm2: intervalTerm .  [UNKNOWN_LEX]
  802 intervalTerm1: intervalTerm .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']

    UNKNOWN_LEX  reduce using rule 798 (intervalTerm2)
    UNKNOWN_LEX  [reduce using rule 802 (intervalTerm1)]
    $default     reduce using rule 802 (intervalTerm1)


state 1067

  785 intervalValueExpression: intervalValueExpression1 plusSign intervalTerm1 .

    $default  reduce using rule 785 (intervalValueExpression)


state 1068

  786 intervalValueExpression: intervalValueExpression1 minusSign intervalTerm1 .

    $default  reduce using rule 786 (intervalValueExpression)


state 1069

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  842 likePredicate: matchValue likePredicate1 LIKE . pattern likePredicate2
  848 pattern: . characterValueExpression

    CASE              shift, and go to state 666
    CAST              shift, and go to state 667
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 883
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 671
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 672
    SESSION_USER      shift, and go to state 673
    DATE              shift, and go to state 496
    NULLIF            shift, and go to state 674
    SUM               shift, and go to state 675
    KEY               shift, and go to state 42
    AVG               shift, and go to state 676
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 677
    TIMESTAMP         shift, and go to state 498
    MODULE            shift, and go to state 214
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 499
    SYSTEM_USER       shift, and go to state 678
    SUBSTRING         shift, and go to state 679
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 680
    MAX               shift, and go to state 681
    LOWER             shift, and go to state 682
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 683
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 684
    CURRENT_USER      shift, and go to state 685
    TRANSLATE         shift, and go to state 686
    INTERVAL          shift, and go to state 505
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 688
    TRIM              shift, and go to state 689
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 295

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 890
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    valueExpressionPrimary          go to state 979
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 1169
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 981
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    pattern                         go to state 1170


state 1070

  868 rowValueConstructor2: rowValueConstructor .

    $default  reduce using rule 868 (rowValueConstructor2)


state 1071

  866 overlapsPredicate: rowValueConstructor1 OVERLAPS rowValueConstructor2 .

    $default  reduce using rule 866 (overlapsPredicate)


state 1072

  894 referentialConstraintDefinition: FOREIGN KEY leftParen referencingColumns rightParen referencesSpecification .

    $default  reduce using rule 894 (referentialConstraintDefinition)


state 1073

  434 columnNameList1: columnNameList1 comma columnName .

    $default  reduce using rule 434 (columnNameList1)


state 1074

  360 singleDatetimeField2: comma leftParen intervalFractionalSecondsPrecision .

    $default  reduce using rule 360 (singleDatetimeField2)


state 1075

  351 endField1: leftParen intervalFractionalSecondsPrecision rightParen .

    $default  reduce using rule 351 (endField1)


state 1076

  268 rightParen: . ')'
  430 referencedTableAndColumns1: leftParen referenceColumnList . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1171


state 1077

  435 matchType: FULL .

    $default  reduce using rule 435 (matchType)


state 1078

  436 matchType: PARTIAL .

    $default  reduce using rule 436 (matchType)


state 1079

  425 referencesSpecification1: MATCH matchType .

    $default  reduce using rule 425 (referencesSpecification1)


state 1080

  443 updateRule: ON . UPDATE referentialAction
  448 deleteRule: ON . DELETE referentialAction

    DELETE  shift, and go to state 1172
    UPDATE  shift, and go to state 1173


state 1081

  423 referencesSpecification: REFERENCES referencedTableAndColumns referencesSpecification1 referencesSpecification2 .

    $default  reduce using rule 423 (referencesSpecification)


state 1082

  427 referencesSpecification2: referentialTriggeredAction .

    $default  reduce using rule 427 (referencesSpecification2)


state 1083

  437 referentialTriggeredAction: updateRule . referentialTriggeredAction1
  439 referentialTriggeredAction1: .  [NOT, DEFERRABLE, UNIQUE, COLLATE, INITIALLY, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  440                            | . deleteRule
  448 deleteRule: . ON DELETE referentialAction

    ON  shift, and go to state 1174

    $default  reduce using rule 439 (referentialTriggeredAction1)

    referentialTriggeredAction1  go to state 1175
    deleteRule                   go to state 1176


state 1084

  438 referentialTriggeredAction: deleteRule . referentialTriggeredAction2
  441 referentialTriggeredAction2: .  [NOT, DEFERRABLE, UNIQUE, COLLATE, INITIALLY, CONSTRAINT, PRIMARY, CHECK, REFERENCES, ',', ')']
  442                            | . updateRule
  443 updateRule: . ON UPDATE referentialAction

    ON  shift, and go to state 1177

    $default  reduce using rule 441 (referentialTriggeredAction2)

    referentialTriggeredAction2  go to state 1178
    updateRule                   go to state 1179


state 1085

  873 constraintAttributes: constraintAttributes3 DEFERRABLE constraintAttributes4 .

    $default  reduce using rule 873 (constraintAttributes)


state 1086

  881 constraintAttributes4: constraintCheckTime .

    $default  reduce using rule 881 (constraintAttributes4)


state 1087

  875 constraintAttributes2: constraintAttributes1 DEFERRABLE .

    $default  reduce using rule 875 (constraintAttributes2)


state 1088

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  692 result: . resultExpression
  693       | . NULL
  694 resultExpression: . valueExpression
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  701 searchedWhenClause: WHEN searchCondition THEN . result
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    NULL               shift, and go to state 1094
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 819
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 1095
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    result                          go to state 1180
    resultExpression                go to state 1097
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761


state 1089

  691 whenOperand: valueExpression .

    $default  reduce using rule 691 (whenOperand)


state 1090

  690 simpleWhenClause: WHEN whenOperand . THEN result

    THEN  shift, and go to state 1181


state 1091

  684 simpleCase: CASE caseOperand simpleCase1 simpleCase2 . END

    END  shift, and go to state 1182


state 1092

  686 simpleCase1: simpleCase1 simpleWhenClause .

    $default  reduce using rule 686 (simpleCase1)


state 1093

  688 simpleCase2: elseClause .

    $default  reduce using rule 688 (simpleCase2)


state 1094

  693 result: NULL .

    $default  reduce using rule 693 (result)


state 1095

  694 resultExpression: valueExpression .

    $default  reduce using rule 694 (resultExpression)


state 1096

  695 elseClause: ELSE result .

    $default  reduce using rule 695 (elseClause)


state 1097

  692 result: resultExpression .

    $default  reduce using rule 692 (result)


state 1098

  696 searchedCase: CASE searchedCase1 searchedCase2 END .

    $default  reduce using rule 696 (searchedCase)


state 1099

  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  361 domainName: . qualifiedName
  702 castSpecification: CAST leftParen castOperand AS . castTarget rightParen
  705 castTarget: . domainName
  706           | . typeName
  707 typeName: . UNKNOWN_BODY

    UNKNOWN_BODY  shift, and go to state 1183
    UNKNOWN_LEX   shift, and go to state 213

    $default  reduce using rule 220 (qualifiedName1)

    qualifiedName   go to state 354
    qualifiedName1  go to state 217
    schemaName      go to state 218
    domainName      go to state 1184
    castTarget      go to state 1185
    typeName        go to state 1186


state 1100

  551 setFunctionSpecification: COUNT leftParen asterisk rightParen .

    $default  reduce using rule 551 (setFunctionSpecification)


state 1101

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  678                 | NULLIF leftParen valueExpression comma . valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 819
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 1187
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761


state 1102

  375 sign: . UNKNOWN_LEX
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  728 characterSubstringFunction: SUBSTRING leftParen characterValueExpression FROM . startPosition characterSubstringFunction1 rightParen
  731 startPosition: . numericValueExpression

    UNKNOWN_LEX  shift, and go to state 592

    UNKNOWN_LEX  [reduce using rule 491 (factor1)]
    $default     reduce using rule 491 (factor1)

    sign                    go to state 1032
    numericValueExpression  go to state 1188
    term                    go to state 1189
    factor                  go to state 706
    factor1                 go to state 707
    startPosition           go to state 1190


state 1103

  375 sign: . UNKNOWN_LEX
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  731 startPosition: . numericValueExpression
  753 bitSubstringFunction: SUBSTRING leftParen bitValueExpression FROM . startPosition bitSubstringFunction1 rightParen

    UNKNOWN_LEX  shift, and go to state 592

    UNKNOWN_LEX  [reduce using rule 491 (factor1)]
    $default     reduce using rule 491 (factor1)

    sign                    go to state 1032
    numericValueExpression  go to state 1188
    term                    go to state 1189
    factor                  go to state 706
    factor1                 go to state 707
    startPosition           go to state 1191


state 1104

  734 fold: LOWER leftParen characterValueExpression rightParen .

    $default  reduce using rule 734 (fold)


state 1105

  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  735 formofuseConversion: CONVERT leftParen characterValueExpression USING . formofuseConversionName rightParen
  736 formofuseConversionName: . qualifiedName

    UNKNOWN_LEX  shift, and go to state 213

    $default  reduce using rule 220 (qualifiedName1)

    qualifiedName            go to state 1192
    qualifiedName1           go to state 217
    schemaName               go to state 218
    formofuseConversionName  go to state 1193


state 1106

  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  737 characterTranslation: TRANSLATE leftParen characterValueExpression USING . translationName rightParen
  738 translationName: . qualifiedName

    UNKNOWN_LEX  shift, and go to state 213

    $default  reduce using rule 220 (qualifiedName1)

    qualifiedName    go to state 1194
    qualifiedName1   go to state 217
    schemaName       go to state 218
    translationName  go to state 1195


state 1107

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  680 caseAbbreviation1: comma . valueExpression
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 819
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 1196
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761


state 1108

  268 rightParen: . ')'
  315 comma: . ','
  679 caseAbbreviation: COALESCE leftParen valueExpression caseAbbreviation1 . rightParen
  681 caseAbbreviation1: caseAbbreviation1 . comma valueExpression

    ','  shift, and go to state 448
    ')'  shift, and go to state 449

    rightParen  go to state 1197
    comma       go to state 1198


state 1109

  739 trimFunction: TRIM leftParen trimOperands rightParen .

    $default  reduce using rule 739 (trimFunction)


state 1110

  714 concatenation: characterValueExpression . concatenationOperator characterFactor
  715 concatenationOperator: . UNKNOWN_LEX
  751 trimSource: characterValueExpression .  [')']

    UNKNOWN_LEX  shift, and go to state 921

    $default  reduce using rule 751 (trimSource)

    concatenationOperator  go to state 922


state 1111

  740 trimOperands: trimOperands3 trimSource .

    $default  reduce using rule 740 (trimOperands)


state 1112

  714 concatenation: characterValueExpression . concatenationOperator characterFactor
  715 concatenationOperator: . UNKNOWN_LEX
  750 trimCharacter: characterValueExpression .  [FROM]

    UNKNOWN_LEX  shift, and go to state 921

    $default  reduce using rule 750 (trimCharacter)

    concatenationOperator  go to state 922


state 1113

  742 trimOperands3: trimOperands1 trimOperands2 . FROM

    FROM  shift, and go to state 1199


state 1114

  746 trimOperands2: trimCharacter .

    $default  reduce using rule 746 (trimOperands2)


state 1115

  315 comma: . ','
  664 tableValueConstructorList: rowValueConstructor tableValueConstructorList1 .  [UNION, INTERSECT, EXCEPT, ')']
  666 tableValueConstructorList1: tableValueConstructorList1 . comma rowValueConstructor

    ','  shift, and go to state 448

    $default  reduce using rule 664 (tableValueConstructorList)

    comma  go to state 1200


state 1116

  222 schemaName: UNKNOWN_LEX .  [UNKNOWN_LEX]
  375 sign: UNKNOWN_LEX .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  376 unsignedNumericLiteral: UNKNOWN_LEX .  [FROM, DESC, ASC, AS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',']
  383 characterStringLiteral: UNKNOWN_LEX .  [FROM, DESC, ASC, AS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',']
  384 nationalCharacterStringLiteral: UNKNOWN_LEX .  [FROM, DESC, ASC, AS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',']
  385 bitStringLiteral: UNKNOWN_LEX .  [FROM, DESC, ASC, AS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',']
  386 hexStringLiteral: UNKNOWN_LEX .  [FROM, DESC, ASC, AS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',']
  518 colon: UNKNOWN_LEX .  [DESC, ASC, UNKNOWN_BODY, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  523 questionMark: UNKNOWN_LEX .  [FROM, DESC, ASC, AS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, COLLATE, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, AT, NUMBER, ID, ',']
  553 asterisk: UNKNOWN_LEX .  [FROM]

    FROM              reduce using rule 376 (unsignedNumericLiteral)
    FROM              [reduce using rule 383 (characterStringLiteral)]
    FROM              [reduce using rule 384 (nationalCharacterStringLiteral)]
    FROM              [reduce using rule 385 (bitStringLiteral)]
    FROM              [reduce using rule 386 (hexStringLiteral)]
    FROM              [reduce using rule 523 (questionMark)]
    FROM              [reduce using rule 553 (asterisk)]
    DESC              reduce using rule 375 (sign)
    DESC              [reduce using rule 376 (unsignedNumericLiteral)]
    DESC              [reduce using rule 383 (characterStringLiteral)]
    DESC              [reduce using rule 384 (nationalCharacterStringLiteral)]
    DESC              [reduce using rule 385 (bitStringLiteral)]
    DESC              [reduce using rule 386 (hexStringLiteral)]
    DESC              [reduce using rule 518 (colon)]
    DESC              [reduce using rule 523 (questionMark)]
    ASC               reduce using rule 375 (sign)
    ASC               [reduce using rule 376 (unsignedNumericLiteral)]
    ASC               [reduce using rule 383 (characterStringLiteral)]
    ASC               [reduce using rule 384 (nationalCharacterStringLiteral)]
    ASC               [reduce using rule 385 (bitStringLiteral)]
    ASC               [reduce using rule 386 (hexStringLiteral)]
    ASC               [reduce using rule 518 (colon)]
    ASC               [reduce using rule 523 (questionMark)]
    AS                reduce using rule 376 (unsignedNumericLiteral)
    AS                [reduce using rule 383 (characterStringLiteral)]
    AS                [reduce using rule 384 (nationalCharacterStringLiteral)]
    AS                [reduce using rule 385 (bitStringLiteral)]
    AS                [reduce using rule 386 (hexStringLiteral)]
    AS                [reduce using rule 523 (questionMark)]
    UNKNOWN_BODY      reduce using rule 518 (colon)
    UNKNOWN_LEX       reduce using rule 222 (schemaName)
    UNKNOWN_LEX       [reduce using rule 375 (sign)]
    UNKNOWN_LEX       [reduce using rule 376 (unsignedNumericLiteral)]
    UNKNOWN_LEX       [reduce using rule 383 (characterStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 384 (nationalCharacterStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 385 (bitStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 386 (hexStringLiteral)]
    UNKNOWN_LEX       [reduce using rule 523 (questionMark)]
    ACTION            reduce using rule 375 (sign)
    ACTION            [reduce using rule 376 (unsignedNumericLiteral)]
    ACTION            [reduce using rule 383 (characterStringLiteral)]
    ACTION            [reduce using rule 384 (nationalCharacterStringLiteral)]
    ACTION            [reduce using rule 385 (bitStringLiteral)]
    ACTION            [reduce using rule 386 (hexStringLiteral)]
    ACTION            [reduce using rule 518 (colon)]
    ACTION            [reduce using rule 523 (questionMark)]
    MIN               reduce using rule 375 (sign)
    MIN               [reduce using rule 376 (unsignedNumericLiteral)]
    MIN               [reduce using rule 383 (characterStringLiteral)]
    MIN               [reduce using rule 384 (nationalCharacterStringLiteral)]
    MIN               [reduce using rule 385 (bitStringLiteral)]
    MIN               [reduce using rule 386 (hexStringLiteral)]
    MIN               [reduce using rule 518 (colon)]
    MIN               [reduce using rule 523 (questionMark)]
    OCTET_LENGTH      reduce using rule 375 (sign)
    OCTET_LENGTH      [reduce using rule 376 (unsignedNumericLiteral)]
    OCTET_LENGTH      [reduce using rule 383 (characterStringLiteral)]
    OCTET_LENGTH      [reduce using rule 384 (nationalCharacterStringLiteral)]
    OCTET_LENGTH      [reduce using rule 385 (bitStringLiteral)]
    OCTET_LENGTH      [reduce using rule 386 (hexStringLiteral)]
    OCTET_LENGTH      [reduce using rule 518 (colon)]
    OCTET_LENGTH      [reduce using rule 523 (questionMark)]
    DEFERRED          reduce using rule 375 (sign)
    DEFERRED          [reduce using rule 376 (unsignedNumericLiteral)]
    DEFERRED          [reduce using rule 383 (characterStringLiteral)]
    DEFERRED          [reduce using rule 384 (nationalCharacterStringLiteral)]
    DEFERRED          [reduce using rule 385 (bitStringLiteral)]
    DEFERRED          [reduce using rule 386 (hexStringLiteral)]
    DEFERRED          [reduce using rule 518 (colon)]
    DEFERRED          [reduce using rule 523 (questionMark)]
    DEFERRABLE        reduce using rule 375 (sign)
    DEFERRABLE        [reduce using rule 376 (unsignedNumericLiteral)]
    DEFERRABLE        [reduce using rule 383 (characterStringLiteral)]
    DEFERRABLE        [reduce using rule 384 (nationalCharacterStringLiteral)]
    DEFERRABLE        [reduce using rule 385 (bitStringLiteral)]
    DEFERRABLE        [reduce using rule 386 (hexStringLiteral)]
    DEFERRABLE        [reduce using rule 518 (colon)]
    DEFERRABLE        [reduce using rule 523 (questionMark)]
    ZONE              reduce using rule 375 (sign)
    ZONE              [reduce using rule 376 (unsignedNumericLiteral)]
    ZONE              [reduce using rule 383 (characterStringLiteral)]
    ZONE              [reduce using rule 384 (nationalCharacterStringLiteral)]
    ZONE              [reduce using rule 385 (bitStringLiteral)]
    ZONE              [reduce using rule 386 (hexStringLiteral)]
    ZONE              [reduce using rule 518 (colon)]
    ZONE              [reduce using rule 523 (questionMark)]
    COUNT             reduce using rule 375 (sign)
    COUNT             [reduce using rule 376 (unsignedNumericLiteral)]
    COUNT             [reduce using rule 383 (characterStringLiteral)]
    COUNT             [reduce using rule 384 (nationalCharacterStringLiteral)]
    COUNT             [reduce using rule 385 (bitStringLiteral)]
    COUNT             [reduce using rule 386 (hexStringLiteral)]
    COUNT             [reduce using rule 518 (colon)]
    COUNT             [reduce using rule 523 (questionMark)]
    NULLIF            reduce using rule 375 (sign)
    NULLIF            [reduce using rule 376 (unsignedNumericLiteral)]
    NULLIF            [reduce using rule 383 (characterStringLiteral)]
    NULLIF            [reduce using rule 384 (nationalCharacterStringLiteral)]
    NULLIF            [reduce using rule 385 (bitStringLiteral)]
    NULLIF            [reduce using rule 386 (hexStringLiteral)]
    NULLIF            [reduce using rule 518 (colon)]
    NULLIF            [reduce using rule 523 (questionMark)]
    SUM               reduce using rule 375 (sign)
    SUM               [reduce using rule 376 (unsignedNumericLiteral)]
    SUM               [reduce using rule 383 (characterStringLiteral)]
    SUM               [reduce using rule 384 (nationalCharacterStringLiteral)]
    SUM               [reduce using rule 385 (bitStringLiteral)]
    SUM               [reduce using rule 386 (hexStringLiteral)]
    SUM               [reduce using rule 518 (colon)]
    SUM               [reduce using rule 523 (questionMark)]
    COLLATE           reduce using rule 376 (unsignedNumericLiteral)
    COLLATE           [reduce using rule 383 (characterStringLiteral)]
    COLLATE           [reduce using rule 384 (nationalCharacterStringLiteral)]
    COLLATE           [reduce using rule 385 (bitStringLiteral)]
    COLLATE           [reduce using rule 386 (hexStringLiteral)]
    COLLATE           [reduce using rule 523 (questionMark)]
    KEY               reduce using rule 375 (sign)
    KEY               [reduce using rule 376 (unsignedNumericLiteral)]
    KEY               [reduce using rule 383 (characterStringLiteral)]
    KEY               [reduce using rule 384 (nationalCharacterStringLiteral)]
    KEY               [reduce using rule 385 (bitStringLiteral)]
    KEY               [reduce using rule 386 (hexStringLiteral)]
    KEY               [reduce using rule 518 (colon)]
    KEY               [reduce using rule 523 (questionMark)]
    AVG               reduce using rule 375 (sign)
    AVG               [reduce using rule 376 (unsignedNumericLiteral)]
    AVG               [reduce using rule 383 (characterStringLiteral)]
    AVG               [reduce using rule 384 (nationalCharacterStringLiteral)]
    AVG               [reduce using rule 385 (bitStringLiteral)]
    AVG               [reduce using rule 386 (hexStringLiteral)]
    AVG               [reduce using rule 518 (colon)]
    AVG               [reduce using rule 523 (questionMark)]
    INITIALLY         reduce using rule 375 (sign)
    INITIALLY         [reduce using rule 376 (unsignedNumericLiteral)]
    INITIALLY         [reduce using rule 383 (characterStringLiteral)]
    INITIALLY         [reduce using rule 384 (nationalCharacterStringLiteral)]
    INITIALLY         [reduce using rule 385 (bitStringLiteral)]
    INITIALLY         [reduce using rule 386 (hexStringLiteral)]
    INITIALLY         [reduce using rule 518 (colon)]
    INITIALLY         [reduce using rule 523 (questionMark)]
    UPPER             reduce using rule 375 (sign)
    UPPER             [reduce using rule 376 (unsignedNumericLiteral)]
    UPPER             [reduce using rule 383 (characterStringLiteral)]
    UPPER             [reduce using rule 384 (nationalCharacterStringLiteral)]
    UPPER             [reduce using rule 385 (bitStringLiteral)]
    UPPER             [reduce using rule 386 (hexStringLiteral)]
    UPPER             [reduce using rule 518 (colon)]
    UPPER             [reduce using rule 523 (questionMark)]
    EXTRACT           reduce using rule 375 (sign)
    EXTRACT           [reduce using rule 376 (unsignedNumericLiteral)]
    EXTRACT           [reduce using rule 383 (characterStringLiteral)]
    EXTRACT           [reduce using rule 384 (nationalCharacterStringLiteral)]
    EXTRACT           [reduce using rule 385 (bitStringLiteral)]
    EXTRACT           [reduce using rule 386 (hexStringLiteral)]
    EXTRACT           [reduce using rule 518 (colon)]
    EXTRACT           [reduce using rule 523 (questionMark)]
    CHAR_LENGTH       reduce using rule 375 (sign)
    CHAR_LENGTH       [reduce using rule 376 (unsignedNumericLiteral)]
    CHAR_LENGTH       [reduce using rule 383 (characterStringLiteral)]
    CHAR_LENGTH       [reduce using rule 384 (nationalCharacterStringLiteral)]
    CHAR_LENGTH       [reduce using rule 385 (bitStringLiteral)]
    CHAR_LENGTH       [reduce using rule 386 (hexStringLiteral)]
    CHAR_LENGTH       [reduce using rule 518 (colon)]
    CHAR_LENGTH       [reduce using rule 523 (questionMark)]
    SUBSTRING         reduce using rule 375 (sign)
    SUBSTRING         [reduce using rule 376 (unsignedNumericLiteral)]
    SUBSTRING         [reduce using rule 383 (characterStringLiteral)]
    SUBSTRING         [reduce using rule 384 (nationalCharacterStringLiteral)]
    SUBSTRING         [reduce using rule 385 (bitStringLiteral)]
    SUBSTRING         [reduce using rule 386 (hexStringLiteral)]
    SUBSTRING         [reduce using rule 518 (colon)]
    SUBSTRING         [reduce using rule 523 (questionMark)]
    PARTIAL           reduce using rule 375 (sign)
    PARTIAL           [reduce using rule 376 (unsignedNumericLiteral)]
    PARTIAL           [reduce using rule 383 (characterStringLiteral)]
    PARTIAL           [reduce using rule 384 (nationalCharacterStringLiteral)]
    PARTIAL           [reduce using rule 385 (bitStringLiteral)]
    PARTIAL           [reduce using rule 386 (hexStringLiteral)]
    PARTIAL           [reduce using rule 518 (colon)]
    PARTIAL           [reduce using rule 523 (questionMark)]
    MAX               reduce using rule 375 (sign)
    MAX               [reduce using rule 376 (unsignedNumericLiteral)]
    MAX               [reduce using rule 383 (characterStringLiteral)]
    MAX               [reduce using rule 384 (nationalCharacterStringLiteral)]
    MAX               [reduce using rule 385 (bitStringLiteral)]
    MAX               [reduce using rule 386 (hexStringLiteral)]
    MAX               [reduce using rule 518 (colon)]
    MAX               [reduce using rule 523 (questionMark)]
    LOWER             reduce using rule 375 (sign)
    LOWER             [reduce using rule 376 (unsignedNumericLiteral)]
    LOWER             [reduce using rule 383 (characterStringLiteral)]
    LOWER             [reduce using rule 384 (nationalCharacterStringLiteral)]
    LOWER             [reduce using rule 385 (bitStringLiteral)]
    LOWER             [reduce using rule 386 (hexStringLiteral)]
    LOWER             [reduce using rule 518 (colon)]
    LOWER             [reduce using rule 523 (questionMark)]
    CASCADE           reduce using rule 375 (sign)
    CASCADE           [reduce using rule 376 (unsignedNumericLiteral)]
    CASCADE           [reduce using rule 383 (characterStringLiteral)]
    CASCADE           [reduce using rule 384 (nationalCharacterStringLiteral)]
    CASCADE           [reduce using rule 385 (bitStringLiteral)]
    CASCADE           [reduce using rule 386 (hexStringLiteral)]
    CASCADE           [reduce using rule 518 (colon)]
    CASCADE           [reduce using rule 523 (questionMark)]
    TEMPORARY         reduce using rule 375 (sign)
    TEMPORARY         [reduce using rule 376 (unsignedNumericLiteral)]
    TEMPORARY         [reduce using rule 383 (characterStringLiteral)]
    TEMPORARY         [reduce using rule 384 (nationalCharacterStringLiteral)]
    TEMPORARY         [reduce using rule 385 (bitStringLiteral)]
    TEMPORARY         [reduce using rule 386 (hexStringLiteral)]
    TEMPORARY         [reduce using rule 518 (colon)]
    TEMPORARY         [reduce using rule 523 (questionMark)]
    CHARACTER_LENGTH  reduce using rule 375 (sign)
    CHARACTER_LENGTH  [reduce using rule 376 (unsignedNumericLiteral)]
    CHARACTER_LENGTH  [reduce using rule 383 (characterStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 384 (nationalCharacterStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 385 (bitStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 386 (hexStringLiteral)]
    CHARACTER_LENGTH  [reduce using rule 518 (colon)]
    CHARACTER_LENGTH  [reduce using rule 523 (questionMark)]
    CONVERT           reduce using rule 375 (sign)
    CONVERT           [reduce using rule 376 (unsignedNumericLiteral)]
    CONVERT           [reduce using rule 383 (characterStringLiteral)]
    CONVERT           [reduce using rule 384 (nationalCharacterStringLiteral)]
    CONVERT           [reduce using rule 385 (bitStringLiteral)]
    CONVERT           [reduce using rule 386 (hexStringLiteral)]
    CONVERT           [reduce using rule 518 (colon)]
    CONVERT           [reduce using rule 523 (questionMark)]
    TRANSLATE         reduce using rule 375 (sign)
    TRANSLATE         [reduce using rule 376 (unsignedNumericLiteral)]
    TRANSLATE         [reduce using rule 383 (characterStringLiteral)]
    TRANSLATE         [reduce using rule 384 (nationalCharacterStringLiteral)]
    TRANSLATE         [reduce using rule 385 (bitStringLiteral)]
    TRANSLATE         [reduce using rule 386 (hexStringLiteral)]
    TRANSLATE         [reduce using rule 518 (colon)]
    TRANSLATE         [reduce using rule 523 (questionMark)]
    PRESERVE          reduce using rule 375 (sign)
    PRESERVE          [reduce using rule 376 (unsignedNumericLiteral)]
    PRESERVE          [reduce using rule 383 (characterStringLiteral)]
    PRESERVE          [reduce using rule 384 (nationalCharacterStringLiteral)]
    PRESERVE          [reduce using rule 385 (bitStringLiteral)]
    PRESERVE          [reduce using rule 386 (hexStringLiteral)]
    PRESERVE          [reduce using rule 518 (colon)]
    PRESERVE          [reduce using rule 523 (questionMark)]
    POSITION          reduce using rule 375 (sign)
    POSITION          [reduce using rule 376 (unsignedNumericLiteral)]
    POSITION          [reduce using rule 383 (characterStringLiteral)]
    POSITION          [reduce using rule 384 (nationalCharacterStringLiteral)]
    POSITION          [reduce using rule 385 (bitStringLiteral)]
    POSITION          [reduce using rule 386 (hexStringLiteral)]
    POSITION          [reduce using rule 518 (colon)]
    POSITION          [reduce using rule 523 (questionMark)]
    COALESCE          reduce using rule 375 (sign)
    COALESCE          [reduce using rule 376 (unsignedNumericLiteral)]
    COALESCE          [reduce using rule 383 (characterStringLiteral)]
    COALESCE          [reduce using rule 384 (nationalCharacterStringLiteral)]
    COALESCE          [reduce using rule 385 (bitStringLiteral)]
    COALESCE          [reduce using rule 386 (hexStringLiteral)]
    COALESCE          [reduce using rule 518 (colon)]
    COALESCE          [reduce using rule 523 (questionMark)]
    TRIM              reduce using rule 375 (sign)
    TRIM              [reduce using rule 376 (unsignedNumericLiteral)]
    TRIM              [reduce using rule 383 (characterStringLiteral)]
    TRIM              [reduce using rule 384 (nationalCharacterStringLiteral)]
    TRIM              [reduce using rule 385 (bitStringLiteral)]
    TRIM              [reduce using rule 386 (hexStringLiteral)]
    TRIM              [reduce using rule 518 (colon)]
    TRIM              [reduce using rule 523 (questionMark)]
    AT                reduce using rule 376 (unsignedNumericLiteral)
    AT                [reduce using rule 383 (characterStringLiteral)]
    AT                [reduce using rule 384 (nationalCharacterStringLiteral)]
    AT                [reduce using rule 385 (bitStringLiteral)]
    AT                [reduce using rule 386 (hexStringLiteral)]
    AT                [reduce using rule 523 (questionMark)]
    NUMBER            reduce using rule 375 (sign)
    NUMBER            [reduce using rule 376 (unsignedNumericLiteral)]
    NUMBER            [reduce using rule 383 (characterStringLiteral)]
    NUMBER            [reduce using rule 384 (nationalCharacterStringLiteral)]
    NUMBER            [reduce using rule 385 (bitStringLiteral)]
    NUMBER            [reduce using rule 386 (hexStringLiteral)]
    NUMBER            [reduce using rule 518 (colon)]
    NUMBER            [reduce using rule 523 (questionMark)]
    ID                reduce using rule 375 (sign)
    ID                [reduce using rule 376 (unsignedNumericLiteral)]
    ID                [reduce using rule 383 (characterStringLiteral)]
    ID                [reduce using rule 384 (nationalCharacterStringLiteral)]
    ID                [reduce using rule 385 (bitStringLiteral)]
    ID                [reduce using rule 386 (hexStringLiteral)]
    ID                [reduce using rule 518 (colon)]
    ID                [reduce using rule 523 (questionMark)]
    ','               reduce using rule 376 (unsignedNumericLiteral)
    ','               [reduce using rule 383 (characterStringLiteral)]
    ','               [reduce using rule 384 (nationalCharacterStringLiteral)]
    ','               [reduce using rule 385 (bitStringLiteral)]
    ','               [reduce using rule 386 (hexStringLiteral)]
    ','               [reduce using rule 523 (questionMark)]
    $default          reduce using rule 375 (sign)


state 1117

  599 derivedColumn: valueExpression . derivedColumn1
  600 derivedColumn1: .  [FROM, ',']
  601               | . asClause
  602 asClause: . asClause1 columnName
  603 asClause1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  604          | . AS

    AS  shift, and go to state 1201

    FROM      reduce using rule 600 (derivedColumn1)
    ','       reduce using rule 600 (derivedColumn1)
    $default  reduce using rule 603 (asClause1)

    derivedColumn1  go to state 1202
    asClause        go to state 1203
    asClause1       go to state 1204


state 1118

  223 period: . UNKNOWN_LEX
  547 columnReference1: qualifier . period
  598 selectSublist: qualifier . period asterisk

    UNKNOWN_LEX  shift, and go to state 293

    period  go to state 1205


state 1119

  593 selectList: asterisk .

    $default  reduce using rule 593 (selectList)


state 1120

  590 querySpecification: SELECT querySpecification1 selectList . tableExpression
  605 tableExpression: . fromClause tableExpression1 tableExpression2 tableExpression3
  612 fromClause: . FROM tableReference fromClause1

    FROM  shift, and go to state 1206

    tableExpression  go to state 1207
    fromClause       go to state 1208


state 1121

  594 selectList: selectSublist . selectList1
  595 selectList1: .
  596            | . selectList1 comma selectSublist

    $default  reduce using rule 595 (selectList1)

    selectList1  go to state 1209


state 1122

  597 selectSublist: derivedColumn .

    $default  reduce using rule 597 (selectSublist)


state 1123

  231 leftParen: . '('
  620 correlationSpecification: correlationSpecification1 correlationName . correlationSpecification2
  623 correlationSpecification2: .  [HAVING, WHERE, GROUP, RIGHT, INNER, UNION, JOIN, LEFT, FULL, ON, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']
  624                          | . leftParen derivedColumnList rightParen

    '('  shift, and go to state 295

    $default  reduce using rule 623 (correlationSpecification2)

    leftParen                  go to state 1210
    correlationSpecification2  go to state 1211


state 1124

  586 nonjoinQueryPrimary: leftParen nonjoinQueryExpression rightParen .

    $default  reduce using rule 586 (nonjoinQueryPrimary)


state 1125

  630 joinedTable: leftParen joinedTable rightParen .

    $default  reduce using rule 630 (joinedTable)


state 1126

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  477 rowValueConstructorElement: . valueExpression
  478                           | . nullSpecification
  479                           | . defaultSpecification
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression
  813 nullSpecification: . NULL
  814 defaultSpecification: . DEFAULT
  817 rowValueConstructorList1: rowValueConstructorList1 comma . rowValueConstructorElement

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    NULL               shift, and go to state 668
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    DEFAULT            shift, and go to state 687
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 819
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    rowValueConstructorElement      go to state 1212
    valueExpression                 go to state 703
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761
    nullSpecification               go to state 762
    defaultSpecification            go to state 763


state 1127

  572 nonjoinQueryExpression1: ALL .

    $default  reduce using rule 572 (nonjoinQueryExpression1)


state 1128

  569 nonjoinQueryExpression: queryExpression UNION nonjoinQueryExpression1 . nonjoinQueryExpression2 queryTerm
  573 nonjoinQueryExpression2: .  [VALUES, SELECT, TABLE, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, MODULE, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  574                        | . correspondingSpec
  670 correspondingSpec: . CORRESPONDING correspondingSpec1

    CORRESPONDING  shift, and go to state 1213

    $default  reduce using rule 573 (nonjoinQueryExpression2)

    nonjoinQueryExpression2  go to state 1214
    correspondingSpec        go to state 1215


state 1129

  576 nonjoinQueryExpression3: ALL .

    $default  reduce using rule 576 (nonjoinQueryExpression3)


state 1130

  570 nonjoinQueryExpression: queryExpression EXCEPT nonjoinQueryExpression3 . nonjoinQueryExpression4 queryTerm
  577 nonjoinQueryExpression4: .  [VALUES, SELECT, TABLE, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, MODULE, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  578                        | . correspondingSpec
  670 correspondingSpec: . CORRESPONDING correspondingSpec1

    CORRESPONDING  shift, and go to state 1213

    $default  reduce using rule 577 (nonjoinQueryExpression4)

    nonjoinQueryExpression4  go to state 1216
    correspondingSpec        go to state 1217


state 1131

  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  565 subquery: . leftParen queryExpression rightParen
  615 tableReference: . tableName tableReference1
  616               | . derivedTable correlationSpecification
  617               | . joinedTable
  626 derivedTable: . tableSubquery
  627 tableSubquery: . subquery
  628 joinedTable: . crossJoin
  629            | . qualifiedJoin
  630            | . leftParen joinedTable rightParen
  631 crossJoin: . tableReference CROSS JOIN tableReference
  631          | tableReference CROSS JOIN . tableReference
  632 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3

    UNKNOWN_LEX  shift, and go to state 213
    MODULE       shift, and go to state 214
    '('          shift, and go to state 295

    $default  reduce using rule 220 (qualifiedName1)

    tableName                go to state 958
    qualifiedName            go to state 216
    qualifiedName1           go to state 217
    schemaName               go to state 218
    qualifiedLocalTableName  go to state 219
    leftParen                go to state 1218
    subquery                 go to state 816
    tableReference           go to state 1219
    derivedTable             go to state 853
    tableSubquery            go to state 854
    joinedTable              go to state 1220
    crossJoin                go to state 856
    qualifiedJoin            go to state 857


state 1132

  645 outerJoinType: RIGHT .

    $default  reduce using rule 645 (outerJoinType)


state 1133

  639 joinType: INNER .

    $default  reduce using rule 639 (joinType)


state 1134

  641 joinType: UNION .

    $default  reduce using rule 641 (joinType)


state 1135

  644 outerJoinType: LEFT .

    $default  reduce using rule 644 (outerJoinType)


state 1136

  646 outerJoinType: FULL .

    $default  reduce using rule 646 (outerJoinType)


state 1137

  632 qualifiedJoin: tableReference qualifiedJoin1 qualifiedJoin2 . JOIN tableReference qualifiedJoin3

    JOIN  shift, and go to state 1221


state 1138

  636 qualifiedJoin2: joinType .

    $default  reduce using rule 636 (qualifiedJoin2)


state 1139

  640 joinType: outerJoinType . joinType1
  642 joinType1: .  [JOIN]
  643          | . OUTER

    OUTER  shift, and go to state 1222

    $default  reduce using rule 642 (joinType1)

    joinType1  go to state 1223


state 1140

  582 nonjoinQueryTerm1: ALL .

    $default  reduce using rule 582 (nonjoinQueryTerm1)


state 1141

  580 nonjoinQueryTerm: queryTerm INTERSECT nonjoinQueryTerm1 . nonjoinQueryTerm2 queryPrimary
  583 nonjoinQueryTerm2: .  [VALUES, SELECT, TABLE, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, MODULE, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  584                  | . correspondingSpec
  670 correspondingSpec: . CORRESPONDING correspondingSpec1

    CORRESPONDING  shift, and go to state 1213

    $default  reduce using rule 583 (nonjoinQueryTerm2)

    nonjoinQueryTerm2  go to state 1224
    correspondingSpec  go to state 1225


state 1142

  268 rightParen: . ')'
  787 intervalValueExpression: leftParen datetimeValueExpression minusSign datetimeTerm . rightParen intervalQualifier

    ')'  shift, and go to state 449

    rightParen  go to state 1226


state 1143

  871 truthValue: UNKNOWN .

    $default  reduce using rule 871 (truthValue)


state 1144

  869 truthValue: TRUE .

    $default  reduce using rule 869 (truthValue)


state 1145

  870 truthValue: FALSE .

    $default  reduce using rule 870 (truthValue)


state 1146

  459 booleanTest2: IS booleanTest1 truthValue .

    $default  reduce using rule 459 (booleanTest2)


state 1147

  865 matchPredicate2: FULL .

    $default  reduce using rule 865 (matchPredicate2)


state 1148

  864 matchPredicate2: PARTIAL .

    $default  reduce using rule 864 (matchPredicate2)


state 1149

  231 leftParen: . '('
  565 subquery: . leftParen queryExpression rightParen
  627 tableSubquery: . subquery
  860 matchPredicate: rowValueConstructor MATCH matchPredicate1 matchPredicate2 . tableSubquery

    '('  shift, and go to state 295

    leftParen      go to state 815
    subquery       go to state 816
    tableSubquery  go to state 1227


state 1150

  853 quantifiedComparisonPredicate: rowValueConstructor compOp quantifier tableSubquery .

    $default  reduce using rule 853 (quantifiedComparisonPredicate)


state 1151

  831 betweenPredicate: rowValueConstructor betweenPredicate1 BETWEEN rowValueConstructor . AND rowValueConstructor

    AND  shift, and go to state 1228


state 1152

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  565         | leftParen . queryExpression rightParen
  566 queryExpression: . nonjoinQueryExpression
  567                | . joinedTable
  568 nonjoinQueryExpression: . nonjoinQueryTerm
  569                       | . queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  570                       | . queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  579 nonjoinQueryTerm: . nonjoinQueryPrimary
  580                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  585 nonjoinQueryPrimary: . simpleTable
  586                    | . leftParen nonjoinQueryExpression rightParen
  587 simpleTable: . querySpecification
  588            | . tableValueConstructor
  589            | . explicitTable
  590 querySpecification: . SELECT querySpecification1 selectList tableExpression
  615 tableReference: . tableName tableReference1
  616               | . derivedTable correlationSpecification
  617               | . joinedTable
  626 derivedTable: . tableSubquery
  627 tableSubquery: . subquery
  628 joinedTable: . crossJoin
  629            | . qualifiedJoin
  630            | . leftParen joinedTable rightParen
  631 crossJoin: . tableReference CROSS JOIN tableReference
  632 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  663 tableValueConstructor: . VALUES tableValueConstructorList
  667 explicitTable: . TABLE tableName
  668 queryTerm: . nonjoinQueryTerm
  669          | . joinedTable
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression
  838 inPredicateValue: leftParen . inValueList rightParen
  839 inValueList: . valueExpression inValueList1

    VALUES             shift, and go to state 837
    SELECT             shift, and go to state 838
    TABLE              shift, and go to state 839
    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 840
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 841
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 1229
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 845
    queryExpression                 go to state 846
    nonjoinQueryExpression          go to state 847
    nonjoinQueryTerm                go to state 848
    nonjoinQueryPrimary             go to state 849
    simpleTable                     go to state 850
    querySpecification              go to state 851
    tableReference                  go to state 852
    derivedTable                    go to state 853
    tableSubquery                   go to state 854
    joinedTable                     go to state 855
    crossJoin                       go to state 856
    qualifiedJoin                   go to state 857
    tableValueConstructor           go to state 858
    explicitTable                   go to state 859
    queryTerm                       go to state 860
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761
    inValueList                     go to state 1230


state 1153

  837 inPredicateValue: tableSubquery .

    $default  reduce using rule 837 (inPredicateValue)


state 1154

  834 inPredicate: rowValueConstructor inPredicate1 IN inPredicateValue .

    $default  reduce using rule 834 (inPredicate)


state 1155

  375 sign: . UNKNOWN_LEX
  488 term: term asterisk . factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign

    UNKNOWN_LEX  shift, and go to state 592

    UNKNOWN_LEX  [reduce using rule 491 (factor1)]
    $default     reduce using rule 491 (factor1)

    sign     go to state 1032
    factor   go to state 1035
    factor1  go to state 707


state 1156

  268 rightParen: . ')'
  811 octetLengthExpression: OCTET_LENGTH leftParen stringValueExpression . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1231


state 1157

  766 datetimeField: SECOND .

    $default  reduce using rule 766 (datetimeField)


state 1158

  767 timeZoneField: TIMEZONE_HOUR .

    $default  reduce using rule 767 (timeZoneField)


state 1159

  768 timeZoneField: TIMEZONE_MINUTE .

    $default  reduce using rule 768 (timeZoneField)


state 1160

  765 datetimeField: nonsecondDatetimeField .

    $default  reduce using rule 765 (datetimeField)


state 1161

  762 extractExpression: EXTRACT leftParen extractField . FROM extractSource rightParen

    FROM  shift, and go to state 1232


state 1162

  763 extractField: datetimeField .

    $default  reduce using rule 763 (extractField)


state 1163

  764 extractField: timeZoneField .

    $default  reduce using rule 764 (extractField)


state 1164

  268 rightParen: . ')'
  812 bitLengthExpression: BIT_LENGTH leftParen stringValueExpression . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1233


state 1165

  268 rightParen: . ')'
  808 charLengthExpression: CHARACTER_LENGTH leftParen stringValueExpression . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1234


state 1166

  711 positionExpression: POSITION leftParen characterValueExpression . IN characterValueExpression rightParen
  714 concatenation: characterValueExpression . concatenationOperator characterFactor
  715 concatenationOperator: . UNKNOWN_LEX

    IN           shift, and go to state 1235
    UNKNOWN_LEX  shift, and go to state 921

    concatenationOperator  go to state 922


state 1167

  268 rightParen: . ')'
  554 generalSetFunction: setFunctionType leftParen generalSetFunction1 valueExpression . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1236


state 1168

  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  783 timeZoneSpecifier: TIME ZONE . intervalValueExpression
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression

    UNKNOWN_LEX  shift, and go to state 592
    '('          shift, and go to state 295

    CASE              reduce using rule 491 (factor1)
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              reduce using rule 491 (factor1)
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              reduce using rule 491 (factor1)
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               reduce using rule 491 (factor1)
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            reduce using rule 491 (factor1)
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               reduce using rule 491 (factor1)
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      reduce using rule 491 (factor1)
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          reduce using rule 491 (factor1)
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        reduce using rule 491 (factor1)
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              reduce using rule 491 (factor1)
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             reduce using rule 491 (factor1)
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      reduce using rule 491 (factor1)
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              reduce using rule 491 (factor1)
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            reduce using rule 491 (factor1)
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               reduce using rule 491 (factor1)
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               reduce using rule 491 (factor1)
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               reduce using rule 491 (factor1)
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         reduce using rule 491 (factor1)
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             reduce using rule 491 (factor1)
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         reduce using rule 491 (factor1)
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            reduce using rule 491 (factor1)
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           reduce using rule 491 (factor1)
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       reduce using rule 491 (factor1)
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              reduce using rule 491 (factor1)
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       reduce using rule 491 (factor1)
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         reduce using rule 491 (factor1)
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           reduce using rule 491 (factor1)
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              reduce using rule 491 (factor1)
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               reduce using rule 491 (factor1)
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             reduce using rule 491 (factor1)
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           reduce using rule 491 (factor1)
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         reduce using rule 491 (factor1)
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             reduce using rule 491 (factor1)
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  reduce using rule 491 (factor1)
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           reduce using rule 491 (factor1)
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      reduce using rule 491 (factor1)
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         reduce using rule 491 (factor1)
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          reduce using rule 491 (factor1)
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          reduce using rule 491 (factor1)
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          reduce using rule 491 (factor1)
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          reduce using rule 491 (factor1)
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              reduce using rule 491 (factor1)
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            reduce using rule 491 (factor1)
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                reduce using rule 491 (factor1)
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    leftParen                 go to state 1237
    sign                      go to state 693
    term                      go to state 1054
    factor                    go to state 706
    factor1                   go to state 707
    intervalValueExpression   go to state 1238
    intervalTerm              go to state 756
    intervalFactor            go to state 757
    intervalFactor1           go to state 758
    intervalTerm2             go to state 759
    intervalValueExpression1  go to state 760


state 1169

  714 concatenation: characterValueExpression . concatenationOperator characterFactor
  715 concatenationOperator: . UNKNOWN_LEX
  848 pattern: characterValueExpression .  [ESCAPE, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, THEN, JOIN, LEFT, FULL, AND, ON, IS, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']

    UNKNOWN_LEX  shift, and go to state 921

    $default  reduce using rule 848 (pattern)

    concatenationOperator  go to state 922


state 1170

  842 likePredicate: matchValue likePredicate1 LIKE pattern . likePredicate2
  845 likePredicate2: .  [HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, THEN, JOIN, LEFT, FULL, AND, ON, IS, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']
  846               | . ESCAPE escapeCharacter

    ESCAPE  shift, and go to state 1239

    $default  reduce using rule 845 (likePredicate2)

    likePredicate2  go to state 1240


state 1171

  430 referencedTableAndColumns1: leftParen referenceColumnList rightParen .

    $default  reduce using rule 430 (referencedTableAndColumns1)


state 1172

  444 referentialAction: . CASCADE
  445                  | . SET NULL
  446                  | . SET DEFAULT
  447                  | . NO ACTION
  448 deleteRule: ON DELETE . referentialAction

    SET      shift, and go to state 1241
    NO       shift, and go to state 1242
    CASCADE  shift, and go to state 1243

    referentialAction  go to state 1244


state 1173

  443 updateRule: ON UPDATE . referentialAction
  444 referentialAction: . CASCADE
  445                  | . SET NULL
  446                  | . SET DEFAULT
  447                  | . NO ACTION

    SET      shift, and go to state 1241
    NO       shift, and go to state 1242
    CASCADE  shift, and go to state 1243

    referentialAction  go to state 1245


state 1174

  448 deleteRule: ON . DELETE referentialAction

    DELETE  shift, and go to state 1172


state 1175

  437 referentialTriggeredAction: updateRule referentialTriggeredAction1 .

    $default  reduce using rule 437 (referentialTriggeredAction)


state 1176

  440 referentialTriggeredAction1: deleteRule .

    $default  reduce using rule 440 (referentialTriggeredAction1)


state 1177

  443 updateRule: ON . UPDATE referentialAction

    UPDATE  shift, and go to state 1173


state 1178

  438 referentialTriggeredAction: deleteRule referentialTriggeredAction2 .

    $default  reduce using rule 438 (referentialTriggeredAction)


state 1179

  442 referentialTriggeredAction2: updateRule .

    $default  reduce using rule 442 (referentialTriggeredAction2)


state 1180

  701 searchedWhenClause: WHEN searchCondition THEN result .

    $default  reduce using rule 701 (searchedWhenClause)


state 1181

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  690 simpleWhenClause: WHEN whenOperand THEN . result
  692 result: . resultExpression
  693       | . NULL
  694 resultExpression: . valueExpression
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    NULL               shift, and go to state 1094
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 819
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 1095
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    result                          go to state 1246
    resultExpression                go to state 1097
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761


state 1182

  684 simpleCase: CASE caseOperand simpleCase1 simpleCase2 END .

    $default  reduce using rule 684 (simpleCase)


state 1183

  707 typeName: UNKNOWN_BODY .

    $default  reduce using rule 707 (typeName)


state 1184

  705 castTarget: domainName .

    $default  reduce using rule 705 (castTarget)


state 1185

  268 rightParen: . ')'
  702 castSpecification: CAST leftParen castOperand AS castTarget . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1247


state 1186

  706 castTarget: typeName .

    $default  reduce using rule 706 (castTarget)


state 1187

  268 rightParen: . ')'
  678 caseAbbreviation: NULLIF leftParen valueExpression comma valueExpression . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1248


state 1188

  485 numericValueExpression: numericValueExpression . plusSign term
  486                       | numericValueExpression . minusSign term
  731 startPosition: numericValueExpression .  [FOR, ')']
  801 plusSign: . UNKNOWN_LEX
  803 minusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 877

    $default  reduce using rule 731 (startPosition)

    plusSign   go to state 878
    minusSign  go to state 879


state 1189

  484 numericValueExpression: term .  [FOR, UNKNOWN_LEX, ')']
  488 term: term . asterisk factor
  489     | term . solidus factor
  553 asterisk: . UNKNOWN_LEX
  799 solidus: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 880

    UNKNOWN_LEX  [reduce using rule 484 (numericValueExpression)]
    $default     reduce using rule 484 (numericValueExpression)

    asterisk  go to state 1155
    solidus   go to state 882


state 1190

  728 characterSubstringFunction: SUBSTRING leftParen characterValueExpression FROM startPosition . characterSubstringFunction1 rightParen
  729 characterSubstringFunction1: .  [')']
  730                            | . FOR stringLength

    FOR  shift, and go to state 1249

    $default  reduce using rule 729 (characterSubstringFunction1)

    characterSubstringFunction1  go to state 1250


state 1191

  753 bitSubstringFunction: SUBSTRING leftParen bitValueExpression FROM startPosition . bitSubstringFunction1 rightParen
  754 bitSubstringFunction1: .  [')']
  755                      | . FOR stringLength

    FOR  shift, and go to state 1251

    $default  reduce using rule 754 (bitSubstringFunction1)

    bitSubstringFunction1  go to state 1252


state 1192

  736 formofuseConversionName: qualifiedName .

    $default  reduce using rule 736 (formofuseConversionName)


state 1193

  268 rightParen: . ')'
  735 formofuseConversion: CONVERT leftParen characterValueExpression USING formofuseConversionName . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1253


state 1194

  738 translationName: qualifiedName .

    $default  reduce using rule 738 (translationName)


state 1195

  268 rightParen: . ')'
  737 characterTranslation: TRANSLATE leftParen characterValueExpression USING translationName . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1254


state 1196

  680 caseAbbreviation1: comma valueExpression .

    $default  reduce using rule 680 (caseAbbreviation1)


state 1197

  679 caseAbbreviation: COALESCE leftParen valueExpression caseAbbreviation1 rightParen .

    $default  reduce using rule 679 (caseAbbreviation)


state 1198

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  681 caseAbbreviation1: caseAbbreviation1 comma . valueExpression
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 819
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 1255
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761


state 1199

  742 trimOperands3: trimOperands1 trimOperands2 FROM .

    $default  reduce using rule 742 (trimOperands3)


state 1200

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  474 rowValueConstructor: . rowValueConstructorElement
  475                    | . leftParen rowValueConstructorList rightParen
  476                    | . rowSubquery
  477 rowValueConstructorElement: . valueExpression
  478                           | . nullSpecification
  479                           | . defaultSpecification
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  666 tableValueConstructorList1: tableValueConstructorList1 comma . rowValueConstructor
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression
  813 nullSpecification: . NULL
  814 defaultSpecification: . DEFAULT
  818 rowSubquery: . subquery

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    NULL               shift, and go to state 668
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    DEFAULT            shift, and go to state 687
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 992
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    rowValueConstructor             go to state 1256
    rowValueConstructorElement      go to state 702
    valueExpression                 go to state 703
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 727
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761
    nullSpecification               go to state 762
    defaultSpecification            go to state 763
    rowSubquery                     go to state 764


state 1201

  604 asClause1: AS .

    $default  reduce using rule 604 (asClause1)


state 1202

  599 derivedColumn: valueExpression derivedColumn1 .

    $default  reduce using rule 599 (derivedColumn)


state 1203

  601 derivedColumn1: asClause .

    $default  reduce using rule 601 (derivedColumn1)


state 1204

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  225 identifier: . id
  242 columnName: . identifier
  602 asClause: asClause1 . columnName

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id          go to state 298
    identifier  go to state 355
    columnName  go to state 1257


state 1205

  547 columnReference1: qualifier period .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  553 asterisk: . UNKNOWN_LEX
  598 selectSublist: qualifier period . asterisk

    UNKNOWN_LEX  shift, and go to state 973

    $default  reduce using rule 547 (columnReference1)

    asterisk  go to state 1258


state 1206

  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  565 subquery: . leftParen queryExpression rightParen
  612 fromClause: FROM . tableReference fromClause1
  615 tableReference: . tableName tableReference1
  616               | . derivedTable correlationSpecification
  617               | . joinedTable
  626 derivedTable: . tableSubquery
  627 tableSubquery: . subquery
  628 joinedTable: . crossJoin
  629            | . qualifiedJoin
  630            | . leftParen joinedTable rightParen
  631 crossJoin: . tableReference CROSS JOIN tableReference
  632 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3

    UNKNOWN_LEX  shift, and go to state 213
    MODULE       shift, and go to state 214
    '('          shift, and go to state 295

    $default  reduce using rule 220 (qualifiedName1)

    tableName                go to state 958
    qualifiedName            go to state 216
    qualifiedName1           go to state 217
    schemaName               go to state 218
    qualifiedLocalTableName  go to state 219
    leftParen                go to state 1218
    subquery                 go to state 816
    tableReference           go to state 1259
    derivedTable             go to state 853
    tableSubquery            go to state 854
    joinedTable              go to state 1220
    crossJoin                go to state 856
    qualifiedJoin            go to state 857


state 1207

  590 querySpecification: SELECT querySpecification1 selectList tableExpression .

    $default  reduce using rule 590 (querySpecification)


state 1208

  605 tableExpression: fromClause . tableExpression1 tableExpression2 tableExpression3
  606 tableExpression1: .  [HAVING, GROUP, UNION, INTERSECT, EXCEPT, ')']
  607                 | . whereClause
  652 whereClause: . WHERE searchCondition

    WHERE  shift, and go to state 1260

    $default  reduce using rule 606 (tableExpression1)

    tableExpression1  go to state 1261
    whereClause       go to state 1262


state 1209

  315 comma: . ','
  594 selectList: selectSublist selectList1 .  [FROM]
  596 selectList1: selectList1 . comma selectSublist

    ','  shift, and go to state 448

    $default  reduce using rule 594 (selectList)

    comma  go to state 1263


state 1210

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  225 identifier: . id
  242 columnName: . identifier
  432 columnNameList: . columnName columnNameList1
  624 correlationSpecification2: leftParen . derivedColumnList rightParen
  625 derivedColumnList: . columnNameList

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id                 go to state 298
    identifier         go to state 355
    columnName         go to state 609
    columnNameList     go to state 1264
    derivedColumnList  go to state 1265


state 1211

  620 correlationSpecification: correlationSpecification1 correlationName correlationSpecification2 .

    $default  reduce using rule 620 (correlationSpecification)


state 1212

  817 rowValueConstructorList1: rowValueConstructorList1 comma rowValueConstructorElement .

    $default  reduce using rule 817 (rowValueConstructorList1)


state 1213

  670 correspondingSpec: CORRESPONDING . correspondingSpec1
  671 correspondingSpec1: .  [VALUES, SELECT, TABLE, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, MODULE, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  672                   | . BY leftParen correspondingColumnList rightParen

    BY  shift, and go to state 1266

    $default  reduce using rule 671 (correspondingSpec1)

    correspondingSpec1  go to state 1267


state 1214

  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  565 subquery: . leftParen queryExpression rightParen
  569 nonjoinQueryExpression: queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 . queryTerm
  579 nonjoinQueryTerm: . nonjoinQueryPrimary
  580                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  585 nonjoinQueryPrimary: . simpleTable
  586                    | . leftParen nonjoinQueryExpression rightParen
  587 simpleTable: . querySpecification
  588            | . tableValueConstructor
  589            | . explicitTable
  590 querySpecification: . SELECT querySpecification1 selectList tableExpression
  615 tableReference: . tableName tableReference1
  616               | . derivedTable correlationSpecification
  617               | . joinedTable
  626 derivedTable: . tableSubquery
  627 tableSubquery: . subquery
  628 joinedTable: . crossJoin
  629            | . qualifiedJoin
  630            | . leftParen joinedTable rightParen
  631 crossJoin: . tableReference CROSS JOIN tableReference
  632 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  663 tableValueConstructor: . VALUES tableValueConstructorList
  667 explicitTable: . TABLE tableName
  668 queryTerm: . nonjoinQueryTerm
  669          | . joinedTable

    VALUES       shift, and go to state 837
    SELECT       shift, and go to state 838
    TABLE        shift, and go to state 839
    UNKNOWN_LEX  shift, and go to state 213
    MODULE       shift, and go to state 214
    '('          shift, and go to state 295

    $default  reduce using rule 220 (qualifiedName1)

    tableName                go to state 958
    qualifiedName            go to state 216
    qualifiedName1           go to state 217
    schemaName               go to state 218
    qualifiedLocalTableName  go to state 219
    leftParen                go to state 959
    subquery                 go to state 816
    nonjoinQueryTerm         go to state 1268
    nonjoinQueryPrimary      go to state 849
    simpleTable              go to state 850
    querySpecification       go to state 851
    tableReference           go to state 852
    derivedTable             go to state 853
    tableSubquery            go to state 854
    joinedTable              go to state 1269
    crossJoin                go to state 856
    qualifiedJoin            go to state 857
    tableValueConstructor    go to state 858
    explicitTable            go to state 859
    queryTerm                go to state 1270


state 1215

  574 nonjoinQueryExpression2: correspondingSpec .

    $default  reduce using rule 574 (nonjoinQueryExpression2)


state 1216

  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  565 subquery: . leftParen queryExpression rightParen
  570 nonjoinQueryExpression: queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 . queryTerm
  579 nonjoinQueryTerm: . nonjoinQueryPrimary
  580                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  585 nonjoinQueryPrimary: . simpleTable
  586                    | . leftParen nonjoinQueryExpression rightParen
  587 simpleTable: . querySpecification
  588            | . tableValueConstructor
  589            | . explicitTable
  590 querySpecification: . SELECT querySpecification1 selectList tableExpression
  615 tableReference: . tableName tableReference1
  616               | . derivedTable correlationSpecification
  617               | . joinedTable
  626 derivedTable: . tableSubquery
  627 tableSubquery: . subquery
  628 joinedTable: . crossJoin
  629            | . qualifiedJoin
  630            | . leftParen joinedTable rightParen
  631 crossJoin: . tableReference CROSS JOIN tableReference
  632 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  663 tableValueConstructor: . VALUES tableValueConstructorList
  667 explicitTable: . TABLE tableName
  668 queryTerm: . nonjoinQueryTerm
  669          | . joinedTable

    VALUES       shift, and go to state 837
    SELECT       shift, and go to state 838
    TABLE        shift, and go to state 839
    UNKNOWN_LEX  shift, and go to state 213
    MODULE       shift, and go to state 214
    '('          shift, and go to state 295

    $default  reduce using rule 220 (qualifiedName1)

    tableName                go to state 958
    qualifiedName            go to state 216
    qualifiedName1           go to state 217
    schemaName               go to state 218
    qualifiedLocalTableName  go to state 219
    leftParen                go to state 959
    subquery                 go to state 816
    nonjoinQueryTerm         go to state 1268
    nonjoinQueryPrimary      go to state 849
    simpleTable              go to state 850
    querySpecification       go to state 851
    tableReference           go to state 852
    derivedTable             go to state 853
    tableSubquery            go to state 854
    joinedTable              go to state 1269
    crossJoin                go to state 856
    qualifiedJoin            go to state 857
    tableValueConstructor    go to state 858
    explicitTable            go to state 859
    queryTerm                go to state 1271


state 1217

  578 nonjoinQueryExpression4: correspondingSpec .

    $default  reduce using rule 578 (nonjoinQueryExpression4)


state 1218

  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  565 subquery: . leftParen queryExpression rightParen
  565         | leftParen . queryExpression rightParen
  566 queryExpression: . nonjoinQueryExpression
  567                | . joinedTable
  568 nonjoinQueryExpression: . nonjoinQueryTerm
  569                       | . queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm
  570                       | . queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm
  579 nonjoinQueryTerm: . nonjoinQueryPrimary
  580                 | . queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary
  585 nonjoinQueryPrimary: . simpleTable
  586                    | . leftParen nonjoinQueryExpression rightParen
  587 simpleTable: . querySpecification
  588            | . tableValueConstructor
  589            | . explicitTable
  590 querySpecification: . SELECT querySpecification1 selectList tableExpression
  615 tableReference: . tableName tableReference1
  616               | . derivedTable correlationSpecification
  617               | . joinedTable
  626 derivedTable: . tableSubquery
  627 tableSubquery: . subquery
  628 joinedTable: . crossJoin
  629            | . qualifiedJoin
  630            | . leftParen joinedTable rightParen
  630            | leftParen . joinedTable rightParen
  631 crossJoin: . tableReference CROSS JOIN tableReference
  632 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  663 tableValueConstructor: . VALUES tableValueConstructorList
  667 explicitTable: . TABLE tableName
  668 queryTerm: . nonjoinQueryTerm
  669          | . joinedTable

    VALUES       shift, and go to state 837
    SELECT       shift, and go to state 838
    TABLE        shift, and go to state 839
    UNKNOWN_LEX  shift, and go to state 213
    MODULE       shift, and go to state 214
    '('          shift, and go to state 295

    $default  reduce using rule 220 (qualifiedName1)

    tableName                go to state 958
    qualifiedName            go to state 216
    qualifiedName1           go to state 217
    schemaName               go to state 218
    qualifiedLocalTableName  go to state 219
    leftParen                go to state 959
    subquery                 go to state 816
    queryExpression          go to state 846
    nonjoinQueryExpression   go to state 847
    nonjoinQueryTerm         go to state 848
    nonjoinQueryPrimary      go to state 849
    simpleTable              go to state 850
    querySpecification       go to state 851
    tableReference           go to state 852
    derivedTable             go to state 853
    tableSubquery            go to state 854
    joinedTable              go to state 1005
    crossJoin                go to state 856
    qualifiedJoin            go to state 857
    tableValueConstructor    go to state 858
    explicitTable            go to state 859
    queryTerm                go to state 860


state 1219

  631 crossJoin: tableReference . CROSS JOIN tableReference
  631          | tableReference CROSS JOIN tableReference .  [HAVING, WHERE, GROUP, RIGHT, INNER, UNION, JOIN, LEFT, FULL, ON, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']
  632 qualifiedJoin: tableReference . qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  633 qualifiedJoin1: .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL]
  634               | . NATURAL

    CROSS    shift, and go to state 1012
    NATURAL  shift, and go to state 1013

    RIGHT     reduce using rule 631 (crossJoin)
    RIGHT     [reduce using rule 633 (qualifiedJoin1)]
    INNER     reduce using rule 631 (crossJoin)
    INNER     [reduce using rule 633 (qualifiedJoin1)]
    UNION     reduce using rule 631 (crossJoin)
    UNION     [reduce using rule 633 (qualifiedJoin1)]
    JOIN      reduce using rule 631 (crossJoin)
    JOIN      [reduce using rule 633 (qualifiedJoin1)]
    LEFT      reduce using rule 631 (crossJoin)
    LEFT      [reduce using rule 633 (qualifiedJoin1)]
    FULL      reduce using rule 631 (crossJoin)
    FULL      [reduce using rule 633 (qualifiedJoin1)]
    CROSS     [reduce using rule 631 (crossJoin)]
    NATURAL   [reduce using rule 631 (crossJoin)]
    $default  reduce using rule 631 (crossJoin)

    qualifiedJoin1  go to state 1014


state 1220

  617 tableReference: joinedTable .

    $default  reduce using rule 617 (tableReference)


state 1221

  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  565 subquery: . leftParen queryExpression rightParen
  615 tableReference: . tableName tableReference1
  616               | . derivedTable correlationSpecification
  617               | . joinedTable
  626 derivedTable: . tableSubquery
  627 tableSubquery: . subquery
  628 joinedTable: . crossJoin
  629            | . qualifiedJoin
  630            | . leftParen joinedTable rightParen
  631 crossJoin: . tableReference CROSS JOIN tableReference
  632 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  632              | tableReference qualifiedJoin1 qualifiedJoin2 JOIN . tableReference qualifiedJoin3

    UNKNOWN_LEX  shift, and go to state 213
    MODULE       shift, and go to state 214
    '('          shift, and go to state 295

    $default  reduce using rule 220 (qualifiedName1)

    tableName                go to state 958
    qualifiedName            go to state 216
    qualifiedName1           go to state 217
    schemaName               go to state 218
    qualifiedLocalTableName  go to state 219
    leftParen                go to state 1218
    subquery                 go to state 816
    tableReference           go to state 1272
    derivedTable             go to state 853
    tableSubquery            go to state 854
    joinedTable              go to state 1220
    crossJoin                go to state 856
    qualifiedJoin            go to state 857


state 1222

  643 joinType1: OUTER .

    $default  reduce using rule 643 (joinType1)


state 1223

  640 joinType: outerJoinType joinType1 .

    $default  reduce using rule 640 (joinType)


state 1224

  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  565 subquery: . leftParen queryExpression rightParen
  580 nonjoinQueryTerm: queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 . queryPrimary
  585 nonjoinQueryPrimary: . simpleTable
  586                    | . leftParen nonjoinQueryExpression rightParen
  587 simpleTable: . querySpecification
  588            | . tableValueConstructor
  589            | . explicitTable
  590 querySpecification: . SELECT querySpecification1 selectList tableExpression
  615 tableReference: . tableName tableReference1
  616               | . derivedTable correlationSpecification
  617               | . joinedTable
  626 derivedTable: . tableSubquery
  627 tableSubquery: . subquery
  628 joinedTable: . crossJoin
  629            | . qualifiedJoin
  630            | . leftParen joinedTable rightParen
  631 crossJoin: . tableReference CROSS JOIN tableReference
  632 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  663 tableValueConstructor: . VALUES tableValueConstructorList
  667 explicitTable: . TABLE tableName
  674 queryPrimary: . nonjoinQueryPrimary
  675             | . joinedTable

    VALUES       shift, and go to state 837
    SELECT       shift, and go to state 838
    TABLE        shift, and go to state 839
    UNKNOWN_LEX  shift, and go to state 213
    MODULE       shift, and go to state 214
    '('          shift, and go to state 295

    $default  reduce using rule 220 (qualifiedName1)

    tableName                go to state 958
    qualifiedName            go to state 216
    qualifiedName1           go to state 217
    schemaName               go to state 218
    qualifiedLocalTableName  go to state 219
    leftParen                go to state 959
    subquery                 go to state 816
    nonjoinQueryPrimary      go to state 1273
    simpleTable              go to state 850
    querySpecification       go to state 851
    tableReference           go to state 852
    derivedTable             go to state 853
    tableSubquery            go to state 854
    joinedTable              go to state 1274
    crossJoin                go to state 856
    qualifiedJoin            go to state 857
    tableValueConstructor    go to state 858
    explicitTable            go to state 859
    queryPrimary             go to state 1275


state 1225

  584 nonjoinQueryTerm2: correspondingSpec .

    $default  reduce using rule 584 (nonjoinQueryTerm2)


state 1226

  337 intervalQualifier: . startField TO endField
  338                  | . singleDatetimeField
  339 startField: . nonsecondDatetimeField startField1
  342 nonsecondDatetimeField: . YEAR
  343                       | . MONTH
  344                       | . DAY
  345                       | . HOUR
  346                       | . MINUTE
  353 singleDatetimeField: . nonsecondDatetimeField singleDatetimeField1
  354                    | . SECOND singleDatetimeField3
  787 intervalValueExpression: leftParen datetimeValueExpression minusSign datetimeTerm rightParen . intervalQualifier

    SECOND  shift, and go to state 479
    MINUTE  shift, and go to state 480
    MONTH   shift, and go to state 481
    DAY     shift, and go to state 482
    HOUR    shift, and go to state 483
    YEAR    shift, and go to state 484

    intervalQualifier       go to state 1276
    startField              go to state 486
    nonsecondDatetimeField  go to state 487
    singleDatetimeField     go to state 488


state 1227

  860 matchPredicate: rowValueConstructor MATCH matchPredicate1 matchPredicate2 tableSubquery .

    $default  reduce using rule 860 (matchPredicate)


state 1228

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  474 rowValueConstructor: . rowValueConstructorElement
  475                    | . leftParen rowValueConstructorList rightParen
  476                    | . rowSubquery
  477 rowValueConstructorElement: . valueExpression
  478                           | . nullSpecification
  479                           | . defaultSpecification
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression
  813 nullSpecification: . NULL
  814 defaultSpecification: . DEFAULT
  818 rowSubquery: . subquery
  831 betweenPredicate: rowValueConstructor betweenPredicate1 BETWEEN rowValueConstructor AND . rowValueConstructor

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    NULL               shift, and go to state 668
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    DEFAULT            shift, and go to state 687
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 992
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    rowValueConstructor             go to state 1277
    rowValueConstructorElement      go to state 702
    valueExpression                 go to state 703
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 727
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761
    nullSpecification               go to state 762
    defaultSpecification            go to state 763
    rowSubquery                     go to state 764


state 1229

  315 comma: . ','
  839 inValueList: valueExpression . inValueList1
  840 inValueList1: . comma valueExpression
  841             | . inValueList1 comma valueExpression

    ','  shift, and go to state 448

    comma         go to state 1278
    inValueList1  go to state 1279


state 1230

  268 rightParen: . ')'
  838 inPredicateValue: leftParen inValueList . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1280


state 1231

  811 octetLengthExpression: OCTET_LENGTH leftParen stringValueExpression rightParen .

    $default  reduce using rule 811 (octetLengthExpression)


state 1232

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  762 extractExpression: EXTRACT leftParen extractField FROM . extractSource rightParen
  769 extractSource: . datetimeValueExpression
  770              | . intervalValueExpression
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 45
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 48
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 51
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 55
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 56
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 60
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 819
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    term                            go to state 1054
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 1060
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    extractSource                   go to state 1281
    datetimeValueExpression         go to state 1282
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 1283
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760


state 1233

  812 bitLengthExpression: BIT_LENGTH leftParen stringValueExpression rightParen .

    $default  reduce using rule 812 (bitLengthExpression)


state 1234

  808 charLengthExpression: CHARACTER_LENGTH leftParen stringValueExpression rightParen .

    $default  reduce using rule 808 (charLengthExpression)


state 1235

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  711 positionExpression: POSITION leftParen characterValueExpression IN . characterValueExpression rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen

    CASE              shift, and go to state 666
    CAST              shift, and go to state 667
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 883
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 671
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 672
    SESSION_USER      shift, and go to state 673
    DATE              shift, and go to state 496
    NULLIF            shift, and go to state 674
    SUM               shift, and go to state 675
    KEY               shift, and go to state 42
    AVG               shift, and go to state 676
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 677
    TIMESTAMP         shift, and go to state 498
    MODULE            shift, and go to state 214
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 499
    SYSTEM_USER       shift, and go to state 678
    SUBSTRING         shift, and go to state 679
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 680
    MAX               shift, and go to state 681
    LOWER             shift, and go to state 682
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 683
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 684
    CURRENT_USER      shift, and go to state 685
    TRANSLATE         shift, and go to state 686
    INTERVAL          shift, and go to state 505
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 688
    TRIM              shift, and go to state 689
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 295

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 890
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    valueExpressionPrimary          go to state 979
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 1284
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 981
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746


state 1236

  554 generalSetFunction: setFunctionType leftParen generalSetFunction1 valueExpression rightParen .

    $default  reduce using rule 554 (generalSetFunction)


state 1237

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  787                        | leftParen . datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 45
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 48
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 51
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 55
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 56
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 60
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 819
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    term                            go to state 1054
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 1060
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    datetimeValueExpression         go to state 1285
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 1286
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760


state 1238

  783 timeZoneSpecifier: TIME ZONE intervalValueExpression .  [BETWEEN, HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, FROM, WHEN, THEN, ELSE, DESC, JOIN, LEFT, FULL, AND, END, ASC, NOT, ON, AS, IN, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, CROSS, DEFERRED, DEFERRABLE, ZONE, INTERSECT, COUNT, NATURAL, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXCEPT, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, USING, CASCADE, TEMPORARY, OVERLAPS, CHARACTER_LENGTH, MATCH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, ',', ')']
  800 intervalValueExpression1: intervalValueExpression .  [UNKNOWN_LEX]

    UNKNOWN_LEX  reduce using rule 783 (timeZoneSpecifier)
    UNKNOWN_LEX  [reduce using rule 800 (intervalValueExpression1)]
    $default     reduce using rule 783 (timeZoneSpecifier)


state 1239

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  846 likePredicate2: ESCAPE . escapeCharacter
  849 escapeCharacter: . characterValueExpression

    CASE              shift, and go to state 666
    CAST              shift, and go to state 667
    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 883
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 671
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 672
    SESSION_USER      shift, and go to state 673
    DATE              shift, and go to state 496
    NULLIF            shift, and go to state 674
    SUM               shift, and go to state 675
    KEY               shift, and go to state 42
    AVG               shift, and go to state 676
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 677
    TIMESTAMP         shift, and go to state 498
    MODULE            shift, and go to state 214
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    TIME              shift, and go to state 499
    SYSTEM_USER       shift, and go to state 678
    SUBSTRING         shift, and go to state 679
    PARTIAL           shift, and go to state 49
    USER              shift, and go to state 680
    MAX               shift, and go to state 681
    LOWER             shift, and go to state 682
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    VALUE             shift, and go to state 683
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 684
    CURRENT_USER      shift, and go to state 685
    TRANSLATE         shift, and go to state 686
    INTERVAL          shift, and go to state 505
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 688
    TRIM              shift, and go to state 689
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62
    '('               shift, and go to state 295

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 890
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    valueExpressionPrimary          go to state 979
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 1287
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 981
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    escapeCharacter                 go to state 1288


state 1240

  842 likePredicate: matchValue likePredicate1 LIKE pattern likePredicate2 .

    $default  reduce using rule 842 (likePredicate)


state 1241

  445 referentialAction: SET . NULL
  446                  | SET . DEFAULT

    NULL     shift, and go to state 1289
    DEFAULT  shift, and go to state 1290


state 1242

  447 referentialAction: NO . ACTION

    ACTION  shift, and go to state 1291


state 1243

  444 referentialAction: CASCADE .

    $default  reduce using rule 444 (referentialAction)


state 1244

  448 deleteRule: ON DELETE referentialAction .

    $default  reduce using rule 448 (deleteRule)


state 1245

  443 updateRule: ON UPDATE referentialAction .

    $default  reduce using rule 443 (updateRule)


state 1246

  690 simpleWhenClause: WHEN whenOperand THEN result .

    $default  reduce using rule 690 (simpleWhenClause)


state 1247

  702 castSpecification: CAST leftParen castOperand AS castTarget rightParen .

    $default  reduce using rule 702 (castSpecification)


state 1248

  678 caseAbbreviation: NULLIF leftParen valueExpression comma valueExpression rightParen .

    $default  reduce using rule 678 (caseAbbreviation)


state 1249

  375 sign: . UNKNOWN_LEX
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  730 characterSubstringFunction1: FOR . stringLength
  732 stringLength: . numericValueExpression

    UNKNOWN_LEX  shift, and go to state 592

    UNKNOWN_LEX  [reduce using rule 491 (factor1)]
    $default     reduce using rule 491 (factor1)

    sign                    go to state 1032
    numericValueExpression  go to state 1292
    term                    go to state 1189
    factor                  go to state 706
    factor1                 go to state 707
    stringLength            go to state 1293


state 1250

  268 rightParen: . ')'
  728 characterSubstringFunction: SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1294


state 1251

  375 sign: . UNKNOWN_LEX
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  732 stringLength: . numericValueExpression
  755 bitSubstringFunction1: FOR . stringLength

    UNKNOWN_LEX  shift, and go to state 592

    UNKNOWN_LEX  [reduce using rule 491 (factor1)]
    $default     reduce using rule 491 (factor1)

    sign                    go to state 1032
    numericValueExpression  go to state 1292
    term                    go to state 1189
    factor                  go to state 706
    factor1                 go to state 707
    stringLength            go to state 1295


state 1252

  268 rightParen: . ')'
  753 bitSubstringFunction: SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1296


state 1253

  735 formofuseConversion: CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen .

    $default  reduce using rule 735 (formofuseConversion)


state 1254

  737 characterTranslation: TRANSLATE leftParen characterValueExpression USING translationName rightParen .

    $default  reduce using rule 737 (characterTranslation)


state 1255

  681 caseAbbreviation1: caseAbbreviation1 comma valueExpression .

    $default  reduce using rule 681 (caseAbbreviation1)


state 1256

  666 tableValueConstructorList1: tableValueConstructorList1 comma rowValueConstructor .

    $default  reduce using rule 666 (tableValueConstructorList1)


state 1257

  602 asClause: asClause1 columnName .

    $default  reduce using rule 602 (asClause)


state 1258

  598 selectSublist: qualifier period asterisk .

    $default  reduce using rule 598 (selectSublist)


state 1259

  612 fromClause: FROM tableReference . fromClause1
  613 fromClause1: .  [HAVING, WHERE, GROUP, UNION, INTERSECT, EXCEPT, ',', ')']
  614            | . fromClause1 comma tableReference
  631 crossJoin: tableReference . CROSS JOIN tableReference
  632 qualifiedJoin: tableReference . qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  633 qualifiedJoin1: .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL]
  634               | . NATURAL

    CROSS    shift, and go to state 1012
    NATURAL  shift, and go to state 1013

    RIGHT     reduce using rule 633 (qualifiedJoin1)
    INNER     reduce using rule 633 (qualifiedJoin1)
    UNION     reduce using rule 613 (fromClause1)
    UNION     [reduce using rule 633 (qualifiedJoin1)]
    JOIN      reduce using rule 633 (qualifiedJoin1)
    LEFT      reduce using rule 633 (qualifiedJoin1)
    FULL      reduce using rule 633 (qualifiedJoin1)
    $default  reduce using rule 613 (fromClause1)

    fromClause1     go to state 1297
    qualifiedJoin1  go to state 1014


state 1260

  450 searchCondition: . booleanTerm
  451                | . searchCondition OR booleanTerm
  452 booleanTerm: . booleanFactor
  453            | . booleanTerm AND booleanFactor
  454 booleanFactor: . booleanFactor1 booleanTest
  455 booleanFactor1: .  [EXISTS, CASE, CAST, DESC, NULL, ASC, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  456               | . NOT
  652 whereClause: WHERE . searchCondition

    NOT  shift, and go to state 603

    $default  reduce using rule 455 (booleanFactor1)

    searchCondition  go to state 1298
    booleanTerm      go to state 605
    booleanFactor    go to state 606
    booleanFactor1   go to state 607


state 1261

  605 tableExpression: fromClause tableExpression1 . tableExpression2 tableExpression3
  608 tableExpression2: .  [HAVING, UNION, INTERSECT, EXCEPT, ')']
  609                 | . groupByClause
  653 groupByClause: . GROUP BY groupingColumnReferenceList

    GROUP  shift, and go to state 1299

    $default  reduce using rule 608 (tableExpression2)

    tableExpression2  go to state 1300
    groupByClause     go to state 1301


state 1262

  607 tableExpression1: whereClause .

    $default  reduce using rule 607 (tableExpression1)


state 1263

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  596 selectList1: selectList1 comma . selectSublist
  597 selectSublist: . derivedColumn
  598              | . qualifier period asterisk
  599 derivedColumn: . valueExpression derivedColumn1
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 819
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 1117
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 1118
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    selectSublist                   go to state 1302
    derivedColumn                   go to state 1122
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761


state 1264

  625 derivedColumnList: columnNameList .

    $default  reduce using rule 625 (derivedColumnList)


state 1265

  268 rightParen: . ')'
  624 correlationSpecification2: leftParen derivedColumnList . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1303


state 1266

  231 leftParen: . '('
  672 correspondingSpec1: BY . leftParen correspondingColumnList rightParen

    '('  shift, and go to state 295

    leftParen  go to state 1304


state 1267

  670 correspondingSpec: CORRESPONDING correspondingSpec1 .

    $default  reduce using rule 670 (correspondingSpec)


state 1268

  668 queryTerm: nonjoinQueryTerm .

    $default  reduce using rule 668 (queryTerm)


state 1269

  617 tableReference: joinedTable .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL, CROSS, NATURAL]
  669 queryTerm: joinedTable .  [UNION, INTERSECT, EXCEPT, ')']

    UNION      reduce using rule 617 (tableReference)
    UNION      [reduce using rule 669 (queryTerm)]
    INTERSECT  reduce using rule 669 (queryTerm)
    EXCEPT     reduce using rule 669 (queryTerm)
    ')'        reduce using rule 669 (queryTerm)
    $default   reduce using rule 617 (tableReference)


state 1270

  569 nonjoinQueryExpression: queryExpression UNION nonjoinQueryExpression1 nonjoinQueryExpression2 queryTerm .  [UNION, EXCEPT, ')']
  580 nonjoinQueryTerm: queryTerm . INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary

    INTERSECT  shift, and go to state 1016

    $default  reduce using rule 569 (nonjoinQueryExpression)


state 1271

  570 nonjoinQueryExpression: queryExpression EXCEPT nonjoinQueryExpression3 nonjoinQueryExpression4 queryTerm .  [UNION, EXCEPT, ')']
  580 nonjoinQueryTerm: queryTerm . INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary

    INTERSECT  shift, and go to state 1016

    $default  reduce using rule 570 (nonjoinQueryExpression)


state 1272

  631 crossJoin: tableReference . CROSS JOIN tableReference
  632 qualifiedJoin: tableReference . qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  632              | tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference . qualifiedJoin3
  633 qualifiedJoin1: .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL]
  634               | . NATURAL
  637 qualifiedJoin3: .  [HAVING, WHERE, GROUP, RIGHT, INNER, UNION, JOIN, LEFT, FULL, ON, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']
  638               | . joinSpecification
  647 joinSpecification: . joinCondition
  648                  | . namedColumnsJoin
  649 joinCondition: . ON searchCondition
  650 namedColumnsJoin: . USING leftParen joinColumnList rightParen

    ON       shift, and go to state 1305
    CROSS    shift, and go to state 1012
    NATURAL  shift, and go to state 1013
    USING    shift, and go to state 1306

    RIGHT     reduce using rule 633 (qualifiedJoin1)
    RIGHT     [reduce using rule 637 (qualifiedJoin3)]
    INNER     reduce using rule 633 (qualifiedJoin1)
    INNER     [reduce using rule 637 (qualifiedJoin3)]
    UNION     reduce using rule 633 (qualifiedJoin1)
    UNION     [reduce using rule 637 (qualifiedJoin3)]
    JOIN      reduce using rule 633 (qualifiedJoin1)
    JOIN      [reduce using rule 637 (qualifiedJoin3)]
    LEFT      reduce using rule 633 (qualifiedJoin1)
    LEFT      [reduce using rule 637 (qualifiedJoin3)]
    FULL      reduce using rule 633 (qualifiedJoin1)
    FULL      [reduce using rule 637 (qualifiedJoin3)]
    ON        [reduce using rule 637 (qualifiedJoin3)]
    CROSS     [reduce using rule 637 (qualifiedJoin3)]
    NATURAL   [reduce using rule 637 (qualifiedJoin3)]
    USING     [reduce using rule 637 (qualifiedJoin3)]
    $default  reduce using rule 637 (qualifiedJoin3)

    qualifiedJoin1     go to state 1014
    qualifiedJoin3     go to state 1307
    joinSpecification  go to state 1308
    joinCondition      go to state 1309
    namedColumnsJoin   go to state 1310


state 1273

  674 queryPrimary: nonjoinQueryPrimary .

    $default  reduce using rule 674 (queryPrimary)


state 1274

  617 tableReference: joinedTable .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL, CROSS, NATURAL]
  675 queryPrimary: joinedTable .  [UNION, INTERSECT, EXCEPT, ')']

    UNION      reduce using rule 617 (tableReference)
    UNION      [reduce using rule 675 (queryPrimary)]
    INTERSECT  reduce using rule 675 (queryPrimary)
    EXCEPT     reduce using rule 675 (queryPrimary)
    ')'        reduce using rule 675 (queryPrimary)
    $default   reduce using rule 617 (tableReference)


state 1275

  580 nonjoinQueryTerm: queryTerm INTERSECT nonjoinQueryTerm1 nonjoinQueryTerm2 queryPrimary .

    $default  reduce using rule 580 (nonjoinQueryTerm)


state 1276

  787 intervalValueExpression: leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier .

    $default  reduce using rule 787 (intervalValueExpression)


state 1277

  831 betweenPredicate: rowValueConstructor betweenPredicate1 BETWEEN rowValueConstructor AND rowValueConstructor .

    $default  reduce using rule 831 (betweenPredicate)


state 1278

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression
  840 inValueList1: comma . valueExpression

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 819
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 1311
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761


state 1279

  315 comma: . ','
  839 inValueList: valueExpression inValueList1 .  [')']
  841 inValueList1: inValueList1 . comma valueExpression

    ','  shift, and go to state 448

    $default  reduce using rule 839 (inValueList)

    comma  go to state 1312


state 1280

  838 inPredicateValue: leftParen inValueList rightParen .

    $default  reduce using rule 838 (inPredicateValue)


state 1281

  268 rightParen: . ')'
  762 extractExpression: EXTRACT leftParen extractField FROM extractSource . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1313


state 1282

  769 extractSource: datetimeValueExpression .  [')']
  773 datetimeValueExpression: datetimeValueExpression . plusSign intervalTerm
  774                        | datetimeValueExpression . minusSign intervalTerm
  801 plusSign: . UNKNOWN_LEX
  803 minusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 877

    $default  reduce using rule 769 (extractSource)

    plusSign   go to state 926
    minusSign  go to state 927


state 1283

  770 extractSource: intervalValueExpression .  [')']
  772 datetimeValueExpression: intervalValueExpression . plusSign datetimeTerm
  800 intervalValueExpression1: intervalValueExpression .  [UNKNOWN_LEX]
  801 plusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 931

    UNKNOWN_LEX  [reduce using rule 800 (intervalValueExpression1)]
    $default     reduce using rule 770 (extractSource)

    plusSign  go to state 932


state 1284

  268 rightParen: . ')'
  711 positionExpression: POSITION leftParen characterValueExpression IN characterValueExpression . rightParen
  714 concatenation: characterValueExpression . concatenationOperator characterFactor
  715 concatenationOperator: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 921
    ')'          shift, and go to state 449

    rightParen             go to state 1314
    concatenationOperator  go to state 922


state 1285

  773 datetimeValueExpression: datetimeValueExpression . plusSign intervalTerm
  774                        | datetimeValueExpression . minusSign intervalTerm
  787 intervalValueExpression: leftParen datetimeValueExpression . minusSign datetimeTerm rightParen intervalQualifier
  801 plusSign: . UNKNOWN_LEX
  803 minusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 877

    plusSign   go to state 926
    minusSign  go to state 1017


state 1286

  772 datetimeValueExpression: intervalValueExpression . plusSign datetimeTerm
  800 intervalValueExpression1: intervalValueExpression .  [UNKNOWN_LEX]
  801 plusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 931

    UNKNOWN_LEX  [reduce using rule 800 (intervalValueExpression1)]

    plusSign  go to state 932


state 1287

  714 concatenation: characterValueExpression . concatenationOperator characterFactor
  715 concatenationOperator: . UNKNOWN_LEX
  849 escapeCharacter: characterValueExpression .  [HAVING, WHERE, OR, GROUP, RIGHT, INNER, UNION, THEN, JOIN, LEFT, FULL, AND, ON, IS, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']

    UNKNOWN_LEX  shift, and go to state 921

    $default  reduce using rule 849 (escapeCharacter)

    concatenationOperator  go to state 922


state 1288

  846 likePredicate2: ESCAPE escapeCharacter .

    $default  reduce using rule 846 (likePredicate2)


state 1289

  445 referentialAction: SET NULL .

    $default  reduce using rule 445 (referentialAction)


state 1290

  446 referentialAction: SET DEFAULT .

    $default  reduce using rule 446 (referentialAction)


state 1291

  447 referentialAction: NO ACTION .

    $default  reduce using rule 447 (referentialAction)


state 1292

  485 numericValueExpression: numericValueExpression . plusSign term
  486                       | numericValueExpression . minusSign term
  732 stringLength: numericValueExpression .  [')']
  801 plusSign: . UNKNOWN_LEX
  803 minusSign: . UNKNOWN_LEX

    UNKNOWN_LEX  shift, and go to state 877

    $default  reduce using rule 732 (stringLength)

    plusSign   go to state 878
    minusSign  go to state 879


state 1293

  730 characterSubstringFunction1: FOR stringLength .

    $default  reduce using rule 730 (characterSubstringFunction1)


state 1294

  728 characterSubstringFunction: SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen .

    $default  reduce using rule 728 (characterSubstringFunction)


state 1295

  755 bitSubstringFunction1: FOR stringLength .

    $default  reduce using rule 755 (bitSubstringFunction1)


state 1296

  753 bitSubstringFunction: SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen .

    $default  reduce using rule 753 (bitSubstringFunction)


state 1297

  315 comma: . ','
  612 fromClause: FROM tableReference fromClause1 .  [HAVING, WHERE, GROUP, UNION, INTERSECT, EXCEPT, ')']
  614 fromClause1: fromClause1 . comma tableReference

    ','  shift, and go to state 448

    $default  reduce using rule 612 (fromClause)

    comma  go to state 1315


state 1298

  451 searchCondition: searchCondition . OR booleanTerm
  652 whereClause: WHERE searchCondition .  [HAVING, GROUP, UNION, INTERSECT, EXCEPT, ')']

    OR  shift, and go to state 662

    $default  reduce using rule 652 (whereClause)


state 1299

  653 groupByClause: GROUP . BY groupingColumnReferenceList

    BY  shift, and go to state 1316


state 1300

  605 tableExpression: fromClause tableExpression1 tableExpression2 . tableExpression3
  610 tableExpression3: .  [UNION, INTERSECT, EXCEPT, ')']
  611                 | . havingClause
  662 havingClause: . HAVING searchCondition

    HAVING  shift, and go to state 1317

    $default  reduce using rule 610 (tableExpression3)

    tableExpression3  go to state 1318
    havingClause      go to state 1319


state 1301

  609 tableExpression2: groupByClause .

    $default  reduce using rule 609 (tableExpression2)


state 1302

  596 selectList1: selectList1 comma selectSublist .

    $default  reduce using rule 596 (selectList1)


state 1303

  624 correlationSpecification2: leftParen derivedColumnList rightParen .

    $default  reduce using rule 624 (correlationSpecification2)


state 1304

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  225 identifier: . id
  242 columnName: . identifier
  432 columnNameList: . columnName columnNameList1
  672 correspondingSpec1: BY leftParen . correspondingColumnList rightParen
  673 correspondingColumnList: . columnNameList

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id                       go to state 298
    identifier               go to state 355
    columnName               go to state 609
    columnNameList           go to state 1320
    correspondingColumnList  go to state 1321


state 1305

  450 searchCondition: . booleanTerm
  451                | . searchCondition OR booleanTerm
  452 booleanTerm: . booleanFactor
  453            | . booleanTerm AND booleanFactor
  454 booleanFactor: . booleanFactor1 booleanTest
  455 booleanFactor1: .  [EXISTS, CASE, CAST, DESC, NULL, ASC, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  456               | . NOT
  649 joinCondition: ON . searchCondition

    NOT  shift, and go to state 603

    $default  reduce using rule 455 (booleanFactor1)

    searchCondition  go to state 1322
    booleanTerm      go to state 605
    booleanFactor    go to state 606
    booleanFactor1   go to state 607


state 1306

  231 leftParen: . '('
  650 namedColumnsJoin: USING . leftParen joinColumnList rightParen

    '('  shift, and go to state 295

    leftParen  go to state 1323


state 1307

  632 qualifiedJoin: tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3 .

    $default  reduce using rule 632 (qualifiedJoin)


state 1308

  638 qualifiedJoin3: joinSpecification .

    $default  reduce using rule 638 (qualifiedJoin3)


state 1309

  647 joinSpecification: joinCondition .

    $default  reduce using rule 647 (joinSpecification)


state 1310

  648 joinSpecification: namedColumnsJoin .

    $default  reduce using rule 648 (joinSpecification)


state 1311

  840 inValueList1: comma valueExpression .

    $default  reduce using rule 840 (inValueList1)


state 1312

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  375 sign: . UNKNOWN_LEX
  376 unsignedNumericLiteral: . UNKNOWN_LEX
  377 generalLiteral: . characterStringLiteral
  378               | . nationalCharacterStringLiteral
  379               | . bitStringLiteral
  380               | . hexStringLiteral
  381               | . datetimeLiteral
  382               | . intervalLiteral
  383 characterStringLiteral: . UNKNOWN_LEX
  384 nationalCharacterStringLiteral: . UNKNOWN_LEX
  385 bitStringLiteral: . UNKNOWN_LEX
  386 hexStringLiteral: . UNKNOWN_LEX
  387 datetimeLiteral: . dateLiteral
  388                | . timeLiteral
  389                | . timestampLiteral
  390 dateLiteral: . DATE dateString
  392 timeLiteral: . TIME timeString
  394 timestampLiteral: . TIMESTAMP timestampString
  396 intervalLiteral: . INTERVAL intervalLiteral1 intervalString intervalQualifier
  400 datetimeValueFunction: . currentDateValueFunction
  401                      | . currentTimeValueFunction
  402                      | . currentTimestampValueFunction
  403 currentDateValueFunction: . CURRENT_DATE
  404 currentTimeValueFunction: . CURRENT_TIME currentTimeValueFunction1
  407 currentTimestampValueFunction: . CURRENT_TIMESTAMP currentTimestampValueFunction1
  480 valueExpression: . numericValueExpression
  481                | . stringValueExpression
  482                | . datetimeValueExpression
  483                | . intervalValueExpression
  484 numericValueExpression: . term
  485                       | . numericValueExpression plusSign term
  486                       | . numericValueExpression minusSign term
  487 term: . factor
  488     | . term asterisk factor
  489     | . term solidus factor
  490 factor: . factor1 numericPrimary
  491 factor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  492        | . sign
  495 valueExpressionPrimary: . unsignedValueSpecification
  496                       | . columnReference
  497                       | . setFunctionSpecification
  498                       | . scalarSubquery
  499                       | . caseExpression
  500                       | . leftParen valueExpression rightParen
  501                       | . castSpecification
  502 unsignedValueSpecification: . unsignedLiteral
  503                           | . generalValueSpecification
  504 unsignedLiteral: . unsignedNumericLiteral
  505                | . generalLiteral
  506 generalValueSpecification: . parameterSpecification
  507                          | . dynamicParameterSpecification
  508                          | . variableSpecification
  509                          | . USER
  510                          | . CURRENT_USER
  511                          | . SESSION_USER
  512                          | . SYSTEM_USER
  513                          | . VALUE
  514 parameterSpecification: . parameterName parameterSpecification1
  517 parameterName: . colon identifier
  518 colon: . UNKNOWN_LEX
  522 dynamicParameterSpecification: . questionMark
  523 questionMark: . UNKNOWN_LEX
  524 variableSpecification: . embeddedVariableName variableSpecification1
  527 embeddedVariableName: . colon hostIdentifier
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  551 setFunctionSpecification: . COUNT leftParen asterisk rightParen
  552                         | . generalSetFunction
  554 generalSetFunction: . setFunctionType leftParen generalSetFunction1 valueExpression rightParen
  557 setFunctionType: . AVG
  558                | . MAX
  559                | . MIN
  560                | . SUM
  561                | . COUNT
  564 scalarSubquery: . subquery
  565 subquery: . leftParen queryExpression rightParen
  676 caseExpression: . caseAbbreviation
  677               | . caseSpecification
  678 caseAbbreviation: . NULLIF leftParen valueExpression comma valueExpression rightParen
  679                 | . COALESCE leftParen valueExpression caseAbbreviation1 rightParen
  682 caseSpecification: . simpleCase
  683                  | . searchedCase
  684 simpleCase: . CASE caseOperand simpleCase1 simpleCase2 END
  696 searchedCase: . CASE searchedCase1 searchedCase2 END
  702 castSpecification: . CAST leftParen castOperand AS castTarget rightParen
  712 characterValueExpression: . concatenation
  713                         | . characterFactor
  714 concatenation: . characterValueExpression concatenationOperator characterFactor
  716 characterFactor: . characterPrimary characterFactor1
  719 characterPrimary: . valueExpressionPrimary
  720                 | . stringValueFunction
  721 stringValueFunction: . characterValueFunction
  722                    | . bitValueFunction
  723 characterValueFunction: . characterSubstringFunction
  724                       | . fold
  725                       | . formofuseConversion
  726                       | . characterTranslation
  727                       | . trimFunction
  728 characterSubstringFunction: . SUBSTRING leftParen characterValueExpression FROM startPosition characterSubstringFunction1 rightParen
  733 fold: . UPPER
  734     | . LOWER leftParen characterValueExpression rightParen
  735 formofuseConversion: . CONVERT leftParen characterValueExpression USING formofuseConversionName rightParen
  737 characterTranslation: . TRANSLATE leftParen characterValueExpression USING translationName rightParen
  739 trimFunction: . TRIM leftParen trimOperands rightParen
  752 bitValueFunction: . bitSubstringFunction
  753 bitSubstringFunction: . SUBSTRING leftParen bitValueExpression FROM startPosition bitSubstringFunction1 rightParen
  756 bitValueExpression: . bitConcatenation
  757                   | . bitFactor
  758 bitConcatenation: . bitValueExpression concatenationOperator bitFactor
  759 bitFactor: . bitPrimary
  760 bitPrimary: . valueExpressionPrimary
  761           | . stringValueFunction
  771 datetimeValueExpression: . datetimeTerm
  772                        | . intervalValueExpression plusSign datetimeTerm
  773                        | . datetimeValueExpression plusSign intervalTerm
  774                        | . datetimeValueExpression minusSign intervalTerm
  775 datetimeTerm: . datetimeFactor
  776 datetimeFactor: . datetimePrimary datetimeFactor1
  779 datetimePrimary: . valueExpressionPrimary
  780                | . datetimeValueFunction
  784 intervalValueExpression: . intervalTerm
  785                        | . intervalValueExpression1 plusSign intervalTerm1
  786                        | . intervalValueExpression1 minusSign intervalTerm1
  787                        | . leftParen datetimeValueExpression minusSign datetimeTerm rightParen intervalQualifier
  788 intervalTerm: . intervalFactor
  789             | . intervalTerm2 asterisk factor
  790             | . intervalTerm2 solidus factor
  791             | . term asterisk intervalFactor
  792 intervalFactor: . intervalFactor1 intervalPrimary
  793 intervalFactor1: .  [CASE, CAST, DESC, ASC, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, PARTIAL, USER, MAX, LOWER, CASCADE, TEMPORARY, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  794                | . sign
  798 intervalTerm2: . intervalTerm
  800 intervalValueExpression1: . intervalValueExpression
  809 stringValueExpression: . characterValueExpression
  810                      | . bitValueExpression
  841 inValueList1: inValueList1 comma . valueExpression

    CASE               shift, and go to state 666
    CAST               shift, and go to state 667
    DESC               shift, and go to state 31
    ASC                shift, and go to state 32
    UNKNOWN_LEX        shift, and go to state 670
    ACTION             shift, and go to state 33
    MIN                shift, and go to state 671
    OCTET_LENGTH       shift, and go to state 35
    DEFERRED           shift, and go to state 36
    DEFERRABLE         shift, and go to state 37
    ZONE               shift, and go to state 38
    COUNT              shift, and go to state 672
    SESSION_USER       shift, and go to state 673
    DATE               shift, and go to state 496
    NULLIF             shift, and go to state 674
    CURRENT_DATE       shift, and go to state 497
    SUM                shift, and go to state 675
    KEY                shift, and go to state 42
    AVG                shift, and go to state 676
    INITIALLY          shift, and go to state 44
    UPPER              shift, and go to state 677
    TIMESTAMP          shift, and go to state 498
    MODULE             shift, and go to state 214
    EXTRACT            shift, and go to state 46
    CHAR_LENGTH        shift, and go to state 47
    TIME               shift, and go to state 499
    SYSTEM_USER        shift, and go to state 678
    SUBSTRING          shift, and go to state 679
    CURRENT_TIME       shift, and go to state 501
    PARTIAL            shift, and go to state 49
    USER               shift, and go to state 680
    MAX                shift, and go to state 681
    CURRENT_TIMESTAMP  shift, and go to state 503
    LOWER              shift, and go to state 682
    CASCADE            shift, and go to state 52
    TEMPORARY          shift, and go to state 53
    VALUE              shift, and go to state 683
    CHARACTER_LENGTH   shift, and go to state 54
    CONVERT            shift, and go to state 684
    CURRENT_USER       shift, and go to state 685
    TRANSLATE          shift, and go to state 686
    INTERVAL           shift, and go to state 505
    PRESERVE           shift, and go to state 57
    POSITION           shift, and go to state 58
    COALESCE           shift, and go to state 688
    TRIM               shift, and go to state 689
    NUMBER             shift, and go to state 61
    ID                 shift, and go to state 62
    '('                shift, and go to state 295

    CASE              [reduce using rule 491 (factor1)]
    CASE              [reduce using rule 793 (intervalFactor1)]
    CAST              [reduce using rule 491 (factor1)]
    CAST              [reduce using rule 793 (intervalFactor1)]
    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 491 (factor1)]
    DESC              [reduce using rule 546 (columnReference1)]
    DESC              [reduce using rule 793 (intervalFactor1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 491 (factor1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 793 (intervalFactor1)]
    UNKNOWN_LEX       [reduce using rule 491 (factor1)]
    UNKNOWN_LEX       [reduce using rule 793 (intervalFactor1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 491 (factor1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 793 (intervalFactor1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 491 (factor1)]
    MIN               [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 793 (intervalFactor1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 491 (factor1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 793 (intervalFactor1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 491 (factor1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 793 (intervalFactor1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 491 (factor1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 793 (intervalFactor1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 491 (factor1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 793 (intervalFactor1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 491 (factor1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 793 (intervalFactor1)]
    SESSION_USER      [reduce using rule 491 (factor1)]
    SESSION_USER      [reduce using rule 793 (intervalFactor1)]
    DATE              [reduce using rule 491 (factor1)]
    DATE              [reduce using rule 793 (intervalFactor1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 491 (factor1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 793 (intervalFactor1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 491 (factor1)]
    SUM               [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 793 (intervalFactor1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 491 (factor1)]
    KEY               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 793 (intervalFactor1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 491 (factor1)]
    AVG               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 793 (intervalFactor1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 491 (factor1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 793 (intervalFactor1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 491 (factor1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 793 (intervalFactor1)]
    TIMESTAMP         [reduce using rule 491 (factor1)]
    TIMESTAMP         [reduce using rule 793 (intervalFactor1)]
    MODULE            [reduce using rule 491 (factor1)]
    MODULE            [reduce using rule 793 (intervalFactor1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 491 (factor1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 793 (intervalFactor1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 491 (factor1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 793 (intervalFactor1)]
    TIME              [reduce using rule 491 (factor1)]
    TIME              [reduce using rule 793 (intervalFactor1)]
    SYSTEM_USER       [reduce using rule 491 (factor1)]
    SYSTEM_USER       [reduce using rule 793 (intervalFactor1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 491 (factor1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 793 (intervalFactor1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 491 (factor1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 793 (intervalFactor1)]
    USER              [reduce using rule 491 (factor1)]
    USER              [reduce using rule 793 (intervalFactor1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 491 (factor1)]
    MAX               [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 793 (intervalFactor1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 491 (factor1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 793 (intervalFactor1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 491 (factor1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 793 (intervalFactor1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 491 (factor1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 793 (intervalFactor1)]
    VALUE             [reduce using rule 491 (factor1)]
    VALUE             [reduce using rule 793 (intervalFactor1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 491 (factor1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 793 (intervalFactor1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 491 (factor1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 793 (intervalFactor1)]
    CURRENT_USER      [reduce using rule 491 (factor1)]
    CURRENT_USER      [reduce using rule 793 (intervalFactor1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 491 (factor1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 793 (intervalFactor1)]
    INTERVAL          [reduce using rule 491 (factor1)]
    INTERVAL          [reduce using rule 793 (intervalFactor1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 491 (factor1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 793 (intervalFactor1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 491 (factor1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 793 (intervalFactor1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 491 (factor1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 793 (intervalFactor1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 491 (factor1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 793 (intervalFactor1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 491 (factor1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 793 (intervalFactor1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 491 (factor1)]
    ID                [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 793 (intervalFactor1)]
    '('               [reduce using rule 491 (factor1)]
    '('               [reduce using rule 793 (intervalFactor1)]
    $default          reduce using rule 491 (factor1)

    id                              go to state 298
    tableName                       go to state 690
    qualifiedName                   go to state 216
    qualifiedName1                  go to state 217
    schemaName                      go to state 218
    identifier                      go to state 691
    qualifiedLocalTableName         go to state 219
    leftParen                       go to state 819
    sign                            go to state 693
    unsignedNumericLiteral          go to state 694
    generalLiteral                  go to state 695
    characterStringLiteral          go to state 512
    nationalCharacterStringLiteral  go to state 513
    bitStringLiteral                go to state 514
    hexStringLiteral                go to state 515
    datetimeLiteral                 go to state 516
    dateLiteral                     go to state 517
    timeLiteral                     go to state 518
    timestampLiteral                go to state 519
    intervalLiteral                 go to state 520
    datetimeValueFunction           go to state 696
    currentDateValueFunction        go to state 522
    currentTimeValueFunction        go to state 523
    currentTimestampValueFunction   go to state 524
    valueExpression                 go to state 1324
    numericValueExpression          go to state 704
    term                            go to state 705
    factor                          go to state 706
    factor1                         go to state 707
    valueExpressionPrimary          go to state 708
    unsignedValueSpecification      go to state 709
    unsignedLiteral                 go to state 710
    generalValueSpecification       go to state 711
    parameterSpecification          go to state 712
    parameterName                   go to state 713
    colon                           go to state 714
    dynamicParameterSpecification   go to state 715
    questionMark                    go to state 716
    variableSpecification           go to state 717
    embeddedVariableName            go to state 718
    columnReference                 go to state 719
    columnReference1                go to state 720
    qualifier                       go to state 721
    correlationName                 go to state 722
    setFunctionSpecification        go to state 723
    generalSetFunction              go to state 724
    setFunctionType                 go to state 725
    scalarSubquery                  go to state 726
    subquery                        go to state 821
    caseExpression                  go to state 728
    caseAbbreviation                go to state 729
    caseSpecification               go to state 730
    simpleCase                      go to state 731
    searchedCase                    go to state 732
    castSpecification               go to state 733
    characterValueExpression        go to state 825
    concatenation                   go to state 735
    characterFactor                 go to state 736
    characterPrimary                go to state 737
    stringValueFunction             go to state 738
    characterValueFunction          go to state 739
    characterSubstringFunction      go to state 740
    fold                            go to state 741
    formofuseConversion             go to state 742
    characterTranslation            go to state 743
    trimFunction                    go to state 744
    bitValueFunction                go to state 745
    bitSubstringFunction            go to state 746
    bitValueExpression              go to state 747
    bitConcatenation                go to state 748
    bitFactor                       go to state 749
    bitPrimary                      go to state 750
    datetimeValueExpression         go to state 751
    datetimeTerm                    go to state 752
    datetimeFactor                  go to state 753
    datetimePrimary                 go to state 754
    intervalValueExpression         go to state 755
    intervalTerm                    go to state 756
    intervalFactor                  go to state 757
    intervalFactor1                 go to state 758
    intervalTerm2                   go to state 759
    intervalValueExpression1        go to state 760
    stringValueExpression           go to state 761


state 1313

  762 extractExpression: EXTRACT leftParen extractField FROM extractSource rightParen .

    $default  reduce using rule 762 (extractExpression)


state 1314

  711 positionExpression: POSITION leftParen characterValueExpression IN characterValueExpression rightParen .

    $default  reduce using rule 711 (positionExpression)


state 1315

  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  226 qualifiedLocalTableName: . MODULE period localTableName
  231 leftParen: . '('
  565 subquery: . leftParen queryExpression rightParen
  614 fromClause1: fromClause1 comma . tableReference
  615 tableReference: . tableName tableReference1
  616               | . derivedTable correlationSpecification
  617               | . joinedTable
  626 derivedTable: . tableSubquery
  627 tableSubquery: . subquery
  628 joinedTable: . crossJoin
  629            | . qualifiedJoin
  630            | . leftParen joinedTable rightParen
  631 crossJoin: . tableReference CROSS JOIN tableReference
  632 qualifiedJoin: . tableReference qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3

    UNKNOWN_LEX  shift, and go to state 213
    MODULE       shift, and go to state 214
    '('          shift, and go to state 295

    $default  reduce using rule 220 (qualifiedName1)

    tableName                go to state 958
    qualifiedName            go to state 216
    qualifiedName1           go to state 217
    schemaName               go to state 218
    qualifiedLocalTableName  go to state 219
    leftParen                go to state 1218
    subquery                 go to state 816
    tableReference           go to state 1325
    derivedTable             go to state 853
    tableSubquery            go to state 854
    joinedTable              go to state 1220
    crossJoin                go to state 856
    qualifiedJoin            go to state 857


state 1316

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  653 groupByClause: GROUP BY . groupingColumnReferenceList
  654 groupingColumnReferenceList: . groupingColumnReference groupingColumnReferenceList1
  657 groupingColumnReference: . columnReference groupingColumnReference1

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 213
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    MODULE            shift, and go to state 214
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]

    id                           go to state 298
    tableName                    go to state 690
    qualifiedName                go to state 216
    qualifiedName1               go to state 217
    schemaName                   go to state 218
    identifier                   go to state 691
    qualifiedLocalTableName      go to state 219
    columnReference              go to state 1326
    columnReference1             go to state 720
    qualifier                    go to state 721
    correlationName              go to state 722
    groupingColumnReferenceList  go to state 1327
    groupingColumnReference      go to state 1328


state 1317

  450 searchCondition: . booleanTerm
  451                | . searchCondition OR booleanTerm
  452 booleanTerm: . booleanFactor
  453            | . booleanTerm AND booleanFactor
  454 booleanFactor: . booleanFactor1 booleanTest
  455 booleanFactor1: .  [EXISTS, CASE, CAST, DESC, NULL, ASC, IS, UNKNOWN_LEX, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, SESSION_USER, DATE, NULLIF, CURRENT_DATE, SUM, KEY, AVG, INITIALLY, UPPER, TIMESTAMP, MODULE, EXTRACT, CHAR_LENGTH, TIME, SYSTEM_USER, SUBSTRING, CURRENT_TIME, PARTIAL, USER, MAX, CURRENT_TIMESTAMP, LOWER, CASCADE, TEMPORARY, BIT_LENGTH, VALUE, CHARACTER_LENGTH, CONVERT, CURRENT_USER, TRANSLATE, INTERVAL, DEFAULT, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID, '(']
  456               | . NOT
  662 havingClause: HAVING . searchCondition

    NOT  shift, and go to state 603

    $default  reduce using rule 455 (booleanFactor1)

    searchCondition  go to state 1329
    booleanTerm      go to state 605
    booleanFactor    go to state 606
    booleanFactor1   go to state 607


state 1318

  605 tableExpression: fromClause tableExpression1 tableExpression2 tableExpression3 .

    $default  reduce using rule 605 (tableExpression)


state 1319

  611 tableExpression3: havingClause .

    $default  reduce using rule 611 (tableExpression3)


state 1320

  673 correspondingColumnList: columnNameList .

    $default  reduce using rule 673 (correspondingColumnList)


state 1321

  268 rightParen: . ')'
  672 correspondingSpec1: BY leftParen correspondingColumnList . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1330


state 1322

  451 searchCondition: searchCondition . OR booleanTerm
  649 joinCondition: ON searchCondition .  [HAVING, WHERE, GROUP, RIGHT, INNER, UNION, JOIN, LEFT, FULL, ON, CROSS, INTERSECT, NATURAL, EXCEPT, USING, ',', ')']

    OR  shift, and go to state 662

    $default  reduce using rule 649 (joinCondition)


state 1323

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  225 identifier: . id
  242 columnName: . identifier
  432 columnNameList: . columnName columnNameList1
  650 namedColumnsJoin: USING leftParen . joinColumnList rightParen
  651 joinColumnList: . columnNameList

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    id              go to state 298
    identifier      go to state 355
    columnName      go to state 609
    columnNameList  go to state 1331
    joinColumnList  go to state 1332


state 1324

  841 inValueList1: inValueList1 comma valueExpression .

    $default  reduce using rule 841 (inValueList1)


state 1325

  614 fromClause1: fromClause1 comma tableReference .  [HAVING, WHERE, GROUP, UNION, INTERSECT, EXCEPT, ',', ')']
  631 crossJoin: tableReference . CROSS JOIN tableReference
  632 qualifiedJoin: tableReference . qualifiedJoin1 qualifiedJoin2 JOIN tableReference qualifiedJoin3
  633 qualifiedJoin1: .  [RIGHT, INNER, UNION, JOIN, LEFT, FULL]
  634               | . NATURAL

    CROSS    shift, and go to state 1012
    NATURAL  shift, and go to state 1013

    RIGHT     reduce using rule 633 (qualifiedJoin1)
    INNER     reduce using rule 633 (qualifiedJoin1)
    UNION     reduce using rule 614 (fromClause1)
    UNION     [reduce using rule 633 (qualifiedJoin1)]
    JOIN      reduce using rule 633 (qualifiedJoin1)
    LEFT      reduce using rule 633 (qualifiedJoin1)
    FULL      reduce using rule 633 (qualifiedJoin1)
    $default  reduce using rule 614 (fromClause1)

    qualifiedJoin1  go to state 1014


state 1326

  657 groupingColumnReference: columnReference . groupingColumnReference1
  658 groupingColumnReference1: .  [HAVING, UNION, INTERSECT, EXCEPT, ',', ')']
  659                         | . collateClause
  660 collateClause: . COLLATE collationName

    COLLATE  shift, and go to state 597

    $default  reduce using rule 658 (groupingColumnReference1)

    groupingColumnReference1  go to state 1333
    collateClause             go to state 1334


state 1327

  653 groupByClause: GROUP BY groupingColumnReferenceList .

    $default  reduce using rule 653 (groupByClause)


state 1328

  654 groupingColumnReferenceList: groupingColumnReference . groupingColumnReferenceList1
  655 groupingColumnReferenceList1: .
  656                             | . groupingColumnReferenceList1 comma groupingColumnReference

    $default  reduce using rule 655 (groupingColumnReferenceList1)

    groupingColumnReferenceList1  go to state 1335


state 1329

  451 searchCondition: searchCondition . OR booleanTerm
  662 havingClause: HAVING searchCondition .  [UNION, INTERSECT, EXCEPT, ')']

    OR  shift, and go to state 662

    $default  reduce using rule 662 (havingClause)


state 1330

  672 correspondingSpec1: BY leftParen correspondingColumnList rightParen .

    $default  reduce using rule 672 (correspondingSpec1)


state 1331

  651 joinColumnList: columnNameList .

    $default  reduce using rule 651 (joinColumnList)


state 1332

  268 rightParen: . ')'
  650 namedColumnsJoin: USING leftParen joinColumnList . rightParen

    ')'  shift, and go to state 449

    rightParen  go to state 1336


state 1333

  657 groupingColumnReference: columnReference groupingColumnReference1 .

    $default  reduce using rule 657 (groupingColumnReference)


state 1334

  659 groupingColumnReference1: collateClause .

    $default  reduce using rule 659 (groupingColumnReference1)


state 1335

  315 comma: . ','
  654 groupingColumnReferenceList: groupingColumnReference groupingColumnReferenceList1 .  [HAVING, UNION, INTERSECT, EXCEPT, ')']
  656 groupingColumnReferenceList1: groupingColumnReferenceList1 . comma groupingColumnReference

    ','  shift, and go to state 448

    $default  reduce using rule 654 (groupingColumnReferenceList)

    comma  go to state 1337


state 1336

  650 namedColumnsJoin: USING leftParen joinColumnList rightParen .

    $default  reduce using rule 650 (namedColumnsJoin)


state 1337

   10 id: . ID
   11   | . ACTION
   12   | . ASC
   13   | . PRESERVE
   14   | . KEY
   15   | . NUMBER
   16   | . TRANSLATE
   17   | . TRIM
   18   | . LOWER
   19   | . SUM
   20   | . CHAR_LENGTH
   21   | . POSITION
   22   | . ZONE
   23   | . AVG
   24   | . DEFERRABLE
   25   | . CHARACTER_LENGTH
   26   | . MIN
   27   | . COUNT
   28   | . CASCADE
   29   | . COALESCE
   30   | . TEMPORARY
   31   | . UPPER
   32   | . NULLIF
   33   | . MAX
   34   | . DEFERRED
   35   | . OCTET_LENGTH
   36   | . EXTRACT
   37   | . PARTIAL
   38   | . INITIALLY
   39   | . CONVERT
   40   | . SUBSTRING
   41   | . DESC
  217 tableName: . qualifiedName
  218          | . qualifiedLocalTableName
  219 qualifiedName: . qualifiedName1 qualifiedIdentifier
  220 qualifiedName1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  221               | . schemaName period
  222 schemaName: . UNKNOWN_LEX
  225 identifier: . id
  226 qualifiedLocalTableName: . MODULE period localTableName
  545 columnReference: . columnReference1 columnName
  546 columnReference1: .  [DESC, ASC, ACTION, MIN, OCTET_LENGTH, DEFERRED, DEFERRABLE, ZONE, COUNT, NULLIF, SUM, KEY, AVG, INITIALLY, UPPER, EXTRACT, CHAR_LENGTH, SUBSTRING, PARTIAL, MAX, LOWER, CASCADE, TEMPORARY, CHARACTER_LENGTH, CONVERT, TRANSLATE, PRESERVE, POSITION, COALESCE, TRIM, NUMBER, ID]
  547                 | . qualifier period
  548 qualifier: . tableName
  549          | . correlationName
  550 correlationName: . identifier
  656 groupingColumnReferenceList1: groupingColumnReferenceList1 comma . groupingColumnReference
  657 groupingColumnReference: . columnReference groupingColumnReference1

    DESC              shift, and go to state 31
    ASC               shift, and go to state 32
    UNKNOWN_LEX       shift, and go to state 213
    ACTION            shift, and go to state 33
    MIN               shift, and go to state 34
    OCTET_LENGTH      shift, and go to state 35
    DEFERRED          shift, and go to state 36
    DEFERRABLE        shift, and go to state 37
    ZONE              shift, and go to state 38
    COUNT             shift, and go to state 39
    NULLIF            shift, and go to state 40
    SUM               shift, and go to state 41
    KEY               shift, and go to state 42
    AVG               shift, and go to state 43
    INITIALLY         shift, and go to state 44
    UPPER             shift, and go to state 45
    MODULE            shift, and go to state 214
    EXTRACT           shift, and go to state 46
    CHAR_LENGTH       shift, and go to state 47
    SUBSTRING         shift, and go to state 48
    PARTIAL           shift, and go to state 49
    MAX               shift, and go to state 50
    LOWER             shift, and go to state 51
    CASCADE           shift, and go to state 52
    TEMPORARY         shift, and go to state 53
    CHARACTER_LENGTH  shift, and go to state 54
    CONVERT           shift, and go to state 55
    TRANSLATE         shift, and go to state 56
    PRESERVE          shift, and go to state 57
    POSITION          shift, and go to state 58
    COALESCE          shift, and go to state 59
    TRIM              shift, and go to state 60
    NUMBER            shift, and go to state 61
    ID                shift, and go to state 62

    DESC              [reduce using rule 220 (qualifiedName1)]
    DESC              [reduce using rule 546 (columnReference1)]
    ASC               [reduce using rule 220 (qualifiedName1)]
    ASC               [reduce using rule 546 (columnReference1)]
    ACTION            [reduce using rule 220 (qualifiedName1)]
    ACTION            [reduce using rule 546 (columnReference1)]
    MIN               [reduce using rule 220 (qualifiedName1)]
    MIN               [reduce using rule 546 (columnReference1)]
    OCTET_LENGTH      [reduce using rule 220 (qualifiedName1)]
    OCTET_LENGTH      [reduce using rule 546 (columnReference1)]
    DEFERRED          [reduce using rule 220 (qualifiedName1)]
    DEFERRED          [reduce using rule 546 (columnReference1)]
    DEFERRABLE        [reduce using rule 220 (qualifiedName1)]
    DEFERRABLE        [reduce using rule 546 (columnReference1)]
    ZONE              [reduce using rule 220 (qualifiedName1)]
    ZONE              [reduce using rule 546 (columnReference1)]
    COUNT             [reduce using rule 220 (qualifiedName1)]
    COUNT             [reduce using rule 546 (columnReference1)]
    NULLIF            [reduce using rule 220 (qualifiedName1)]
    NULLIF            [reduce using rule 546 (columnReference1)]
    SUM               [reduce using rule 220 (qualifiedName1)]
    SUM               [reduce using rule 546 (columnReference1)]
    KEY               [reduce using rule 220 (qualifiedName1)]
    KEY               [reduce using rule 546 (columnReference1)]
    AVG               [reduce using rule 220 (qualifiedName1)]
    AVG               [reduce using rule 546 (columnReference1)]
    INITIALLY         [reduce using rule 220 (qualifiedName1)]
    INITIALLY         [reduce using rule 546 (columnReference1)]
    UPPER             [reduce using rule 220 (qualifiedName1)]
    UPPER             [reduce using rule 546 (columnReference1)]
    EXTRACT           [reduce using rule 220 (qualifiedName1)]
    EXTRACT           [reduce using rule 546 (columnReference1)]
    CHAR_LENGTH       [reduce using rule 220 (qualifiedName1)]
    CHAR_LENGTH       [reduce using rule 546 (columnReference1)]
    SUBSTRING         [reduce using rule 220 (qualifiedName1)]
    SUBSTRING         [reduce using rule 546 (columnReference1)]
    PARTIAL           [reduce using rule 220 (qualifiedName1)]
    PARTIAL           [reduce using rule 546 (columnReference1)]
    MAX               [reduce using rule 220 (qualifiedName1)]
    MAX               [reduce using rule 546 (columnReference1)]
    LOWER             [reduce using rule 220 (qualifiedName1)]
    LOWER             [reduce using rule 546 (columnReference1)]
    CASCADE           [reduce using rule 220 (qualifiedName1)]
    CASCADE           [reduce using rule 546 (columnReference1)]
    TEMPORARY         [reduce using rule 220 (qualifiedName1)]
    TEMPORARY         [reduce using rule 546 (columnReference1)]
    CHARACTER_LENGTH  [reduce using rule 220 (qualifiedName1)]
    CHARACTER_LENGTH  [reduce using rule 546 (columnReference1)]
    CONVERT           [reduce using rule 220 (qualifiedName1)]
    CONVERT           [reduce using rule 546 (columnReference1)]
    TRANSLATE         [reduce using rule 220 (qualifiedName1)]
    TRANSLATE         [reduce using rule 546 (columnReference1)]
    PRESERVE          [reduce using rule 220 (qualifiedName1)]
    PRESERVE          [reduce using rule 546 (columnReference1)]
    POSITION          [reduce using rule 220 (qualifiedName1)]
    POSITION          [reduce using rule 546 (columnReference1)]
    COALESCE          [reduce using rule 220 (qualifiedName1)]
    COALESCE          [reduce using rule 546 (columnReference1)]
    TRIM              [reduce using rule 220 (qualifiedName1)]
    TRIM              [reduce using rule 546 (columnReference1)]
    NUMBER            [reduce using rule 220 (qualifiedName1)]
    NUMBER            [reduce using rule 546 (columnReference1)]
    ID                [reduce using rule 220 (qualifiedName1)]
    ID                [reduce using rule 546 (columnReference1)]

    id                       go to state 298
    tableName                go to state 690
    qualifiedName            go to state 216
    qualifiedName1           go to state 217
    schemaName               go to state 218
    identifier               go to state 691
    qualifiedLocalTableName  go to state 219
    columnReference          go to state 1326
    columnReference1         go to state 720
    qualifier                go to state 721
    correlationName          go to state 722
    groupingColumnReference  go to state 1338


state 1338

  656 groupingColumnReferenceList1: groupingColumnReferenceList1 comma groupingColumnReference .

    $default  reduce using rule 656 (groupingColumnReferenceList1)
